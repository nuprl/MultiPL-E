{
  "name": "mbpp_748_capital_words_spaces",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpxqo515i2.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpxqo515i2.d(15): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqo515i2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpn30pcn4j.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn30pcn4j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i].isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpj9layr8m.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9layr8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpsc91nnl4.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc91nnl4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpiz2owdoi.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiz2owdoi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach (ch; str1)\n\t{\n\t\tif (isUpper(ch) && str2.length > 0 && !isUpper(str2[$-1]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpsip7o3ik.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpsip7o3ik.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsip7o3ik.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result;\n\t\n\tforeach(c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7ymkbz29.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ymkbz29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (i == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpj422o3gu.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj422o3gu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tstr2 ~= str1[i];\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z' && i != str1.length - 1)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzjrwjcyr.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f9d]\n??:? void tmpzjrwjcyr.__unittest_L23_C1() [0x427bda]\n??:? void tmpzjrwjcyr.__modtest() [0x427d20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c757]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b666]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43043c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b63d]\n??:? runModuleUnitTests [0x42c52d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428460]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpy03352yh.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy03352yh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1) \n\t{\n\t\tif(isUpper(c)) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpp88mjv3s.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp88mjv3s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpv2wxq53u.d(79): Error: no identifier for declarator `int`\n/tmp/tmpv2wxq53u.d(79): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2wxq53u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tstr2 ~= \" \";\n\t\t\ti++;\n\t\t\twhile(str1[i] != ' ' && i < len)\n\t\t\t{\n\t\t\t\tstr2 ~= str1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpm0cp1hpa.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm0cp1hpa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpv2wxq53u.d(79): Error: no identifier for declarator `int`\n/tmp/tmpv2wxq53u.d(79): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2wxq53u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint A = 0;\n\tint B = 0;\n\tint C = 0;\n\tint D = 0;\n\tint E = 0;\n\tint F = 0;\n\tint G = 0;\n\tint H = 0;\n\tint I = 0;\n\tint J = 0;\n\tint K = 0;\n\tint L = 0;\n\tint M = 0;\n\tint N = 0;\n\tint O = 0;\n\tint P = 0;\n\tint Q = 0;\n\tint R = 0;\n\tint S = 0;\n\tint T = 0;\n\tint U = 0;\n\tint V = 0;\n\tint W = 0;\n\tint X = 0;\n\tint Y = 0;\n\tint Z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\t\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp_bath_qp.d(82): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_bath_qp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpbwz85z_9.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbwz85z_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpxfprommg.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxfprommg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpzrrall1f.d(13): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzrrall1f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ig_fii0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp0ig_fii0.__unittest_L22_C1() [0x427bc2]\n??:? void tmp0ig_fii0.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpk451d0uh.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk451d0uh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp_p5wcygo.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_p5wcygo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpftfcexxy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpftfcexxy.__unittest_L23_C1() [0x427bc2]\n??:? void tmpftfcexxy.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint len = str1.length;\n\tforeach(i; 0..len) \n\t{\n\t\tif(i == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\telse if(str1[i].isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \" ~ str1[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpzy2n1t2e.d(11): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpzy2n1t2e.d(18): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzy2n1t2e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i != 0 && isUpper(str1[i]) && !isUpper(str1[i - 1]))\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpzb508zxp.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpzb508zxp.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzb508zxp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tint len = str1.length;\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp9jgu6zdh.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmp9jgu6zdh.d(15): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jgu6zdh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpih8xww64.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpih8xww64.__unittest_L22_C1() [0x427bc2]\n??:? void tmpih8xww64.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\t\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpz8mcpnkz.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8mcpnkz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzu3cpz88.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f8d]\n??:? void tmpzu3cpz88.__unittest_L22_C1() [0x427bc6]\n??:? void tmpzu3cpz88.__modtest() [0x427d0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c747]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b656]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43042c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b62d]\n??:? runModuleUnitTests [0x42c51d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428450]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(isUpper(c) && str2.length > 0) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpgv9bfwmv.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgv9bfwmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && str2.length != 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpvp53llbe.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvp53llbe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len) \n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpsv3zouge.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsv3zouge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpsc91nnl4.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc91nnl4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint A = 0;\n\tint B = 0;\n\tint C = 0;\n\tint D = 0;\n\tint E = 0;\n\tint F = 0;\n\tint G = 0;\n\tint H = 0;\n\tint I = 0;\n\tint J = 0;\n\tint K = 0;\n\tint L = 0;\n\tint M = 0;\n\tint N = 0;\n\tint O = 0;\n\tint P = 0;\n\tint Q = 0;\n\tint R = 0;\n\tint S = 0;\n\tint T = 0;\n\tint U = 0;\n\tint V = 0;\n\tint W = 0;\n\tint X = 0;\n\tint Y = 0;\n\tint Z = 0;\n\tint space = 0;\n\tint space_count = 0;\n\tint space_count_2 = 0;\n\tint space_count_3 = 0;\n\tint space_count_4 = 0;\n\tint space_count_5 = 0;\n\tint space_count_6 = 0;\n\tint space_count_7 = 0;\n\tint space_count_8 = 0;\n\tint space_count_9 = 0;\n\tint space_count_10 = 0;\n\tint space_count_11 = 0;\n\tint space_count_12 = 0;\n\tint space_count_13 = 0;\n\tint space_count_14 = 0;\n\tint space_count_15 = 0;\n\tint space_count_16 = 0;\n\tint space_count_17 = 0;\n\t\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3qt7287d.d(74): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3qt7287d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\tstr2 ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprbxcsj6x.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427f75]\n??:? void tmprbxcsj6x.__unittest_L25_C1() [0x427bb2]\n??:? void tmprbxcsj6x.__modtest() [0x427cf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b5ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fef1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a1]\n??:? runModuleUnitTests [0x42c491]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tstr2 = str1[0];\n\tforeach(i; 1..str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpwjlbpv0b.d(11): Error: cannot implicitly convert expression `str1[0]` of type `immutable(char)` to `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjlbpv0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpxxxuawfu.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxxxuawfu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\t\n\tforeach(i; 0 .. str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo9dd17gt.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f95]\n??:? void tmpo9dd17gt.__unittest_L23_C1() [0x427bce]\n??:? void tmpo9dd17gt.__modtest() [0x427d14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c74f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b65e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430434]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b635]\n??:? runModuleUnitTests [0x42c525]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428458]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(ch; str1)\n\t{\n\t\tif(isUpper(ch))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpnu27bxk4.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnu27bxk4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result;\n\tint i;\n\t\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7vnn8iy3.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp7vnn8iy3.__unittest_L23_C1() [0x427bc2]\n??:? void tmp7vnn8iy3.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result;\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && result.length > 0)\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpec3feahn.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpec3feahn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpjxbp9i.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427fe5]\n??:? void tmpfpjxbp9i.__unittest_L28_C1() [0x427c1e]\n??:? void tmpfpjxbp9i.__modtest() [0x427d64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c79f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b6ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ffd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430484]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b685]\n??:? runModuleUnitTests [0x42c575]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4284a8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \" ~ c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpn1xe8x2r.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn1xe8x2r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tint len = str1.length;\n\t\n\tfor (i = 0; i < len; i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmprjkj3z_2.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprjkj3z_2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmptj32tgdj.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj32tgdj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpsc91nnl4.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc91nnl4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tstr2 = str1[0..0];\n\t\n\tfor(i=1; i<str1.length; i++)\n\t{\n\t\tif(str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i..i];\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpzz7haapy.d(17): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzz7haapy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpxfprommg.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxfprommg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i != 0 && isUpper(str1[i]) && !isUpper(str1[i - 1]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp8hofh_ft.d(13): Error: undefined identifier `isUpper`\n/tmp/tmp8hofh_ft.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8hofh_ft.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\t\n\twhile(i < str1.length)\n\t{\n\t\tstr2 ~= str1[i];\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbtzuxt6v.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpbtzuxt6v.__unittest_L24_C1() [0x427bc2]\n??:? void tmpbtzuxt6v.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper && str2.length > 0)\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp1ojeridk.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ojeridk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tchar[] str = str1.dup;\n\tint i = 0;\n\twhile (i < str.length)\n\t{\n\t\tif (str[i] >= 'A' && str[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpezjxbauk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428ba1]\n??:? void tmpezjxbauk.__unittest_L24_C1() [0x427d5a]\n??:? void tmpezjxbauk.__modtest() [0x428008]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428a26]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4289fd]\n??:? runModuleUnitTests [0x42dc25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpsc91nnl4.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc91nnl4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint A = 0;\n\tint B = 0;\n\tint C = 0;\n\tint D = 0;\n\tint E = 0;\n\tint F = 0;\n\tint G = 0;\n\tint H = 0;\n\tint I = 0;\n\tint J = 0;\n\tint K = 0;\n\tint L = 0;\n\tint M = 0;\n\tint N = 0;\n\tint O = 0;\n\tint P = 0;\n\tint Q = 0;\n\tint R = 0;\n\tint S = 0;\n\tint T = 0;\n\tint U = 0;\n\tint V = 0;\n\tint W = 0;\n\tint X = 0;\n\tint Y = 0;\n\tint Z = 0;\n\tint space = 0;\n\tint length = str1.length;\n\twhile (i < length) {\n\t\tif (str1[i] == 'a') {\n\t\t\tif (a == 0) {\n\t\t\t\tstr2 = str2 ~ str1[i];\n\t\t\t\ta = 1;\n\t\t\t} else {\n\t\t\t\tstr2 = str2 ~ str1[i];\n\t\t\t}\n\t\t} else if (str1[i] == 'b') {\n\t\t\tif (b == 0) {\n\t\t\t\tstr2 = str2 ~ str1[i];\n\t\t\t\tb = 1;\n\t\t\t} else {\n\t\t\t\tstr2 = str2 ~ str1[i];\n\t\t\t}\n\t\t} else if (str\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpzx6ri_z3.d(73): Error: found `unittest` when expecting `)`\n/tmp/tmpzx6ri_z3.d(81): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpzx6ri_z3.d(81): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzx6ri_z3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && str2.length > 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp26q8owam.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26q8owam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpk451d0uh.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk451d0uh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result;\n\tint i;\n\t\n\tfor (i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= str1[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqopby4cd.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpqopby4cd.__unittest_L22_C1() [0x427bc2]\n??:? void tmpqopby4cd.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor(i = 0; i < str1.length; i++) \n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphfqc6p3h.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f8d]\n??:? void tmphfqc6p3h.__unittest_L22_C1() [0x427bc6]\n??:? void tmphfqc6p3h.__modtest() [0x427d0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c747]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b656]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43042c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b62d]\n??:? runModuleUnitTests [0x42c51d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428450]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tforeach(char ch; str1)\n\t{\n\t\tif(isUpper(ch))\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpqqhga2fy.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqqhga2fy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\t\n\twhile (i < len)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 = str2 ~ str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 = str2 ~ str1[i];\n\t\t\ti++;\n\t\t\twhile (str1[i] != ' ' && i < len)\n\t\t\t{\n\t\t\t\tstr2 = str2 ~ str1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tstr2 = str2 ~ \" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 = str2 ~ str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp2lbrc3zo.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lbrc3zo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmptj32tgdj.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj32tgdj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i].isUpper)\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= str1[i];\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpsz8xrxth.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsz8xrxth.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp9o5v93_9.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9o5v93_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpxfprommg.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxfprommg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpv2wxq53u.d(79): Error: no identifier for declarator `int`\n/tmp/tmpv2wxq53u.d(79): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2wxq53u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i].isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpj9layr8m.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9layr8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i > 0 && isUpper(str1[i]) && !isUpper(str1[i-1]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp3gnk6xe8.d(14): Error: undefined identifier `isUpper`\n/tmp/tmp3gnk6xe8.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3gnk6xe8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= ' ';\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2nk8trdc.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x42809d]\n??:? void tmp2nk8trdc.__unittest_L33_C1() [0x427cd6]\n??:? void tmp2nk8trdc.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c7a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b6b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43008d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43053c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430019]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b68d]\n??:? runModuleUnitTests [0x42c57d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428560]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tchar c;\n\t\n\tstr2 = \"\";\n\t\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tc = str1[i];\n\t\tif (isUpper(c))\n\t\t{\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tstr2 ~= \" \";\n\t\t\t}\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp4crbaq96.d(19): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4crbaq96.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \" ~ c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpx27aoma8.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx27aoma8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tauto i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6zqt3y87.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f8d]\n??:? void tmp6zqt3y87.__unittest_L23_C1() [0x427bca]\n??:? void tmp6zqt3y87.__modtest() [0x427d10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c747]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b656]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43042c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b62d]\n??:? runModuleUnitTests [0x42c51d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428450]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpv2wxq53u.d(79): Error: no identifier for declarator `int`\n/tmp/tmpv2wxq53u.d(79): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2wxq53u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp9o5v93_9.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9o5v93_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5katgoyk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp5katgoyk.__unittest_L23_C1() [0x427bc2]\n??:? void tmp5katgoyk.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && str2.length > 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp26q8owam.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26q8owam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(ch; str1)\n\t{\n\t\tif(isUpper(ch) && str2.length > 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpcfmpkqvk.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfmpkqvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\t\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf6h92cfn.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f8d]\n??:? void tmpf6h92cfn.__unittest_L23_C1() [0x427bc6]\n??:? void tmpf6h92cfn.__modtest() [0x427d0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c747]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b656]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43042c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b62d]\n??:? runModuleUnitTests [0x42c51d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428450]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp560bm686.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp560bm686.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tstr2 ~= \" \" ~ c;\n\t\telse\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp7oqheqqv.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7oqheqqv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpqq6sg8ls.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq6sg8ls.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (i > 0 && isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp_g5i_pas.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_g5i_pas.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i != 0 && isUpper(str1[i]) && !isUpper(str1[i-1]))\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpwdd9vwfm.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpwdd9vwfm.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdd9vwfm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\t\n\tfor (i = 0; i < len; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tif (i != 0) \n\t\t\t{\n\t\t\t\tstr2 ~= \" \";\n\t\t\t}\n\t\t\t\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp0auoxm4p.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0auoxm4p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tif(i != 0)\n\t\t\t{\n\t\t\t\tresult ~= \" \";\n\t\t\t}\n\t\t}\n\t\tresult ~= c;\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpc8jqpnk3.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc8jqpnk3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(ch; str1)\n\t{\n\t\tif(isUpper(ch))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp3z79k2bo.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3z79k2bo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tforeach (i, c; str1)\n\t{\n\t\tif (i > 0 && isUpper(str1[i]) && !isUpper(str1[i-1]))\n\t\t\tresult ~= \" \";\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpr4xo9l0a.d(13): Error: undefined identifier `isUpper`\n/tmp/tmpr4xo9l0a.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4xo9l0a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpbwz85z_9.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbwz85z_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ig_fii0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp0ig_fii0.__unittest_L22_C1() [0x427bc2]\n??:? void tmp0ig_fii0.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppuom_80t.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427fdd]\n??:? void tmppuom_80t.__unittest_L27_C1() [0x427c1a]\n??:? void tmppuom_80t.__modtest() [0x427d60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c797]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b6a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ffcd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43047c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b67d]\n??:? runModuleUnitTests [0x42c56d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4284a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwi6vy2t1.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpwi6vy2t1.__unittest_L23_C1() [0x427bc2]\n??:? void tmpwi6vy2t1.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c))\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp6qfe9s4w.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qfe9s4w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(ch; str1)\n\t{\n\t\tif(ch.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpg_n1voi3.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_n1voi3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\t\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tj = i + 1;\n\t\t\tif (str1[j] >= 'A' && str1[j] <= 'Z')\n\t\t\t{\n\t\t\t\tstr2 ~= str1[j];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpq1uy0pib.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq1uy0pib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\ti++;\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp00iyffz_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x428045]\n??:? void tmp00iyffz_.__unittest_L33_C1() [0x427c7e]\n??:? void tmp00iyffz_.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c7ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b70e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430035]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4304e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ffc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b6e5]\n??:? runModuleUnitTests [0x42c5d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428508]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tstr2 ~= ' ';\n\t\t\ti++;\n\t\t\twhile(i < len && str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\t{\n\t\t\t\tstr2 ~= str1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpv1rmg1lo.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv1rmg1lo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\t\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\tstr2 ~= \" \";\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpuj684z26.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuj684z26.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmplm_e0vf8.d(16): Error: slice `str2` is not mutable\n/tmp/tmplm_e0vf8.d(18): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplm_e0vf8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf23kvnb1.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpf23kvnb1.__unittest_L22_C1() [0x427bc2]\n??:? void tmpf23kvnb1.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tint len = str1.length;\n\t\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= ' ';\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp454dg_1y.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp454dg_1y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = str1.length;\n\t\n\twhile (i < len) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\twhile (j < i) \n\t\t\t{\n\t\t\t\tstr2 ~= str1[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tstr2 ~= ' ';\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t\tj = i;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\twhile (j < len) \n\t{\n\t\tstr2 ~= str1[j];\n\t\tj++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpx_nveasi.d(14): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_nveasi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper && str2.length > 0)\n\t\t\tstr2 ~= \" \";\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp1ojeridk.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ojeridk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2.strip;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpter4x0m6.d(13): Error: no property `isUpper` for type `char`\n/tmp/tmpter4x0m6.d(19): Error: no property `strip` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpter4x0m6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tstr2 ~= str1[i];\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprliyp1qm.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmprliyp1qm.__unittest_L23_C1() [0x427bc2]\n??:? void tmprliyp1qm.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && str2.length > 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp26q8owam.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26q8owam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0gglxkk.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0gglxkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpk451d0uh.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk451d0uh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmp3o4y43zl.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o4y43zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(isUpper(str1[i]))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmptj32tgdj.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj32tgdj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(isUpper(c) && result.length > 0)\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpbckmllgk.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbckmllgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgpzhppqu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f8d]\n??:? void tmpgpzhppqu.__unittest_L23_C1() [0x427bca]\n??:? void tmpgpzhppqu.__modtest() [0x427d10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c747]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b656]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43042c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b62d]\n??:? runModuleUnitTests [0x42c51d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428450]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpfxl_8wpm.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxl_8wpm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \" ~ c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmppv7fq7dl.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv7fq7dl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp9l9jlyaz.d(13): Error: no property `isUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9l9jlyaz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (i != 0 && str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgslhbww3.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpgslhbww3.__unittest_L21_C1() [0x427bc2]\n??:? void tmpgslhbww3.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len) \n\t{\n\t\tstr2 ~= str1[i];\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tif(i + 1 < len) \n\t\t\t{\n\t\t\t\tif(str1[i + 1] >= 'a' && str1[i + 1] <= 'z') \n\t\t\t\t{\n\t\t\t\t\tstr2 ~= \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpy66sjxn2.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy66sjxn2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tint len = str1.length;\n\t\n\tfor (i = 0; i < len; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp_mwmlelr.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_mwmlelr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpxy8jkuab.d(13): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxy8jkuab.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i].isUpper)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpuxwglcmg.d(14): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxwglcmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(isUpper(c) && str2.length > 0)\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp26q8owam.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp26q8owam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmplm_e0vf8.d(16): Error: slice `str2` is not mutable\n/tmp/tmplm_e0vf8.d(18): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplm_e0vf8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1mzg1c4y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp1mzg1c4y.__unittest_L23_C1() [0x427bc2]\n??:? void tmp1mzg1c4y.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile(i < len)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123054,
      "stdout": "",
      "stderr": "/tmp/tmpxfprommg.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxfprommg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(ch; str1)\n\t{\n\t\tif(isUpper(ch))\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp3z79k2bo.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3z79k2bo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t}\n\t\tstr2 ~= str1[i];\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xl5wyvg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmp3xl5wyvg.__unittest_L23_C1() [0x427bc2]\n??:? void tmp3xl5wyvg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\tint s;\n\tint t;\n\tint u;\n\tint v;\n\tint w;\n\tint x;\n\tint y;\n\tint z;\n\tint a;\n\tint b;\n\tint c;\n\tint d;\n\tint e;\n\tint f;\n\tint g;\n\tint h;\n\tint ii;\n\tint jj;\n\tint kk;\n\tint ll;\n\tint mm;\n\tint nn;\n\tint oo;\n\tint pp;\n\tint qq;\n\tint rr;\n\tint ss;\n\tint tt;\n\tint uu;\n\tint vv;\n\tint ww;\n\tint xx;\n\tint yy;\n\tint zz;\n\tint aa;\n\tint bb;\n\tint cc;\n\tint dd;\n\tint ee;\n\tint ff;\n\tint gg;\n\tint hh;\n\tint iii;\n\tint jjj;\n\tint kkk;\n\tint lll;\n\tint mmm;\n\tint nnn;\n\tint ooo;\n\tint ppp;\n\tint qqq;\n\tint rrr;\n\tint sss;\n\tint ttt;\n\tint uuu;\n\tint vvv;\n\tint www;\n\tint xxx;\n\tint yyy;\n\tint zzz;\n\tint aaa;\n\tint bbb;\n\tint ccc;\n\tint ddd;\n\tint eee;\n\tint fff;\n\tint ggg;\n\tint hhh;\n\tint iiii;\n\tint jjjj;\n\tint kkkk;\n\tint llll;\n\tint mmmm;\n\tint nnnn;\n\tint oooo;\n\tint pppp;\n\tint qqqq;\n\tint rrrr;\n\tint ssss;\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpw5n19tcp.d(100): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw5n19tcp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuu95vszj.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmpuu95vszj.__unittest_L22_C1() [0x427bc2]\n??:? void tmpuu95vszj.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c73f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b64e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430424]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b625]\n??:? runModuleUnitTests [0x42c515]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428448]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\ti++;\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 ~= \" \";\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp4e1t98zf.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4e1t98zf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\n*/\nstring capital_words_spaces(string str1) \n{\n\tstring result = \"\";\n\tint i = 0;\n\tint len = str1.length;\n\twhile (i < len)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\tresult ~= str1[i];\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = capital_words_spaces;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\");\n    assert(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\");\n}\nvoid main(){}",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmp0dtpg123.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0dtpg123.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
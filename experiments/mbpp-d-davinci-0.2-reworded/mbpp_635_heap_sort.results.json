{
  "name": "mbpp_635_heap_sort",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = floor(heap.length / 2); i >= 0; i--)\n\t{\n\t\theap = heapify(heap, i);\n\t}\n\t\n\tfor (int i = heap.length - 1; i >= 0; i--)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[i];\n\t\theap = heapify(heap, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpb9hdc_8x.d(17): Error: `std.math.floor` called with argument types `(ulong)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmpb9hdc_8x.d(19): Error: undefined identifier `heapify`\n/tmp/tmpb9hdc_8x.d(22): Error: cannot implicitly convert expression `heap.length - 1LU` of type `ulong` to `int`\n/tmp/tmpb9hdc_8x.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9hdc_8x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// Build a max heap\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t\tint current = i;\n\t\twhile (current != 0)\n\t\t{\n\t\t\tint parent = (current - 1) / 2;\n\t\t\tif (result[current] > result[parent])\n\t\t\t{\n\t\t\t\tlong temp = result[current];\n\t\t\t\tresult[current] = result[parent];\n\t\t\t\tresult[parent] = temp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent = parent;\n\t\t}\n\t}\n\t\n\t// Heap sort\n\tfor (int i = iterable.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\tint current = 0;\n\t\tint leftChild = 2 * current + 1;\n\t\twhile (leftChild < i)\n\t\t{\n\t\t\tint max = leftChild;\n\t\t\tint rightChild = leftChild + 1;\n\t\t\tif (rightChild < i)\n\t\t\t{\n\t\t\t\tif (result[rightChild] > result[leftChild])\n\t\t\t\t{\n\t\t\t\t\tmax++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result[max] > result[current])\n\t\t\t{\n\t\t\t\tlong temp = result[max];\n\t\t\t\tresult[max] = result[current];\n\t\t\t\tresult[current] = temp;\n\t\t\t\tcurrent = max;\n\t\t\t\tleftChild = 2 * current + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmps28joi5v.d(34): Error: cannot implicitly convert expression `iterable.length - 1LU` of type `ulong` to `int`\n/tmp/tmps28joi5v.d(55): Error: variable `temp` is shadowing variable `tmps28joi5v.heap_sort.temp`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps28joi5v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] array = iterable.dup;\n\tlong[] heap = new long[array.length];\n\tlong heap_size = 0;\n\t\n\tvoid swap(long[] array, long i, long j) \n\t{\n\t\tlong temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n\t\n\tvoid heapify(long[] array, long index, long heap_size) \n\t{\n\t\tlong left = 2 * index + 1;\n\t\tlong right = 2 * index + 2;\n\t\tlong largest = index;\n\t\t\n\t\tif (left < heap_size && array[left] > array[largest]) \n\t\t{\n\t\t\tlargest = left;\n\t\t}\n\t\t\n\t\tif (right < heap_size && array[right] > array[largest]) \n\t\t{\n\t\t\tlargest = right;\n\t\t}\n\t\t\n\t\tif (largest != index) \n\t\t{\n\t\t\tswap(array, index, largest);\n\t\t\theapify(array, largest, heap_size);\n\t\t}\n\t}\n\t\n\tvoid build_heap(long[] array, long heap_size) \n\t{\n\t\tfor (long i = (heap_size / 2) - 1; i >= 0; i--) \n\t\t{\n\t\t\theapify(array, i, heap_size);\n\t\t}\n\t}\n\t\n\tvoid heap_sort(long[] array, long heap_size) \n\t{\n\t\tbuild_heap(array, heap_size);\n\t\t\n\t\tfor (long i = heap_size - 1; i >= 0; i--) \n\t\t{\n\t\t\tswap(array, 0, i);\n\t\t\theapify(array, 0, i);\n\t\t}\n\t}\n\t\n\theap_sort(array, array.length);\n\treturn array;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t}\n\t\n\tfor(int i = 0; i < heap.length; i++)\n\t{\n\t\theapify(heap, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmplv8hwh1z.d(17): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplv8hwh1z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(iterable, n, i);\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpsbkroeuq.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpsbkroeuq.d(11): Error: undefined identifier `heapify`\n/tmp/tmpsbkroeuq.d(17): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsbkroeuq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap[heap_size] = i;\n\t\theap_size++;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tforeach(long i; 0..result.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmp_e_0jzwb.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmp_e_0jzwb.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_e_0jzwb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result;\n\tlong i, j, k, n;\n\tlong temp;\n\t\n\tn = iterable.length;\n\tresult = new long[n];\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (i = n / 2 - 1; i >= 0; i--)\n\t{\n\t\tk = i;\n\t\tj = 2 * k + 1;\n\t\t\n\t\twhile (j < n)\n\t\t{\n\t\t\tif (j + 1 < n)\n\t\t\t{\n\t\t\t\tif (result[j] < result[j + 1])\n\t\t\t\t{\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (result[k] < result[j])\n\t\t\t{\n\t\t\t\ttemp = result[k];\n\t\t\t\tresult[k] = result[j];\n\t\t\t\tresult[j] = temp;\n\t\t\t\t\n\t\t\t\tk = j;\n\t\t\t\tj = 2 * k + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i = n - 1; i >= 0; i--)\n\t{\n\t\ttemp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\tk = 0;\n\t\tj = 2 * k + 1;\n\t\t\n\t\twhile (j < i)\n\t\t{\n\t\t\tif (j + 1 < i)\n\t\t\t{\n\t\t\t\tif (result[j] < result[j + 1])\n\t\t\t\t{\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (result[k] < result[j])\n\t\t\t{\n\t\t\t\ttemp = result[k];\n\t\t\t\tresult[k\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "/tmp/tmp27fsgk90.d(75): Error: found `unittest` when expecting `,`\n/tmp/tmp27fsgk90.d(83): Error: found `void` when expecting `,`\n/tmp/tmp27fsgk90.d(83): Error: found `{` when expecting `,`\n/tmp/tmp27fsgk90.d(83): Error: expression expected, not `}`\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `,`\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `]`\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `;` following statement\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp27fsgk90.d(83): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp27fsgk90.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1)\n\t\t{\n\t\t\tif(heap[j] > heap[j/2])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[j/2];\n\t\t\t\theap[j/2] = temp;\n\t\t\t}\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max])\n\t\t\t\tmax = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max])\n\t\t\t\tmax = j*2+1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpka4_4r__.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x42890e]\n??:? long[] tmpka4_4r__.heap_sort(long[]) [0x427ec5]\n??:? void tmpka4_4r__.__unittest_L56_C1() [0x4282e9]\n??:? void tmpka4_4r__.__modtest() [0x4285e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c93b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7a5]\n??:? runModuleUnitTests [0x42c711]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_index = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_index])\n\t\t\t\tmax_index = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max_index])\n\t\t\t\tmax_index = j*2+1;\n\t\t\tif(max_index == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max_index];\n\t\t\theap[max_index] = temp;\n\t\t\tj = max_index;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1pqxf2a2.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428906]\n??:? long[] tmp1pqxf2a2.heap_sort(long[]) [0x427ec5]\n??:? void tmp1pqxf2a2.__unittest_L52_C1() [0x4282dd]\n??:? void tmp1pqxf2a2.__modtest() [0x4285d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap[heap.length - 1] = 0;\n\t\theapify(heap, heap.length - 1);\n\t}\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmph41vv9tc.d(13): Error: undefined identifier `heapify`\n/tmp/tmph41vv9tc.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph41vv9tc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\theap[i] = iterable[i];\n\t\tresult[i] = 0;\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\tint parent = (i - 1) / 2;\n\t\tint current = i;\n\t\t\n\t\twhile (heap[current] > heap[parent]) \n\t\t{\n\t\t\tlong temp = heap[current];\n\t\t\theap[current] = heap[parent];\n\t\t\theap[parent] = temp;\n\t\t\t\n\t\t\tcurrent = parent;\n\t\t\tparent = (current - 1) / 2;\n\t\t}\n\t}\n\t\n\tfor (int i = iterable.length - 1; i >= 0; i--) \n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = 0;\n\t\t\n\t\tint current = 0;\n\t\tint left = 1;\n\t\tint right = 2;\n\t\t\n\t\twhile (heap[current] < heap[left] || heap[current] < heap[right]) \n\t\t{\n\t\t\tif (heap[left] > heap[right]) \n\t\t\t{\n\t\t\t\tlong temp = heap[current];\n\t\t\t\theap[current] = heap[left];\n\t\t\t\theap[left] = temp;\n\t\t\t\t\n\t\t\t\tcurrent = left;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlong temp = heap[current];\n\t\t\t\theap[current] = heap[right];\n\t\t\t\theap[right] = temp;\n\t\t\t\t\n\t\t\t\tcurrent = right;\n\t\t\t}\n\t\t\t\n\t\t\tleft = 2 * current + 1;\n\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "/tmp/tmpeg6iybsg.d(65): Error: found `unittest` instead of statement\n/tmp/tmpeg6iybsg.d(73): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpeg6iybsg.d(73): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeg6iybsg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong length = result.length;\n\t\n\tfor(long i = length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, length, i);\n\t}\n\t\n\tfor(long i = length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpkmesic2s.d(20): Error: undefined identifier `heapify`\n/tmp/tmpkmesic2s.d(29): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmesic2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\tlong[] temp = new long[iterable.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517226,
      "stdout": "",
      "stderr": "/tmp/tmp9hyzidqm.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9hyzidqm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i,v; iterable)\n\t{\n\t\theap[i] = v;\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap.length--;\n\t\theapify(heap, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmp1ifjnfmm.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ifjnfmm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunr4nn91.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4284c5]\n??:? void tmpunr4nn91.__unittest_L18_C1() [0x427fe0]\n??:? void tmpunr4nn91.__modtest() [0x428244]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cf1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bdae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4308f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430da8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430885]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd85]\n??:? runModuleUnitTests [0x42ccf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428914]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpiswcq5yk.d(16): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(18): Error: undefined identifier `heapify`\n/tmp/tmpiswcq5yk.d(21): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiswcq5yk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, v; iterable)\n\t{\n\t\theap[i] = v;\n\t}\n\t\n\tfor(long i = (heap.length / 2) - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, heap.length, i);\n\t}\n\t\n\tfor(long i = heap.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\t\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpteaqbsmh.d(17): Error: undefined identifier `heapify`\n/tmp/tmpteaqbsmh.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpteaqbsmh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tlong heap_size = heap.length;\n\t\n\tfor(long i = heap_size / 2; i >= 0; i--)\n\t{\n\t\theapify(heap, heap_size, i);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\t\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpflk3srn6.d(19): Error: undefined identifier `heapify`\n/tmp/tmpflk3srn6.d(28): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpflk3srn6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long element; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = element;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i/2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i/2];\n\t\t\theap[i/2] = temp;\n\t\t\ti = i/2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong max_index = i;\n\t\t\tif(2*i <= heap_size && heap[2*i] > heap[max_index])\n\t\t\t\tmax_index = 2*i;\n\t\t\tif(2*i+1 <= heap_size && heap[2*i+1] > heap[max_index])\n\t\t\t\tmax_index = 2*i+1;\n\t\t\tif(max_index == i)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[max_index];\n\t\t\theap[max_index] = temp;\n\t\t\ti = max_index;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7ht4_zsj.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288fe]\n??:? long[] tmp7ht4_zsj.heap_sort(long[]) [0x427ec5]\n??:? void tmp7ht4_zsj.__unittest_L52_C1() [0x4282d9]\n??:? void tmp7ht4_zsj.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c92b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ef8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b795]\n??:? runModuleUnitTests [0x42c701]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpdch5qr2h.d(15): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpdch5qr2h.d(17): Error: undefined identifier `heapify`\n/tmp/tmpdch5qr2h.d(20): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpdch5qr2h.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdch5qr2h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpiswcq5yk.d(16): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(18): Error: undefined identifier `heapify`\n/tmp/tmpiswcq5yk.d(21): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiswcq5yk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// copy the array\n\tforeach(i, item; iterable)\n\t\tresult[i] = item;\n\t\n\t// create the heap\n\tfor(int i = result.length / 2; i >= 0; i--)\n\t\theapify(result, i, result.length);\n\t\n\t// sort the heap\n\tfor(int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theapify(result, 0, i);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpkc46vfln.d(16): Error: cannot implicitly convert expression `result.length / 2LU` of type `ulong` to `int`\n/tmp/tmpkc46vfln.d(17): Error: undefined identifier `heapify`\n/tmp/tmpkc46vfln.d(20): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpkc46vfln.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkc46vfln.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] array = iterable.dup;\n\tint n = array.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(array, n, i);\n\tfor (int i = n - 1; i >= 0; i--)\n\t{\n\t\tlong temp = array[0];\n\t\tarray[0] = array[i];\n\t\tarray[i] = temp;\n\t\theapify(array, i, 0);\n\t}\n\treturn array;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpg9l3uuti.d(10): Error: cannot implicitly convert expression `array.length` of type `ulong` to `int`\n/tmp/tmpg9l3uuti.d(12): Error: undefined identifier `heapify`\n/tmp/tmpg9l3uuti.d(18): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg9l3uuti.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint size = iterable.length;\n\t\n\tfor (int i = (size / 2) - 1; i >= 0; i--) \n\t{\n\t\theapify(iterable, size, i);\n\t}\n\t\n\tfor (int i = size - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\t\n\t\theapify(iterable, i, 0);\n\t}\n\t\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp103fs5l0.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmp103fs5l0.d(13): Error: undefined identifier `heapify`\n/tmp/tmp103fs5l0.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp103fs5l0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t\theap_push(heap, i);\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\titerable[i] = heap[0];\n\t\theap_pop(heap, iterable.length - i);\n\t}\n\t\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpml83pcwv.d(14): Error: undefined identifier `heap_push`\n/tmp/tmpml83pcwv.d(20): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml83pcwv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theap_up(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap_down(heap, 0, heap.length - 1);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpohy2iqw4.d(13): Error: undefined identifier `heap_up`\n/tmp/tmpohy2iqw4.d(21): Error: undefined identifier `heap_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpohy2iqw4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] sorted = new long[iterable.length];\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t\tsorted[i] = 0;\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tlong temp = heap[i];\n\t\tlong j = i;\n\t\twhile(j > 0 && temp < heap[(j - 1) / 2])\n\t\t{\n\t\t\theap[j] = heap[(j - 1) / 2];\n\t\t\tj = (j - 1) / 2;\n\t\t}\n\t\theap[j] = temp;\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap[heap.length - 1] = 0;\n\t\t\n\t\tlong temp = heap[0];\n\t\tlong j = 0;\n\t\tlong k = 0;\n\t\twhile(j < heap.length && heap[j] != 0)\n\t\t{\n\t\t\tk = j;\n\t\t\tif(2 * j + 1 < heap.length && heap[2 * j + 1] != 0 && heap[2 * j + 1] < heap[k])\n\t\t\t{\n\t\t\t\tk = 2 * j + 1;\n\t\t\t}\n\t\t\tif(2 * j + 2 < heap.length && heap[2 * j + 2] != 0 && heap[2 * j + 2] < heap[k])\n\t\t\t{\n\t\t\t\tk = 2 * j + 2;\n\t\t\t}\n\t\t\tif(k == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp = heap[j];\n\t\t\t\theap[j] = heap[k];\n\t\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp_d7r3a9y.d(59): Error: found `unittest` instead of statement\n/tmp/tmp_d7r3a9y.d(67): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp_d7r3a9y.d(67): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp_d7r3a9y.d(67): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d7r3a9y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\tlong heap_size = 0;\n\t\n\tauto heap_insert = (long value)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = value;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti = i / 2;\n\t\t}\n\t};\n\t\n\tauto heap_remove = ()\n\t{\n\t\tlong result = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong max = i;\n\t\t\tif(2 * i <= heap_size && heap[max] < heap[2 * i])\n\t\t\t{\n\t\t\t\tmax = 2 * i;\n\t\t\t}\n\t\t\tif(2 * i + 1 <= heap_size && heap[max] < heap[2 * i + 1])\n\t\t\t{\n\t\t\t\tmax = 2 * i + 1;\n\t\t\t}\n\t\t\tif(max == i)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\ti = max;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\theap_insert(result[i]);\n\t}\n\t\n\tforeach(i; 0 .. result.\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp8p7jithz.d(67): Error: identifier expected following `.`, not `unittest`\n/tmp/tmp8p7jithz.d(68): Error: found `{` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8p7jithz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] arr = iterable.dup;\n\tlong[] heap = new long[arr.length];\n\tlong heap_size = 0;\n\t\n\tvoid heap_insert(long val) \n\t{\n\t\theap[heap_size] = val;\n\t\tlong i = heap_size;\n\t\twhile (i > 0) \n\t\t{\n\t\t\tlong parent = (i - 1) / 2;\n\t\t\tif (heap[i] > heap[parent]) \n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\ti = parent;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\theap_size++;\n\t}\n\t\n\tlong heap_pop() \n\t{\n\t\tlong result = heap[0];\n\t\theap_size--;\n\t\theap[0] = heap[heap_size];\n\t\tlong i = 0;\n\t\twhile (i < heap_size) \n\t\t{\n\t\t\tlong left = 2 * i + 1;\n\t\t\tlong right = 2 * i + 2;\n\t\t\tlong largest = i;\n\t\t\tif (left < heap_size && heap[left] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif (right < heap_size && heap[right] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif (largest != i) \n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\ti = largest;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpu6qcthem.d(67): Error: found `unittest` when expecting `;` following `return` statement\n/tmp/tmpu6qcthem.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpu6qcthem.d(75): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6qcthem.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong size = result.length;\n\t\n\tfor (long i = size / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, size, i);\n\t}\n\t\n\tfor (long i = size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpzw_7tms2.d(19): Error: undefined identifier `heapify`\n/tmp/tmpzw_7tms2.d(28): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzw_7tms2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t\theap[i] = iterable[i];\n\t\n\tfor (int i = heap.length / 2 - 1; i >= 0; i--)\n\t\theapify(heap, heap.length, i);\n\t\n\tfor (int i = heap.length - 1; i >= 0; i--)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[i];\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpyubk8l_j.d(14): Error: cannot implicitly convert expression `heap.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpyubk8l_j.d(15): Error: undefined identifier `heapify`\n/tmp/tmpyubk8l_j.d(17): Error: cannot implicitly convert expression `heap.length - 1LU` of type `ulong` to `int`\n/tmp/tmpyubk8l_j.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyubk8l_j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunr4nn91.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4284c5]\n??:? void tmpunr4nn91.__unittest_L18_C1() [0x427fe0]\n??:? void tmpunr4nn91.__modtest() [0x428244]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cf1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bdae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4308f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430da8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430885]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd85]\n??:? runModuleUnitTests [0x42ccf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428914]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpn3zrlb63.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpn3zrlb63.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3zrlb63.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length + 1];\n\tlong heap_size = 0;\n\t\n\tforeach(long element; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = element;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti /= 2;\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(2 * j <= heap_size)\n\t\t{\n\t\t\tlong k = 2 * j;\n\t\t\tif(k + 1 <= heap_size && heap[k + 1] > heap[k])\n\t\t\t\tk++;\n\t\t\tif(heap[j] >= heap[k])\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[k];\n\t\t\theap[k] = temp;\n\t\t\tj = k;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx6j99q40.d(53): unittest failure\n----------------\n??:? _d_unittestp [0x42885d]\n??:? void tmpx6j99q40.__unittest_L49_C1() [0x42837c]\n??:? void tmpx6j99q40.__modtest() [0x4285e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c93b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7a5]\n??:? runModuleUnitTests [0x42c711]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d20]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length + 1];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti = i / 2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j * 2 <= heap_size && heap[j * 2] > heap[max])\n\t\t\t\tmax = j * 2;\n\t\t\tif(j * 2 + 1 <= heap_size && heap[j * 2 + 1] > heap[max])\n\t\t\t\tmax = j * 2 + 1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfw6kv5j9.d(56): unittest failure\n----------------\n??:? _d_unittestp [0x428855]\n??:? void tmpfw6kv5j9.__unittest_L52_C1() [0x428374]\n??:? void tmpfw6kv5j9.__modtest() [0x4285d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d18]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpu3l3xtg2.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpu3l3xtg2.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu3l3xtg2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tlong parent = (i - 1) / 2;\n\t\tlong child = i;\n\t\t\n\t\twhile(child > 0 && heap[parent] < heap[child])\n\t\t{\n\t\t\tlong temp = heap[parent];\n\t\t\theap[parent] = heap[child];\n\t\t\theap[child] = temp;\n\t\t\t\n\t\t\tchild = parent;\n\t\t\tparent = (child - 1) / 2;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[iterable.length - i - 1];\n\t\t\n\t\tlong parent = 0;\n\t\tlong child = 1;\n\t\t\n\t\twhile(child < iterable.length - i)\n\t\t{\n\t\t\tif(child + 1 < iterable.length - i && heap[child + 1] > heap[child])\n\t\t\t{\n\t\t\t\tchild++;\n\t\t\t}\n\t\t\t\n\t\t\tif(heap[parent] < heap[child])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[child];\n\t\t\t\theap[child] = temp;\n\t\t\t\t\n\t\t\t\tparent = child;\n\t\t\t\tchild = parent * 2 + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpct1pxpx3.d(70): unittest failure\n----------------\n??:? _d_unittestp [0x4288fd]\n??:? void tmpct1pxpx3.__unittest_L66_C1() [0x428418]\n??:? void tmpct1pxpx3.__modtest() [0x42867c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c9db]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b86e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430af9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430fa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b845]\n??:? runModuleUnitTests [0x42c7b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428dc0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint length = iterable.length;\n\tint i = length / 2;\n\tint parent;\n\tint child;\n\tlong t;\n\t\n\tfor (;;) {\n\t\tif (i > 0) {\n\t\t\ti--;\n\t\t\tt = iterable[i];\n\t\t} else {\n\t\t\tlength--;\n\t\t\tif (length == 0) {\n\t\t\t\treturn iterable;\n\t\t\t}\n\t\t\tt = iterable[length];\n\t\t\titerable[length] = iterable[0];\n\t\t}\n\t\t\n\t\tparent = i;\n\t\tchild = i * 2 + 1;\n\t\t\n\t\twhile (child < length) {\n\t\t\tif (child + 1 < length && iterable[child + 1] > iterable[child]) {\n\t\t\t\tchild++;\n\t\t\t}\n\t\t\tif (iterable[child] > t) {\n\t\t\t\titerable[parent] = iterable[child];\n\t\t\t\tparent = child;\n\t\t\t\tchild = parent * 2 + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\titerable[parent] = t;\n\t}\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp5lp3c5xo.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5lp3c5xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tauto heap = new Heap(iterable);\n\treturn heap.sort();\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp5yukhm5t.d(9): Error: undefined identifier `Heap`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5yukhm5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(long i; iterable)\n\t\tresult ~= i;\n\t\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t\theapify(result, result.length, i);\n\t\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpyxoa536y.d(14): Error: undefined identifier `heapify`\n/tmp/tmpyxoa536y.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyxoa536y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpa8nkhg3t.d(17): Error: undefined identifier `heapify`\n/tmp/tmpa8nkhg3t.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa8nkhg3t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\t\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i/2])\n\t\t{\n\t\t\tlong tmp = heap[i];\n\t\t\theap[i] = heap[i/2];\n\t\t\theap[i/2] = tmp;\n\t\t\ti /= 2;\n\t\t}\n\t}\n\t\n\tlong result_size = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult_size++;\n\t\tresult[result_size] = heap[1];\n\t\t\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong j = i;\n\t\t\tif(i*2 <= heap_size && heap[i] < heap[i*2])\n\t\t\t\tj = i*2;\n\t\t\tif(i*2+1 <= heap_size && heap[j] < heap[i*2+1])\n\t\t\t\tj = i*2+1;\n\t\t\tif(i == j)\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tlong tmp = heap[i];\n\t\t\theap[i] = heap[j];\n\t\t\theap[j] = tmp;\n\t\t\t\n\t\t\ti = j;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpft753gy6.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x42893e]\n??:? long[] tmpft753gy6.heap_sort(long[]) [0x427ec5]\n??:? void tmpft753gy6.__unittest_L58_C1() [0x428315]\n??:? void tmpft753gy6.__modtest() [0x42860c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c96b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7d5]\n??:? runModuleUnitTests [0x42c741]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(iterable, n, i);\n\tfor (int i = n - 1; i >= 0; i--)\n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmptjb8h6jj.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmptjb8h6jj.d(11): Error: undefined identifier `heapify`\n/tmp/tmptjb8h6jj.d(17): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjb8h6jj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, item);\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmprrws19h2.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmprrws19h2.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprrws19h2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint size = iterable.length;\n\tlong[] heap = new long[size];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t}\n\t\n\tfor(int i = (size / 2) - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, size, i);\n\t}\n\t\n\tfor(int i = size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp7_o81qqk.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmp7_o81qqk.d(18): Error: undefined identifier `heapify`\n/tmp/tmp7_o81qqk.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_o81qqk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunr4nn91.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4284c5]\n??:? void tmpunr4nn91.__unittest_L18_C1() [0x427fe0]\n??:? void tmpunr4nn91.__modtest() [0x428244]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cf1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bdae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4308f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430da8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430885]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd85]\n??:? runModuleUnitTests [0x42ccf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428914]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\t\n\tforeach(long i; result)\n\t{\n\t\theap[i] = result[i];\n\t}\n\t\n\tforeach(long i; heap)\n\t{\n\t\tlong temp = heap[i];\n\t\tlong c = i;\n\t\t\n\t\twhile(c > 0 && heap[(c - 1) / 2] < temp)\n\t\t{\n\t\t\theap[c] = heap[(c - 1) / 2];\n\t\t\tc = (c - 1) / 2;\n\t\t}\n\t\t\n\t\theap[c] = temp;\n\t}\n\t\n\tforeach(long i; heap)\n\t{\n\t\tlong temp = heap[i];\n\t\tlong c = i;\n\t\tlong j = 2 * c + 1;\n\t\t\n\t\twhile(j < heap.length)\n\t\t{\n\t\t\tif(j + 1 < heap.length)\n\t\t\t{\n\t\t\t\tif(heap[j + 1] > heap[j])\n\t\t\t\t{\n\t\t\t\t\tj = j + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(temp >= heap[j])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\theap[c] = heap[j];\n\t\t\tc = j;\n\t\t\tj = 2 * c + 1;\n\t\t}\n\t\t\n\t\theap[c] = temp;\n\t}\n\t\n\tforeach(long i; heap)\n\t{\n\t\tresult[i] = heap[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfcgoyi6z.d(77): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmpfcgoyi6z.__unittest_L73_C1() [0x428588]\n??:? void tmpfcgoyi6z.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431118]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430bf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b9b5]\n??:? runModuleUnitTests [0x42c921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f30]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long element; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, element);\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpw_7r5tfn.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpw_7r5tfn.d(20): Error: undefined identifier `heap_extract`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_7r5tfn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong[] heap_size = new long[1];\n\theap_size[0] = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap_pop(heap, heap_index, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp0ts1x2hy.d(17): Error: undefined identifier `heap_insert`\n/tmp/tmp0ts1x2hy.d(22): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ts1x2hy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpu3l3xtg2.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpu3l3xtg2.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu3l3xtg2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong[] heap_size = new long[1];\n\theap_size[0] = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap_pop(heap, heap_index, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp0ts1x2hy.d(17): Error: undefined identifier `heap_insert`\n/tmp/tmp0ts1x2hy.d(22): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ts1x2hy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong heap_size = result.length;\n\t\n\tfor(long i = floor(result.length / 2); i >= 0; i--)\n\t{\n\t\tmax_heapify(result, i, heap_size);\n\t}\n\t\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theap_size--;\n\t\tmax_heapify(result, 0, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpifgm_iru.d(17): Error: `std.math.floor` called with argument types `(ulong)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmpifgm_iru.d(19): Error: undefined identifier `max_heapify`\n/tmp/tmpifgm_iru.d(28): Error: undefined identifier `max_heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifgm_iru.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor(int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor(int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpiob23wte.d(15): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpiob23wte.d(17): Error: undefined identifier `heapify`\n/tmp/tmpiob23wte.d(20): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpiob23wte.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiob23wte.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tint heap_size = 0;\n\t\n\tforeach(long element; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = element;\n\t\t\n\t\tint i = heap_size;\n\t\twhile(i > 1)\n\t\t{\n\t\t\tint parent = i / 2;\n\t\t\tif(heap[i] > heap[parent])\n\t\t\t{\n\t\t\t\tlong tmp = heap[i];\n\t\t\t\theap[i] = heap[parent];\n\t\t\t\theap[parent] = tmp;\n\t\t\t\ti = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\t\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tint i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tint left = i * 2;\n\t\t\tint right = i * 2 + 1;\n\t\t\t\n\t\t\tif(left <= heap_size)\n\t\t\t{\n\t\t\t\tif(right <= heap_size)\n\t\t\t\t{\n\t\t\t\t\tif(heap[left] > heap[right])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(heap[left] > heap[i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlong tmp = heap[left];\n\t\t\t\t\t\t\theap[left] = heap[i];\n\t\t\t\t\t\t\theap[i] = tmp;\n\t\t\t\t\t\t\ti = left;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpumpsikt4.d(66): Error: found `unittest` instead of statement\n/tmp/tmpumpsikt4.d(74): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpumpsikt4.d(74): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpumpsikt4.d(74): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpumpsikt4.d(74): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpumpsikt4.d(74): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpumpsikt4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i, long value; iterable)\n\t{\n\t\theap_size = heap_size + 1;\n\t\theap[heap_size] = value;\n\t\theap_index[value] = heap_size;\n\t\t\n\t\tlong current_index = heap_size;\n\t\twhile(current_index > 1)\n\t\t{\n\t\t\tlong parent_index = current_index / 2;\n\t\t\tif(heap[parent_index] > heap[current_index])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent_index];\n\t\t\t\theap[parent_index] = heap[current_index];\n\t\t\t\theap[current_index] = temp;\n\t\t\t\t\n\t\t\t\theap_index[heap[parent_index]] = parent_index;\n\t\t\t\theap_index[heap[current_index]] = current_index;\n\t\t\t\t\n\t\t\t\tcurrent_index = parent_index;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index = result_index + 1;\n\t\t\n\t\theap[1] = heap[heap_size];\n\t\theap_size = heap_size - 1;\n\t\t\n\t\theap_index[heap[1]] = 1;\n\t\t\n\t\tlong current_index = 1;\n\t\twhile(current_index <= heap_size)\n\t\t{\n\t\t\tlong left_child_index = current_index * 2;\n\t\t\tlong right_child_index = current_index * 2 + 1;\n\t\t\t\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpoyxzvewg.d(60): Error: found `unittest` instead of statement\n/tmp/tmpoyxzvewg.d(68): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpoyxzvewg.d(68): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoyxzvewg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_pop(heap);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpibzp17l0.d(20): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpibzp17l0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint length = iterable.length;\n\tif (length <= 1)\n\t\treturn iterable;\n\t\n\tlong[] result = new long[length];\n\t\n\t// create a max heap\n\tfor (int i = 0; i < length; i++)\n\t{\n\t\tint index = i;\n\t\twhile (index != 0)\n\t\t{\n\t\t\tint parent = (index - 1) / 2;\n\t\t\tif (iterable[index] > iterable[parent])\n\t\t\t{\n\t\t\t\tlong temp = iterable[index];\n\t\t\t\titerable[index] = iterable[parent];\n\t\t\t\titerable[parent] = temp;\n\t\t\t}\n\t\t\tindex = parent;\n\t\t}\n\t}\n\t\n\t// sort\n\tfor (int i = length - 1; i >= 0; i--)\n\t{\n\t\tresult[i] = iterable[0];\n\t\t\n\t\titerable[0] = iterable[i];\n\t\t\n\t\tint index = 0;\n\t\twhile (true)\n\t\t{\n\t\t\tint child = index * 2 + 1;\n\t\t\tif (child > i - 1)\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tint right = child + 1;\n\t\t\tif (right <= i - 1 && iterable[right] > iterable[child])\n\t\t\t{\n\t\t\t\tchild = right;\n\t\t\t}\n\t\t\t\n\t\t\tif (iterable[index] < iterable[child])\n\t\t\t{\n\t\t\t\tlong temp = iterable[index];\n\t\t\t\titerable[index] = iterable[child];\n\t\t\t\titerable[child] = temp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tindex = child;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpa7vydwpx.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7vydwpx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// create a heap\n\tHeap heap = new Heap(iterable);\n\t\n\t// sort the heap\n\theap.sort();\n\t\n\t// copy the heap to the result\n\tforeach(i, item; heap.heap)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpt2xwj0jo.d(12): Error: undefined identifier `Heap`\n/tmp/tmpt2xwj0jo.d(12): Error: undefined identifier `Heap`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2xwj0jo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, i);\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap_remove(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp673u20de.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmp673u20de.d(20): Error: undefined identifier `heap_remove`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp673u20de.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tforeach(i; 0..iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[$ - 1 - i];\n\t\theapify(heap, $ - 1 - i);\n\t}\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp1ztbosf8.d(21): Error: `$` is valid only inside [] of index or slice\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ztbosf8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong[] heap_size = new long[1];\n\theap_size[0] = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap_pop(heap, heap_index, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp0ts1x2hy.d(17): Error: undefined identifier `heap_insert`\n/tmp/tmp0ts1x2hy.d(22): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ts1x2hy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length + 1];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, item);\n\t}\n\t\n\tforeach(long item; result)\n\t{\n\t\titem = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp398qfgtj.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmp398qfgtj.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp398qfgtj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong tmp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = tmp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tforeach(ref long i; result)\n\t{\n\t\ti = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong k = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[k])\n\t\t\t\tk = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[k])\n\t\t\t\tk = j*2+1;\n\t\t\tif(k == j)\n\t\t\t\tbreak;\n\t\t\tlong tmp = heap[k];\n\t\t\theap[k] = heap[j];\n\t\t\theap[j] = tmp;\n\t\t\tj = k;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpshdxanpo.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x42890e]\n??:? long[] tmpshdxanpo.heap_sort(long[]) [0x427ecb]\n??:? void tmpshdxanpo.__unittest_L51_C1() [0x4282e9]\n??:? void tmpshdxanpo.__modtest() [0x4285e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c93b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7a5]\n??:? runModuleUnitTests [0x42c711]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i/2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i/2];\n\t\t\theap[i/2] = temp;\n\t\t\ti = i/2;\n\t\t}\n\t}\n\t\n\tlong result_size = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult_size++;\n\t\tresult[result_size] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong left = i*2;\n\t\t\tlong right = i*2 + 1;\n\t\t\tlong max = i;\n\t\t\tif(left <= heap_size && heap[left] > heap[max])\n\t\t\t{\n\t\t\t\tmax = left;\n\t\t\t}\n\t\t\tif(right <= heap_size && heap[right] > heap[max])\n\t\t\t{\n\t\t\t\tmax = right;\n\t\t\t}\n\t\t\tif(max == i)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\ti = max;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpq6cz0ix5.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428926]\n??:? long[] tmpq6cz0ix5.heap_sort(long[]) [0x427ecb]\n??:? void tmpq6cz0ix5.__unittest_L62_C1() [0x4282fd]\n??:? void tmpq6cz0ix5.__modtest() [0x4285f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c953]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7bd]\n??:? runModuleUnitTests [0x42c729]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[heap.length - 1 - i];\n\t\theap[heap.length - 1 - i] = temp;\n\t\t\n\t\tfor(int j = 0; j < heap.length - 1 - i; j++)\n\t\t{\n\t\t\tif(heap[j] < heap[j + 1])\n\t\t\t{\n\t\t\t\ttemp = heap[j];\n\t\t\t\theap[j] = heap[j + 1];\n\t\t\t\theap[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = heap[heap.length - 1 - i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] arr = iterable.dup;\n\tlong[] result = new long[arr.length];\n\tlong[] heap = new long[arr.length + 1];\n\tlong i = 0;\n\tlong heap_size = 0;\n\t\n\t// Build the heap\n\tforeach(long item; arr)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong j = heap_size;\n\t\twhile(j > 1)\n\t\t{\n\t\t\tlong parent = j / 2;\n\t\t\tif(heap[parent] < heap[j])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Sort the heap\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\ti++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(true)\n\t\t{\n\t\t\tlong left = j * 2;\n\t\t\tlong right = j * 2 + 1;\n\t\t\tlong largest = j;\n\t\t\tif(left <= heap_size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right <= heap_size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpng4z2p9g.d(68): Error: found `unittest` instead of statement\n/tmp/tmpng4z2p9g.d(76): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpng4z2p9g.d(76): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpng4z2p9g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n    long[] heap = new long[iterable.length];\n    long[] result = new long[iterable.length];\n    long heap_size = 0;\n    foreach(long i; iterable)\n    {\n        heap_size++;\n        heap[heap_size] = i;\n        long current = heap_size;\n        while(current > 1 && heap[current] > heap[current/2])\n        {\n            long temp = heap[current];\n            heap[current] = heap[current/2];\n            heap[current/2] = temp;\n            current = current/2;\n        }\n    }\n    long result_size = 0;\n    while(heap_size > 0)\n    {\n        result_size++;\n        result[result_size] = heap[1];\n        heap[1] = heap[heap_size];\n        heap_size--;\n        long current = 1;\n        while(current <= heap_size)\n        {\n            long left = current*2;\n            long right = current*2 + 1;\n            long largest = current;\n            if(left <= heap_size && heap[left] > heap[largest])\n            {\n                largest = left;\n            }\n            if(right <= heap_size && heap[right] > heap[largest])\n            {\n                largest = right;\n            }\n            if(largest != current)\n            {\n                long temp = heap[current];\n                heap[current] = heap[largest];\n                heap[largest] = temp;\n                current = largest;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpbmbcpq0a.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x42895e]\n??:? long[] tmpbmbcpq0a.heap_sort(long[]) [0x427ece]\n??:? void tmpbmbcpq0a.__unittest_L61_C1() [0x428335]\n??:? void tmpbmbcpq0a.__modtest() [0x42862c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c98b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430aa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f5]\n??:? runModuleUnitTests [0x42c761]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i/2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i/2];\n\t\t\theap[i/2] = temp;\n\t\t\ti = i/2;\n\t\t}\n\t}\n\t\n\tlong result_size = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult_size++;\n\t\tresult[result_size] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong left_child = 2*i;\n\t\t\tlong right_child = 2*i + 1;\n\t\t\tlong max_child = i;\n\t\t\tif(left_child <= heap_size && heap[left_child] > heap[max_child])\n\t\t\t{\n\t\t\t\tmax_child = left_child;\n\t\t\t}\n\t\t\tif(right_child <= heap_size && heap[right_child] > heap[max_child])\n\t\t\t{\n\t\t\t\tmax_child = right_child;\n\t\t\t}\n\t\t\tif(max_child == i)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[max_child];\n\t\t\theap[max_child] = temp;\n\t\t\ti = max_child;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c7yzgba.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428926]\n??:? long[] tmp9c7yzgba.heap_sort(long[]) [0x427ecb]\n??:? void tmp9c7yzgba.__unittest_L62_C1() [0x4282fd]\n??:? void tmp9c7yzgba.__modtest() [0x4285f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c953]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7bd]\n??:? runModuleUnitTests [0x42c729]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] array = iterable.dup;\n\tlong[] heap = new long[array.length];\n\tlong heap_size = 0;\n\t\n\tvoid heap_insert(long value) \n\t{\n\t\theap[heap_size] = value;\n\t\tlong i = heap_size;\n\t\twhile (i > 0 && heap[(i - 1) / 2] < heap[i]) \n\t\t{\n\t\t\tlong tmp = heap[(i - 1) / 2];\n\t\t\theap[(i - 1) / 2] = heap[i];\n\t\t\theap[i] = tmp;\n\t\t\ti = (i - 1) / 2;\n\t\t}\n\t\theap_size++;\n\t}\n\t\n\tlong heap_extract() \n\t{\n\t\tlong result = heap[0];\n\t\theap_size--;\n\t\theap[0] = heap[heap_size];\n\t\tlong i = 0;\n\t\twhile (true) \n\t\t{\n\t\t\tlong left = 2 * i + 1;\n\t\t\tlong right = 2 * i + 2;\n\t\t\tlong largest = i;\n\t\t\tif (left < heap_size && heap[left] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif (right < heap_size && heap[right] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif (largest != i) \n\t\t\t{\n\t\t\t\tlong tmp = heap[i];\n\t\t\t\theap[i] = heap[largest];\n\t\t\t\theap[largest] = tmp;\n\t\t\t\ti = largest;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tforeach (value; array) \n\t{\n\t\theap_insert(value);\n\t}\n\t\n\tforeach (i\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpamiiihjv.d(67): Error: no identifier for declarator `i`\n/tmp/tmpamiiihjv.d(67): Error: found `unittest` when expecting `;`\n/tmp/tmpamiiihjv.d(75): Error: found `void` when expecting `)`\n/tmp/tmpamiiihjv.d(75): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpamiiihjv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\tlong temp_index_2 = 0;\n\tlong temp_index_3 = 0;\n\tlong temp_index_4 = 0;\n\tlong temp_index_5 = 0;\n\tlong temp_index_6 = 0;\n\tlong temp_index_7 = 0;\n\tlong temp_index_8 = 0;\n\tlong temp_index_9 = 0;\n\tlong temp_index_10 = 0;\n\tlong temp_index_11 = 0;\n\tlong temp_index_12 = 0;\n\tlong temp_index_13 = 0;\n\tlong temp_index_14 = 0;\n\tlong temp_index_15 = 0;\n\tlong temp_index_16 = 0;\n\tlong temp_index_17 = 0;\n\tlong temp_index_18 = 0;\n\tlong temp_index_19 = 0;\n\tlong temp_index_20 = 0;\n\tlong temp_index_21 = 0;\n\tlong temp_index_22 = 0;\n\tlong temp_index_23 = 0;\n\tlong temp_index_24 = 0;\n\tlong temp_index_25 = 0;\n\tlong temp_index_26 = 0;\n\tlong temp_index_27 = 0;\n\tlong temp_index_28 = 0;\n\tlong temp_index_29 = 0;\n\tlong temp_index_30 = 0;\n\tlong temp_index_31 = 0;\n\tlong temp_index_32 = 0;\n\tlong temp_index_33 = 0;\n\tlong temp_index_34 = 0;\n\tlong temp_index_35 = 0;\n\tlong temp_index_36 = 0;\n\tlong temp_index_37 = 0;\n\tlong temp_index_38 = 0;\n\tlong temp_index_39 = 0;\n\tlong temp_index_40 =\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpdiv7h2rn.d(56): Error: expression expected, not `unittest`\n/tmp/tmpdiv7h2rn.d(57): Error: semicolon expected, not `{`\n/tmp/tmpdiv7h2rn.d(64): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdiv7h2rn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// Copy the array\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\t// Build the heap\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\t// Extract elements\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\t// Move current root to end\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\t// Call max heapify on the reduced heap\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpswvq1b87.d(20): Error: undefined identifier `heapify`\n/tmp/tmpswvq1b87.d(32): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpswvq1b87.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti = i / 2;\n\t\t}\n\t}\n\t\n\tforeach(long item; iterable)\n\t{\n\t\tresult[heap_size] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong i = 1;\n\t\twhile(i <= heap_size)\n\t\t{\n\t\t\tlong left = i * 2;\n\t\t\tlong right = i * 2 + 1;\n\t\t\tlong largest = i;\n\t\t\tif(left <= heap_size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right <= heap_size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != i)\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\ti = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpa0g2n65a.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x42899e]\n??:? long[] tmpa0g2n65a.heap_sort(long[]) [0x427ed4]\n??:? void tmpa0g2n65a.__unittest_L63_C1() [0x428375]\n??:? void tmpa0g2n65a.__modtest() [0x42866c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c9cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b85e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b835]\n??:? runModuleUnitTests [0x42c7a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] < heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong min_index = j;\n\t\t\tif(2*j <= heap_size && heap[2*j] < heap[min_index])\n\t\t\t{\n\t\t\t\tmin_index = 2*j;\n\t\t\t}\n\t\t\tif(2*j+1 <= heap_size && heap[2*j+1] < heap[min_index])\n\t\t\t{\n\t\t\t\tmin_index = 2*j+1;\n\t\t\t}\n\t\t\tif(min_index == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[min_index];\n\t\t\theap[min_index] = temp;\n\t\t\tj = min_index;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7_3_v_an.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288fe]\n??:? long[] tmp7_3_v_an.heap_sort(long[]) [0x427ec5]\n??:? void tmp7_3_v_an.__unittest_L59_C1() [0x4282d9]\n??:? void tmp7_3_v_an.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c92b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ef8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b795]\n??:? runModuleUnitTests [0x42c701]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpe9ex2160.d(18): Error: undefined identifier `heapify`\n/tmp/tmpe9ex2160.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe9ex2160.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong j = i;\n\t\twhile(j > 0)\n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif(heap[j] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t}\n\t\t\tj = parent;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1 - i];\n\t\t\n\t\tlong j = 0;\n\t\twhile(true)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\tif(left < heap.length - i && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right < heap.length - i && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf5gc3lbg.d(72): unittest failure\n----------------\n??:? _d_unittestp [0x42890d]\n??:? void tmpf5gc3lbg.__unittest_L68_C1() [0x42842c]\n??:? void tmpf5gc3lbg.__modtest() [0x428690]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c9eb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b87e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430b09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430fb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b855]\n??:? runModuleUnitTests [0x42c7c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428dd0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap[heap_size] = i;\n\t\theap_size++;\n\t\t\n\t\tlong j = heap_size - 1;\n\t\twhile(j > 0 && heap[j] > heap[(j-1)/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[(j-1)/2];\n\t\t\theap[(j-1)/2] = temp;\n\t\t\t\n\t\t\tj = (j-1)/2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[0];\n\t\tresult_index++;\n\t\t\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\t\n\t\tlong j = 0;\n\t\twhile(true)\n\t\t{\n\t\t\tlong left = 2*j + 1;\n\t\t\tlong right = 2*j + 2;\n\t\t\tlong largest = j;\n\t\t\t\n\t\t\tif(left < heap_size && heap[left] > heap[largest])\n\t\t\t\tlargest = left;\n\t\t\tif(right < heap_size && heap[right] > heap[largest])\n\t\t\t\tlargest = right;\n\t\t\t\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\t\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr3bcdu_8.d(69): unittest failure\n----------------\n??:? _d_unittestp [0x42888d]\n??:? void tmpr3bcdu_8.__unittest_L65_C1() [0x4283a8]\n??:? void tmpr3bcdu_8.__modtest() [0x42860c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c96b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7d5]\n??:? runModuleUnitTests [0x42c741]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d50]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\theap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t\theap_size++;\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_pop(heap, heap_index, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpo0od0t6x.d(16): Error: undefined identifier `heap_insert`\n/tmp/tmpo0od0t6x.d(22): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo0od0t6x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; 0 .. iterable.length) {\n\t\theap_size = heap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length) {\n\t\tresult[i] = heap_remove(heap, heap_index, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpcvvcvqpe.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpcvvcvqpe.d(19): Error: undefined identifier `heap_remove`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcvvcvqpe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong j = i;\n\t\twhile(j > 0 && heap[j] > heap[(j-1)/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[(j-1)/2];\n\t\t\theap[(j-1)/2] = temp;\n\t\t\tj = (j-1)/2;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length-1-i];\n\t\theap[heap.length-1-i] = 0;\n\t\t\n\t\tlong j = 0;\n\t\twhile(j < heap.length-1-i)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j*2+1 < heap.length-1-i && heap[j*2+1] > heap[max])\n\t\t\t{\n\t\t\t\tmax = j*2+1;\n\t\t\t}\n\t\t\tif(j*2+2 < heap.length-1-i && heap[j*2+2] > heap[max])\n\t\t\t{\n\t\t\t\tmax = j*2+2;\n\t\t\t}\n\t\t\tif(max == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp43m1lrmj.d(64): unittest failure\n----------------\n??:? _d_unittestp [0x428955]\n??:? void tmp43m1lrmj.__unittest_L60_C1() [0x428470]\n??:? void tmp43m1lrmj.__modtest() [0x4286d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ca33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b8c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430b51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430add]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b89d]\n??:? runModuleUnitTests [0x42c809]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428e18]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(index, value; iterable)\n\t{\n\t\theap[index] = value;\n\t\theap_push(heap, index);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(index; 0 .. iterable.length)\n\t{\n\t\tresult[index] = heap[0];\n\t\theap[0] = heap[$ - 1];\n\t\theap_pop(heap, $ - 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpizlzd91h.d(21): Error: `$` is valid only inside [] of index or slice\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpizlzd91h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length + 1];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\ti++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_index = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2;\n\t\t\t}\n\t\t\tif(j*2 + 1 <= heap_size && heap[j*2 + 1] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2 + 1;\n\t\t\t}\n\t\t\tif(max_index == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max_index];\n\t\t\theap[max_index] = temp;\n\t\t\tj = max_index;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpft5wi5hj.d(63): unittest failure\n----------------\n??:? _d_unittestp [0x428855]\n??:? void tmpft5wi5hj.__unittest_L59_C1() [0x428370]\n??:? void tmpft5wi5hj.__modtest() [0x4285d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d18]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\t\n\tlong heap_size = 0;\n\t\n\tforeach(long i; result)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = result[i];\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong[] sorted = new long[result.length];\n\t\n\tlong sorted_size = 0;\n\t\n\twhile(heap_size > 0)\n\t{\n\t\tsorted_size++;\n\t\tsorted[sorted_size] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\twhile(j < heap_size)\n\t\t{\n\t\t\tlong k = j;\n\t\t\tif(2*k <= heap_size && heap[2*k] > heap[k])\n\t\t\t{\n\t\t\t\tk = 2*k;\n\t\t\t}\n\t\t\tif(2*k+1 <= heap_size && heap[2*k+1] > heap[k])\n\t\t\t{\n\t\t\t\tk = 2*k+1;\n\t\t\t}\n\t\t\tif(k == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[k];\n\t\t\theap[k] = heap[j];\n\t\t\theap[j] = temp;\n\t\t\tj = k;\n\t\t}\n\t}\n\t\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp36lzpgb6.d(69): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36lzpgb6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tlong heap_size = iterable.length;\n\t\n\tfor(long i = floor(heap_size / 2); i >= 0; i--)\n\t{\n\t\theapify(heap, heap_size, i);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpe7hczyl7.d(17): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmpe7hczyl7.d(19): Error: undefined identifier `heapify`\n/tmp/tmpe7hczyl7.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe7hczyl7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong heap_size = result.length;\n\t\n\tfor(long i = floor(heap_size / 2) - 1; i >= 0; i--)\n\t{\n\t\tmax_heapify(result, heap_size, i);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theap_size--;\n\t\tmax_heapify(result, heap_size, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpn0t0hzde.d(17): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmpn0t0hzde.d(19): Error: undefined identifier `max_heapify`\n/tmp/tmpn0t0hzde.d(29): Error: undefined identifier `max_heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn0t0hzde.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap[heap_size] = i;\n\t\theap_size++;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp5c_lv9e9.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmp5c_lv9e9.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5c_lv9e9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(index, value; iterable)\n\t{\n\t\theap[index] = value;\n\t\theapify_up(heap, index);\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tforeach(index; 0 .. iterable.length)\n\t{\n\t\tsorted[index] = heap[0];\n\t\theap[0] = heap[$ - 1];\n\t\theapify_down(heap, 0, $ - 1);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpr5wem3_3.d(21): Error: `$` is valid only inside [] of index or slice\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr5wem3_3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theap_push(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\tresult[i] = heap_pop(heap);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpcb8izk5f.d(13): Error: undefined identifier `heap_push`\n/tmp/tmpcb8izk5f.d(19): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcb8izk5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\tforeach(i; 0 .. result.length)\n\t{\n\t\theap[i] = result[i];\n\t}\n\t\n\tlong[] sorted = new long[result.length];\n\t\n\tlong heap_size = heap.length;\n\t\n\tfor(long i = floor(heap_size / 2); i >= 0; i--)\n\t{\n\t\theap = max_heapify(heap, i, heap_size);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[i];\n\t\theap_size--;\n\t\theap = max_heapify(heap, 0, heap_size);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp07o7w8n6.d(25): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmp07o7w8n6.d(27): Error: undefined identifier `max_heapify`\n/tmp/tmp07o7w8n6.d(35): Error: undefined identifier `max_heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07o7w8n6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\t\n\tfor (int i = n / 2 - 1; i >= 0; i--) \n\t\theapify(iterable, n, i);\n\t\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\t\n\t\theapify(iterable, i, 0);\n\t}\n\t\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpsbxg0km7.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpsbxg0km7.d(12): Error: undefined identifier `heapify`\n/tmp/tmpsbxg0km7.d(20): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsbxg0km7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\tlong j = i;\n\t\twhile(j > 0 && heap[(j - 1) / 2] < heap[j])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[(j - 1) / 2];\n\t\t\theap[(j - 1) / 2] = temp;\n\t\t\tj = (j - 1) / 2;\n\t\t}\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1 - i];\n\t\theap[heap.length - 1 - i] = 0;\n\t\tlong j = 0;\n\t\twhile(j < heap.length - 1 - i)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\tif(left < heap.length - 1 - i && heap[left] > heap[largest])\n\t\t\t\tlargest = left;\n\t\t\tif(right < heap.length - 1 - i && heap[right] > heap[largest])\n\t\t\t\tlargest = right;\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppumwkl0j.d(56): unittest failure\n----------------\n??:? _d_unittestp [0x42891d]\n??:? void tmppumwkl0j.__unittest_L52_C1() [0x428438]\n??:? void tmppumwkl0j.__modtest() [0x42869c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c9fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b88e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430b19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430fc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430aa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b865]\n??:? runModuleUnitTests [0x42c7d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428de0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong index = heap_size;\n\t\twhile(index > 1 && heap[index] > heap[index/2])\n\t\t{\n\t\t\tlong temp = heap[index];\n\t\t\theap[index] = heap[index/2];\n\t\t\theap[index/2] = temp;\n\t\t\tindex /= 2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong index = 1;\n\t\twhile(index <= heap_size)\n\t\t{\n\t\t\tlong left_child = index*2;\n\t\t\tlong right_child = index*2 + 1;\n\t\t\tlong max_child = left_child;\n\t\t\tif(right_child <= heap_size && heap[right_child] > heap[left_child])\n\t\t\t\tmax_child = right_child;\n\t\t\tif(max_child <= heap_size && heap[max_child] > heap[index])\n\t\t\t{\n\t\t\t\tlong temp = heap[index];\n\t\t\t\theap[index] = heap[max_child];\n\t\t\t\theap[max_child] = temp;\n\t\t\t\tindex = max_child;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp586f2tf2.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x42894e]\n??:? long[] tmp586f2tf2.heap_sort(long[]) [0x427ecb]\n??:? void tmp586f2tf2.__unittest_L56_C1() [0x428325]\n??:? void tmp586f2tf2.__modtest() [0x42861c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c97b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b80e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7e5]\n??:? runModuleUnitTests [0x42c751]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap[heap_size] = i;\n\t\theap_size++;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp5c_lv9e9.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmp5c_lv9e9.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5c_lv9e9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tlong heap_size = heap.length;\n\t\n\tfor(long i = heap_size / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, heap_size, i);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\t\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpl0l6wvy6.d(19): Error: undefined identifier `heapify`\n/tmp/tmpl0l6wvy6.d(28): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl0l6wvy6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tlong[] heap = new long[iterable.length];\n\t\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = iterable[i];\n\t\t\n\t\tlong j = heap_size;\n\t\t\n\t\twhile (j > 1)\n\t\t{\n\t\t\tif (heap[j] < heap[j / 2])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[j / 2];\n\t\t\t\theap[j / 2] = temp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tj = j / 2;\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[1];\n\t\t\n\t\theap[1] = heap[heap_size];\n\t\theap[heap_size] = 0;\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\t\n\t\twhile (j < heap_size)\n\t\t{\n\t\t\tlong left = j * 2;\n\t\t\tlong right = j * 2 + 1;\n\t\t\t\n\t\t\tif (left > heap_size)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (right > heap_size)\n\t\t\t{\n\t\t\t\tif (heap[left] < heap[j])\n\t\t\t\t{\n\t\t\t\t\tlong temp = heap[left];\n\t\t\t\t\theap[left] = heap[j];\n\t\t\t\t\theap[j] = temp;\n\t\t\t\t\t\n\t\t\t\t\tj = left;\n\t\t\t\t}\n\t\t\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpm94pejbe.d(70): Error: found `unittest` instead of statement\n/tmp/tmpm94pejbe.d(78): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpm94pejbe.d(78): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpm94pejbe.d(78): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm94pejbe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong result_size = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult_size++;\n\t\tresult[result_size] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_child = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_child])\n\t\t\t\tmax_child = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max_child])\n\t\t\t\tmax_child = j*2+1;\n\t\t\tif(max_child == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max_child];\n\t\t\theap[max_child] = temp;\n\t\t\tj = max_child;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpw9u6l5wr.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288fe]\n??:? long[] tmpw9u6l5wr.heap_sort(long[]) [0x427ec5]\n??:? void tmpw9u6l5wr.__unittest_L53_C1() [0x4282d9]\n??:? void tmpw9u6l5wr.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c92b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ef8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b795]\n??:? runModuleUnitTests [0x42c701]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong n = result.length;\n\t\n\tfor (long i = n / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, n, i);\n\t}\n\t\n\tfor (long i = n - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp9bm9yaq6.d(20): Error: undefined identifier `heapify`\n/tmp/tmp9bm9yaq6.d(29): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9bm9yaq6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap_size = heap_insert(heap, heap_index, heap_size, iterable[i]);\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap_extract_min(heap, heap_index, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp2cncl_kh.d(16): Error: undefined identifier `heap_insert`\n/tmp/tmp2cncl_kh.d(21): Error: undefined identifier `heap_extract_min`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2cncl_kh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// copy the array\n\tforeach(i, v; iterable)\n\t\tresult[i] = v;\n\t\n\t// heapify\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t\theapify(result, result.length, i);\n\t\n\t// sort\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpdd4x4cj7.d(17): Error: undefined identifier `heapify`\n/tmp/tmpdd4x4cj7.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdd4x4cj7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\tlong j = i;\n\t\twhile(j > 0)\n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif(heap[j] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t}\n\t\t\tj = parent;\n\t\t}\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tlong i = 0;\n\twhile(i < iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap = heap[0..$-1];\n\t\tlong j = 0;\n\t\twhile(j < heap.length)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\tif(left < heap.length && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right < heap.length && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2spqzrds.d(68): unittest failure\n----------------\n??:? _d_unittestp [0x4288c5]\n??:? void tmp2spqzrds.__unittest_L64_C1() [0x4283e4]\n??:? void tmp2spqzrds.__modtest() [0x428648]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c9a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b836]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b80d]\n??:? runModuleUnitTests [0x42c779]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d88]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tauto n = iterable.length;\n\tauto heap = new long[n];\n\tforeach(i, e; iterable)\n\t\theap[i] = e;\n\t\n\tfor(long i = n/2; i >= 0; i--)\n\t\theapify(heap, n, i);\n\t\n\tfor(long i = n-1; i >= 0; i--)\n\t{\n\t\tswap(heap[0], heap[i]);\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpc7rm4qd2.d(15): Error: undefined identifier `heapify`\n/tmp/tmpc7rm4qd2.d(19): Error: undefined identifier `swap`, did you mean variable `heap`?\n/tmp/tmpc7rm4qd2.d(20): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7rm4qd2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tlong[] heap = new long[n];\n\tfor (int i = 0; i < n; i++)\n\t\theap[i] = iterable[i];\n\t\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(heap, n, i);\n\t\n\tfor (int i = n - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, i, 0);\n\t}\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpe8n7j78y.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpe8n7j78y.d(15): Error: undefined identifier `heapify`\n/tmp/tmpe8n7j78y.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8n7j78y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunr4nn91.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4284c5]\n??:? void tmpunr4nn91.__unittest_L18_C1() [0x427fe0]\n??:? void tmpunr4nn91.__modtest() [0x428244]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cf1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bdae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4308f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430da8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430885]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd85]\n??:? runModuleUnitTests [0x42ccf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428914]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// create a heap\n\tHeap heap = new Heap(iterable);\n\t\n\t// sort the heap\n\theap.sort();\n\t\n\t// copy the heap to the result\n\tfor (int i = 0; i < heap.length; i++)\n\t{\n\t\tresult[i] = heap[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmphve3wl9y.d(12): Error: undefined identifier `Heap`\n/tmp/tmphve3wl9y.d(12): Error: undefined identifier `Heap`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphve3wl9y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--) \n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpvbmq6gpz.d(16): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpvbmq6gpz.d(18): Error: undefined identifier `heapify`\n/tmp/tmpvbmq6gpz.d(21): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvbmq6gpz.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvbmq6gpz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] sorted = new long[heap.length];\n\tforeach(i, item; heap)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - i - 1];\n\t\theapify(heap[0 .. heap.length - i - 1], 0);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp3whrv72z.d(13): Error: undefined identifier `heapify`\n/tmp/tmp3whrv72z.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3whrv72z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong k = i;\n\t\tlong v = heap[k];\n\t\tbool heapified = false;\n\t\twhile(!heapified && (2*k+1) < iterable.length)\n\t\t{\n\t\t\tlong j = 2*k+1;\n\t\t\tif(j < (iterable.length-1))\n\t\t\t{\n\t\t\t\tif(heap[j] < heap[j+1])\n\t\t\t\t{\n\t\t\t\t\tj += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(v >= heap[j])\n\t\t\t{\n\t\t\t\theapified = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\theap[k] = heap[j];\n\t\t\t\tk = j;\n\t\t\t}\n\t\t}\n\t\theap[k] = v;\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[iterable.length-i-1];\n\t\t\n\t\tlong k = 0;\n\t\tlong v = heap[k];\n\t\tbool heapified = false;\n\t\twhile(!heapified && (2*k+1) < iterable.length-i-1)\n\t\t{\n\t\t\tlong j = 2*k+1;\n\t\t\tif(j < (iterable.length-i-1))\n\t\t\t{\n\t\t\t\tif(heap[j] < heap[j+1])\n\t\t\t\t{\n\t\t\t\t\tj += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp555hzwhr.d(64): Error: expression expected, not `unittest`\n/tmp/tmp555hzwhr.d(65): Error: found `{` when expecting `)`\n/tmp/tmp555hzwhr.d(72): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp555hzwhr.d(72): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp555hzwhr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] sorted = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap.length -= 1;\n\t\theapify(heap, 0);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp95wzd9t2.d(13): Error: undefined identifier `heapify`\n/tmp/tmp95wzd9t2.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95wzd9t2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// create a heap from the iterable\n\tHeap heap = new Heap(iterable);\n\t\n\t// sort the heap\n\theap.sort();\n\t\n\t// copy the sorted heap into the result\n\tfor (int i = 0; i < result.length; i++)\n\t\tresult[i] = heap.pop();\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpzb8r9fsh.d(12): Error: undefined identifier `Heap`\n/tmp/tmpzb8r9fsh.d(12): Error: undefined identifier `Heap`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzb8r9fsh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// create a heap\n\tlong[] heap = new long[iterable.length + 1];\n\theap[0] = 0;\n\t\n\t// insert elements into the heap\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\theap[i + 1] = iterable[i];\n\t\theap[0]++;\n\t\t\n\t\t// bubble up\n\t\tint j = heap[0];\n\t\twhile (j > 1) \n\t\t{\n\t\t\tif (heap[j] < heap[j / 2]) \n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[j / 2];\n\t\t\t\theap[j / 2] = temp;\n\t\t\t\tj = j / 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// extract elements from the heap\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap[1];\n\t\t\n\t\t// bubble down\n\t\theap[1] = heap[heap[0]];\n\t\theap[0]--;\n\t\t\n\t\tint j = 1;\n\t\twhile (j <= heap[0] / 2) \n\t\t{\n\t\t\tint k = j * 2;\n\t\t\tif (k + 1 <= heap[0] && heap[k + 1] < heap[k]) \n\t\t\t{\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\tif (heap[k] < heap[j]) \n\t\t\t{\n\t\t\t\tlong temp = heap[k];\n\t\t\t\theap[k] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tj = k;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpo4s21u1l.d(67): Error: found `unittest` instead of statement\n/tmp/tmpo4s21u1l.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpo4s21u1l.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpo4s21u1l.d(75): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4s21u1l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor(long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpp7vyec4w.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpp7vyec4w.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7vyec4w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\tforeach(long i; 0..result.length)\n\t{\n\t\tlong parent = (i - 1) / 2;\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\t\n\t\tif(left < result.length && result[left] > result[i])\n\t\t{\n\t\t\tlong temp = result[i];\n\t\t\tresult[i] = result[left];\n\t\t\tresult[left] = temp;\n\t\t}\n\t\t\n\t\tif(right < result.length && result[right] > result[i])\n\t\t{\n\t\t\tlong temp = result[i];\n\t\t\tresult[i] = result[right];\n\t\t\tresult[right] = temp;\n\t\t}\n\t\t\n\t\tif(parent >= 0 && result[parent] < result[i])\n\t\t{\n\t\t\tlong temp = result[i];\n\t\t\tresult[i] = result[parent];\n\t\t\tresult[parent] = temp;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmgr5aa7s.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x42884d]\n??:? void tmpmgr5aa7s.__unittest_L46_C1() [0x428368]\n??:? void tmpmgr5aa7s.__modtest() [0x4285cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4311a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c181]\n??:? runModuleUnitTests [0x42d0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d10]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong n = result.length;\n\t\n\tfor(long i = n/2-1; i >= 0; i--)\n\t{\n\t\theapify(result, n, i);\n\t}\n\t\n\tfor(long i = n-1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpxsfb_42t.d(20): Error: undefined identifier `heapify`\n/tmp/tmpxsfb_42t.d(29): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxsfb_42t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length + 1];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max])\n\t\t\t\tmax = j*2;\n\t\t\tif(j*2 + 1 <= heap_size && heap[j*2 + 1] > heap[max])\n\t\t\t\tmax = j*2 + 1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpflctko1l.d(56): unittest failure\n----------------\n??:? _d_unittestp [0x428855]\n??:? void tmpflctko1l.__unittest_L52_C1() [0x428374]\n??:? void tmpflctko1l.__modtest() [0x4285d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d18]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max])\n\t\t\t\tmax = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max])\n\t\t\t\tmax = j*2+1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdtpjio1l.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428906]\n??:? long[] tmpdtpjio1l.heap_sort(long[]) [0x427ec5]\n??:? void tmpdtpjio1l.__unittest_L53_C1() [0x4282dd]\n??:? void tmpdtpjio1l.__modtest() [0x4285d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tauto heap = new Heap!(long)(iterable);\n\treturn heap.sort();\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmplwuoaftc.d(9): Error: template instance `Heap!long` template `Heap` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwuoaftc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj /= 2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\twhile(2*j <= heap_size)\n\t\t{\n\t\t\tlong k = 2*j;\n\t\t\tif(k < heap_size && heap[k] < heap[k+1])\n\t\t\t\tk++;\n\t\t\tif(heap[j] >= heap[k])\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[k];\n\t\t\theap[k] = temp;\n\t\t\tj = k;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwlyabdob.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428916]\n??:? long[] tmpwlyabdob.heap_sort(long[]) [0x427ec5]\n??:? void tmpwlyabdob.__unittest_L52_C1() [0x4282f1]\n??:? void tmpwlyabdob.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c943]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7ad]\n??:? runModuleUnitTests [0x42c719]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tfor (int j = 0; j < iterable.length; j++)\n\t\t{\n\t\t\tif (heap[i] < heap[j])\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj /= 2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_index = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_index])\n\t\t\t\tmax_index = j*2;\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max_index])\n\t\t\t\tmax_index = j*2+1;\n\t\t\tif(max_index == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max_index];\n\t\t\theap[max_index] = temp;\n\t\t\tj = max_index;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpsx4vd3qv.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428936]\n??:? long[] tmpsx4vd3qv.heap_sort(long[]) [0x427ec5]\n??:? void tmpsx4vd3qv.__unittest_L54_C1() [0x428311]\n??:? void tmpsx4vd3qv.__modtest() [0x428608]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c963]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7cd]\n??:? runModuleUnitTests [0x42c739]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\ti++;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size/2)\n\t\t{\n\t\t\tlong k = 2*j;\n\t\t\tif(k < heap_size && heap[k] < heap[k+1])\n\t\t\t\tk++;\n\t\t\tif(heap[j] > heap[k])\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[k];\n\t\t\theap[k] = temp;\n\t\t\tj = k;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpiuyzvji1.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288e6]\n??:? long[] tmpiuyzvji1.heap_sort(long[]) [0x427ec5]\n??:? void tmpiuyzvji1.__unittest_L50_C1() [0x4282bd]\n??:? void tmpiuyzvji1.__modtest() [0x4285b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c913]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ee0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309bd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b77d]\n??:? runModuleUnitTests [0x42c6e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\t\n\t\tif(i > 0)\n\t\t{\n\t\t\tlong parent = (i - 1) / 2;\n\t\t\t\n\t\t\twhile(heap[i] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\t\n\t\t\t\ti = parent;\n\t\t\t\tparent = (i - 1) / 2;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong index = 0;\n\t\n\twhile(index < iterable.length)\n\t{\n\t\tresult[index] = heap[0];\n\t\t\n\t\theap[0] = heap[iterable.length - index - 1];\n\t\t\n\t\tlong i = 0;\n\t\tlong left = 1;\n\t\tlong right = 2;\n\t\t\n\t\twhile(left < iterable.length - index)\n\t\t{\n\t\t\tif(right < iterable.length - index)\n\t\t\t{\n\t\t\t\tif(heap[i] < heap[left] || heap[i] < heap[right])\n\t\t\t\t{\n\t\t\t\t\tif(heap[left] > heap[right])\n\t\t\t\t\t{\n\t\t\t\t\t\tlong temp = heap[i];\n\t\t\t\t\t\theap[i] = heap[left];\n\t\t\t\t\t\theap[left] = temp;\n\t\t\t\t\t\t\n\t\t\t\t\t\ti = left;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlong temp = heap[i];\n\t\t\t\t\t\theap[i] = heap[right];\n\t\t\t\t\t\theap[right] = temp;\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmphx5ize4_.d(63): Error: found `unittest` instead of statement\n/tmp/tmphx5ize4_.d(71): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmphx5ize4_.d(71): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmphx5ize4_.d(71): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmphx5ize4_.d(71): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmphx5ize4_.d(71): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphx5ize4_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint size = iterable.length;\n\tfor (int i = size / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(iterable, size, i);\n\t}\n\tfor (int i = size - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpmn13u40u.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpmn13u40u.d(12): Error: undefined identifier `heapify`\n/tmp/tmpmn13u40u.d(19): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmn13u40u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong size = result.length;\n\t\n\tfor(long i = size / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, size, i);\n\t}\n\t\n\tfor(long i = size - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp020fy2de.d(19): Error: undefined identifier `heapify`\n/tmp/tmp020fy2de.d(28): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp020fy2de.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpiswcq5yk.d(16): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(18): Error: undefined identifier `heapify`\n/tmp/tmpiswcq5yk.d(21): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpiswcq5yk.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiswcq5yk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\tlong heap_size = 0;\n\t\n\tforeach(i, item; result)\n\t{\n\t\theap[heap_size] = item;\n\t\theap_size++;\n\t\t\n\t\tlong j = heap_size - 1;\n\t\twhile(j > 0)\n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif(heap[parent] < heap[j])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\t\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i, item; result)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\t\n\t\tlong j = 0;\n\t\twhile(j < heap_size)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\t\n\t\t\tlong largest = j;\n\t\t\tif(left < heap_size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right < heap_size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\t\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[largest];\n\t\t\t\theap[largest] = heap[j];\n\t\t\t\theap[\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpbxgy0p1k.d(69): Error: expression expected, not `unittest`\n/tmp/tmpbxgy0p1k.d(70): Error: found `{` when expecting `,`\n/tmp/tmpbxgy0p1k.d(71): Error: expression expected, not `alias`\n/tmp/tmpbxgy0p1k.d(71): Error: found `candidate` when expecting `,`\n/tmp/tmpbxgy0p1k.d(71): Error: expression expected, not `=`\n/tmp/tmpbxgy0p1k.d(71): Error: found `heap_sort` when expecting `,`\n/tmp/tmpbxgy0p1k.d(71): Error: expression expected, not `;`\n/tmp/tmpbxgy0p1k.d(73): Error: found `assert` when expecting `,`\n/tmp/tmpbxgy0p1k.d(73): Error: found `;` when expecting `,`\n/tmp/tmpbxgy0p1k.d(74): Error: found `;` when expecting `,`\n/tmp/tmpbxgy0p1k.d(75): Error: found `;` when expecting `,`\n/tmp/tmpbxgy0p1k.d(76): Error: expression expected, not `}`\n/tmp/tmpbxgy0p1k.d(77): Error: found `void` when expecting `,`\n/tmp/tmpbxgy0p1k.d(77): Error: found `{` when expecting `,`\n/tmp/tmpbxgy0p1k.d(77): Error: expression expected, not `}`\n/tmp/tmpbxgy0p1k.d(77): Error: found `End of File` when expecting `,`\n/tmp/tmpbxgy0p1k.d(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tfor (long i = 0; i < iterable.length; i++) \n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (long i = 0; i < heap.length; i++) \n\t{\n\t\tlong j = i;\n\t\twhile (j > 0) \n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif (heap[parent] < heap[j]) \n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t}\n\t\t\tj = parent;\n\t\t}\n\t}\n\t\n\tfor (long i = heap.length - 1; i >= 0; i--) \n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\t\n\t\tlong j = 0;\n\t\twhile (true) \n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\tif (left < i && heap[left] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif (right < i && heap[right] > heap[largest]) \n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif (largest != j) \n\t\t\t{\n\t\t\t\tlong temp2 = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp2;\n\t\t\t\tj = largest;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\tlong temp_index_2 = 0;\n\tlong temp_index_3 = 0;\n\tlong temp_index_4 = 0;\n\tlong temp_index_5 = 0;\n\tlong temp_index_6 = 0;\n\tlong temp_index_7 = 0;\n\tlong temp_index_8 = 0;\n\tlong temp_index_9 = 0;\n\tlong temp_index_10 = 0;\n\tlong temp_index_11 = 0;\n\tlong temp_index_12 = 0;\n\tlong temp_index_13 = 0;\n\tlong temp_index_14 = 0;\n\tlong temp_index_15 = 0;\n\tlong temp_index_16 = 0;\n\tlong temp_index_17 = 0;\n\tlong temp_index_18 = 0;\n\tlong temp_index_19 = 0;\n\tlong temp_index_20 = 0;\n\tlong temp_index_21 = 0;\n\tlong temp_index_22 = 0;\n\tlong temp_index_23 = 0;\n\tlong temp_index_24 = 0;\n\tlong temp_index_25 = 0;\n\tlong temp_index_26 = 0;\n\tlong temp_index_27 = 0;\n\tlong temp_index_28 = 0;\n\tlong temp_index_29 = 0;\n\tlong temp_index_30 = 0;\n\tlong temp_index_31 = 0;\n\tlong temp_index_32 = 0;\n\tlong temp_index_33 = 0;\n\tlong temp_index_34 = 0;\n\tlong temp_index_35 = 0;\n\tlong temp_index_36 = 0;\n\tlong temp_index_37 = 0;\n\tlong temp_index_38 = 0;\n\tlong temp_index_39 = 0;\n\tlong temp_index_40 =\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpdiv7h2rn.d(56): Error: expression expected, not `unittest`\n/tmp/tmpdiv7h2rn.d(57): Error: semicolon expected, not `{`\n/tmp/tmpdiv7h2rn.d(64): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdiv7h2rn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// copy the array\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\t// build the heap\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\t// extract the elements\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\t// swap the root with the last element\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\t// heapify the root element\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpuirijugc.d(18): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpuirijugc.d(20): Error: undefined identifier `heapify`\n/tmp/tmpuirijugc.d(24): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpuirijugc.d(32): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuirijugc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(long i; 0..iterable.length)\n\t\theap[i] = iterable[i];\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong j = i;\n\t\twhile(j > 0)\n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif(heap[j] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[iterable.length - i - 1];\n\t\theap[iterable.length - i - 1] = temp;\n\t\t\n\t\tlong j = 0;\n\t\twhile(true)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\tif(left < iterable.length - i && heap[left] > heap[largest])\n\t\t\t\tlargest = left;\n\t\t\tif(right < iterable.length - i && heap[right] > heap[largest])\n\t\t\t\tlargest = right;\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp_k0rh18z.d(49): Error: variable `temp` is shadowing variable `tmp_k0rh18z.heap_sort.temp`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_k0rh18z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t\tresult[i] = iterable[i];\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t\theapify(result, result.length, i);\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpta8pbnhc.d(13): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpta8pbnhc.d(14): Error: undefined identifier `heapify`\n/tmp/tmpta8pbnhc.d(16): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpta8pbnhc.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpta8pbnhc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// copy the array\n\tforeach(i, item; iterable)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\t// build the heap\n\tfor(long i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\t// extract the elements from the heap\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\t// swap the root with the last element\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\t// heapify the root element\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpqyoqgnmu.d(20): Error: undefined identifier `heapify`\n/tmp/tmpqyoqgnmu.d(32): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqyoqgnmu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; heap)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[$ - 1];\n\t\theap[$ - 1] = 0;\n\t\theapify(heap, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpih22lb6r.d(13): Error: undefined identifier `heapify`\n/tmp/tmpih22lb6r.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpih22lb6r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpb6kfcdfn.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpb6kfcdfn.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb6kfcdfn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_pop(heap);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpljg7q6ym.d(19): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljg7q6ym.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// make a heap\n\tlong[] heap = new long[iterable.length + 1];\n\theap[0] = 0;\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i + 1] = iterable[i];\n\t\tlong j = i + 1;\n\t\twhile (j > 1)\n\t\t{\n\t\t\tlong parent = j / 2;\n\t\t\tif (heap[parent] < heap[j])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// sort\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap[0]];\n\t\theap[0]--;\n\t\tlong j = 1;\n\t\twhile (j < heap[0])\n\t\t{\n\t\t\tlong left = j * 2;\n\t\t\tlong right = j * 2 + 1;\n\t\t\tif (left > heap[0])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (right > heap[0])\n\t\t\t{\n\t\t\t\tif (heap[j] < heap[left])\n\t\t\t\t{\n\t\t\t\t\tlong temp = heap[j];\n\t\t\t\t\theap[j] = heap[left];\n\t\t\t\t\theap[left] = temp;\n\t\t\t\t\tj = left;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmpf6p8zp6u.d(67): Error: found `unittest` instead of statement\n/tmp/tmpf6p8zp6u.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpf6p8zp6u.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpf6p8zp6u.d(75): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf6p8zp6u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\ti++;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_index = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2;\n\t\t\t}\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2+1;\n\t\t\t}\n\t\t\tif(max_index == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max_index];\n\t\t\theap[max_index] = temp;\n\t\t\tj = max_index;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnrhytmir.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288fe]\n??:? long[] tmpnrhytmir.heap_sort(long[]) [0x427ec5]\n??:? void tmpnrhytmir.__unittest_L58_C1() [0x4282d9]\n??:? void tmpnrhytmir.__modtest() [0x4285d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c92b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ef8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b795]\n??:? runModuleUnitTests [0x42c701]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tforeach(long item; result)\n\t{\n\t\titem = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpntdzwsht.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmpntdzwsht.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpntdzwsht.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i,v; iterable)\n\t{\n\t\theap[i] = v;\n\t}\n\t\n\tfor(long i = (heap.length / 2) - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, heap.length, i);\n\t}\n\t\n\tfor(long i = heap.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, i, 0);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmph5aqw733.d(17): Error: undefined identifier `heapify`\n/tmp/tmph5aqw733.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5aqw733.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, v; iterable)\n\t{\n\t\theap[i] = v;\n\t}\n\t\n\t// build heap\n\tfor(long i = floor(heap.length / 2); i >= 0; i--)\n\t{\n\t\theapify(heap, i, heap.length);\n\t}\n\t\n\t// sort\n\tfor(long i = heap.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, 0, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp1sr6o5i9.d(16): Error: `std.math.floor` called with argument types `(ulong)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmp1sr6o5i9.d(18): Error: undefined identifier `heapify`\n/tmp/tmp1sr6o5i9.d(27): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1sr6o5i9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j / 2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j / 2];\n\t\t\theap[j / 2] = temp;\n\t\t\tj /= 2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j * 2 <= heap_size && heap[j * 2] > heap[max])\n\t\t\t\tmax = j * 2;\n\t\t\tif(j * 2 + 1 <= heap_size && heap[j * 2 + 1] > heap[max])\n\t\t\t\tmax = j * 2 + 1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7725e1br.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428936]\n??:? long[] tmp7725e1br.heap_sort(long[]) [0x427ec5]\n??:? void tmp7725e1br.__unittest_L52_C1() [0x428311]\n??:? void tmp7725e1br.__modtest() [0x428608]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c963]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430a0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7cd]\n??:? runModuleUnitTests [0x42c739]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1)\n\t\t{\n\t\t\tlong parent = j / 2;\n\t\t\tif(heap[parent] < heap[j])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong left = j * 2;\n\t\t\tlong right = j * 2 + 1;\n\t\t\tlong largest = j;\n\t\t\tif(left <= heap_size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right <= heap_size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[largest];\n\t\t\t\theap[largest] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti++;\n\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmppvkrkwtw.d(69): Error: found `unittest` instead of statement\n/tmp/tmppvkrkwtw.d(77): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvkrkwtw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap[heap_size] = item;\n\t\theap_size++;\n\t\t\n\t\tint i = heap_size - 1;\n\t\twhile(i > 0)\n\t\t{\n\t\t\tint parent = (i - 1) / 2;\n\t\t\tif(heap[i] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\ti = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] result = new long[heap_size];\n\tint result_size = 0;\n\t\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_size] = heap[0];\n\t\tresult_size++;\n\t\t\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\t\n\t\tint i = 0;\n\t\twhile(i < heap_size)\n\t\t{\n\t\t\tint left = 2 * i + 1;\n\t\t\tint right = 2 * i + 2;\n\t\t\t\n\t\t\tif(left >= heap_size)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint max = i;\n\t\t\tif(heap[left] > heap[max])\n\t\t\t{\n\t\t\t\tmax = left;\n\t\t\t}\n\t\t\tif(right < heap_size && heap[right] > heap[max])\n\t\t\t{\n\t\t\t\tmax = right;\n\t\t\t}\n\t\t\t\n\t\t\tif(max != i)\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\the\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp93uxerjj.d(71): Error: found `unittest` when expecting `;` following statement\n/tmp/tmp93uxerjj.d(79): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp93uxerjj.d(79): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp93uxerjj.d(79): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp93uxerjj.d(79): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp93uxerjj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(iterable, n, i);\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpsbkroeuq.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpsbkroeuq.d(11): Error: undefined identifier `heapify`\n/tmp/tmpsbkroeuq.d(17): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsbkroeuq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(iterable, n, i);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpefs426t3.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpefs426t3.d(12): Error: undefined identifier `heapify`\n/tmp/tmpefs426t3.d(19): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpefs426t3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\t\n\tfor (i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t\theap_index[i] = i;\n\t\theap_size++;\n\t\t\n\t\tj = i;\n\t\twhile (j > 0)\n\t\t{\n\t\t\tif (heap[j] < heap[(j - 1) / 2])\n\t\t\t{\n\t\t\t\ttemp = heap[j];\n\t\t\t\ttemp_index = heap_index[j];\n\t\t\t\theap[j] = heap[(j - 1) / 2];\n\t\t\t\theap_index[j] = heap_index[(j - 1) / 2];\n\t\t\t\theap[(j - 1) / 2] = temp;\n\t\t\t\theap_index[(j - 1) / 2] = temp_index;\n\t\t\t\tj = (j - 1) / 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_index[0] = heap_index[heap_size - 1];\n\t\theap_size--;\n\t\t\n\t\tj = 0;\n\t\twhile (j < heap_size)\n\t\t{\n\t\t\tif (j * 2 + 1 >= heap_size)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (j * 2 + 2 >= heap_size\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp4og20s59.d(59): Error: found `unittest` when expecting `)`\n/tmp/tmp4og20s59.d(67): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp4og20s59.d(67): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp4og20s59.d(67): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4og20s59.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, item);\n\t}\n\t\n\tint i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp2b8qp8il.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmp2b8qp8il.d(21): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2b8qp8il.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\theap[heap_size] = iterable[i];\n\t\theap_size++;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpka6l1qch.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmpka6l1qch.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpka6l1qch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong child = heap_size;\n\t\tlong parent = child / 2;\n\t\twhile(parent > 0 && heap[parent] < heap[child])\n\t\t{\n\t\t\tlong temp = heap[parent];\n\t\t\theap[parent] = heap[child];\n\t\t\theap[child] = temp;\n\t\t\tchild = parent;\n\t\t\tparent = child / 2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong parent = 1;\n\t\tlong child = parent * 2;\n\t\twhile(child <= heap_size)\n\t\t{\n\t\t\tif(child < heap_size && heap[child] < heap[child + 1])\n\t\t\t{\n\t\t\t\tchild++;\n\t\t\t}\n\t\t\tif(heap[parent] < heap[child])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[child];\n\t\t\t\theap[child] = temp;\n\t\t\t\tparent = child;\n\t\t\t\tchild = parent * 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpkxtauclh.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288e6]\n??:? long[] tmpkxtauclh.heap_sort(long[]) [0x427ec5]\n??:? void tmpkxtauclh.__unittest_L60_C1() [0x4282c1]\n??:? void tmpkxtauclh.__modtest() [0x4285b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c913]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ee0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309bd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b77d]\n??:? runModuleUnitTests [0x42c6e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = (result.length - 1) / 2; i >= 0; i--) \n\t{\n\t\theapify(result, i, result.length);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--) \n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theapify(result, 0, i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp9022dfd8.d(15): Error: cannot implicitly convert expression `(result.length - 1LU) / 2LU` of type `ulong` to `int`\n/tmp/tmp9022dfd8.d(17): Error: undefined identifier `heapify`\n/tmp/tmp9022dfd8.d(20): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmp9022dfd8.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9022dfd8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, item);\n\t}\n\t\n\tforeach(ref long item; result)\n\t{\n\t\titem = heap_extract(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmphn45v_qx.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmphn45v_qx.d(20): Error: undefined identifier `heap_extract`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphn45v_qx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theap_push(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap_pop(heap, heap.length - 1);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpbf2sc7mz.d(13): Error: undefined identifier `heap_push`\n/tmp/tmpbf2sc7mz.d(21): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbf2sc7mz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\t\n\tlong heap_size = 0;\n\t\n\tforeach(long i; result)\n\t{\n\t\theap_size = heap_size + 1;\n\t\theap[heap_size] = result[i];\n\t\t\n\t\tlong current_index = heap_size;\n\t\t\n\t\twhile(current_index > 1)\n\t\t{\n\t\t\tlong parent_index = current_index / 2;\n\t\t\t\n\t\t\tif(heap[parent_index] < heap[current_index])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent_index];\n\t\t\t\theap[parent_index] = heap[current_index];\n\t\t\t\theap[current_index] = temp;\n\t\t\t\t\n\t\t\t\tcurrent_index = parent_index;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] sorted_array = new long[result.length];\n\t\n\tlong sorted_array_index = 0;\n\t\n\twhile(heap_size > 0)\n\t{\n\t\tsorted_array[sorted_array_index] = heap[1];\n\t\t\n\t\theap[1] = heap[heap_size];\n\t\t\n\t\theap_size = heap_size - 1;\n\t\t\n\t\tlong current_index = 1;\n\t\t\n\t\twhile(current_index <= heap_size)\n\t\t{\n\t\t\tlong left_child_index = current_index * 2;\n\t\t\tlong right_child_index = current_index * 2 + 1;\n\t\t\t\n\t\t\tlong max_index = current_index;\n\t\t\t\n\t\t\tif(left_child_index <= heap_size && heap[left_child_index]\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp1kos_q2_.d(68): Error: found `unittest` when expecting `)`\n/tmp/tmp1kos_q2_.d(76): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp1kos_q2_.d(76): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp1kos_q2_.d(76): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1kos_q2_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap = heap[0..$-1];\n\t\theap = heapify(heap, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp5onc8uqe.d(22): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5onc8uqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, item);\n\t}\n\t\n\tforeach(long item; iterable)\n\t{\n\t\tresult[item] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpfkg01pq3.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpfkg01pq3.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkg01pq3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tlong index = i;\n\t\tlong parent = (index - 1) / 2;\n\t\twhile(index > 0 && heap[index] > heap[parent])\n\t\t{\n\t\t\tlong temp = heap[index];\n\t\t\theap[index] = heap[parent];\n\t\t\theap[parent] = temp;\n\t\t\tindex = parent;\n\t\t\tparent = (index - 1) / 2;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[iterable.length - 1 - i];\n\t\tlong index = 0;\n\t\tlong left = 1;\n\t\tlong right = 2;\n\t\twhile(left < iterable.length - i && (heap[index] < heap[left] || heap[index] < heap[right]))\n\t\t{\n\t\t\tif(right < iterable.length - i && heap[left] < heap[right])\n\t\t\t{\n\t\t\t\tlong temp = heap[index];\n\t\t\t\theap[index] = heap[right];\n\t\t\t\theap[right] = temp;\n\t\t\t\tindex = right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlong temp = heap[index];\n\t\t\t\theap[index] = heap[left];\n\t\t\t\theap[left] = temp;\n\t\t\t\tindex = left;\n\t\t\t}\n\t\t\tleft = 2 * index + 1;\n\t\t\tright = 2 * index + 2;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptxrm8q4t.d(65): unittest failure\n----------------\n??:? _d_unittestp [0x428a0d]\n??:? void tmptxrm8q4t.__unittest_L61_C1() [0x42852c]\n??:? void tmptxrm8q4t.__modtest() [0x428790]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42caeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4310b8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430b95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b955]\n??:? runModuleUnitTests [0x42c8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ed0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] arr = iterable.dup;\n\tint n = arr.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(arr, n, i);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = arr[0];\n\t\tarr[0] = arr[i];\n\t\tarr[i] = temp;\n\t\theapify(arr, i, 0);\n\t}\n\treturn arr;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpi6s0v73t.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\n/tmp/tmpi6s0v73t.d(13): Error: undefined identifier `heapify`\n/tmp/tmpi6s0v73t.d(20): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi6s0v73t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap[size] = item;\n\t\tsize++;\n\t\t\n\t\tlong i = size - 1;\n\t\twhile(i > 0)\n\t\t{\n\t\t\tlong parent = (i - 1) / 2;\n\t\t\tif(heap[i] > heap[parent])\n\t\t\t{\n\t\t\t\tlong temp = heap[i];\n\t\t\t\theap[i] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\ti = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(size > 0)\n\t{\n\t\tresult[i] = heap[0];\n\t\ti++;\n\t\t\n\t\theap[0] = heap[size - 1];\n\t\tsize--;\n\t\t\n\t\tlong j = 0;\n\t\twhile(j < size)\n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong largest = j;\n\t\t\t\n\t\t\tif(left < size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\t\n\t\t\tif(right < size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\t\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpqxp0632j.d(73): Error: found `unittest` instead of statement\n/tmp/tmpqxp0632j.d(81): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqxp0632j.d(81): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqxp0632j.d(81): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxp0632j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti = i / 2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max = j;\n\t\t\tif(j * 2 <= heap_size && heap[j * 2] > heap[max])\n\t\t\t\tmax = j * 2;\n\t\t\tif(j * 2 + 1 <= heap_size && heap[j * 2 + 1] > heap[max])\n\t\t\t\tmax = j * 2 + 1;\n\t\t\tif(max == j)\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[max];\n\t\t\theap[max] = temp;\n\t\t\tj = max;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp5n5mg8oa.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x428906]\n??:? long[] tmp5n5mg8oa.heap_sort(long[]) [0x427ec5]\n??:? void tmp5n5mg8oa.__unittest_L53_C1() [0x4282dd]\n??:? void tmp5n5mg8oa.__modtest() [0x4285d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c933]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b79d]\n??:? runModuleUnitTests [0x42c709]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, v; iterable)\n\t{\n\t\theap[i] = v;\n\t}\n\t\n\tfor(long i = heap.length / 2; i >= 0; i--)\n\t{\n\t\theap = heapify(heap, i);\n\t}\n\t\n\tfor(long i = heap.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theap = heapify(heap, 0, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmppjljqa14.d(17): Error: undefined identifier `heapify`\n/tmp/tmppjljqa14.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppjljqa14.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tauto heap = new Heap(iterable);\n\treturn heap.sort();\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmp5yukhm5t.d(9): Error: undefined identifier `Heap`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5yukhm5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tfor (i = 0; i < iterable.length; i++) \n\t{\n\t\theap_size = heap_size + 1;\n\t\theap[heap_size - 1] = iterable[i];\n\t\theap_index[heap_size - 1] = i;\n\t\tlong j = heap_size - 1;\n\t\twhile (j > 0) \n\t\t{\n\t\t\tlong parent = floor((j - 1) / 2);\n\t\t\tif (heap[j] < heap[parent]) \n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[parent];\n\t\t\t\theap[parent] = temp;\n\t\t\t\tlong temp_index = heap_index[j];\n\t\t\t\theap_index[j] = heap_index[parent];\n\t\t\t\theap_index[parent] = temp_index;\n\t\t\t\tj = parent;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = 0; i < iterable.length; i++) \n\t{\n\t\tresult[i] = heap[0];\n\t\theap_index[0] = heap_index[0] + 1;\n\t\theap[0] = iterable[heap_index[0]];\n\t\tlong j = 0;\n\t\twhile (j < heap_size) \n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong smallest = j;\n\t\t\tif (left < heap_size && heap[left] < heap[smallest]) \n\t\t\t{\n\t\t\t\tsmallest = left;\n\t\t\t}\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpy0x_kiam.d(55): Error: found `unittest` instead of statement\n/tmp/tmpy0x_kiam.d(63): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpy0x_kiam.d(63): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy0x_kiam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n    long[] result = new long[iterable.length];\n    long[] heap = new long[iterable.length];\n    int heap_size = 0;\n    foreach (i; 0 .. iterable.length) \n    {\n        heap_size = heap_insert(heap, heap_size, iterable[i]);\n    }\n    foreach (i; 0 .. iterable.length) \n    {\n        result[i] = heap_extract(heap, heap_size);\n        heap_size--;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmptvlwy6kl.d(14): Error: undefined identifier `heap_insert`\n/tmp/tmptvlwy6kl.d(18): Error: undefined identifier `heap_extract`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvlwy6kl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length + 1];\n\tlong heap_size = 0;\n\t\n\tvoid heap_insert(long value)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = value;\n\t\t\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i / 2])\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[i / 2];\n\t\t\theap[i / 2] = temp;\n\t\t\ti /= 2;\n\t\t}\n\t}\n\t\n\tlong heap_pop()\n\t{\n\t\tlong result = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tlong i = 1;\n\t\twhile(i < heap_size)\n\t\t{\n\t\t\tlong left = 2 * i;\n\t\t\tlong right = 2 * i + 1;\n\t\t\tlong largest = i;\n\t\t\t\n\t\t\tif(left <= heap_size && heap[left] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\t\n\t\t\tif(right <= heap_size && heap[right] > heap[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\t\n\t\t\tif(largest == i)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[largest];\n\t\t\theap[largest] = temp;\n\t\t\t\n\t\t\ti = largest;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\tforeach(i; result)\n\t{\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpa7qpa7r1.d(74): Error: found `unittest` instead of statement\n/tmp/tmpa7qpa7r1.d(82): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7qpa7r1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// copy the array\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\t// build the heap\n\tfor (int i = 0; i < result.length; i++)\n\t{\n\t\tint j = i;\n\t\twhile (j > 0)\n\t\t{\n\t\t\tint parent = (j - 1) / 2;\n\t\t\tif (result[j] > result[parent])\n\t\t\t{\n\t\t\t\tlong temp = result[j];\n\t\t\t\tresult[j] = result[parent];\n\t\t\t\tresult[parent] = temp;\n\t\t\t\tj = parent;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// sort the heap\n\tfor (int i = result.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\tint j = 0;\n\t\twhile (j < i)\n\t\t{\n\t\t\tint left = 2 * j + 1;\n\t\t\tint right = 2 * j + 2;\n\t\t\tint largest = j;\n\t\t\tif (left < i && result[left] > result[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif (right < i && result[right] > result[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif (largest != j)\n\t\t\t{\n\t\t\t\tlong temp2 = result[j];\n\t\t\t\tresult[j] = result[largest];\n\t\t\t\tresult[largest] = temp2;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpqujav3wj.d(70): Error: found `unittest` instead of statement\n/tmp/tmpqujav3wj.d(78): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqujav3wj.d(78): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpqujav3wj.d(78): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqujav3wj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, value; iterable)\n\t{\n\t\theap[i] = value;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap.length - i - 1];\n\t\theapify(heap, 0, heap.length - i - 1);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpc3mv01zj.d(13): Error: undefined identifier `heapify`\n/tmp/tmpc3mv01zj.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3mv01zj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor(int i = 0; i < result.length; i++)\n\t{\n\t\tint j = i;\n\t\twhile(j > 0)\n\t\t{\n\t\t\tint p = (j - 1) / 2;\n\t\t\tif(result[j] > result[p])\n\t\t\t{\n\t\t\t\tlong temp = result[j];\n\t\t\t\tresult[j] = result[p];\n\t\t\t\tresult[p] = temp;\n\t\t\t}\n\t\t\tj = p;\n\t\t}\n\t}\n\t\n\tfor(int i = result.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\tint j = 0;\n\t\twhile(true)\n\t\t{\n\t\t\tint left = 2 * j + 1;\n\t\t\tint right = 2 * j + 2;\n\t\t\tint largest = j;\n\t\t\tif(left < i && result[left] > result[largest])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\tif(right < i && result[right] > result[largest])\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\tif(largest != j)\n\t\t\t{\n\t\t\t\tlong temp2 = result[j];\n\t\t\t\tresult[j] = result[largest];\n\t\t\t\tresult[largest] = temp2;\n\t\t\t\tj = largest;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmporc28sg0.d(32): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmporc28sg0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = result.length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, result.length, i);\n\t}\n\t\n\tfor (int i = result.length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1665517227,
      "stdout": "",
      "stderr": "/tmp/tmpdch5qr2h.d(15): Error: cannot implicitly convert expression `result.length / 2LU - 1LU` of type `ulong` to `int`\n/tmp/tmpdch5qr2h.d(17): Error: undefined identifier `heapify`\n/tmp/tmpdch5qr2h.d(20): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpdch5qr2h.d(26): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdch5qr2h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tlong index = i;\n\t\tlong parent = (index - 1) / 2;\n\t\t\n\t\twhile(heap[index] > heap[parent])\n\t\t{\n\t\t\tlong temp = heap[index];\n\t\t\theap[index] = heap[parent];\n\t\t\theap[parent] = temp;\n\t\t\t\n\t\t\tindex = parent;\n\t\t\tparent = (index - 1) / 2;\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[iterable.length - i - 1];\n\t\theap[iterable.length - i - 1] = 0;\n\t\t\n\t\tlong index = 0;\n\t\tlong left = 1;\n\t\tlong right = 2;\n\t\tlong largest = 0;\n\t\t\n\t\twhile(left < iterable.length - i && right < iterable.length - i)\n\t\t{\n\t\t\tif(heap[left] > heap[right])\n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t}\n\t\t\t\n\t\t\tif(heap[index] < heap[largest])\n\t\t\t{\n\t\t\t\tlong temp = heap[index];\n\t\t\t\theap[index] = heap[largest];\n\t\t\t\theap[largest] = temp;\n\t\t\t\t\n\t\t\t\tindex = largest;\n\t\t\t\tleft = 2 * index + 1;\n\t\t\t\tright = 2 * index + 2;\n\t\t\t}\n\t\t\telse\n\t\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp4cdy55fd.d(67): Error: found `unittest` instead of statement\n/tmp/tmp4cdy55fd.d(75): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp4cdy55fd.d(75): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cdy55fd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpbtf5632k.d(13): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbtf5632k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] result = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tforeach(i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tint current_index = heap_size;\n\t\twhile(current_index > 1)\n\t\t{\n\t\t\tint parent_index = current_index / 2;\n\t\t\tif(heap[current_index] > heap[parent_index])\n\t\t\t{\n\t\t\t\tlong temp = heap[current_index];\n\t\t\t\theap[current_index] = heap[parent_index];\n\t\t\t\theap[parent_index] = temp;\n\t\t\t\tcurrent_index = parent_index;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tint current_index = 1;\n\t\twhile(current_index <= heap_size)\n\t\t{\n\t\t\tint left_child_index = current_index * 2;\n\t\t\tint right_child_index = current_index * 2 + 1;\n\t\t\tif(left_child_index <= heap_size)\n\t\t\t{\n\t\t\t\tif(right_child_index <= heap_size)\n\t\t\t\t{\n\t\t\t\t\tif(heap[current_index] < heap[left_child_index] || heap[current_index] < heap[right_child_index])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(heap[left_child_index] > heap[right_child_index])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlong temp = heap[current\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpkonm5xjo.d(56): Error: found `unittest` when expecting `,`\n/tmp/tmpkonm5xjo.d(64): Error: found `void` when expecting `,`\n/tmp/tmpkonm5xjo.d(64): Error: found `{` when expecting `,`\n/tmp/tmpkonm5xjo.d(64): Error: expression expected, not `}`\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `,`\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `]`\n/tmp/tmpkonm5xjo.d(64): Error: semicolon expected, not `End of File`\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpkonm5xjo.d(64): Error: found `End of File` when expecting `}` ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\tlong parent = 0;\n\tlong left = 0;\n\tlong right = 0;\n\tlong largest = 0;\n\tlong largest_index = 0;\n\t\n\tfor (i = 0; i < iterable.length; i++) \n\t{\n\t\theap[i] = iterable[i];\n\t\theap_index[i] = i;\n\t\theap_size++;\n\t}\n\t\n\tfor (i = (heap_size / 2) - 1; i >= 0; i--) \n\t{\n\t\tparent = i;\n\t\tleft = 2 * parent + 1;\n\t\tright = 2 * parent + 2;\n\t\tlargest = parent;\n\t\tlargest_index = heap_index[parent];\n\t\t\n\t\tif (left < heap_size && heap[left] > heap[largest]) \n\t\t{\n\t\t\tlargest = left;\n\t\t\tlargest_index = heap_index[left];\n\t\t}\n\t\t\n\t\tif (right < heap_size && heap[right] > heap[largest]) \n\t\t{\n\t\t\tlargest = right;\n\t\t\tlargest_index = heap_index[right];\n\t\t}\n\t\t\n\t\tif (largest != parent) \n\t\t{\n\t\t\ttemp = heap[parent];\n\t\t\ttemp_index = heap_index[parent];\n\t\t\theap[parent] = heap[largest];\n\t\t\theap_index[parent] = heap_index[largest];\n\t\t\theap[largest] = temp;\n\t\t\theap_index[largest] = temp_index;\n\t\t}\n\t}\n\t\n\tfor (i = heap_size - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = heap\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp3e2css2y.d(64): Error: found `unittest` when expecting `;` following statement\n/tmp/tmp3e2css2y.d(72): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp3e2css2y.d(72): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3e2css2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t\theap[i] = item;\n\t\n\tforeach(i; 0 .. heap.length)\n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tlong largest = i;\n\t\t\n\t\tif (left < heap.length && heap[left] > heap[largest])\n\t\t\tlargest = left;\n\t\t\n\t\tif (right < heap.length && heap[right] > heap[largest])\n\t\t\tlargest = right;\n\t\t\n\t\tif (largest != i)\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[largest];\n\t\t\theap[largest] = temp;\n\t\t}\n\t}\n\t\n\tforeach(i; heap.length .. 0)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\t\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tlong largest = i;\n\t\t\n\t\tif (left < heap.length && heap[left] > heap[largest])\n\t\t\tlargest = left;\n\t\t\n\t\tif (right < heap.length && heap[right] > heap[largest])\n\t\t\tlargest = right;\n\t\t\n\t\tif (largest != i)\n\t\t{\n\t\t\tlong temp = heap[i];\n\t\t\theap[i] = heap[largest];\n\t\t\theap[largest] = temp;\n\t\t}\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpv6ztxnc4.d(51): Error: variable `temp` is shadowing variable `tmpv6ztxnc4.heap_sort.temp`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv6ztxnc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\t// Copy the array\n\tforeach(long i; iterable)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\t// Build the heap\n\tfor(long i = result.length / 2; i >= 0; i--)\n\t{\n\t\theapify(result, i, result.length);\n\t}\n\t\n\t// Sort the heap\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\t// Swap the root with the last element\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\t// Rebuild the heap\n\t\theapify(result, 0, i);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpdmimfjay.d(20): Error: undefined identifier `heapify`\n/tmp/tmpdmimfjay.d(32): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdmimfjay.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9aqx3hx5.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x428435]\n??:? void tmp9aqx3hx5.__unittest_L13_C1() [0x427f54]\n??:? void tmp9aqx3hx5.__modtest() [0x4281b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c49f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b332]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4305bd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430a6c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430549]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b309]\n??:? runModuleUnitTests [0x42c275]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428884]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t}\n\t\n\tlong heap_size = iterable.length;\n\t\n\tfor(long i = floor(heap_size / 2) - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, heap_size, i);\n\t}\n\t\n\tfor(long i = heap_size - 1; i >= 0; i--)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[i];\n\t\theap_size--;\n\t\theapify(heap, heap_size, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpqd_hlzdr.d(19): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\n/tmp/tmpqd_hlzdr.d(21): Error: undefined identifier `heapify`\n/tmp/tmpqd_hlzdr.d(29): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqd_hlzdr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(i, item; iterable)\n\t{\n\t\theap[i] = item;\n\t\theapify(heap, i);\n\t}\n\t\n\tlong[] result = new long[iterable.length];\n\tforeach(i, item; heap)\n\t{\n\t\tresult[i] = item;\n\t\theap[i] = 0;\n\t\theapify(heap, i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpmqy6xnhi.d(13): Error: undefined identifier `heapify`\n/tmp/tmpmqy6xnhi.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmqy6xnhi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tforeach(i; 0..iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong[] heap = new long[result.length];\n\tforeach(i; 0..result.length)\n\t{\n\t\theap[i] = result[i];\n\t}\n\t\n\tlong[] sorted = new long[result.length];\n\t\n\tlong heap_size = result.length;\n\t\n\tlong left_child_index = 0;\n\tlong right_child_index = 0;\n\tlong largest_child_index = 0;\n\t\n\tlong temp = 0;\n\t\n\tfor(long i = result.length/2 - 1; i >= 0; i--)\n\t{\n\t\theapify(heap, heap_size, i);\n\t}\n\t\n\tfor(long i = result.length - 1; i >= 0; i--)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify(heap, heap_size, 0);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmplr4hwura.d(33): Error: undefined identifier `heapify`\n/tmp/tmplr4hwura.d(41): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplr4hwura.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor (int i = heap.length / 2; i >= 0; i--)\n\t{\n\t\theapify(heap, i, heap.length);\n\t}\n\t\n\tfor (int i = heap.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = heap[0];\n\t\theap[0] = heap[i];\n\t\theap[i] = temp;\n\t\theapify(heap, 0, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp5bitakew.d(15): Error: cannot implicitly convert expression `heap.length / 2LU` of type `ulong` to `int`\n/tmp/tmp5bitakew.d(17): Error: undefined identifier `heapify`\n/tmp/tmp5bitakew.d(20): Error: cannot implicitly convert expression `heap.length - 1LU` of type `ulong` to `int`\n/tmp/tmp5bitakew.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5bitakew.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tauto heap = new Heap!(long)();\n\tforeach(e; iterable)\n\t\theap.push(e);\n\t\n\tlong[] result;\n\twhile(heap.length)\n\t\tresult ~= heap.pop();\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmppaw6b7wd.d(9): Error: template instance `Heap!long` template `Heap` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppaw6b7wd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(iterable, n, i);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpefs426t3.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpefs426t3.d(12): Error: undefined identifier `heapify`\n/tmp/tmpefs426t3.d(19): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpefs426t3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tfor (int i = 0; i < iterable.length; i++)\n\t\tresult[i] = iterable[i];\n\t\n\tfor (int i = (result.length - 1) / 2; i >= 0; i--)\n\t\theapify(result, i, result.length);\n\t\n\tfor (int i = result.length - 1; i > 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\theapify(result, 0, i);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpfqf6qbcf.d(13): Error: cannot implicitly convert expression `(result.length - 1LU) / 2LU` of type `ulong` to `int`\n/tmp/tmpfqf6qbcf.d(14): Error: undefined identifier `heapify`\n/tmp/tmpfqf6qbcf.d(16): Error: cannot implicitly convert expression `result.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfqf6qbcf.d(21): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqf6qbcf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tfor (i = 0; i < iterable.length; i++) \n\t{\n\t\theap_size = heap_size + 1;\n\t\theap[heap_size - 1] = iterable[i];\n\t\theap_index[heap_size - 1] = i;\n\t\tlong j = heap_size - 1;\n\t\twhile (j > 0) \n\t\t{\n\t\t\tlong parent = (j - 1) / 2;\n\t\t\tif (heap[parent] > heap[j]) \n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[j];\n\t\t\t\theap[j] = temp;\n\t\t\t\tlong temp_index = heap_index[parent];\n\t\t\t\theap_index[parent] = heap_index[j];\n\t\t\t\theap_index[j] = temp_index;\n\t\t\t\tj = parent;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tlong k = 0;\n\twhile (heap_size > 0) \n\t{\n\t\tresult[k] = heap[0];\n\t\tk = k + 1;\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_index[0] = heap_index[heap_size - 1];\n\t\theap_size = heap_size - 1;\n\t\tlong j = 0;\n\t\twhile (j < heap_size) \n\t\t{\n\t\t\tlong left = 2 * j + 1;\n\t\t\tlong right = 2 * j + 2;\n\t\t\tlong smallest = j;\n\t\t\tif (left < heap_size && heap[left] < heap[smallest])\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpxw4k7dn5.d(54): Error: found `unittest` instead of statement\n/tmp/tmpxw4k7dn5.d(62): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpxw4k7dn5.d(62): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxw4k7dn5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--) \n\t{\n\t\theapify(iterable, n, i);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) \n\t{\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpefs426t3.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpefs426t3.d(12): Error: undefined identifier `heapify`\n/tmp/tmpefs426t3.d(19): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpefs426t3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\tlong parent = 0;\n\tlong left = 0;\n\tlong right = 0;\n\tlong largest = 0;\n\t\n\tfor (i = 0; i < iterable.length; i++) \n\t{\n\t\theap[i] = iterable[i];\n\t\theap_index[i] = i;\n\t\theap_size++;\n\t}\n\t\n\tfor (i = heap_size / 2 - 1; i >= 0; i--) \n\t{\n\t\tparent = i;\n\t\ttemp = heap[parent];\n\t\ttemp_index = heap_index[parent];\n\t\t\n\t\twhile (parent < heap_size / 2) \n\t\t{\n\t\t\tleft = 2 * parent + 1;\n\t\t\tright = 2 * parent + 2;\n\t\t\t\n\t\t\tif (right < heap_size && heap[right] > heap[left]) \n\t\t\t{\n\t\t\t\tlargest = right;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlargest = left;\n\t\t\t}\n\t\t\t\n\t\t\tif (heap[largest] <= temp) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\theap[parent] = heap[largest];\n\t\t\theap_index[parent] = heap_index[largest];\n\t\t\tparent = largest;\n\t\t}\n\t\t\n\t\theap[parent] = temp;\n\t\theap_index[parent] = temp_index;\n\t}\n\t\n\tfor (i = heap_size - 1; i > 0; i--) \n\t{\n\t\tresult[j] = heap[0];\n\t\tj++;\n\t\t\n\t\ttemp =\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmphd6dwxvi.d(69): Error: expression expected, not `unittest`\n/tmp/tmphd6dwxvi.d(70): Error: found `{` when expecting `;` following statement\n/tmp/tmphd6dwxvi.d(77): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphd6dwxvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tlong[] sorted = new long[iterable.length];\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap[i] = iterable[i];\n\t\tsorted[i] = 0;\n\t}\n\t\n\theap = heapify(heap);\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tsorted[i] = heap[0];\n\t\theap[0] = heap[heap.length - 1];\n\t\theap[heap.length - 1] = 0;\n\t\theap = heapify(heap);\n\t}\n\t\n\treturn sorted;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmppvxs3m4j.d(18): Error: undefined identifier `heapify`\n/tmp/tmppvxs3m4j.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvxs3m4j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long item; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = item;\n\t\tlong i = heap_size;\n\t\twhile(i > 1 && heap[i] > heap[i/2])\n\t\t{\n\t\t\tswap(heap[i], heap[i/2]);\n\t\t\ti = i/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size)\n\t\t{\n\t\t\tlong max_index = j;\n\t\t\tif(j*2 <= heap_size && heap[j*2] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2;\n\t\t\t}\n\t\t\tif(j*2+1 <= heap_size && heap[j*2+1] > heap[max_index])\n\t\t\t{\n\t\t\t\tmax_index = j*2+1;\n\t\t\t}\n\t\t\tif(max_index == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswap(heap[j], heap[max_index]);\n\t\t\tj = max_index;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmps477j246.d(20): Error: undefined identifier `swap`, did you mean variable `heap`?\n/tmp/tmps477j246.d(47): Error: undefined identifier `swap`, did you mean variable `heap`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps477j246.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tlong length = result.length;\n\t\n\tfor(long i = length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, length, i);\n\t}\n\t\n\tfor(long i = length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpgyt01pyw.d(20): Error: undefined identifier `heapify`\n/tmp/tmpgyt01pyw.d(29): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyt01pyw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] arr = iterable.dup;\n\tlong[] heap = new long[arr.length];\n\tlong heap_size = 0;\n\t\n\t// Inserting elements into the heap\n\tforeach(long i; arr)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\t// Extracting elements from the heap\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tarr[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(2*j <= heap_size)\n\t\t{\n\t\t\tlong k = 2*j;\n\t\t\tif(k < heap_size && heap[k] < heap[k+1])\n\t\t\t\tk++;\n\t\t\tif(heap[j] > heap[k])\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[k];\n\t\t\theap[k] = temp;\n\t\t\tj = k;\n\t\t}\n\t\ti++;\n\t}\n\treturn arr;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdt6yxpyh.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x429a42]\n??:? long[] tmpdt6yxpyh.heap_sort(long[]) [0x4280a6]\n??:? void tmpdt6yxpyh.__unittest_L52_C1() [0x42849d]\n??:? void tmpdt6yxpyh.__modtest() [0x428908]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e5cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42961a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42b359]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42b3e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42b2e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4295f1]\n??:? runModuleUnitTests [0x42e3a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint n = iterable.length;\n\tfor (int i = n / 2 - 1; i >= 0; i--)\n\t\theapify(iterable, n, i);\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tlong temp = iterable[0];\n\t\titerable[0] = iterable[i];\n\t\titerable[i] = temp;\n\t\theapify(iterable, i, 0);\n\t}\n\treturn iterable;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpq3majsn7.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmpq3majsn7.d(11): Error: undefined identifier `heapify`\n/tmp/tmpq3majsn7.d(16): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq3majsn7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong[] heap_index = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\theap_size = heap_insert(heap, heap_index, heap_size, iterable[i], i);\n\t}\n\t\n\tforeach(long i; 0 .. iterable.length)\n\t{\n\t\tresult[i] = heap_extract_min(heap, heap_index, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmphqph05cx.d(16): Error: undefined identifier `heap_insert`\n/tmp/tmphqph05cx.d(21): Error: undefined identifier `heap_extract_min`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqph05cx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\t\n\tforeach(long i; iterable)\n\t{\n\t\tresult ~= i;\n\t}\n\t\n\tfor(long i = result.length / 2; i >= 0; i--)\n\t{\n\t\tresult = heapify(result, i, result.length);\n\t}\n\t\n\tfor(long i = result.length - 1; i > 0; i--)\n\t{\n\t\tresult = swap(result, 0, i);\n\t\tresult = heapify(result, 0, i);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp799qu59s.d(18): Error: undefined identifier `heapify`\n/tmp/tmp799qu59s.d(23): Error: undefined identifier `swap`\n/tmp/tmp799qu59s.d(24): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp799qu59s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\t// Create a heap\n\tauto heap = new Heap!(long)();\n\t\n\t// Insert all the elements in the heap\n\tforeach(elem; iterable)\n\t\theap.insert(elem);\n\t\n\t// Create a new array to store the sorted elements\n\tlong[] sorted_array;\n\t\n\t// Extract all the elements from the heap\n\twhile(heap.size)\n\t\tsorted_array ~= heap.extract();\n\t\n\treturn sorted_array;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp3tft84ay.d(10): Error: template instance `Heap!long` template `Heap` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3tft84ay.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tint heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tint j = heap_size;\n\t\twhile(j > 1 && heap[j] > heap[j / 2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j / 2];\n\t\t\theap[j / 2] = temp;\n\t\t\tj /= 2;\n\t\t}\n\t}\n\t\n\tlong[] result = new long[heap_size];\n\tint result_size = 0;\n\t\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_size] = heap[1];\n\t\tresult_size++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\t\n\t\tint j = 1;\n\t\twhile(j * 2 <= heap_size)\n\t\t{\n\t\t\tint k = j * 2;\n\t\t\tif(k + 1 <= heap_size && heap[k] < heap[k + 1])\n\t\t\t\tk++;\n\t\t\tif(heap[j] < heap[k])\n\t\t\t{\n\t\t\t\tlong temp = heap[j];\n\t\t\t\theap[j] = heap[k];\n\t\t\t\theap[k] = temp;\n\t\t\t\tj = k;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpu34u_gcv.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x42890e]\n??:? long[] tmpu34u_gcv.heap_sort(long[]) [0x427eab]\n??:? void tmpu34u_gcv.__unittest_L56_C1() [0x4282e5]\n??:? void tmpu34u_gcv.__modtest() [0x4285dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c93b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430f08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7a5]\n??:? runModuleUnitTests [0x42c711]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] heap = new long[iterable.length];\n\tforeach(index, value; iterable) \n\t{\n\t\theap[index] = value;\n\t}\n\t\n\tfor(long i = heap.length / 2; i >= 0; i--) \n\t{\n\t\theap = heapify(heap, i, heap.length);\n\t}\n\t\n\tfor(long i = heap.length - 1; i >= 0; i--) \n\t{\n\t\theap[i] = heap[0] ^ heap[i];\n\t\theap[0] = heap[0] ^ heap[i];\n\t\theap[i] = heap[0] ^ heap[i];\n\t\theap = heapify(heap, 0, i);\n\t}\n\t\n\treturn heap;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpajysvwkm.d(17): Error: undefined identifier `heapify`\n/tmp/tmpajysvwkm.d(25): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajysvwkm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, iterable[i]);\n\t}\n\t\n\tfor (long i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp7lglpn_h.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmp7lglpn_h.d(20): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7lglpn_h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\t\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\theap[i] = iterable[i];\n\t}\n\t\n\tfor(int i = 0; i < iterable.length; i++)\n\t{\n\t\tresult[i] = heap_pop(heap);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp4ue32f3f.d(19): Error: undefined identifier `heap_pop`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ue32f3f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap[heap_size] = i;\n\t\theap_size++;\n\t\theapify_up(heap, heap_size);\n\t}\n\t\n\tforeach(long i; 0..iterable.length)\n\t{\n\t\tresult[i] = heap[0];\n\t\theap[0] = heap[heap_size - 1];\n\t\theap_size--;\n\t\theapify_down(heap, heap_size);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp2mtaead6.d(17): Error: undefined identifier `heapify_up`\n/tmp/tmp2mtaead6.d(25): Error: undefined identifier `heapify_down`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2mtaead6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tint length = iterable.length;\n\tlong[] result = new long[length];\n\t\n\tfor (int i = 0; i < length; i++)\n\t{\n\t\tresult[i] = iterable[i];\n\t}\n\t\n\tfor (int i = length / 2 - 1; i >= 0; i--)\n\t{\n\t\theapify(result, length, i);\n\t}\n\t\n\tfor (int i = length - 1; i >= 0; i--)\n\t{\n\t\tlong temp = result[0];\n\t\tresult[0] = result[i];\n\t\tresult[i] = temp;\n\t\t\n\t\theapify(result, i, 0);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmp5yjdj3xk.d(9): Error: cannot implicitly convert expression `iterable.length` of type `ulong` to `int`\n/tmp/tmp5yjdj3xk.d(19): Error: undefined identifier `heapify`\n/tmp/tmp5yjdj3xk.d(28): Error: undefined identifier `heapify`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5yjdj3xk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong child = heap_size;\n\t\tlong parent = child / 2;\n\t\twhile(parent > 0 && heap[parent] < heap[child])\n\t\t{\n\t\t\tlong temp = heap[parent];\n\t\t\theap[parent] = heap[child];\n\t\t\theap[child] = temp;\n\t\t\tchild = parent;\n\t\t\tparent = child / 2;\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[result_index] = heap[1];\n\t\tresult_index++;\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong parent = 1;\n\t\tlong child = parent * 2;\n\t\twhile(child <= heap_size)\n\t\t{\n\t\t\tif(child + 1 <= heap_size && heap[child] < heap[child + 1])\n\t\t\t{\n\t\t\t\tchild++;\n\t\t\t}\n\t\t\tif(heap[parent] < heap[child])\n\t\t\t{\n\t\t\t\tlong temp = heap[parent];\n\t\t\t\theap[parent] = heap[child];\n\t\t\t\theap[child] = temp;\n\t\t\t\tparent = child;\n\t\t\t\tchild = parent * 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxp6vtl43.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288ee]\n??:? long[] tmpxp6vtl43.heap_sort(long[]) [0x427ec5]\n??:? void tmpxp6vtl43.__unittest_L61_C1() [0x4282c5]\n??:? void tmpxp6vtl43.__modtest() [0x4285bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c91b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ee8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b785]\n??:? runModuleUnitTests [0x42c6f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size = heap_insert(heap, heap_size, i);\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap_extract_max(heap, heap_size);\n\t\theap_size--;\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "/tmp/tmpgu3x1yn9.d(15): Error: undefined identifier `heap_insert`\n/tmp/tmpgu3x1yn9.d(21): Error: undefined identifier `heap_extract_max`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu3x1yn9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to sort the given array.\n\t\n*/\nlong[] heap_sort(long[] iterable) \n{\n\tlong[] result = new long[iterable.length];\n\tlong[] heap = new long[iterable.length];\n\tlong heap_size = 0;\n\t\n\tforeach(long i; iterable)\n\t{\n\t\theap_size++;\n\t\theap[heap_size] = i;\n\t\tlong j = heap_size;\n\t\twhile(j > 1 && heap[j] < heap[j/2])\n\t\t{\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[j/2];\n\t\t\theap[j/2] = temp;\n\t\t\tj = j/2;\n\t\t}\n\t}\n\t\n\tlong i = 0;\n\twhile(heap_size > 0)\n\t{\n\t\tresult[i] = heap[1];\n\t\theap[1] = heap[heap_size];\n\t\theap_size--;\n\t\tlong j = 1;\n\t\twhile(j <= heap_size/2)\n\t\t{\n\t\t\tlong k = 2*j;\n\t\t\tif(k < heap_size && heap[k] > heap[k+1])\n\t\t\t\tk++;\n\t\t\tif(heap[j] <= heap[k])\n\t\t\t\tbreak;\n\t\t\tlong temp = heap[j];\n\t\t\theap[j] = heap[k];\n\t\t\theap[k] = temp;\n\t\t\tj = k;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = heap_sort;\n\n    assert(candidate([1L, 3L, 5L, 7L, 9L, 2L, 4L, 6L, 8L, 0L]) == [0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L]) == [14L, 22L, 25L, 25L, 35L, 58L, 65L, 75L, 85L]);\n    assert(candidate([7L, 1L, 9L, 5L]) == [1L, 5L, 7L, 9L]);\n}\nvoid main(){}",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphwlm76of.d(16): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288ee]\n??:? long[] tmphwlm76of.heap_sort(long[]) [0x427ec5]\n??:? void tmphwlm76of.__unittest_L51_C1() [0x4282c5]\n??:? void tmphwlm76of.__modtest() [0x4285bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c91b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b7ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ee8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b785]\n??:? runModuleUnitTests [0x42c6f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
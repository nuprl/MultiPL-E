{
  "name": "mbpp_738_geometric_sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the geometric sum of n-1. https://www.w3resource.com/dthon-exercises/data-structures-and-algorithms/dthon-recursion-exercise-9.php\n\t\n*/\nfloat geometric_sum(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = geometric_sum;\n\n    assert(candidate(7L) == 1.9921875);\n    assert(candidate(4L) == 1.9375);\n    assert(candidate(8L) == 1.99609375);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n == 0)\n\t\treturn 1;\n\treturn 1 / pow(2, n) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n\t}\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn 1 + n * geometric_sum(n - 1);\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\telse\n\t\treturn 1 + n * geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\treturn 1 / pow(2, n) + geometric_sum(n - 1);\n}",
    "{\n\tif(n == 0)\n\t\treturn 1;\n\telse\n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\telse\n\t\treturn 1 / pow(2, n) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn 1 + n * geometric_sum(n - 1);\n}",
    "{\n\tif(n == 0)\n\t\treturn 1;\n\telse\n\t\treturn 1 + n * geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\treturn 1 / pow(2, n) + geometric_sum(n - 1);\n}",
    "{ \n    if (n == 0) \n        return 1; \n  \n    return 1 + (1 / pow(2, n)) + geometric_sum(n - 1); \n} ",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\telse\n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t\treturn 1;\n\telse \n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n}",
    "{\n\tif(n == 0)\n\t\treturn 1;\n\treturn 1 + (1.0 / pow(2, n)) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n\t}\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn 1 + n * geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn 1 + n * geometric_sum(n - 1);\n\t}\n}",
    "{\n\tif (n == 0) return 1;\n\treturn 1 / pow(2, n) + geometric_sum(n - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn 1 + (n * geometric_sum(n - 1));\n\t}\n}",
    "{\n\tif (n == 0)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);\n\t}\n}"
  ]
}
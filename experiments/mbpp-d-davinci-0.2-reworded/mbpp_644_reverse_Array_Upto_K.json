{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse an array upto a given position.\n\t\n*/\nlong[] reverse_Array_Upto_K(long[] input, long k) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = reverse_Array_Upto_K;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L], 4L) == [4L, 3L, 2L, 1L, 5L, 6L]);\n    assert(candidate([4L, 5L, 6L, 7L], 2L) == [5L, 4L, 6L, 7L]);\n    assert(candidate([9L, 8L, 7L, 6L, 5L], 3L) == [7L, 8L, 9L, 6L, 5L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < input.length; i++) \n\t{\n\t\tif (i < k) \n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t} \n\t\telse \n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\tfor (long i = k - 1; i >= 0; i--) \n\t{\n\t\toutput[j] = temp[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong z = 0;\n\tlong y = 0;\n\tfor (i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (j = k; j < input.length; j++) \n\t{\n\t\ttemp2[z] = input[j];\n\t\tz++;\n\t}\n\tfor (i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\tfor (j = k; j < input.length; j++) \n\t{\n\t\tresult[j] = temp2[y];\n\t\ty++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = input.length - 1; i > k; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tfor (long i = 0; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result;\n\tresult = new long[input.length];\n\t\n\tforeach(i,e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\tresult[i] = input[k-i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\t\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\t\n\twhile(j < input.length - k)\n\t{\n\t\ttemp2[j] = input[k + j];\n\t\tj++;\n\t}\n\t\n\twhile(l < k)\n\t{\n\t\toutput[l] = temp2[l];\n\t\tl++;\n\t}\n\t\n\twhile(l < input.length)\n\t{\n\t\toutput[l] = temp[l - k];\n\t\tl++;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tforeach(i,e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = e;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[i-k] = e;\n\t\t}\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tforeach(i,e; temp)\n\t{\n\t\tresult[i] = e;\n\t}\n\t\n\tforeach(i,e; temp2)\n\t{\n\t\tresult[i+k] = e;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length-k; i++) \n\t{\n\t\ttemp2[i] = input[i+k];\n\t}\n\t\n\ttemp = reverse(temp);\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length-k; i++) \n\t{\n\t\tresult[i+k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\tlong i;\n\toutput = new long[input.length];\n\tfor (i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\t// copy the first k elements to temp\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\t// reverse the first k elements\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = temp[k - i - 1];\n\t}\n\t\n\t// copy the remaining elements to temp2\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\t// copy the reversed elements to output\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\t// copy the remaining elements to output\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] reversed = new long[k];\n\tlong[] remaining = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\treversed[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\tremaining[i] = input[k + i];\n\t}\n\t\n\toutput = reversed ~ remaining;\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < temp.length; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < temp2.length; i++) \n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[j] = temp[k - i - 1];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = temp[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile (i < k)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t\ti++;\n\t}\n\twhile (i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[input.length];\n\tlong[] temp1 = new long[input.length];\n\tlong[] temp2 = new long[input.length];\n\t\n\ttemp = input[0..k];\n\ttemp1 = input[k..$];\n\t\n\ttemp2 = temp[$..0];\n\toutput = temp2 ~ temp1;\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] first_part = new long[k];\n\tlong[] second_part = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tfirst_part[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tsecond_part[i - k] = input[i];\n\t}\n\t\n\tfirst_part = first_part.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = first_part[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = second_part[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = k-1; i >= 0; i--)\n\t{\n\t\ttemp[j] = input[i];\n\t\tj++;\n\t}\n\tj = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[j];\n\t\tj++;\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result;\n\tresult = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = k - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output;\n\tlong i;\n\toutput = new long[$];\n\ti = 0;\n\twhile (i < k) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti = i + 1;\n\t}\n\twhile (i < $) \n\t{\n\t\toutput[i] = input[i];\n\t\ti = i + 1;\n\t}\n\treturn output;\n}\n/*",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\tj = input.length - 1;\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tforeach(i, ref e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k-i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < input.length; i++) \n\t{\n\t\tif (i < k) \n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\tfor (long i = k - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i;\n\tfor (i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t}\n\tfor (i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{ \n\tlong[] output = new long[input.length];\n\t\n\tforeach(i,e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k-i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\t\n\treturn output;\n} ",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\twhile (i < k) \n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\twhile (i < input.length) \n\t{\n\t\ttemp2[j] = input[i];\n\t\ti++;\n\t\tj++;\n\t}\n\ti = 0;\n\twhile (i < k) \n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length) \n\t{\n\t\toutput[i] = temp2[l];\n\t\ti++;\n\t\tl++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[input.length];\n\tlong[] temp2 = new long[input.length];\n\tlong[] temp3 = new long[input.length];\n\tlong[] temp4 = new long[input.length];\n\tlong[] temp5 = new long[input.length];\n\tlong[] temp6 = new long[input.length];\n\tlong[] temp7 = new long[input.length];\n\tlong[] temp8 = new long[input.length];\n\tlong[] temp9 = new long[input.length];\n\tlong[] temp10 = new long[input.length];\n\tlong[] temp11 = new long[input.length];\n\tlong[] temp12 = new long[input.length];\n\tlong[] temp13 = new long[input.length];\n\tlong[] temp14 = new long[input.length];\n\tlong[] temp15 = new long[input.length];\n\tlong[] temp16 = new long[input.length];\n\tlong[] temp17 = new long[input.length];\n\tlong[] temp18 = new long[input.length];\n\tlong[] temp19 = new long[input.length];\n\tlong[] temp20 = new long[input.length];\n\tlong[] temp21 = new long[input.length];\n\tlong[] temp22 = new long[input.length];\n\tlong[] temp23 = new long[input.length];\n\tlong[] temp24 = new long[input.length];\n\tlong[] temp25 = new long[input.length];\n\tlong[] temp26 = new long[input.length];\n\tlong[] temp27 = new long[input.length];\n\tlong[] temp28 = new long[input.length];\n\tlong[] temp29 = new long[input.length];\n\tlong[] temp30 = new long[input.length];\n\tlong[] temp31 = new long[input.length];\n\tlong[] temp32 = new long[input.length];\n\tlong[] temp33 = new long[input.length];\n\tlong[] temp34 = new long[input.length];\n\tlong[] temp35 = new long[input.length];\n\tlong[] temp36 = new",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < input.length; i++)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\tfor(long i = k - 1; i >= 0; i--)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tint i = 0;\n\tint j = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\t// Copy the first k elements into temp\n\twhile (i < k) {\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\t\n\t// Reverse the temp array\n\ttemp = temp.reverse();\n\t\n\t// Copy the remaining elements into temp2\n\twhile (j < input.length - k) {\n\t\ttemp2[j] = input[k + j];\n\t\tj++;\n\t}\n\t\n\t// Copy the temp array into the output array\n\twhile (m < temp.length) {\n\t\toutput[m] = temp[m];\n\t\tm++;\n\t}\n\t\n\t// Copy the temp2 array into the output array\n\twhile (n < temp2.length) {\n\t\toutput[k + n] = temp2[n];\n\t\tn++;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tfor(i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor(i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i > 0; i--)\n\t{\n\t\toutput[j] = input[i-1];\n\t\tj++;\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output;\n\tlong i;\n\tlong j;\n\t\n\toutput = new long[$];\n\t\n\tfor (i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor (j = k; j < input.length; j++)\n\t{\n\t\toutput[j] = input[j];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] reversed = new long[k];\n\tlong[] remaining = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\treversed[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tremaining[i] = input[k + i];\n\t}\n\t\n\toutput = reversed ~ remaining;\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i=0;i<k;i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i=k;i<input.length;i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\tfor(long i=0;i<k;i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i=k;i<input.length;i++)\n\t{\n\t\toutput[i] = temp2[i-k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[input.length];\n\t\n\tforeach(i; 0..input.length)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tforeach(i; 0..k)\n\t{\n\t\tresult[i] = temp[k-i];\n\t}\n\t\n\tforeach(i; k..input.length)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i=0;i<k;i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i=k;i<input.length;i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i=0;i<k;i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i=k;i<input.length;i++)\n\t{\n\t\tresult[i] = temp2[i-k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[j] = input[i];\n\t\tj++;\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tj = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[j];\n\t\tj++;\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tfor (i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (j = k; j < input.length; j++) \n\t{\n\t\ttemp2[l] = input[j];\n\t\tl++;\n\t}\n\tfor (m = 0; m < temp.length; m++) \n\t{\n\t\toutput[m] = temp[temp.length - m - 1];\n\t}\n\tfor (m = k; m < input.length; m++) \n\t{\n\t\toutput[m] = temp2[m - k];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\ttemp2[i] = input[i+k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\toutput[i+k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] reversed = new long[k];\n\tlong[] remaining = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\treversed[i] = input[k - 1 - i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tremaining[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = reversed[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = remaining[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\ttemp = temp.reverse;\n\ti = 0;\n\twhile(i < k)\n\t{\n\t\toutput[i] = temp[i];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tforeach(long x; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = x;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[j] = x;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\ti = k - 1;\n\twhile(i >= 0)\n\t{\n\t\toutput[j] = temp[i];\n\t\ti--;\n\t\tj++;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output;\n\tlong i;\n\tlong j;\n\t\n\toutput = new long[$];\n\t\n\ti = 0;\n\t\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti = i + 1;\n\t}\n\t\n\tj = k;\n\t\n\twhile(j < input.length)\n\t{\n\t\toutput[j] = input[j];\n\t\tj = j + 1;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = input.dup;\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\tresult[i] = input[k - i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\twhile(j < input.length - k)\n\t{\n\t\ttemp2[j] = input[j + k];\n\t\tj++;\n\t}\n\twhile(l < k)\n\t{\n\t\tresult[l] = temp[k - l - 1];\n\t\tl++;\n\t}\n\twhile(m < input.length - k)\n\t{\n\t\tresult[m + k] = temp2[m];\n\t\tm++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tforeach(i, e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = e;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[i - k] = e;\n\t\t}\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tforeach(i, e; temp)\n\t{\n\t\tresult[i] = e;\n\t}\n\t\n\tforeach(i, e; temp2)\n\t{\n\t\tresult[i + k] = e;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = temp.length; i < result.length; i++)\n\t{\n\t\tresult[i] = temp2[i - temp.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tforeach(i; 0..k)\n\t{\n\t\toutput[i] = input[k-i];\n\t}\n\t\n\tforeach(i; k..input.length)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\ttemp2[i] = input[i+k];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\toutput[i+k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tint j = 0;\n\tfor (int i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (int i = k - 1; i >= 0; i--)\n\t{\n\t\toutput[j] = temp[i];\n\t\tj++;\n\t}\n\tfor (int i = k; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < input.length; i++) \n\t{\n\t\tif (i < k) \n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp2[i - k] = input[i];\n\t\t}\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < input.length; i++) \n\t{\n\t\tif (i < k) \n\t\t{\n\t\t\tresult[i] = temp[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[i] = temp2[i - k];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[input.length];\n\tlong[] temp2 = new long[input.length];\n\tlong[] temp3 = new long[input.length];\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tforeach(i; k .. input.length)\n\t{\n\t\ttemp2[i] = input[i];\n\t}\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\ttemp3[i] = temp2[k-i];\n\t}\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\toutput[i] = temp3[i];\n\t}\n\t\n\tforeach(i; k .. input.length)\n\t{\n\t\toutput[i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = input.dup;\n\tforeach(i; 0..k) \n\t{\n\t\tresult[i] = input[k-i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\ttemp = input[0..k];\n\ttemp2 = input[k..$];\n\t\n\ttemp = temp.reverse;\n\t\n\tresult = temp ~ temp2;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput.length = input.length;\n\tforeach(i, ref e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k - i - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\tlong i, j;\n\t\n\toutput = input.dup;\n\t\n\tif (k > input.length)\n\t\tk = input.length;\n\t\n\tfor (i = 0, j = k - 1; i < j; i++, j--)\n\t{\n\t\toutput[i] = input[j];\n\t\toutput[j] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tforeach(i,e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k - i - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < input.length; i++)\n\t{\n\t\tif (i < k)\n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\tfor (long i = k - 1; i >= 0; i--)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(int i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(int i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(int i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[input.length];\n\tlong[] temp2 = new long[input.length];\n\tlong[] temp3 = new long[input.length];\n\tlong[] temp4 = new long[input.length];\n\tlong[] temp5 = new long[input.length];\n\tlong[] temp6 = new long[input.length];\n\tlong[] temp7 = new long[input.length];\n\tlong[] temp8 = new long[input.length];\n\tlong[] temp9 = new long[input.length];\n\tlong[] temp10 = new long[input.length];\n\tlong[] temp11 = new long[input.length];\n\tlong[] temp12 = new long[input.length];\n\tlong[] temp13 = new long[input.length];\n\tlong[] temp14 = new long[input.length];\n\tlong[] temp15 = new long[input.length];\n\tlong[] temp16 = new long[input.length];\n\tlong[] temp17 = new long[input.length];\n\tlong[] temp18 = new long[input.length];\n\tlong[] temp19 = new long[input.length];\n\tlong[] temp20 = new long[input.length];\n\tlong[] temp21 = new long[input.length];\n\tlong[] temp22 = new long[input.length];\n\tlong[] temp23 = new long[input.length];\n\tlong[] temp24 = new long[input.length];\n\tlong[] temp25 = new long[input.length];\n\tlong[] temp26 = new long[input.length];\n\tlong[] temp27 = new long[input.length];\n\tlong[] temp28 = new long[input.length];\n\tlong[] temp29 = new long[input.length];\n\tlong[] temp30 = new long[input.length];\n\tlong[] temp31 = new long[input.length];\n\tlong[] temp32 = new long[input.length];\n\tlong[] temp33 = new long[input.length];\n\tlong[] temp34 = new long[input.length];\n\tlong[] temp35 = new long[input.length];\n\tlong[] temp36 = new",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i > 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i < k) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti = i + 1;\n\t}\n\twhile (i < input.length) \n\t{\n\t\toutput[i] = input[i];\n\t\ti = i + 1;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i-k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output;\n\tlong[] temp;\n\tlong i;\n\tlong j;\n\tlong n;\n\t\n\tn = input.length;\n\t\n\toutput = new long[n];\n\ttemp = new long[k];\n\t\n\tfor(i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(i = k; i < n; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tint j = 0;\n\tfor (int i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (int i = k - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\tfor (int i = k; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[input.length];\n\ttemp = input[0..k];\n\ttemp = temp.reverse;\n\toutput[0..k] = temp;\n\toutput[k..$] = input[k..$];\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tfor (i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong aa = 0;\n\tlong ab = 0;\n\tlong ac = 0;\n\tlong ad = 0;\n\tlong ae = 0;\n\tlong af = 0;\n\tlong ag = 0;\n\tlong ah = 0;\n\tlong ai = 0;\n\tlong aj = 0;\n\tlong ak = 0;\n\tlong al = 0;\n\tlong am = 0;\n\tlong an = 0;\n\tlong ao = 0;\n\tlong ap = 0;\n\tlong aq = 0;\n\tlong ar = 0;\n\tlong as = 0;\n\tlong at = 0;\n\tlong au = 0;\n\tlong av = 0;\n\tlong aw = 0;\n\tlong ax = 0;\n\tlong ay = 0;\n\tlong az = 0;\n\tlong ba = 0;\n\tlong bb = 0;\n\tlong bc = 0;\n\tlong bd = 0;\n\tlong be = 0;\n\tlong bf = 0;\n\tlong bg = 0;\n\tlong bh = 0;\n\tlong bi = 0;\n\tlong bj = 0;\n\tlong bk = 0;\n\tlong bl = 0;\n\tlong bm = 0;\n\tlong bn = 0;\n\tlong bo = 0;\n\tlong bp = 0;\n\tlong bq = 0;\n\tlong br = 0;\n\tlong bs = 0;\n\tlong bt = 0;\n\tlong bu = 0;\n\tlong",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < input.length; i++)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\tfor(long i = k - 1; i >= 0; i--)\n\t{\n\t\tresult[j++] = temp[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tfor (; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = temp[i];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\treturn output;\n}",
    "{\n\tauto result = input.dup;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = k - 1; i >= 0; i--)\n\t{\n\t\toutput[j] = temp[i];\n\t\tj++;\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) \n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tfor (long i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = 0; i < k; i++) {\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) {\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tlong i;\n\tlong j;\n\tlong l;\n\t\n\tfor(i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(j = 0; j < input.length - k; j++)\n\t{\n\t\ttemp2[j] = input[j + k];\n\t}\n\t\n\tfor(l = 0; l < k; l++)\n\t{\n\t\toutput[l] = temp[k - l - 1];\n\t}\n\t\n\tfor(l = 0; l < input.length - k; l++)\n\t{\n\t\toutput[l + k] = temp2[l];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\twhile(j < input.length - k)\n\t{\n\t\ttemp2[j] = input[k + j];\n\t\tj++;\n\t}\n\twhile(m < k)\n\t{\n\t\toutput[m] = temp[k - m - 1];\n\t\tm++;\n\t}\n\twhile(l < input.length - k)\n\t{\n\t\toutput[k + l] = temp2[l];\n\t\tl++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\twhile (i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti = i + 1;\n\t}\n\ttemp = temp.reverse;\n\twhile (j < k)\n\t{\n\t\toutput[j] = temp[j];\n\t\tj = j + 1;\n\t}\n\twhile (l < input.length - k)\n\t{\n\t\toutput[j] = input[k];\n\t\tj = j + 1;\n\t\tk = k + 1;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\ttemp = input[0..k];\n\ttemp2 = input[k..$];\n\t\n\ttemp = temp.reverse;\n\t\n\toutput = temp ~ temp2;\n\t\n\treturn output;\n}",
    "{\n\tlong[] result;\n\tlong i,j;\n\t\n\tresult = new long[input.length];\n\t\n\ti = 0;\n\tj = k;\n\t\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti = i + 1;\n\t\tj = j - 1;\n\t}\n\t\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti = i + 1;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i;\n\tfor (i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) {\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}",
    "{\n\tlong[] result = new long[input.length];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = k;\n\twhile (i < j) \n\t{\n\t\tinput[i] = input[i] ^ input[j];\n\t\tinput[j] = input[i] ^ input[j];\n\t\tinput[i] = input[i] ^ input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn input;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong[] temp3 = new long[input.length];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp3 = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp3[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) {\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) {\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\tresult = new long[$];\n\tfor(i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k-i-1];\n\t}\n\tfor(i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\ttemp = input[0..k];\n\ttemp2 = input[k..$];\n\t\n\ttemp = temp.reverse;\n\toutput = temp ~ temp2;\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\tlong[] temp3 = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\ttemp2[i] = input[i+k];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp3[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp3[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length-k; i++)\n\t{\n\t\toutput[i+k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tforeach(i; k .. input.length)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tforeach(i; 0 .. k)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tforeach(i; k .. input.length)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}"
  ]
}
{
  "name": "mbpp_578_interleave_lists",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to interleave 3 arrays of the same length into a single flat array.\n\t\n*/\nlong[] interleave_lists(long[] list1, long[] list2, long[] list3) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_578_interleave_lists.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = interleave_lists;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L], [10L, 20L, 30L, 40L, 50L, 60L, 70L], [100L, 200L, 300L, 400L, 500L, 600L, 700L]) == [1L, 10L, 100L, 2L, 20L, 200L, 3L, 30L, 300L, 4L, 40L, 400L, 5L, 50L, 500L, 6L, 60L, 600L, 7L, 70L, 700L]);\n    assert(candidate([10L, 20L], [15L, 2L], [5L, 10L]) == [10L, 15L, 5L, 20L, 2L, 10L]);\n    assert(candidate([11L, 44L], [10L, 15L], [20L, 5L]) == [11L, 10L, 20L, 44L, 15L, 5L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length + list2.length + list3.length;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tforeach(int index; 0..result.length)\n\t{\n\t\tif(i < list1.length)\n\t\t{\n\t\t\tresult[index] = list1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(j < list2.length)\n\t\t{\n\t\t\tresult[index] = list2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(k < list3.length)\n\t\t{\n\t\t\tresult[index] = list3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i*3] = item;\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, item; list1)\n\t{\n\t\tresult ~= item;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tresult[i] = num;\n\t\ti++;\n\t}\n\tforeach(long num; list2)\n\t{\n\t\tresult[i] = num;\n\t\ti++;\n\t}\n\tforeach(long num; list3)\n\t{\n\t\tresult[i] = num;\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach (i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t}\n\tforeach(i, elem; list2)\n\t{\n\t\tresult[i * 3 + 1] = elem;\n\t}\n\tforeach(i, elem; list3)\n\t{\n\t\tresult[i * 3 + 2] = elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i*3] = elem;\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t}\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tresult[i * 3 + 1] = item;\n\t}\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tresult[i * 3 + 2] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i] = elem;\n\t\tresult[i + list1.length] = list2[i];\n\t\tresult[i + list1.length + list2.length] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach (i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, e; list1)\n\t{\n\t\tresult ~= e;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] list_of_lists = [list1, list2, list3];\n\tlong[] lengths = [list1.length, list2.length, list3.length];\n\tlong max_length = max(lengths);\n\tlong list_index = 0;\n\tlong result_index = 0;\n\t\n\twhile(result_index < result.length)\n\t{\n\t\tif(list_index < max_length)\n\t\t{\n\t\t\tforeach(list; list_of_lists)\n\t\t\t{\n\t\t\t\tif(list_index < list.length)\n\t\t\t\t{\n\t\t\t\t\tresult[result_index] = list[list_index];\n\t\t\t\t\tresult_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist_index++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\t//assert(list1.length == list2.length && list2.length == list3.length);\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach (i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i*3] = item;\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i] = list1[i];\n\t\tresult[i + list1.length] = list2[i];\n\t\tresult[i + list1.length + list2.length] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; zip(list1, list2, list3))\n\t{\n\t\tresult[i * 3] = item[0];\n\t\tresult[i * 3 + 1] = item[1];\n\t\tresult[i * 3 + 2] = item[2];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, val; list1)\n\t{\n\t\tresult[i*3] = val;\n\t\tresult[i*3 + 1] = list2[i];\n\t\tresult[i*3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tresult[list1.length + i] = item;\n\t}\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tresult[list1.length + list2.length + i] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tint index = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[index] = list1[i];\n\t\tresult[index + 1] = list2[i];\n\t\tresult[index + 2] = list3[i];\n\t\t\n\t\tindex += 3;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, val; list1)\n\t{\n\t\tresult[i * 3] = val;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length + list2.length + list3.length;\n\t\n\tlong index = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[index] = list1[i];\n\t\tindex++;\n\t\tresult[index] = list2[i];\n\t\tindex++;\n\t\tresult[index] = list3[i];\n\t\tindex++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tlong[] list_of_lists = [list1, list2, list3];\n\t\n\tforeach(long[] list; list_of_lists)\n\t{\n\t\tforeach(long i, long j; 0 .. list.length)\n\t\t{\n\t\t\tresult[i + j] = list[i];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i] = list1[i];\n\t\tresult[i + list1.length] = list2[i];\n\t\tresult[i + list1.length + list1.length] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor(int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t}\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tresult[i * 3 + 1] = item;\n\t}\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tresult[i * 3 + 2] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0..list1.length) \n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, elem; list1)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] temp = new long[list1.length];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\ttemp[i] = list1[i];\n\t}\n\t\n\tfor (int i = 0; i < list2.length; i++)\n\t{\n\t\ttemp[i] = list2[i];\n\t}\n\t\n\tfor (int i = 0; i < list3.length; i++)\n\t{\n\t\ttemp[i] = list3[i];\n\t}\n\t\n\tint j = 0;\n\tfor (int i = 0; i < temp.length; i++)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj += 3;\n\t}\n\t\n\tj = 1;\n\tfor (int i = 0; i < temp.length; i++)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj += 3;\n\t}\n\t\n\tj = 2;\n\tfor (int i = 0; i < temp.length; i++)\n\t{\n\t\tresult[j] = temp[i];\n\t\tj += 3;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tlong[] list_array = [list1, list2, list3];\n\t\n\tforeach(long[] list; list_array)\n\t{\n\t\tforeach(long i, long item; list)\n\t\t{\n\t\t\tresult[i] = item;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < list1.length && j < list2.length && k < list3.length)\n\t{\n\t\tresult[l++] = list1[i++];\n\t\tresult[l++] = list2[j++];\n\t\tresult[l++] = list3[k++];\n\t}\n\t\n\twhile (i < list1.length)\n\t{\n\t\tresult[l++] = list1[i++];\n\t}\n\t\n\twhile (j < list2.length)\n\t{\n\t\tresult[l++] = list2[j++];\n\t}\n\t\n\twhile (k < list3.length)\n\t{\n\t\tresult[l++] = list3[k++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length * 3;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint i = 0;\n\tforeach(long l; list1)\n\t{\n\t\tresult[i] = l;\n\t\ti++;\n\t}\n\tforeach(long l; list2)\n\t{\n\t\tresult[i] = l;\n\t\ti++;\n\t}\n\tforeach(long l; list3)\n\t{\n\t\tresult[i] = l;\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult.length = list1.length + list2.length + list3.length;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tresult[i + list1.length] = item;\n\t}\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tresult[i + list1.length + list2.length] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < list1.length && j < list2.length && k < list3.length) \n\t{\n\t\tresult[l] = list1[i];\n\t\tresult[l+1] = list2[j];\n\t\tresult[l+2] = list3[k];\n\t\ti++;\n\t\tj++;\n\t\tk++;\n\t\tl+=3;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, ref elem; result)\n\t{\n\t\tif(i % 3 == 0)\n\t\t\telem = list1[i / 3];\n\t\telse if(i % 3 == 1)\n\t\t\telem = list2[i / 3];\n\t\telse\n\t\t\telem = list3[i / 3];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tlong[] lists = [list1, list2, list3];\n\t\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long i, long value; list)\n\t\t{\n\t\t\tresult[i] = value;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint index = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[index] = list1[i];\n\t\tindex++;\n\t\tresult[index] = list2[i];\n\t\tindex++;\n\t\tresult[index] = list3[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long i, long j; list)\n\t\t{\n\t\t\tresult[j] = i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tlong[] lengths = [list1.length, list2.length, list3.length];\n\tlong[] indexes = [0, 0, 0];\n\tlong[] max_indexes = [list1.length, list2.length, list3.length];\n\tlong[] min_indexes = [0, 0, 0];\n\tlong[] max_index = max(max_indexes);\n\tlong[] min_index = min(min_indexes);\n\tlong[] max_length = max(lengths);\n\tlong[] min_length = min(lengths);\n\tlong[] max_list = lists[max_index];\n\tlong[] min_list = lists[min_index];\n\tlong[] mid_list = lists[3 - max_index - min_index];\n\tlong[] mid_index = indexes[3 - max_index - min_index];\n\tlong[] mid_length = lengths[3 - max_index - min_index];\n\tlong[] mid_max_index = max_indexes[3 - max_index - min_index];\n\tlong[] mid_min_index = min_indexes[3 - max_index - min_index];\n\tlong[] max_index_value = max_indexes[max_index];\n\tlong[] min_index_value = min_indexes[min_index];\n\tlong[] mid_index_value = indexes[3 - max_index - min_index];\n\tlong[] max_length_value = lengths[max_index];\n\tlong[] min_length_value = lengths[min_index];\n\tlong[] mid_length_value = lengths[3 - max_index - min_index];\n\tlong[] max_list_value = lists[max_index];\n\tlong[] min_list_value = lists[min_index];\n\tlong[] mid_list_value = lists[3 - max_index - min_index];\n\tlong[] max_index_value_value = max_indexes[max_index];\n\tlong[] min_index_value_value",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint index = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tresult[index] = item;\n\t\tindex++;\n\t\tresult[index] = list2[i];\n\t\tindex++;\n\t\tresult[index] = list3[i];\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, item; list1)\n\t{\n\t\tresult ~= item;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tlong[] temp = new long[list1.length];\n\t\n\tfor(int i = 0; i < list1.length; i++)\n\t{\n\t\ttemp[i] = list1[i];\n\t}\n\t\n\tfor(int i = 0; i < list2.length; i++)\n\t{\n\t\ttemp[i] = list2[i];\n\t}\n\t\n\tfor(int i = 0; i < list3.length; i++)\n\t{\n\t\ttemp[i] = list3[i];\n\t}\n\t\n\tfor(int i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, item; list1)\n\t{\n\t\tresult ~= item;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tlong[] list_of_lists = [list1, list2, list3];\n\t\n\tforeach(long[] list; list_of_lists)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length * 3;\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, element; list1)\n\t{\n\t\tresult[i * 3] = element;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach (i, v; list1)\n\t\tresult[i * 3] = v;\n\t\n\tforeach (i, v; list2)\n\t\tresult[i * 3 + 1] = v;\n\t\n\tforeach (i, v; list3)\n\t\tresult[i * 3 + 2] = v;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, item; list1)\n\t{\n\t\tresult ~= item;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tlong[] list_of_lists = [list1, list2, list3];\n\tforeach(long[] list; list_of_lists) \n\t{\n\t\tforeach(long i, long item; list) \n\t\t{\n\t\t\tresult[i * 3 + list_of_lists.indexOf(list)] = item;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\t\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long i, long value; list)\n\t\t{\n\t\t\tresult[i] = value;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, x; list1)\n\t{\n\t\tresult ~= x;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, elem; list1)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (long i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (long i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult.length = list1.length + list2.length + list3.length;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tresult[i + list1.length] = item;\n\t}\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tresult[i + list1.length + list2.length] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tlong[] lengths = [list1.length, list2.length, list3.length];\n\tlong[] indices = [0, 0, 0];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong minIndex = 0;\n\t\tforeach(j; 1 .. lists.length)\n\t\t{\n\t\t\tif(indices[j] < lengths[j] && lists[j][indices[j]] < lists[minIndex][indices[minIndex]])\n\t\t\t{\n\t\t\t\tminIndex = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = lists[minIndex][indices[minIndex]];\n\t\tindices[minIndex]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] interleaved = new long[list1.length * 3];\n\t\n\tfor(int i = 0; i < list1.length; i++)\n\t{\n\t\tinterleaved[i * 3] = list1[i];\n\t\tinterleaved[i * 3 + 1] = list2[i];\n\t\tinterleaved[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn interleaved;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] list_of_lists = [list1, list2, list3];\n\tlong[] lengths = [list1.length, list2.length, list3.length];\n\tlong[] indexes = [0, 0, 0];\n\tlong max_length = max(lengths);\n\t\n\tfor (long i = 0; i < max_length; i++)\n\t{\n\t\tfor (long j = 0; j < list_of_lists.length; j++)\n\t\t{\n\t\t\tif (indexes[j] < lengths[j])\n\t\t\t{\n\t\t\t\tresult[i * list_of_lists.length + j] = list_of_lists[j][indexes[j]];\n\t\t\t\tindexes[j]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, elem; list1)\n\t{\n\t\tresult ~= elem;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tlong[] lengths = [list1.length, list2.length, list3.length];\n\tlong[] indexes = [0, 0, 0];\n\t\n\tforeach(long i; 0 .. result.length)\n\t{\n\t\tlong list_index = i % 3;\n\t\tlong list_length = lengths[list_index];\n\t\tlong list_index_value = indexes[list_index];\n\t\t\n\t\tif(list_index_value < list_length)\n\t\t{\n\t\t\tresult[i] = lists[list_index][list_index_value];\n\t\t\tindexes[list_index]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tlong[] temp = new long[list1.length];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\ttemp[i] = list1[i];\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\ttemp[i] = list2[i];\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\ttemp[i] = list3[i];\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i + list1.length] = temp[i + list1.length];\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i + list1.length * 2] = temp[i + list1.length * 2];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint i = 0;\n\tforeach(long item; list1)\n\t{\n\t\tresult[i] = item;\n\t\ti++;\n\t}\n\tforeach(long item; list2)\n\t{\n\t\tresult[i] = item;\n\t\ti++;\n\t}\n\tforeach(long item; list3)\n\t{\n\t\tresult[i] = item;\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint index = 0;\n\tforeach (i; 0 .. list1.length) \n\t{\n\t\tresult[index] = list1[i];\n\t\tresult[index + 1] = list2[i];\n\t\tresult[index + 2] = list3[i];\n\t\tindex += 3;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i] = e;\n\t}\n\t\n\tforeach(i, e; list2)\n\t{\n\t\tresult[i + list1.length] = e;\n\t}\n\t\n\tforeach(i, e; list3)\n\t{\n\t\tresult[i + list1.length + list2.length] = e;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tlong i = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long item; list)\n\t\t{\n\t\t\tresult[i] = item;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\t\n\tforeach (i, e; list1)\n\t{\n\t\tresult[i] = e;\n\t}\n\t\n\tforeach (i, e; list2)\n\t{\n\t\tresult[i + list1.length] = e;\n\t}\n\t\n\tforeach (i, e; list3)\n\t{\n\t\tresult[i + list1.length + list2.length] = e;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length + list2.length + list3.length;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tint index = 0;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[index] = list1[i];\n\t\tresult[index + 1] = list2[i];\n\t\tresult[index + 2] = list3[i];\n\t\tindex += 3;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(index, elem; list1)\n\t{\n\t\tresult[index * 3] = elem;\n\t\tresult[index * 3 + 1] = list2[index];\n\t\tresult[index * 3 + 2] = list3[index];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tforeach (i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t}\n\tforeach (i, e; list2)\n\t{\n\t\tresult[i * 3 + 1] = e;\n\t}\n\tforeach (i, e; list3)\n\t{\n\t\tresult[i * 3 + 2] = e;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long i, long value; list)\n\t\t{\n\t\t\tresult[i] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, item; list1)\n\t{\n\t\tresult ~= item;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length + list2.length + list3.length;\n\t\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tresult[i] = elem;\n\t\ti++;\n\t}\n\t\n\tforeach(elem; list2)\n\t{\n\t\tresult[i] = elem;\n\t\ti++;\n\t}\n\t\n\tforeach(elem; list3)\n\t{\n\t\tresult[i] = elem;\n\t\ti++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length * 3;\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3 + 1] = list2[i];\n\t\tresult[i*3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, element; list1)\n\t{\n\t\tresult[i * 3] = element;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, x; list1)\n\t{\n\t\tresult[i * 3] = x;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach (i, elem; list1)\n\t{\n\t\tresult[i * 3] = elem;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[i*3] = list1[i];\n\t\tresult[i*3+1] = list2[i];\n\t\tresult[i*3+2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = list1.length * 3;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, item; list1)\n\t{\n\t\tresult[i * 3] = item;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\tforeach(i, e; list1)\n\t{\n\t\tresult[i * 3] = e;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tresult[i * 3] = v;\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length * 3];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[i * 3] = list1[i];\n\t\tresult[i * 3 + 1] = list2[i];\n\t\tresult[i * 3 + 2] = list3[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length + list2.length + list3.length];\n\tlong[] lists = [list1, list2, list3];\n\t\n\tforeach(long[] list; lists)\n\t{\n\t\tforeach(long i, long item; list)\n\t\t{\n\t\t\tresult[i] = item;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, elem; list1)\n\t{\n\t\tresult ~= list1[i];\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(long i, long val; list1)\n\t{\n\t\tresult ~= val;\n\t\tresult ~= list2[i];\n\t\tresult ~= list3[i];\n\t}\n\treturn result;\n}"
  ]
}
{
  "name": "mbpp_108_merge_sorted_list",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to merge three arrays into a single sorted array.\n\t\n*/\nlong[] merge_sorted_list(long[] num1, long[] num2, long[] num3) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = merge_sorted_list;\n\n    assert(candidate([25L, 24L, 15L, 4L, 5L, 29L, 110L], [19L, 20L, 11L, 56L, 25L, 233L, 154L], [24L, 26L, 54L, 48L]) == [4L, 5L, 11L, 15L, 19L, 20L, 24L, 24L, 25L, 25L, 26L, 29L, 48L, 54L, 56L, 110L, 154L, 233L]);\n    assert(candidate([1L, 3L, 5L, 6L, 8L, 9L], [2L, 5L, 7L, 11L], [1L, 4L, 7L, 8L, 12L]) == [1L, 1L, 2L, 3L, 4L, 5L, 5L, 6L, 7L, 7L, 8L, 8L, 9L, 11L, 12L]);\n    assert(candidate([18L, 14L, 10L, 9L, 8L, 7L, 9L, 3L, 2L, 4L, 1L], [25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L], [12L, 74L, 9L, 50L, 61L, 41L]) == [1L, 2L, 3L, 4L, 7L, 8L, 9L, 9L, 9L, 10L, 12L, 14L, 14L, 18L, 22L, 25L, 25L, 35L, 41L, 50L, 58L, 61L, 65L, 74L, 75L, 85L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0, m = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile (l < temp.length && m < num3.length) \n\t{\n\t\tif (temp[l] < num3[m]) \n\t\t{\n\t\t\ttemp2[k] = temp[l];\n\t\t\tl++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp2[k] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (l < temp.length) \n\t{\n\t\ttemp2[k] = temp[l];\n\t\tl++;\n\t\tk++;\n\t}\n\t\n\twhile (m < num3.length) \n\t{\n\t\ttemp2[k] = num3[m];\n\t\tm++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\t// Merge first two arrays\n\tint i = 0, j = 0, k = 0;\n\twhile(i < num1.length && j < num2.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// Merge the third array\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile(i < temp.length && j < num3.length) \n\t{\n\t\tif(temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\tint index = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[index] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[index] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[index] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[index] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tindex++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[index] = num1[i];\n\t\ti++;\n\t\tindex++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[index] = num2[j];\n\t\tj++;\n\t\tindex++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[index] = num3[k];\n\t\tk++;\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\tif (num1[i] < num3[k]) {\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (num2[j] < num3[k]) {\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) {\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) {\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) {\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile(i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile(j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile(k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tlong[] nums1 = num1.dup;\n\tlong[] nums2 = num2.dup;\n\tlong[] nums3 = num3.dup;\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < nums1.length && j < nums2.length && k < nums3.length)\n\t{\n\t\tif(nums1[i] <= nums2[j] && nums1[i] <= nums3[k])\n\t\t{\n\t\t\tnums[i + j + k] = nums1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(nums2[j] <= nums1[i] && nums2[j] <= nums3[k])\n\t\t{\n\t\t\tnums[i + j + k] = nums2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(nums3[k] <= nums1[i] && nums3[k] <= nums2[j])\n\t\t{\n\t\t\tnums[i + j + k] = nums3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < nums1.length)\n\t{\n\t\tnums[i + j + k] = nums1[i];\n\t\ti++;\n\t}\n\t\n\twhile(j < nums2.length)\n\t{\n\t\tnums[i + j + k] = nums2[j];\n\t\tj++;\n\t}\n\t\n\twhile(k < nums3.length)\n\t{\n\t\tnums[i + j + k] = nums3[k];\n\t\tk++;\n\t}\n\t\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\t// Merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// Merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] =",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\ttemp[0] = num1[index[0]];\n\t\ttemp[1] = num2[index[1]];\n\t\ttemp[2] = num3[index[2]];\n\t\t\n\t\tresult[i] = min(temp);\n\t\t\n\t\tif (result[i] == temp[0]) \n\t\t{\n\t\t\tindex[0]++;\n\t\t}\n\t\telse if (result[i] == temp[1]) \n\t\t{\n\t\t\tindex[1]++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tindex[2]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(temp, num3);\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\t\n\tfor(int i = 0; i < result.length; i++)\n\t{\n\t\ttemp[0] = num1[index[0]];\n\t\ttemp[1] = num2[index[1]];\n\t\ttemp[2] = num3[index[2]];\n\t\t\n\t\tlong min = minElement(temp);\n\t\t\n\t\tif(min == temp[0])\n\t\t\tindex[0]++;\n\t\telse if(min == temp[1])\n\t\t\tindex[1]++;\n\t\telse\n\t\t\tindex[2]++;\n\t\t\n\t\tresult[i] = min;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\t\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tif(indices[i] < nums[i].length)\n\t\t{\n\t\t\tresult ~= nums[i][indices[i]];\n\t\t\tindices[i]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\tforeach(long n; num1)\n\t{\n\t\tresult[i++] = n;\n\t}\n\tforeach(long n; num2)\n\t{\n\t\tresult[i++] = n;\n\t}\n\tforeach(long n; num3)\n\t{\n\t\tresult[i++] = n;\n\t}\n\tsort(result);\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t// merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\t// merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k++] = temp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\ttemp2[k++] = temp[i++];\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\ttemp2[k++] = num3[j++];\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num2[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\ttemp.sort();\n\t\t\n\t\tresult[l] = temp[0];\n\t\t\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse if (temp[0] == num3[k])\n\t\t\tk++;\n\t\t\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\tsort(temp);\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse\n\t\t\tj++;\n\t\tl++;\n\t}\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num3[k];\n\t\tsort(temp);\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\twhile (j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num2[j];\n\t\ttemp[1] = num3[k];\n\t\tsort(temp);\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num2[j])\n\t\t\tj++;\n\t\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) {\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) {\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) {\n\t\tif (temp[i] < num3[j]) {\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) {\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) {\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) {\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) {\n\t\t\tresult[l++] = num1[i++];\n\t\t} else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n\t\t\tresult[l++] = num2[j++];\n\t\t} else {\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && j < num2.length) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\tresult[l++] = num1[i++];\n\t\t} else {\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && k < num3.length) {\n\t\tif (num1[i] < num3[k]) {\n\t\t\tresult[l++] = num1[i++];\n\t\t} else {\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile (j < num2.length && k < num3.length) {\n\t\tif (num2[j] < num3[k]) {\n\t\t\tresult[l++] = num2[j++];\n\t\t} else {\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) {\n\t\tresult[l++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length) {\n\t\tresult[l++] = num2[",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\tif (i < num1.length) \n\t{\n\t\twhile (i < num1.length) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t}\n\tif (j < num2.length) \n\t{\n\t\twhile (j < num2.length) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t}\n\tif (k < num3.length) \n\t{\n\t\twhile (k < num3.length) \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[",
    "{\n\tauto result = new long[];\n\tauto num1_len = num1.length;\n\tauto num2_len = num2.length;\n\tauto num3_len = num3.length;\n\t\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\t\n\twhile (i < num1_len && j < num2_len && k < num3_len)\n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult ~= num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult ~= num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= num3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile (i < num1_len)\n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\t\n\twhile (j < num2_len)\n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\t\n\twhile (k < num3_len)\n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\tlong[] count = new long[3];\n\tlong[] length = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong[] temp_count = new long[3];\n\tlong[] temp_length = new long[3];\n\tlong[] temp_max = new long[3];\n\tlong[] temp_min = new long[3];\n\tlong[] temp_temp = new long[3];\n\tlong[] temp_temp_index = new long[3];\n\tlong[] temp_temp_count = new long[3];\n\tlong[] temp_temp_length = new long[3];\n\tlong[] temp_temp_max = new long[3];\n\tlong[] temp_temp_min = new long[3];\n\tlong[] temp_temp_temp = new long[3];\n\tlong[] temp_temp_temp_index = new long[3];\n\tlong[] temp_temp_temp_count = new long[3];\n\tlong[] temp_temp_temp_length = new long[3];\n\tlong[] temp_temp_temp_max = new long[3];\n\tlong[] temp_temp_temp_min = new long[3];\n\tlong[] temp_temp_temp_temp = new long[3];\n\tlong[] temp_temp_temp_temp_index = new long[3];\n\tlong[] temp_temp_temp_temp_count = new long[3];\n\tlong[] temp_temp_temp_temp_length = new long[3];\n\tlong[] temp_temp_temp_temp_max = new long[3];\n\tlong[] temp_temp_temp_temp_min = new long[3];\n\tlong[] temp_temp_temp_temp_temp = new long[3];\n\tlong[] temp_temp_temp_temp_temp_index = new long[3];\n\tlong[] temp_temp_temp_temp_temp_count",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[result.length];\n\tlong[] temp2 = new long[result.length];\n\tlong[] temp3 = new long[result.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length) \n\t{\n\t\ttemp[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length) \n\t{\n\t\ttemp[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length && l < temp.length) \n\t{\n\t\tif(num3[k] < temp[l]) \n\t\t{\n\t\t\ttemp2[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp2[l] = temp[l];\n\t\t\tl++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length) \n\t{\n\t\ttemp2[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\twhile(l < temp.length) \n\t{\n\t\ttemp2[l] = temp[l];\n\t\tl++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j])\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\t// Merge num1 and num2 into result\n\tlong[] temp = merge_sorted_list(num1, num2);\n\t\n\t// Merge temp and num3 into result\n\tresult = merge_sorted_list(temp, num3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong index = 0;\n\t\n\ttemp[0] = num1[0];\n\ttemp[1] = num2[0];\n\ttemp[2] = num3[0];\n\t\n\ttemp_index[0] = 0;\n\ttemp_index[1] = 0;\n\ttemp_index[2] = 0;\n\t\n\twhile(index < result.length) \n\t{\n\t\tlong min = min(temp);\n\t\tresult[index] = min;\n\t\t\n\t\tif(min == num1[temp_index[0]]) \n\t\t{\n\t\t\ttemp_index[0]++;\n\t\t\tif(temp_index[0] < num1.length) \n\t\t\t{\n\t\t\t\ttemp[0] = num1[temp_index[0]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttemp[0] = long.max;\n\t\t\t}\n\t\t}\n\t\telse if(min == num2[temp_index[1]]) \n\t\t{\n\t\t\ttemp_index[1]++;\n\t\t\tif(temp_index[1] < num2.length) \n\t\t\t{\n\t\t\t\ttemp[1] = num2[temp_index[1]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttemp[1] = long.max;\n\t\t\t}\n\t\t}\n\t\telse if(min == num3[temp_index[2]]) \n\t\t{\n\t\t\ttemp_index[2]++;\n\t\t\tif(temp_index[2] < num3.length) \n\t\t\t{\n\t\t\t\ttemp[2] = num3[temp_index[2]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttemp[2] = long.max;\n\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\ti = 0;\n\tj = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\ti = 0;\n\tj = 0;\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[l] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < temp.length)\n\t{\n\t\tresult[l] = temp[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num3.length)\n\t{\n\t\tresult[l] = num3[j];\n\t\tj++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\ttemp3 = temp2.sort();\n\t\n\treturn temp3;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[i + j + k] = num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[i + j + k] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[i + j + k] = num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[i + j + k] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[i + j + k] = num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[i + j + k] = num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[i + j + k] = num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if (num3[k] < num1[i] && num3[k] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = new long[3];\n\tnums[0] = 0;\n\tnums[1] = 0;\n\tnums[2] = 0;\n\t\n\tfor (int i = 0; i < result.length; i++) \n\t{\n\t\tif (nums[0] < num1.length && nums[1] < num2.length && nums[2] < num3.length)\n\t\t{\n\t\t\tif (num1[nums[0]] < num2[nums[1]] && num1[nums[0]] < num3[nums[2]])\n\t\t\t{\n\t\t\t\tresult[i] = num1[nums[0]];\n\t\t\t\tnums[0]++;\n\t\t\t}\n\t\t\telse if (num2[nums[1]] < num1[nums[0]] && num2[nums[1]] < num3[nums[2]])\n\t\t\t{\n\t\t\t\tresult[i] = num2[nums[1]];\n\t\t\t\tnums[1]++;\n\t\t\t}\n\t\t\telse if (num3[nums[2]] < num1[nums[0]] && num3[nums[2]] < num2[nums[1]])\n\t\t\t{\n\t\t\t\tresult[i] = num3[nums[2]];\n\t\t\t\tnums[2]++;\n\t\t\t}\n\t\t}\n\t\telse if (nums[0] < num1.length && nums[1] < num2.length)\n\t\t{\n\t\t\tif (num1[nums[0]] < num2[nums[1]])\n\t\t\t{\n\t\t\t\tresult[i] = num1[nums[0]];\n\t\t\t\tnums[0]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] = num2[nums[1]];\n\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnums[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnums[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong min_index = 0;\n\t\tlong min_value = nums[0][indices[0]];\n\t\t\n\t\tforeach(j; 1 .. nums.length)\n\t\t{\n\t\t\tif(indices[j] < nums[j].length)\n\t\t\t{\n\t\t\t\tif(nums[j][indices[j]] < min_value)\n\t\t\t\t{\n\t\t\t\t\tmin_index = j;\n\t\t\t\t\tmin_value = nums[j][indices[j]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = min_value;\n\t\tindices[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\tlong[] temp3 = new long[num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(num1, num3);\n\ttemp3 = merge_sorted_list(num2, num3);\n\t\n\tresult = merge_sorted_list(temp, temp2);\n\tresult = merge_sorted_list(result, temp3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] lengths = [num1.length, num2.length, num3.length];\n\tlong[] indexes = [0, 0, 0];\n\t\n\tlong[] min_indexes = [0, 0, 0];\n\tlong[] min_values = [0, 0, 0];\n\t\n\tlong min_value = 0;\n\tlong min_index = 0;\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\tmin_value = long.max;\n\t\tmin_index = -1;\n\t\t\n\t\tfor (long j = 0; j < nums.length; j++) \n\t\t{\n\t\t\tif (indexes[j] < lengths[j] && nums[j][indexes[j]] < min_value) \n\t\t\t{\n\t\t\t\tmin_value = nums[j][indexes[j]];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = min_value;\n\t\tindexes[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) {\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) {\n\t\t\tresult ~= num1[i];\n\t\t\ti++;\n\t\t} else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n\t\t\tresult ~= num2[j];\n\t\t\tj++;\n\t\t} else {\n\t\t\tresult ~= num3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) {\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) {\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) {\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\tlong[] temp3 = new long[num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\tif(i < num1.length)\n\t{\n\t\twhile(i < num1.length)\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\tif(j < num2.length)\n\t{\n\t\twhile(j < num2.length)\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(l < num1.length && m < num3.length)\n\t{\n\t\tif(num1[l] < num3[m])\n\t\t{\n\t\t\ttemp2[n] = num1[l];\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[n] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tn++;\n\t}\n\t\n\tif(l < num1.length)\n\t{\n\t\twhile(l < num1.length)\n\t\t{\n\t\t\ttemp",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse if (num3[k] <= num1[i] && num3[k] <= num2[j]) \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] min_count = new long[3];\n\tlong[] min_count_index = new long[3];\n\tlong[] min_count_index_value = new long[3];\n\tlong[] min_count_index_value_count = new long[3];\n\tlong[] min_count_index_value_count_index = new long[3];\n\tlong[] min_count_index_value_count_index_value = new long[3];\n\tlong[] min_count_index_value_count_index_value_count = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index_value = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index_value_count = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index_value_count_index = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index_value_count_index_value = new long[3];\n\tlong[] min_count_index_value_count_index_value_count_index_value_count_index_value_count_index_value",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong[] index = new long[3];\n\tlong[] index_temp = new long[3];\n\tlong[] index_temp_index = new long[3];\n\tlong[] index_index = new long[3];\n\tlong[] index_index_temp = new long[3];\n\tlong[] index_index_index = new long[3];\n\tlong[] index_index_index_temp = new long[3];\n\tlong[] index_index_index_index = new long[3];\n\tlong[] index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_index_index = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_index_index_temp = new long[3];\n\tlong[] index_index_index_index_index_index_index_index_index_index_index = new",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[3];\n\tlong[] tmp_index = new long[3];\n\tlong[] tmp_size = new long[3];\n\tlong[] tmp_size_index = new long[3];\n\tlong[] tmp_size_index_size = new long[3];\n\t\n\ttmp[0] = num1[0];\n\ttmp[1] = num2[0];\n\ttmp[2] = num3[0];\n\t\n\ttmp_index[0] = 0;\n\ttmp_index[1] = 0;\n\ttmp_index[2] = 0;\n\t\n\ttmp_size[0] = num1.length;\n\ttmp_size[1] = num2.length;\n\ttmp_size[2] = num3.length;\n\t\n\ttmp_size_index[0] = 0;\n\ttmp_size_index[1] = 0;\n\ttmp_size_index[2] = 0;\n\t\n\ttmp_size_index_size[0] = 0;\n\ttmp_size_index_size[1] = 0;\n\ttmp_size_index_size[2] = 0;\n\t\n\tlong count = 0;\n\twhile (count < result.length) \n\t{\n\t\tlong min = minElement(tmp);\n\t\tlong min_index = minIndex(tmp);\n\t\t\n\t\tresult[count] = min;\n\t\t\n\t\ttmp_index[min_index]++;\n\t\ttmp_size_index[min_index]++;\n\t\t\n\t\tif (tmp_size_index[min_index] == tmp_size[min_index]) \n\t\t{\n\t\t\ttmp_size_index_size[min_index] = 1;\n\t\t}\n\t\t\n\t\tif (tmp_size_index_size[min_index] == 1) \n\t\t{\n\t\t\ttmp[min_index] = long.max;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttmp[min_index] = num",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tauto result = new long[];\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] num = new long[num1.length + num2.length + num3.length];\n\tlong[] num_1 = new long[num1.length + num2.length];\n\tlong[] num_2 = new long[num2.length + num3.length];\n\t\n\tnum_1 = merge_sorted_list(num1, num2);\n\tnum_2 = merge_sorted_list(num2, num3);\n\t\n\tnum = merge_sorted_list(num_1, num_2);\n\t\n\treturn num;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\tlong[] temp3 = new long[num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(num1, num3);\n\ttemp3 = merge_sorted_list(num2, num3);\n\t\n\tresult = merge_sorted_list(temp, temp2);\n\tresult = merge_sorted_list(result, temp3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result;\n\tlong[] tmp;\n\tlong[] tmp2;\n\tlong[] tmp3;\n\tlong[] tmp4;\n\tlong[] tmp5;\n\tlong[] tmp6;\n\tlong[] tmp7;\n\tlong[] tmp8;\n\tlong[] tmp9;\n\tlong[] tmp10;\n\tlong[] tmp11;\n\tlong[] tmp12;\n\tlong[] tmp13;\n\tlong[] tmp14;\n\tlong[] tmp15;\n\tlong[] tmp16;\n\tlong[] tmp17;\n\tlong[] tmp18;\n\tlong[] tmp19;\n\tlong[] tmp20;\n\tlong[] tmp21;\n\tlong[] tmp22;\n\tlong[] tmp23;\n\tlong[] tmp24;\n\tlong[] tmp25;\n\tlong[] tmp26;\n\tlong[] tmp27;\n\tlong[] tmp28;\n\tlong[] tmp29;\n\tlong[] tmp30;\n\tlong[] tmp31;\n\tlong[] tmp32;\n\tlong[] tmp33;\n\tlong[] tmp34;\n\tlong[] tmp35;\n\tlong[] tmp36;\n\tlong[] tmp37;\n\tlong[] tmp38;\n\tlong[] tmp39;\n\tlong[] tmp40;\n\tlong[] tmp41;\n\tlong[] tmp42;\n\tlong[] tmp43;\n\tlong[] tmp44;\n\tlong[] tmp45;\n\tlong[] tmp46;\n\tlong[] tmp47;\n\tlong[] tmp48;\n\tlong[] tmp49;\n\tlong[] tmp50;\n\tlong[] tmp51;\n\tlong[] tmp52;\n\tlong[] tmp53;\n\tlong[] tmp54;\n\tlong[] tmp55;\n\tlong[] tmp56;\n\tlong[] tmp57;\n\tlong[] tmp58;\n\tlong[] tmp59;\n\tlong[] tmp60;\n\tlong[] tmp61;\n\tlong[] tmp62;\n\tlong[] tmp63;\n\tlong[] tmp64;\n\tlong[] tmp65;\n\tlong[] tmp66;\n\tlong[] tmp67;\n\tlong[] tmp68;\n\tlong[] tmp69;\n\tlong[] tmp70;\n\tlong[] tmp71;\n\tlong[] tmp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[result.length];\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\tif(num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\ttemp[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\ttemp[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num3[k]) \n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t",
    "{\n\tlong[] result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\tlong[] temp3 = new long[num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(num1, num3);\n\ttemp3 = merge_sorted_list(num2, num3);\n\t\n\tresult = merge_sorted_list(temp, temp2);\n\tresult = merge_sorted_list(result, temp3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp;\n\tlong[] temp2;\n\tif (num1.length > num2.length)\n\t{\n\t\ttemp = num1;\n\t\tnum1 = num2;\n\t\tnum2 = temp;\n\t}\n\tif (num1.length > num3.length)\n\t{\n\t\ttemp = num1;\n\t\tnum1 = num3;\n\t\tnum3 = temp;\n\t}\n\tif (num2.length > num3.length)\n\t{\n\t\ttemp = num2;\n\t\tnum2 = num3;\n\t\tnum3 = temp;\n\t}\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse if (num3[k] <= num1[i] && num3[k] <= num2[j])\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] <= num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l]",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] max_index = new long[3];\n\tlong[] min_index_temp = new long[3];\n\tlong[] max_index_temp = new long[3];\n\tlong[] min_index_temp_temp = new long[3];\n\tlong[] max_index_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_index_temp_temp_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_index_temp_temp_temp_temp_temp_temp_temp_temp_temp = new long[3];\n\t",
    "{\n\tauto result = new long[num1.length + num2.length + num3.length];\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] temp = new long[3];\n\ttemp[0] = num1[0];\n\ttemp[1] = num2[0];\n\ttemp[2] = num3[0];\n\t\n\tlong[] temp_index = new long[3];\n\ttemp_index[0] = 0;\n\ttemp_index[1] = 0;\n\ttemp_index[2] = 0;\n\t\n\tint nums_index = 0;\n\t\n\twhile (nums_index < nums.length) \n\t{\n\t\tlong min = minElement(temp);\n\t\t\n\t\tif (temp_index[0] < num1.length && min == num1[temp_index[0]]) \n\t\t{\n\t\t\tnums[nums_index] = num1[temp_index[0]];\n\t\t\ttemp_index[0]++;\n\t\t\tif (temp_index[0] < num1.length) \n\t\t\t{\n\t\t\t\ttemp[0] = num1[temp_index[0]];\n\t\t\t}\n\t\t}\n\t\telse if (temp_index[1] < num2.length && min == num2[temp_index[1]]) \n\t\t{\n\t\t\tnums[nums_index] = num2[temp_index[1]];\n\t\t\ttemp_index[1]++;\n\t\t\tif (temp_index[1] < num2.length) \n\t\t\t{\n\t\t\t\ttemp[1] = num2[temp_index[1]];\n\t\t\t}\n\t\t}\n\t\telse if (temp_index[2] < num3.length && min == num3[temp_index[2]]) \n\t\t{\n\t\t\tnums[nums_index] = num3[temp_index[2]];\n\t\t\ttemp_index[2]++;\n\t\t\tif (temp_index[2] < num3.length) \n\t\t\t{\n\t\t\t\ttemp",
    "{\n\tlong[] result;\n\tint i,j,k;\n\ti = j = k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult ~= num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult ~= num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j])\n\t\t{\n\t\t\tresult ~= num3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tauto it = result.begin;\n\tauto it1 = num1.begin;\n\tauto it2 = num2.begin;\n\tauto it3 = num3.begin;\n\twhile (it1 != num1.end && it2 != num2.end && it3 != num3.end) \n\t{\n\t\tif (*it1 < *it2 && *it1 < *it3) \n\t\t{\n\t\t\t*it = *it1;\n\t\t\tit1++;\n\t\t}\n\t\telse if (*it2 < *it1 && *it2 < *it3) \n\t\t{\n\t\t\t*it = *it2;\n\t\t\tit2++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\t*it = *it3;\n\t\t\tit3++;\n\t\t}\n\t\tit++;\n\t}\n\twhile (it1 != num1.end) \n\t{\n\t\t*it = *it1;\n\t\tit1++;\n\t\tit++;\n\t}\n\twhile (it2 != num2.end) \n\t{\n\t\t*it = *it2;\n\t\tit2++;\n\t\tit++;\n\t}\n\twhile (it3 != num3.end) \n\t{\n\t\t*it = *it3;\n\t\tit3++;\n\t\tit++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\tint s;\n\tint t;\n\tint u;\n\tint v;\n\tint w;\n\tint x;\n\tint y;\n\tint z;\n\tint a;\n\tint b;\n\tint c;\n\tint d;\n\tint e;\n\tint f;\n\tint g;\n\tint h;\n\tint ii;\n\tint jj;\n\tint kk;\n\tint ll;\n\tint mm;\n\tint nn;\n\tint oo;\n\tint pp;\n\tint qq;\n\tint rr;\n\tint ss;\n\tint tt;\n\tint uu;\n\tint vv;\n\tint ww;\n\tint xx;\n\tint yy;\n\tint zz;\n\tint aa;\n\tint bb;\n\tint cc;\n\tint dd;\n\tint ee;\n\tint ff;\n\tint gg;\n\tint hh;\n\tint iii;\n\tint jjj;\n\tint kkk;\n\tint lll;\n\tint mmm;\n\tint nnn;\n\tint ooo;\n\tint ppp;\n\tint qqq;\n\tint rrr;\n\tint sss;\n\tint ttt;\n\tint uuu;\n\tint vvv;\n\tint www;\n\tint xxx;\n\tint yyy;\n\tint zzz;\n\tint aaaa;\n\tint bbbb;\n\tint cccc;\n\tint dddd;\n\tint eeee;\n\tint ffff;\n\tint gggg;\n\tint hhhh;\n\tint iiii;\n\tint jjjj;\n\tint kkkk;\n\tint llll;\n\tint mmmm;\n\tint nnnn;\n\tint oooo;\n\tint pppp;\n\tint",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp4 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp5 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp6 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp7 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp8 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp9 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp10 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp11 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp12 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp13 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp14 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp15 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp16 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp17 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp18 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp19 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp20 = new long[num1.length + num2",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k++] = temp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\tresult[k++] = temp[i++];\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\tresult[k++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[3];\n\tlong[] tmp_index = new long[3];\n\tlong[] tmp_index_max = new long[3];\n\tlong[] tmp_index_min = new long[3];\n\tlong[] tmp_index_min_value = new long[3];\n\tlong[] tmp_index_min_value_index = new long[3];\n\tlong[] tmp_index_min_value_index_max = new long[3];\n\tlong[] tmp_index_min_value_index_min = new long[3];\n\tlong[] tmp_index_min_value_index_min_value = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_max = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index_max = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index_min = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index_min_value = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index_min_value_index = new long[3];\n\tlong[] tmp_index_min_value_index_min_value_index_min_value_index_min_value_index_max = new long[3];\n\tlong[] tmp_index_min_value_index_min",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[l++] = temp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[l++] = temp[i++];\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[l++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = new long[3];\n\tnums[0] = num1.length;\n\tnums[1] = num2.length;\n\tnums[2] = num3.length;\n\t\n\tlong[] index = new long[3];\n\t\n\tlong min_index = 0;\n\tlong min_value = 0;\n\t\n\tfor(long i = 0; i < result.length; i++) \n\t{\n\t\tmin_value = long.max;\n\t\tfor(long j = 0; j < 3; j++) \n\t\t{\n\t\t\tif(index[j] < nums[j] && nums[j][index[j]] < min_value) \n\t\t\t{\n\t\t\t\tmin_value = nums[j][index[j]];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = min_value;\n\t\tindex[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] min_index = new long[3];\n\tlong[] min_value = new long[3];\n\t\n\tfor (int i = 0; i < 3; i++) {\n\t\tmin_index[i] = 0;\n\t\tmin_value[i] = nums[i][0];\n\t}\n\t\n\tfor (int i = 0; i < result.length; i++) {\n\t\tlong min = min_value[0];\n\t\tint min_index_index = 0;\n\t\tfor (int j = 1; j < 3; j++) {\n\t\t\tif (min_value[j] < min) {\n\t\t\t\tmin = min_value[j];\n\t\t\t\tmin_index_index = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = min;\n\t\tmin_index[min_index_index]++;\n\t\tif (min_index[min_index_index] < nums[min_index_index].length) {\n\t\t\tmin_value[min_index_index] = nums[min_index_index][min_index[min_index_index]];\n\t\t} else {\n\t\t\tmin_value[min_index_index] = long.max;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k++] = temp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k++] = temp[i++];\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] indices = [0, 0, 0];\n\t\n\twhile (true)\n\t{\n\t\tlong min = long.max;\n\t\tlong min_index = -1;\n\t\t\n\t\tfor (long i = 0; i < nums.length; i++)\n\t\t{\n\t\t\tif (indices[i] < nums[i].length)\n\t\t\t{\n\t\t\t\tif (nums[i][indices[i]] < min)\n\t\t\t\t{\n\t\t\t\t\tmin = nums[i][indices[i]];\n\t\t\t\t\tmin_index = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (min_index == -1)\n\t\t\tbreak;\n\t\t\n\t\tresult ~= min;\n\t\tindices[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\t\n\tfor (int i = 0; i < result.length; i++)\n\t{\n\t\tlong min = long.max;\n\t\tint min_index = -1;\n\t\tfor (int j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (indices[j] < nums[j].length && nums[j][indices[j]] < min)\n\t\t\t{\n\t\t\t\tmin = nums[j][indices[j]];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = min;\n\t\tindices[min_index]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp4 = new long[num1.length + num2.length + num3.length];\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\t\n\ttemp3 = temp2.sort();\n\t\n\treturn temp3;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] <= num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\tlong min_index = 0;\n\tlong min_value = 0;\n\tlong min_value_index = 0;\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\tmin_value = nums[0][indices[0]];\n\t\tmin_index = 0;\n\t\t\n\t\tfor (long j = 1; j < nums.length; j++) \n\t\t{\n\t\t\tif (indices[j] < nums[j].length) \n\t\t\t{\n\t\t\t\tif (nums[j][indices[j]] < min_value) \n\t\t\t\t{\n\t\t\t\t\tmin_value = nums[j][indices[j]];\n\t\t\t\t\tmin_index = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = min_value;\n\t\tindices[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp;\n\ttemp.length = num1.length + num2.length;\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\tlong[] temp3 = new long[num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(num1, num3);\n\ttemp3 = merge_sorted_list(num2, num3);\n\t\n\tresult = merge_sorted_list(temp, temp2);\n\tresult = merge_sorted_list(result, temp3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num2[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong[] temp_length = new long[3];\n\ttemp_length[0] = num1.length;\n\ttemp_length[1] = num2.length;\n\ttemp_length[2] = num3.length;\n\t\n\tfor (long i = 0; i < result.length; i++)\n\t{\n\t\ttemp[0] = num1[temp_index[0]];\n\t\ttemp[1] = num2[temp_index[1]];\n\t\ttemp[2] = num3[temp_index[2]];\n\t\t\n\t\tlong min_index = minElement(temp);\n\t\tresult[i] = temp[min_index];\n\t\t\n\t\ttemp_index[min_index]++;\n\t\tif (temp_index[min_index] >= temp_length[min_index])\n\t\t{\n\t\t\ttemp_index[min_index] = temp_length[min_index] - 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\ttemp_index[0] = 0;\n\ttemp_index[1] = 0;\n\ttemp_index[2] = 0;\n\tlong[] temp_length = new long[3];\n\ttemp_length[0] = num1.length;\n\ttemp_length[1] = num2.length;\n\ttemp_length[2] = num3.length;\n\tlong[] temp_index_result = new long[1];\n\ttemp_index_result[0] = 0;\n\t\n\twhile(temp_index[0] < temp_length[0] || temp_index[1] < temp_length[1] || temp_index[2] < temp_length[2])\n\t{\n\t\ttemp[0] = num1[temp_index[0]];\n\t\ttemp[1] = num2[temp_index[1]];\n\t\ttemp[2] = num3[temp_index[2]];\n\t\t\n\t\tlong min_index = min_index_of_array(temp);\n\t\t\n\t\tresult[temp_index_result[0]] = temp[min_index];\n\t\ttemp_index_result[0]++;\n\t\ttemp_index[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tlong min = minElement(temp);\n\t\t\n\t\tif (min == temp[0]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t\tindex[0] = i;\n\t\t}\n\t\telse if (min == temp[1]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t\tindex[1] = j;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t\tindex[2] = k;\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\ttemp[k++] = num1[i++];\n\t\t} else {\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) {\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length) {\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) {\n\t\tif (temp[i] < num3[j]) {\n\t\t\tresult[k++] = temp[i++];\n\t\t} else {\n\t\t\tresult[k++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile (i < temp.length) {\n\t\tresult[k++] = temp[i++];\n\t}\n\t\n\twhile (j < num3.length) {\n\t\tresult[k++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] lengths = [num1.length, num2.length, num3.length];\n\tlong[] indices = [0, 0, 0];\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\tlong min_index = 0;\n\t\tlong min_value = nums[0][indices[0]];\n\t\tfor (long j = 1; j < nums.length; j++) \n\t\t{\n\t\t\tif (indices[j] < lengths[j] && nums[j][indices[j]] < min_value) \n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t\tmin_value = nums[j][indices[j]];\n\t\t\t}\n\t\t}\n\t\tresult[i] = min_value;\n\t\tindices[min_index]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\tlong[] lengths = [num1.length, num2.length, num3.length];\n\tlong[] min_index = [0, 0, 0];\n\tlong[] min_value = [0, 0, 0];\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\tfor (long j = 0; j < nums.length; j++) \n\t\t{\n\t\t\tif (indices[j] < lengths[j]) \n\t\t\t{\n\t\t\t\tmin_index[j] = j;\n\t\t\t\tmin_value[j] = nums[j][indices[j]];\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong min_index_value = min(min_value);\n\t\tlong min_index_index = min_index[min_index_value];\n\t\t\n\t\tresult[i] = nums[min_index_index][indices[min_index_index]];\n\t\tindices[min_index_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[result.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\ttemp[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn temp;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\t\n\ttemp = num1.dup;\n\ttemp2 = num2.dup;\n\ttemp3 = num3.dup;\n\t\n\ttemp4 = temp.merge(temp2);\n\ttemp5 = temp4.merge(temp3);\n\t\n\tresult = temp5.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\ttemp = num1 ~ num2;\n\tresult = temp ~ num3;\n\t\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile (l < temp.length && m < num3.length)\n\t{\n\t\tif (temp[l] < num3[m])\n\t\t{\n\t\t\ttemp2[k] = temp[l];\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (l < temp.length)\n\t{\n\t\ttemp2[k] = temp[l];\n\t\tl++;\n\t\tk++;\n\t}\n\t\n\twhile (m < num3.length)\n\t{\n\t\ttemp2[k] = num3[m];\n\t\tm++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tint i, j, k;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (i < num1.length) \n\t{\n\t\ttemp = num1[i .. $];\n\t}\n\telse if (j < num2.length) \n\t{\n\t\ttemp = num2[j .. $];\n\t}\n\telse \n\t{\n\t\ttemp = num3[k .. $];\n\t}\n\t\n\tresult ~= temp;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tresult[l++] = temp[0];\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] nums_index = [0, 0, 0];\n\tlong[] nums_length = [num1.length, num2.length, num3.length];\n\tlong result_index = 0;\n\t\n\twhile (result_index < result.length) \n\t{\n\t\tlong min_index = 0;\n\t\tlong min_value = nums[0][nums_index[0]];\n\t\t\n\t\tfor (long i = 1; i < nums.length; i++) \n\t\t{\n\t\t\tif (nums_index[i] < nums_length[i] && nums[i][nums_index[i]] < min_value) \n\t\t\t{\n\t\t\t\tmin_index = i;\n\t\t\t\tmin_value = nums[i][nums_index[i]];\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[result_index] = min_value;\n\t\tnums_index[min_index]++;\n\t\tresult_index++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\t// merge first two arrays\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge the third array\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = new long[3];\n\tnums[0] = 0;\n\tnums[1] = 0;\n\tnums[2] = 0;\n\t\n\tfor (int i = 0; i < result.length; i++)\n\t{\n\t\tif (nums[0] < num1.length && nums[1] < num2.length && nums[2] < num3.length)\n\t\t{\n\t\t\tif (num1[nums[0]] < num2[nums[1]] && num1[nums[0]] < num3[nums[2]])\n\t\t\t{\n\t\t\t\tresult[i] = num1[nums[0]];\n\t\t\t\tnums[0]++;\n\t\t\t}\n\t\t\telse if (num2[nums[1]] < num1[nums[0]] && num2[nums[1]] < num3[nums[2]])\n\t\t\t{\n\t\t\t\tresult[i] = num2[nums[1]];\n\t\t\t\tnums[1]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] = num3[nums[2]];\n\t\t\t\tnums[2]++;\n\t\t\t}\n\t\t}\n\t\telse if (nums[0] < num1.length && nums[1] < num2.length)\n\t\t{\n\t\t\tif (num1[nums[0]] < num2[nums[1]])\n\t\t\t{\n\t\t\t\tresult[i] = num1[nums[0]];\n\t\t\t\tnums[0]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] = num2[nums[1]];\n\t\t\t\tnums[1]++;\n\t\t\t}\n\t\t}\n\t\telse if (nums[0] < num1.length && nums[2",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t// merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < num1.length && j < num2.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile(i < temp.length && j < num3.length) \n\t{\n\t\tif(temp[i] < num3[j]) \n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length) \n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length) \n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile(l < num3.length && m < temp.length)\n\t{\n\t\tif(num3[l] < temp[m])\n\t\t{\n\t\t\ttemp2[n] = num3[l];\n\t\t\tl++;\n\t\t\tn++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[n] = temp[m];\n\t\t\tm++;\n\t\t\tn++;\n\t\t}\n\t}\n\t\n\twhile(l < num3.length)\n\t{\n\t\ttemp2[n] = num3[l];\n\t\tl++;\n\t\tn++;\n\t}\n\t\n\twhile(m < temp.length)\n\t",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp;\n\ttemp.length = num1.length + num2.length;\n\t\n\tlong[] temp2;\n\ttemp2.length = num1.length + num2.length + num3.length;\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\tint m = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tmerged_list[m] = num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tmerged_list[m] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tmerged_list[m] = num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tmerged_list[m] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tm++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tmerged_list[m] = num1[i];\n\t\ti++;\n\t\tm++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tmerged_list[m] = num2[j];\n\t\tj++;\n\t\tm++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tmerged_list[m] = num3[k];\n\t\tk++;\n\t\tm++;\n\t}\n\treturn merged_list;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile(l < temp.length && m < num3.length)\n\t{\n\t\tif(temp[l] < num3[m])\n\t\t{\n\t\t\ttemp2[n] = temp[l];\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[n] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tn++;\n\t}\n\t\n\twhile(l < temp.length)\n\t{\n\t\ttemp2[n] = temp[l];\n\t\tl++;\n\t\tn++;\n\t}\n\t\n\twhile(m < num3.length)\n\t{\n\t\ttemp2[n] = num3[m];\n\t\tm++;\n\t\tn++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(num1, num3);\n\tresult = merge_sorted_list(temp, temp2);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\t\n\tif(num1.length == 0)\n\t{\n\t\tif(num2.length == 0)\n\t\t{\n\t\t\treturn num3;\n\t\t}\n\t\telse if(num3.length == 0)\n\t\t{\n\t\t\treturn num2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp = num2 ~ num3;\n\t\t\ttemp.sort;\n\t\t\treturn temp;\n\t\t}\n\t}\n\telse if(num2.length == 0)\n\t{\n\t\tif(num1.length == 0)\n\t\t{\n\t\t\treturn num3;\n\t\t}\n\t\telse if(num3.length == 0)\n\t\t{\n\t\t\treturn num1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp = num1 ~ num3;\n\t\t\ttemp.sort;\n\t\t\treturn temp;\n\t\t}\n\t}\n\telse if(num3.length == 0)\n\t{\n\t\tif(num1.length == 0)\n\t\t{\n\t\t\treturn num2;\n\t\t}\n\t\telse if(num2.length == 0)\n\t\t{\n\t\t\treturn num1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp = num1 ~ num2;\n\t\t\ttemp.sort;\n\t\t\treturn temp;\n\t\t}\n\t}\n\telse\n\t{\n\t\ttemp = num1 ~ num2;\n\t\ttemp2 = temp ~ num3;\n\t\ttemp2.sort;\n\t\treturn temp2;\n\t}\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile (l < num2.length && m < num3.length)\n\t{\n\t\tif (num2[l] < num3[m])\n\t\t{\n\t\t\ttemp2[n] = num2[l];\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[n] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tn++;\n\t}\n\t\n\twhile (l < num2.length)\n\t{\n\t\ttemp2[n] = num2[l];\n\t\tl++;\n\t\tn++;\n\t}\n\t\n\twhile (m < num3.length)\n\t{\n\t\ttemp2[n] = num3[m];\n\t\tm++;\n\t\tn++;\n\t}\n\t\n\ti = 0;\n\tj =",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\ti = 0;\n\tj = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] <= num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint m = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tresult[m] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tm++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[m] = num1[i];\n\t\ti++;\n\t\tm++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[m] = num2[j];\n\t\tj++;\n\t\tm++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[m] = num3[k];\n\t\tk++;\n\t\tm++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}"
  ]
}
{
  "name": "mbpp_306_max_sum_increasing_subseq",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n\t\n*/\nlong max_sum_increasing_subseq(long[] a, long n, long index, long k) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_306_max_sum_increasing_subseq.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = max_sum_increasing_subseq;\n\n    assert(candidate([1L, 101L, 2L, 3L, 100L, 4L, 5L], 7L, 4L, 6L) == 11L);\n    assert(candidate([1L, 101L, 2L, 3L, 100L, 4L, 5L], 7L, 2L, 5L) == 7L);\n    assert(candidate([11L, 15L, 19L, 21L, 26L, 28L, 31L], 7L, 2L, 4L) == 71L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\t\n\tif (index == n - 1)\n\t\treturn a[index];\n\t\n\tfor (i = index; i < k; i++)\n\t{\n\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\tif (a[k] > a[i] && sum + a[k] > max)\n\t\t\tmax = sum + a[k];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (dp[i] > max_sum)\n\t\t{\n\t\t\tmax_sum = dp[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax = max_sum + sum + a[k];\n\t\n\treturn max;\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\tfor (long i = index; i < n; i++) {\n\t\tif (a[i] < a[k]) {\n\t\t\tlong sum = max_sum_increasing_subseq(a, n, i + 1, k) + a[i];\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tforeach(i; 0 .. n)\n\t\tdp[i] = a[i];\n\tforeach(i; 1 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i] && dp[i] < dp[j] + a[i])\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t}\n\t}\n\tlong max = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(dp[i] > max)\n\t\t\tmax = dp[i];\n\t}\n\treturn max;\n}",
    "{ \n\tif (index == n) \n\t\treturn 0; \n\t\n\t// If the kth element is greater than the current element \n\t// then we can consider it for the maximum sum. \n\tlong sum1 = 0; \n\tif (a[index] < a[k]) \n\t\tsum1 = a[index] + max_sum_increasing_subseq(a, n, index + 1, k); \n\t\n\t// If the kth element is not greater than the current element \n\t// then we can not consider it for the maximum sum. \n\tlong sum2 = max_sum_increasing_subseq(a, n, index + 1, k); \n\t\n\treturn max(sum1, sum2); \n} ",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == 0) \n\t{\n\t\treturn a[0];\n\t}\n\telse \n\t{\n\t\tfor (long i = 0; i < index; i++) \n\t\t{\n\t\t\tif (a[i] < a[index]) \n\t\t\t{\n\t\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\t\tif (sum > max_sum) \n\t\t\t\t{\n\t\t\t\t\tmax_sum = sum;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (k > index) \n\t\t{\n\t\t\tfor (long i = 0; i < index; i++) \n\t\t\t{\n\t\t\t\tif (a[i] < a[k]) \n\t\t\t\t{\n\t\t\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k) + a[k];\n\t\t\t\t\tif (sum_k > max_sum_k) \n\t\t\t\t\t{\n\t\t\t\t\t\tmax_sum_k = sum_k;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn max(max_sum, max_sum_k);\n\t}\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (k == n)\n\t\treturn 0;\n\t\n\tif (a[index] > a[k])\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k), a[index] + max_sum_increasing_subseq(a, n, index + 1, k + 1));\n\telse\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++) {\n\t\tfor (long j = 0; j < i; j++) {\n\t\t\tif (a[i] > a[j] && i < k) {\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tmax_sum = max(max_sum, dp[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong sum = 0;\n\tlong max = 0;\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\tif (a[index] < a[k]) \n\t{\n\t\tmax = max_sum_increasing_subseq(a, n, k, n);\n\t}\n\treturn max_sum + a[index] + max;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += dp[i];\n\t}\n\tsum += a[k];\n\tmax = sum;\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tsum = sum - dp[i - 1] + dp[i];\n\t\tmax = max(max, sum);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[k];\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tif(index == n)\n\t\treturn 0;\n\t\n\tif(k == n)\n\t\treturn 0;\n\t\n\tif(a[index] > a[k])\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k), a[index] + max_sum_increasing_subseq(a, n, index + 1, k + 1));\n\telse\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k);\n}",
    "{\n\tlong sum = 0;\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = a[i] + a[k];\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\tif (k == n)\n\t\treturn 0;\n\tif (a[index] > a[k])\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k), max_sum_increasing_subseq(a, n, index + 1, index) + a[index]);\n\telse\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t\ti++;\n\t}\n\tmax_sum = max(max_sum, sum + a[k]);\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn a[k] + max;\n}",
    "{ \n\t// Base case \n\tif (index == 0) \n\t\treturn a[0]; ",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index] + a[k];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max_sum = 0;\n\t\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[i] + max_sum_increasing_subseq(a, n, i + 1, k));\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tif (index == n - 1) \n\t\treturn a[index];\n\t\n\tlong max_sum = 0;\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tlong sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1);\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = index;\n\twhile (i < k) \n\t{\n\t\tsum += a[i];\n\t\ti++;\n\t}\n\tmax_sum = sum;\n\twhile (i < n) \n\t{\n\t\tsum = sum + a[i] - a[i - k];\n\t\tmax_sum = max(max_sum, sum);\n\t\ti++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong max_sum_k_3 = 0;\n\tlong max_sum_k_4 = 0;\n\tlong max_sum_k_5 = 0;\n\tlong max_sum_k_6 = 0;\n\tlong max_sum_k_7 = 0;\n\tlong max_sum_k_8 = 0;\n\tlong max_sum_k_9 = 0;\n\tlong max_sum_k_10 = 0;\n\tlong max_sum_k_11 = 0;\n\tlong max_sum_k_12 = 0;\n\tlong max_sum_k_13 = 0;\n\tlong max_sum_k_14 = 0;\n\tlong max_sum_k_15 = 0;\n\tlong max_sum_k_16 = 0;\n\tlong max_sum_k_17 = 0;\n\tlong max_sum_k_18 = 0;\n\tlong max_sum_k_19 = 0;\n\tlong max_sum_k_20 = 0;\n\tlong max_sum_k_21 = 0;\n\tlong max_sum_k_22 = 0;\n\tlong max_sum_k_23 = 0;\n\tlong max_sum_k_24 = 0;\n\tlong max_sum_k_25 = 0;\n\tlong max_sum_k_26 = 0;\n\tlong max_sum_k_27 = 0;\n\tlong max_sum_k_28 = 0;\n\tlong max_sum_k_29 = 0;\n\tlong max_sum_k_30 = 0;\n\tlong max_sum_k_31 = 0;\n\tlong max_sum_k_32 = 0;\n\tlong max_sum_k_33 = 0;\n\tlong max_sum_k_34 = 0;\n\tlong max_sum_k_35 = 0;\n\tlong max_sum_k_36 = 0;\n\tlong max_sum_k_37 = 0;\n\tlong max_sum_k_",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) {\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) {\n\t\tfor (long j = 0; j < i; j++) {\n\t\t\tif (a[i] > a[j] && i < k) {\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < n; i++) {\n\t\tif (i <= index) {\n\t\t\tsum += a[i];\n\t\t}\n\t\tif (i == k) {\n\t\t\tmax_sum = max(max_sum, sum + dp[i]);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index] + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == n - 1)\n\t\treturn a[index];\n\t\n\tif (k == n)\n\t\treturn 0;\n\t\n\tif (k == n - 1)\n\t\treturn a[k];\n\t\n\tif (k == index)\n\t\treturn a[k];\n\t\n\tif (a[index] < a[k])\n\t{\n\t\tmax_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k + 1);\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index, k + 1);\n\t\tsum_k = max_sum_increasing_subseq(a, n, index, k + 2);\n\t\treturn max(max_sum, sum, max_sum_k, sum_k, a[index] + a[k]);\n\t}\n\telse\n\t{\n\t\tmax_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k + 1);\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index, k + 1);\n\t\tsum_k = max_sum_increasing_subseq(a, n, index, k + 2);\n\t\treturn max(max_sum, sum, max_sum_k, sum_k);\n\t}\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tif (a[index] < a[k]) \n\t{\n\t\tmax = max(max, a[index] + max_sum_increasing_subseq(a, n, index + 1, k));\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == k)\n\t\treturn a[k];\n\t\n\tif (a[index] < a[k])\n\t\tmax = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tsum = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\treturn max(max, sum);\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tif (a[index] < a[k]) \n\t{\n\t\tmax_sum = max(max_sum, a[index] + max_sum_increasing_subseq(a, n, index + 1, k));\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. index)\n\t{\n\t\tif(i != k)\n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_so_far = 0;\n\tlong max_ending_here = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[index];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max_sum = 0;\n\t\n\tforeach (i; 0..index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, max_sum_increasing_subseq(a, n, index + 1, k) + a[k]);\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = index; i < k; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\tmax = dp[index - 1] + sum;\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tif(index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor(i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif(sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, i) + a[k];\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i])\n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tif(index == n) return 0;\n\t\n\tlong sum = 0;\n\t\n\tif(a[index] < a[k])\n\t\tsum = a[k] + max_sum_increasing_subseq(a, n, index + 1, k + 1);\n\t\n\treturn max(sum, max_sum_increasing_subseq(a, n, index + 1, k));\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] max_sum_arr = new long[n];\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tmax_sum_arr[i] = a[i];\n\t}\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i] && j < k)\n\t\t\t{\n\t\t\t\tsum = max_sum_arr[j] + a[i];\n\t\t\t\tif(sum > max_sum_arr[i])\n\t\t\t\t{\n\t\t\t\t\tmax_sum_arr[i] = sum;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(max_sum_arr[i] > max_sum)\n\t\t{\n\t\t\tmax_sum = max_sum_arr[i];\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tif (index == 1)\n\t{\n\t\tif (a[0] < a[1])\n\t\t{\n\t\t\treturn a[1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn a[0];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index) + a[index];\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (i < k)\n\t\t{\n\t\t\tif (a[i] < a[k])\n\t\t\t{\n\t\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k) + a[k];\n\t\t\t\tif (sum_k > max_sum_k)\n\t\t\t\t{\n\t\t\t\t\tmax_sum_k = sum_k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max(max_sum, max_sum_k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong sum = 0;\n\tif (a[index] < a[k]) \n\t{\n\t\tsum = a[k] + max_sum_increasing_subseq(a, n, index + 1, k + 1);\n\t}\n\t\n\tsum = max(sum, max_sum_increasing_subseq(a, n, index + 1, k + 1));\n\treturn sum;\n}",
    "{\n\tlong max = 0;\n\t\n\tif (index == 0) \n\t{\n\t\treturn a[0];\n\t}\n\t\n\tif (index == 1) \n\t{\n\t\tif (a[0] < a[1]) \n\t\t{\n\t\t\treturn a[1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn a[0];\n\t\t}\n\t}\n\t\n\tif (k < index) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tif (a[index] > a[k]) \n\t{\n\t\tmax = max_sum_increasing_subseq(a, n, index - 1, k) + a[index];\n\t}\n\telse \n\t{\n\t\tmax = max_sum_increasing_subseq(a, n, index - 1, k);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] dp = new long[n];\n\tforeach(i; 0 .. n)\n\t\tdp[i] = a[i];\n\tforeach(i; 1 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i] && dp[i] < dp[j] + a[i])\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t}\n\t}\n\treturn dp[index] + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\tlong max_sum = 0;\n\tforeach (i; 0 .. index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, max_sum_increasing_subseq(a, n, index + 1, k) + a[k]);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong[] dp = new long[n];\n\tforeach(i; 0 .. n)\n\t\tdp[i] = a[i];\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t\tif(i == k)\n\t\t\tmax_sum = dp[i];\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\telse\n\t{\n\t\tfor (i = 0; i < index; i++)\n\t\t{\n\t\t\tif (a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum = max_sum_increasing_subseq(a, n, i, index) + a[index];\n\t\t\t\tif (sum > max_sum)\n\t\t\t\t{\n\t\t\t\t\tmax_sum = sum;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (a[index] > a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, k, k) + a[index];\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\treturn max_sum;\n\t}\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tfor (i = 0; i < index; i++) \n\t{\n\t\tsum = 0;\n\t\tfor (j = i; j < index; j++) \n\t\t{\n\t\t\tif (a[j] < a[k]) \n\t\t\t{\n\t\t\t\tsum += a[j];\n\t\t\t}\n\t\t}\n\t\tmax_sum = max(max_sum, sum);\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (i < index) \n\t\t{\n\t\t\tif (a[i] < a[index]) \n\t\t\t{\n\t\t\t\tsum += a[i];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tsum = 0;\n\t\t\t}\n\t\t\t\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t\telse if (i == index) \n\t\t{\n\t\t\tsum_k = a[i];\n\t\t\tmax_sum_k = sum_k;\n\t\t}\n\t\telse if (i > index && i <= k) \n\t\t{\n\t\t\tif (a[i] > a[index]) \n\t\t\t{\n\t\t\t\tsum_k += a[i];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tsum_k = 0;\n\t\t\t}\n\t\t\t\n\t\t\tmax_sum_k = max(max_sum_k, sum_k);\n\t\t}\n\t}\n\t\n\treturn max_sum + max_sum_k;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile(i < index)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif(sum > max_sum)\n\t\t\t\tmax_sum = sum;\n\t\t}\n\t\ti++;\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\tif (index == n - 1)\n\t\treturn a[index];\n\tif (index > k)\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k);\n\telse\n\t\treturn max(a[index] + max_sum_increasing_subseq(a, n, index + 1, k), max_sum_increasing_subseq(a, n, index + 1, k));\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\tif (k == n)\n\t\treturn 0;\n\tif (a[index] > a[k])\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k + 1), a[index] + max_sum_increasing_subseq(a, n, index + 1, k));\n\telse\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k + 1);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum = 0;\n\t\t}\n\t\tmax_sum = max(max_sum, sum);\n\t\ti++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\tif (k == n)\n\t\treturn 0;\n\tif (k < index)\n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tfor (long i = index; i < n; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i + 1, k) + a[i];\n\t\t\tif (sum > max_sum)\n\t\t\t\tmax_sum = sum;\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index] + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor (i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index);\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[index];\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong max_sum_k_3 = 0;\n\tlong max_sum_k_4 = 0;\n\tlong max_sum_k_5 = 0;\n\tlong max_sum_k_6 = 0;\n\tlong max_sum_k_7 = 0;\n\tlong max_sum_k_8 = 0;\n\tlong max_sum_k_9 = 0;\n\tlong max_sum_k_10 = 0;\n\tlong max_sum_k_11 = 0;\n\tlong max_sum_k_12 = 0;\n\tlong max_sum_k_13 = 0;\n\tlong max_sum_k_14 = 0;\n\tlong max_sum_k_15 = 0;\n\tlong max_sum_k_16 = 0;\n\tlong max_sum_k_17 = 0;\n\tlong max_sum_k_18 = 0;\n\tlong max_sum_k_19 = 0;\n\tlong max_sum_k_20 = 0;\n\tlong max_sum_k_21 = 0;\n\tlong max_sum_k_22 = 0;\n\tlong max_sum_k_23 = 0;\n\tlong max_sum_k_24 = 0;\n\tlong max_sum_k_25 = 0;\n\tlong max_sum_k_26 = 0;\n\tlong max_sum_k_27 = 0;\n\tlong max_sum_k_28 = 0;\n\tlong max_sum_k_29 = 0;\n\tlong max_sum_k_30 = 0;\n\tlong max_sum_k_31 = 0;\n\tlong max_sum_k_32 = 0;\n\tlong max_sum_k_33 = 0;\n\tlong max_sum_k_34 = 0;\n\tlong max_sum_k_35 = 0;\n\tlong max_sum_k_36 = 0;\n\tlong max_sum_k_37 = 0;\n\tlong max_sum_k_",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong sum = 0;\n\tif (a[index] < a[k]) \n\t{\n\t\tsum = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t}\n\t\n\treturn max(sum, max_sum_increasing_subseq(a, n, index + 1, k));\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == k)\n\t\treturn a[index];\n\t\n\tif (index < k)\n\t\tmax = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tif (index < k)\n\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t\n\treturn max(max, sum);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile(i < index)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t\ti++;\n\t}\n\tmax_sum = max(max_sum, sum);\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_index = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tif (index == 1)\n\t{\n\t\treturn max(a[0], a[1]);\n\t}\n\t\n\tif (index == 2)\n\t{\n\t\treturn max(a[0], max(a[1], a[2]));\n\t}\n\t\n\tif (index == 3)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], a[3])));\n\t}\n\t\n\tif (index == 4)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], a[4]))));\n\t}\n\t\n\tif (index == 5)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], a[5])))));\n\t}\n\t\n\tif (index == 6)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], a[6]))))));\n\t}\n\t\n\tif (index == 7)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], max(a[6], a[7])))))));\n\t}\n\t\n\tif (index == 8)\n\t{\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], max(a[6], max(a[7], a[8]))))))));\n\t}\n\t\n\tif (index == 9)\n\t{\n",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor (i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\telse \n\t{\n\t\tlong sum = 0;\n\t\tif (a[index] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t}\n\t\treturn sum;\n\t}\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] max_sum_arr = new long[n];\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tmax_sum_arr[i] = a[i];\n\t}\n\t\n\tforeach(i; 0..n)\n\t{\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tif(a[j] < a[i])\n\t\t\t{\n\t\t\t\tmax_sum_arr[i] = max(max_sum_arr[i], a[i] + max_sum_arr[j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0..index)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + max_sum_arr[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tif (index == 0) \n\t{\n\t\treturn a[0];\n\t}\n\telse if (index == 1) \n\t{\n\t\treturn max(a[0], a[1]);\n\t}\n\telse \n\t{\n\t\tlong max_sum = 0;\n\t\tfor (long i = 0; i < index; i++) \n\t\t{\n\t\t\tif (a[i] < a[index]) \n\t\t\t{\n\t\t\t\tlong sum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\t\tif (sum > max_sum) \n\t\t\t\t{\n\t\t\t\t\tmax_sum = sum;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn max_sum + a[index];\n\t}\n}",
    "{\n\tif (index == n) \n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\t\n\tforeach (i; 0 .. index) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tlong sum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t}\n\t\n\tif (index < k) \n\t{\n\t\tlong sum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t\tmax_sum = max(max_sum, sum);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tforeach(i; 1 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[i] > a[j] && i < k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn dp[index];\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (a[index] > a[k])\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k), a[index] + max_sum_increasing_subseq(a, n, index + 1, index));\n\telse\n\t\treturn max_sum_increasing_subseq(a, n, index + 1, k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\tmax_sum = sum + dp[k];\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i])\n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += dp[i];\n\t}\n\tsum += a[k];\n\treturn sum;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[i]);\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong temp = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\telse if (index == 1)\n\t{\n\t\treturn a[1];\n\t}\n\telse\n\t{\n\t\tfor (i = 0; i < index; i++)\n\t\t{\n\t\t\tfor (j = i; j < index; j++)\n\t\t\t{\n\t\t\t\tif (a[j] < a[index])\n\t\t\t\t{\n\t\t\t\t\ttemp = max_sum_increasing_subseq(a, n, j, index);\n\t\t\t\t\tif (temp > max_sum)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax_sum = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn max_sum + a[index];\n\t}\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\t\n\tforeach(i; 1 .. n)\n\t{\n\t\tdp[i] = a[i];\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i] && j < k && i > k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn dp[n-1];\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index] + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == n - 1)\n\t\treturn a[index];\n\t\n\tif (index == n - 2)\n\t\treturn a[index] + a[index + 1];\n\t\n\tif (index == k)\n\t\treturn a[index];\n\t\n\tif (index < k)\n\t{\n\t\tmax_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t\n\t\treturn max(max_sum, sum);\n\t}\n\t\n\tif (index > k)\n\t{\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum_k = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t\n\t\treturn max(max_sum_k, sum_k);\n\t}\n\t\n\treturn 0;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (k == n)\n\t\treturn 0;\n\t\n\tif (k < index)\n\t\treturn 0;\n\t\n\tif (a[index] < a[k])\n\t\tmax_sum = a[k];\n\t\n\tfor (long i = index + 1; i < n; i++)\n\t{\n\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\n\t\tif (sum > max_sum)\n\t\t\tmax_sum = sum;\n\t}\n\t\n\treturn max_sum + a[index];\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (k == n)\n\t\treturn a[n-1];\n\t\n\tif (index == 0)\n\t\treturn a[0];\n\t\n\tif (index == 1)\n\t\treturn max(a[0], a[1]);\n\t\n\tif (index == 2)\n\t\treturn max(a[0], max(a[1], a[2]));\n\t\n\tif (index == 3)\n\t\treturn max(a[0], max(a[1], max(a[2], a[3])));\n\t\n\tif (index == 4)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], a[4]))));\n\t\n\tif (index == 5)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], a[5])))));\n\t\n\tif (index == 6)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], a[6]))))));\n\t\n\tif (index == 7)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], max(a[6], a[7])))))));\n\t\n\tif (index == 8)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], max(a[6], max(a[7], a[8]))))))));\n\t\n\tif (index == 9)\n\t\treturn max(a[0], max(a[1], max(a[2], max(a[3], max(a[4], max(a[5], max(a[6], max(a[7",
    "{\n\tlong sum = 0;\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tif (index == n - 1) \n\t{\n\t\treturn a[index];\n\t}\n\t\n\tlong max_sum = 0;\n\t\n\tfor (long i = index + 1; i < n; i++) \n\t{\n\t\tif (a[i] > a[index]) \n\t\t{\n\t\t\tif (i == k) \n\t\t\t{\n\t\t\t\tmax_sum = max(max_sum, a[index] + max_sum_increasing_subseq(a, n, i, k));\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmax_sum = max(max_sum, max_sum_increasing_subseq(a, n, i, k));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (max_sum < sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tif (a[index] < a[k]) \n\t{\n\t\tmax = max(max, a[index] + max_sum_increasing_subseq(a, n, index + 1, k));\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong sum = 0;\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong max_sum_k_index = 0;\n\t\n\tfor(long i = 0; i < n; i++) {\n\t\tif(i < index) {\n\t\t\tsum += a[i];\n\t\t\tif(sum > max_sum) {\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t} else if(i == index) {\n\t\t\tsum = 0;\n\t\t} else if(i == k) {\n\t\t\tmax_sum_k = sum + a[i];\n\t\t\tmax_sum_k_index = i;\n\t\t} else if(i > k) {\n\t\t\tsum += a[i];\n\t\t\tif(sum > max_sum_k) {\n\t\t\t\tmax_sum_k = sum;\n\t\t\t\tmax_sum_k_index = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max(max_sum, max_sum_k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong sum_k_2 = 0;\n\t\n\tif(index == 0)\n\t{\n\t\tmax_sum = a[0];\n\t\tmax_sum_k = a[k];\n\t\tmax_sum_k_1 = a[k-1];\n\t\tmax_sum_k_2 = a[k-2];\n\t}\n\telse\n\t{\n\t\tmax_sum = max_sum_increasing_subseq(a, n, index-1, k);\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index-1, k);\n\t\tmax_sum_k_1 = max_sum_increasing_subseq(a, n, index-1, k-1);\n\t\tmax_sum_k_2 = max_sum_increasing_subseq(a, n, index-1, k-2);\n\t}\n\t\n\tif(index < k)\n\t{\n\t\tif(a[index] < a[k])\n\t\t{\n\t\t\tsum = max_sum + a[index];\n\t\t\tsum_k = max_sum_k + a[index];\n\t\t\tsum_k_1 = max_sum_k_1 + a[index];\n\t\t\tsum_k_2 = max_sum_k_2 + a[index];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum = max_sum;\n\t\t\tsum_k = max_sum_k;\n\t\t\tsum_k_1 = max_sum_k_1;\n\t\t\tsum_k_2 = max_sum_k_2;\n\t\t}\n\t}\n\telse if(index == k)\n\t{\n\t\tsum = max_sum;\n\t\tsum_k = max_sum_k;\n\t\tsum_",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong max_sum_k_3 = 0;\n\tlong max_sum_k_4 = 0;\n\tlong max_sum_k_5 = 0;\n\tlong max_sum_k_6 = 0;\n\tlong max_sum_k_7 = 0;\n\tlong max_sum_k_8 = 0;\n\tlong max_sum_k_9 = 0;\n\tlong max_sum_k_10 = 0;\n\tlong max_sum_k_11 = 0;\n\tlong max_sum_k_12 = 0;\n\tlong max_sum_k_13 = 0;\n\tlong max_sum_k_14 = 0;\n\tlong max_sum_k_15 = 0;\n\tlong max_sum_k_16 = 0;\n\tlong max_sum_k_17 = 0;\n\tlong max_sum_k_18 = 0;\n\tlong max_sum_k_19 = 0;\n\tlong max_sum_k_20 = 0;\n\tlong max_sum_k_21 = 0;\n\tlong max_sum_k_22 = 0;\n\tlong max_sum_k_23 = 0;\n\tlong max_sum_k_24 = 0;\n\tlong max_sum_k_25 = 0;\n\tlong max_sum_k_26 = 0;\n\tlong max_sum_k_27 = 0;\n\tlong max_sum_k_28 = 0;\n\tlong max_sum_k_29 = 0;\n\tlong max_sum_k_30 = 0;\n\tlong max_sum_k_31 = 0;\n\tlong max_sum_k_32 = 0;\n\tlong max_sum_k_33 = 0;\n\tlong max_sum_k_34 = 0;\n\tlong max_sum_k_35 = 0;\n\tlong max_sum_k_36 = 0;\n\tlong max_sum_k_37 = 0;\n\tlong max_sum_k_",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tfor(i = 0; i < index; i++) \n\t{\n\t\tif(a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif(sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\telse if (k == n) \n\t{\n\t\treturn 0;\n\t}\n\telse \n\t{\n\t\treturn max(max_sum_increasing_subseq(a, n, index + 1, k + 1) + a[index], max_sum_increasing_subseq(a, n, index, k + 1));\n\t}\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_till_now = 0;\n\tlong max_sum_till_now_including_k = 0;\n\tlong max_sum_till_now_excluding_k = 0;\n\tlong max_sum_till_now_including_k_prev = 0;\n\t\n\tif (index == 0) \n\t{\n\t\tmax_sum_till_now = a[0];\n\t\tmax_sum_till_now_including_k = a[0];\n\t\tmax_sum_till_now_excluding_k = a[0];\n\t\tmax_sum_till_now_including_k_prev = a[0];\n\t}\n\telse \n\t{\n\t\tmax_sum_till_now = max_sum_increasing_subseq(a, n, index-1, k);\n\t\tmax_sum_till_now_including_k = max_sum_increasing_subseq(a, n, index-1, k) + a[index];\n\t\tmax_sum_till_now_excluding_k = max_sum_increasing_subseq(a, n, index-1, k);\n\t\tmax_sum_till_now_including_k_prev = max_sum_increasing_subseq(a, n, index-1, k) + a[index-1];\n\t}\n\t\n\tif (k > index) \n\t{\n\t\tmax_sum = max(max_sum_till_now, max_sum_till_now_including_k, max_sum_till_now_excluding_k, max_sum_till_now_including_k_prev);\n\t}\n\telse \n\t{\n\t\tmax_sum = max(max_sum_till_now, max_sum_till_now_including_k_prev);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (i = 0; i < n; i++) {\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (i = 1; i < n; i++) {\n\t\tfor (j = 0; j < i; j++) {\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) {\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < index; i++) {\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong sum = 0;\n\tlong max_sum = 0;\n\tlong max_index = 0;\n\tlong max_k = 0;\n\t\n\tif(index == n)\n\t\treturn 0;\n\t\n\tif(index == k)\n\t\treturn a[index];\n\t\n\tif(index > k)\n\t\treturn 0;\n\t\n\tfor(long i = index; i < n; i++)\n\t{\n\t\tif(a[i] > a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif(sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t\tmax_index = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(max_index == k)\n\t\treturn max_sum + a[index];\n\telse\n\t\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tmax_sum_k = max_sum + a[k];\n\treturn max_sum_k;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = index;\n\twhile(i < k) \n\t{\n\t\tsum += a[i];\n\t\ti++;\n\t}\n\tmax_sum = sum;\n\twhile(i < n) \n\t{\n\t\tsum = sum + a[i] - a[i - k];\n\t\tmax_sum = max(max_sum, sum);\n\t\ti++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong sum = 0;\n\tlong max_sum = 0;\n\t\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = a[i] + max_sum_increasing_subseq(a, n, i + 1, k);\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + a[i]);\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{ \n    long max_sum = 0; \n    for (long i = 0; i < index; i++) \n        if (a[i] < a[k]) \n            max_sum = max(max_sum, a[k] + a[i]); \n    return max_sum; \n} ",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\telse if (index == k) \n\t{\n\t\treturn a[index];\n\t}\n\telse \n\t{\n\t\tlong with = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tlong without = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\treturn max(with, without);\n\t}\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong sum = 0;\n\t\n\tif (a[index] < a[k]) \n\t{\n\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t}\n\t\n\treturn max(sum, max_sum_increasing_subseq(a, n, index + 1, k));\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && i != k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (i != k)\n\t\t{\n\t\t\tsum += dp[i];\n\t\t}\n\t}\n\tmax_sum = sum + a[k];\n\treturn max_sum;\n}",
    "{\n    if (index == n) \n\t{\n        return 0;\n    }\n    long sum = 0;\n    if (a[index] < a[k]) \n\t{\n        sum = a[k] + max_sum_increasing_subseq(a, n, index + 1, k + 1);\n    }\n    return max(sum, max_sum_increasing_subseq(a, n, index + 1, k + 1));\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\tfor (long i = index; i < n; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tmax_sum = max(max_sum, a[i] + max_sum_increasing_subseq(a, n, i + 1, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\tmax_sum = sum;\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tsum += a[i];\n\t\tif (i == k) \n\t\t{\n\t\t\tmax_sum = max(max_sum, sum + dp[i]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tif (index == 1)\n\t{\n\t\treturn max(a[0], a[1]);\n\t}\n\t\n\tif (index == k)\n\t{\n\t\treturn max(a[0], a[1]);\n\t}\n\t\n\tif (index > k)\n\t{\n\t\treturn a[index];\n\t}\n\t\n\tif (index < k)\n\t{\n\t\tif (a[index] > a[index - 1])\n\t\t{\n\t\t\tmax_sum = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\t\tsum = max_sum + a[index];\n\t\t\treturn max(max_sum, sum);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmax_sum = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\t\treturn max_sum;\n\t\t}\n\t}\n\t\n\tif (index == k)\n\t{\n\t\tif (a[index] > a[index - 1])\n\t\t{\n\t\t\tmax_sum = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\t\tsum = max_sum + a[index];\n\t\t\treturn max(max_sum, sum);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmax_sum = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\t\treturn max_sum;\n\t\t}\n\t}\n\t\n\tif (index > k)\n\t{\n\t\tif (a[index] > a[index - 1])\n\t\t{\n\t\t\tmax_sum = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\t\tsum = max_sum + a[index];\n\t\t\treturn max(max",
    "{\n\tlong max = 0;\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong sum = 0;\n\tlong max = 0;\n\tlong max_sum = 0;\n\tlong max_index = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t\tmax_index = i;\n\t\t\t}\n\t\t}\n\t}\n\tmax = a[k] + max_sum;\n\treturn max;\n}",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tlong max_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\tif (a[index] < a[k])\n\t\tmax_sum = max(max_sum, a[index] + max_sum_increasing_subseq(a, n, index + 1, k));\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[j] < a[i] && j < k && i > k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index];\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor(long i = 1; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t\tfor(long j = 0; j < i; j++)\n\t\t{\n\t\t\tif(a[j] < a[i] && j < k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index];\n}",
    "{\n\tlong max = 0;\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\t\n\tif (index == 0) {\n\t\treturn a[k];\n\t}\n\t\n\tfor (long i = 0; i < index; i++) {\n\t\tif (a[i] < a[k]) {\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max) {\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = a[index];\n\tlong sum = a[index];\n\tforeach(i; index + 1 .. k)\n\t{\n\t\tif(a[i] > a[i - 1])\n\t\t{\n\t\t\tsum += a[i];\n\t\t\tmax_sum = max(max_sum, sum);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum = a[i];\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) {\n\t\tif (a[i] < a[k]) {\n\t\t\tsum += a[i];\n\t\t}\n\t\ti++;\n\t}\n\tmax_sum = max(max_sum, sum + a[k]);\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[k];\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\t\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) {\n\t\tif (a[i] < a[k]) {\n\t\t\tmax = max(max, a[i] + max_sum_increasing_subseq(a, n, index, i));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_index = 0;\n\tlong max_sum_index = 0;\n\t\n\tif (index == 0)\n\t{\n\t\tmax_sum = a[0];\n\t\tmax_sum_index = 0;\n\t}\n\telse\n\t{\n\t\tfor (long i = 0; i < index; i++)\n\t\t{\n\t\t\tif (a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\t\tif (sum > max_sum)\n\t\t\t\t{\n\t\t\t\t\tmax_sum = sum;\n\t\t\t\t\tmax_sum_index = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmax_sum += a[index];\n\t}\n\t\n\tif (k > index)\n\t{\n\t\tfor (long i = 0; i < index; i++)\n\t\t{\n\t\t\tif (a[i] < a[k])\n\t\t\t{\n\t\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k);\n\t\t\t\tif (sum_k > max_sum_k)\n\t\t\t\t{\n\t\t\t\t\tmax_sum_k = sum_k;\n\t\t\t\t\tmax_sum_k_index = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmax_sum_k += a[k];\n\t}\n\t\n\treturn max(max_sum, max_sum_k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile(i < index)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t\ti++;\n\t}\n\tmax_sum = max(max_sum, sum);\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\tlong max = dp[index];\n\tfor (long i = index + 1; i < k; i++) \n\t{\n\t\tif (dp[i] > max) \n\t\t{\n\t\t\tmax = dp[i];\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor(long i = 1; i < n; i++)\n\t{\n\t\tfor(long j = 0; j < i; j++)\n\t\t{\n\t\t\tif(a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\tmax = dp[k];\n\treturn sum + max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i <= index; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i])\n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i <= index; i++)\n\t{\n\t\tsum += dp[i];\n\t}\n\t\n\tmax_sum = sum + a[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, index, i));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == k)\n\t\treturn a[index];\n\t\n\tif (a[index] < a[k])\n\t\tsum = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tmax_sum = max(sum, max_sum_increasing_subseq(a, n, index + 1, k));\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_till_now = 0;\n\tlong sum_till_now = 0;\n\tlong max_sum_till_now_k = 0;\n\tlong sum_till_now_k = 0;\n\t\n\tif (index == n)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tif (index == k)\n\t{\n\t\treturn a[index];\n\t}\n\t\n\tif (index < k)\n\t{\n\t\tmax_sum_till_now = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum_till_now = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t\n\t\tif (a[index] < a[k])\n\t\t{\n\t\t\tmax_sum_till_now_k = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t\tsum_till_now_k = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\t}\n\t\t\n\t\tmax_sum = max(max_sum_till_now, sum_till_now, max_sum_till_now_k, sum_till_now_k);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong sum = 0;\n\tlong max_sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && i < k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tmax_sum = max(max_sum, dp[i]);\n\t}\n\t\n\treturn sum + max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, i) + a[k];\n\t\t\tif (sum > max) \n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == n)\n\t\treturn 0;\n\t\n\tif (index == k)\n\t\treturn a[index];\n\t\n\tif (index > k)\n\t\treturn 0;\n\t\n\tif (index < k)\n\t{\n\t\tmax_sum = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\tsum = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t\t\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index + 1, k) + a[k];\n\t\tsum_k = max_sum_increasing_subseq(a, n, index + 1, k) + a[index] + a[k];\n\t}\n\t\n\treturn max(max_sum, sum, max_sum_k, sum_k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (index == 0)\n\t\treturn a[k];\n\t\n\tif (k == 0)\n\t\treturn a[k];\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum)\n\t\t\t\tmax_sum = sum;\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (k > index)\n\t{\n\t\tfor (long i = 0; i < index; i++)\n\t\t{\n\t\t\tif (a[i] < a[k])\n\t\t\t{\n\t\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k);\n\t\t\t\tif (sum_k > max_sum_k)\n\t\t\t\t{\n\t\t\t\t\tmax_sum_k = sum_k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + max_sum_k;\n}",
    "{\n\tlong sum = 0;\n\tlong max = 0;\n\tlong max_index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (i = 1; i < n; i++) \n\t{\n\t\tfor (j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tif (max < dp[i]) \n\t\t{\n\t\t\tmax = dp[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\t\n\tif (index < max_index) \n\t{\n\t\tsum = max;\n\t}\n\telse \n\t{\n\t\tsum = max - a[index];\n\t}\n\t\n\tif (k > index) \n\t{\n\t\tsum += a[k];\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tlong max = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, dp[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + a[i]);\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t\tdp[i] = a[i];\n\t\n\tfor(long i = 1; i < n; i++)\n\t{\n\t\tfor(long j = 0; j < i; j++)\n\t\t{\n\t\t\tif(a[i] > a[j])\n\t\t\t{\n\t\t\t\tif(dp[i] < dp[j] + a[i])\n\t\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < index; i++)\n\t\tsum += dp[i];\n\t\n\tsum += a[k];\n\t\n\treturn sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\tmax_sum = sum + dp[k];\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong sum_k_1 = 0;\n\t\n\tif(index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\telse if(index == 1)\n\t{\n\t\treturn max(a[0], a[1]);\n\t}\n\telse\n\t{\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n, index - 1, k);\n\t\tsum_k = a[index] + max_sum_increasing_subseq(a, n, index - 1, k - 1);\n\t\tmax_sum_k_1 = max_sum_increasing_subseq(a, n, index - 1, index - 1);\n\t\tsum_k_1 = a[index] + max_sum_increasing_subseq(a, n, index - 1, index - 2);\n\t\t\n\t\tmax_sum = max(max_sum_k, sum_k);\n\t\tmax_sum = max(max_sum, max_sum_k_1);\n\t\tmax_sum = max(max_sum, sum_k_1);\n\t\t\n\t\treturn max_sum;\n\t}\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong max_sum_k_3 = 0;\n\tlong max_sum_k_4 = 0;\n\tlong max_sum_k_5 = 0;\n\tlong max_sum_k_6 = 0;\n\tlong max_sum_k_7 = 0;\n\tlong max_sum_k_8 = 0;\n\tlong max_sum_k_9 = 0;\n\tlong max_sum_k_10 = 0;\n\tlong max_sum_k_11 = 0;\n\tlong max_sum_k_12 = 0;\n\tlong max_sum_k_13 = 0;\n\tlong max_sum_k_14 = 0;\n\tlong max_sum_k_15 = 0;\n\tlong max_sum_k_16 = 0;\n\tlong max_sum_k_17 = 0;\n\tlong max_sum_k_18 = 0;\n\tlong max_sum_k_19 = 0;\n\tlong max_sum_k_20 = 0;\n\tlong max_sum_k_21 = 0;\n\tlong max_sum_k_22 = 0;\n\tlong max_sum_k_23 = 0;\n\tlong max_sum_k_24 = 0;\n\tlong max_sum_k_25 = 0;\n\tlong max_sum_k_26 = 0;\n\tlong max_sum_k_27 = 0;\n\tlong max_sum_k_28 = 0;\n\tlong max_sum_k_29 = 0;\n\tlong max_sum_k_30 = 0;\n\tlong max_sum_k_31 = 0;\n\tlong max_sum_k_32 = 0;\n\tlong max_sum_k_33 = 0;\n\tlong max_sum_k_34 = 0;\n\tlong max_sum_k_35 = 0;\n\tlong max_sum_k_36 = 0;\n\tlong max_sum_k_37 = 0;\n\tlong max_sum_k_",
    "{\n\tif (index == n)\n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\t\n\tfor (long i = index; i < n; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tmax_sum = max(max_sum, a[i] + max_sum_increasing_subseq(a, n, i + 1, k));\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_prev = 0;\n\tlong sum_k_prev = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(i < index)\n\t\t{\n\t\t\tif(a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\t\tmax_sum = max(max_sum, sum);\n\t\t\t}\n\t\t}\n\t\telse if(i == k)\n\t\t{\n\t\t\tif(a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\t\tmax_sum_k = max(max_sum_k, sum_k);\n\t\t\t}\n\t\t}\n\t\telse if(i > k)\n\t\t{\n\t\t\tif(a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum_k_prev = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\t\tmax_sum_k_prev = max(max_sum_k_prev, sum_k_prev);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max(max_sum, max_sum_k, max_sum_k_prev);\n}",
    "{\n\tif (index >= n) \n\t\treturn 0;\n\t\n\tlong sum = 0;\n\t\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t\tsum = max(sum, max_sum_increasing_subseq(a, n, i + 1, k) + a[i]);\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tforeach(i; 1..n)\n\t{\n\t\tdp[i] = a[i];\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tif(a[i] > a[j] && dp[i] < dp[j] + a[i])\n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\tlong max = 0;\n\tforeach(i; 0..index)\n\t{\n\t\tif(dp[i] > max)\n\t\t{\n\t\t\tmax = dp[i];\n\t\t}\n\t}\n\treturn max + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (dp[i] > max_sum) \n\t\t{\n\t\t\tmax_sum = dp[i];\n\t\t}\n\t}\n\t\n\tmax_sum += a[k];\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum = 0;\n\tlong sum_k = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum_k > max_sum_k) \n\t\t\t{\n\t\t\t\tmax_sum_k = sum_k;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[index] + max_sum_k;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum += a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum = 0;\n\t\t}\n\t\tmax = max(max, sum);\n\t\ti++;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{ \n\tlong max_sum = 0; \n\tlong sum = 0; \n\tlong i = 0; \n\tlong j = 0; \n\t\n\t// Find the maximum sum of increasing subsequence \n\t// from prefix until ith index \n\tfor (i = 0; i < index; i++) \n\t{ \n\t\tsum = 0; \n\t\tfor (j = i; j < index; j++) \n\t\t{ \n\t\t\tif (a[j] < a[j + 1]) \n\t\t\t\tsum += a[j]; \n\t\t\telse\n\t\t\t\tbreak; \n\t\t} \n\t\tif (j == index) \n\t\t\tsum += a[j]; \n\t\tmax_sum = max(max_sum, sum); \n\t} \n\t\n\t// Find the maximum sum of increasing subsequence \n\t// from prefix until kth index \n\tsum = 0; \n\tfor (i = index + 1; i <= k; i++) \n\t{ \n\t\tif (a[i] > a[i - 1]) \n\t\t\tsum += a[i - 1]; \n\t\telse\n\t\t\tbreak; \n\t} \n\tif (i == k + 1) \n\t\tsum += a[i - 1]; \n\t\n\t// Return the maximum of the two sums \n\treturn max(max_sum, sum); \n} ",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum)\n\t\t\t\tmax_sum = sum;\n\t\t}\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tif(index == n)\n\t\treturn 0;\n\t\n\tlong max_sum_including_k = 0;\n\tif(a[index] < a[k])\n\t\tmax_sum_including_k = a[index] + max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\tlong max_sum_excluding_k = max_sum_increasing_subseq(a, n, index + 1, k);\n\t\n\treturn max(max_sum_including_k, max_sum_excluding_k);\n}",
    "{\n\tlong max_sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax_sum = max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max_sum;\n}",
    "{ \n\tlong max = 0; \n\tlong sum = 0; \n\tfor (long i = 0; i < index; i++) \n\t{ \n\t\tif (a[i] < a[k]) \n\t\t\tsum = sum + a[i]; \n\t} \n\tsum = sum + a[k]; \n\tif (index == n - 1) \n\t\treturn sum; \n\tfor (long i = index + 1; i < n; i++) \n\t{ \n\t\tif (a[i] > a[index]) \n\t\t\tmax = max(max, max_sum_increasing_subseq(a, n, i, k)); \n\t} \n\treturn max + sum; \n} ",
    "{ \n\tlong max_sum = 0; \n\tlong sum = 0; \n\tlong i = 0; \n\tlong j = 0; \n\tlong max_sum_k = 0; \n\tlong sum_k = 0; \n\t\n\t// Find the maximum sum of increasing subsequence \n\t// from prefix until ith index \n\tfor (i = 0; i < index; i++) { \n\t\tsum = 0; \n\t\tfor (j = i; j < index; j++) { \n\t\t\tif (a[j] > a[j - 1]) \n\t\t\t\tsum += a[j]; \n\t\t\telse\n\t\t\t\tbreak; \n\t\t} \n\t\tmax_sum = max(max_sum, sum); \n\t} \n\t\n\t// Find the maximum sum of increasing subsequence \n\t// from prefix until kth index \n\tfor (i = 0; i < k; i++) { \n\t\tsum_k = 0; \n\t\tfor (j = i; j < k; j++) { \n\t\t\tif (a[j] > a[j - 1]) \n\t\t\t\tsum_k += a[j]; \n\t\t\telse\n\t\t\t\tbreak; \n\t\t} \n\t\tmax_sum_k = max(max_sum_k, sum_k); \n\t} \n\t\n\t// Return the maximum of two sums \n\treturn max(max_sum, max_sum_k); \n} ",
    "{\n\tif (index == n)\n\t\treturn 0;\n\tif (index == k)\n\t\treturn a[index];\n\treturn max(max_sum_increasing_subseq(a, n, index + 1, k), a[index] + max_sum_increasing_subseq(a, n, index + 1, k + 1));\n}",
    "{\n\tlong max_sum = 0;\n\tlong max_sum_prev = 0;\n\tlong max_sum_prev_prev = 0;\n\tlong max_sum_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong max_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (i == 0) \n\t\t{\n\t\t\tmax_sum = a[i];\n\t\t}\n\t\telse if (i == 1) \n\t\t{\n\t\t\tmax_sum_prev = max_sum;\n\t\t\tmax_sum = max(max_sum, a[i]);\n\t\t}\n\t\telse if (i == 2) \n\t\t{\n\t\t\tmax_sum_prev_prev = max_sum_prev;\n\t\t\tmax_sum_prev = max_sum;\n\t\t\tmax_sum = max(max_sum, a[i] + max_sum_prev_prev);\n\t\t}\n\t\telse if (i == 3) \n\t\t{\n\t\t\tmax_sum_prev_prev_prev = max_sum_prev_prev;\n\t\t\tmax_sum_prev_prev = max_sum_prev;\n\t\t\tmax_sum_prev = max_sum;\n\t\t\tmax_sum = max(max_sum, a[i] + max_sum_prev_prev_prev);\n\t\t}\n\t\telse if (i == 4) \n\t\t{\n\t\t\t",
    "{\n\tlong max_sum = 0;\n\tif (index == n)\n\t\treturn 0;\n\tif (index == n - 1)\n\t\treturn a[index];\n\tif (k == n)\n\t\treturn 0;\n\tif (k == n - 1)\n\t\treturn a[k];\n\tif (a[index] < a[k])\n\t\tmax_sum = a[index] + max_sum_increasing_subseq(a, n, index + 1, k + 1);\n\tmax_sum = max(max_sum, max_sum_increasing_subseq(a, n, index + 1, k));\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tlong max = dp[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i] && j < k) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, dp[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_prev = 0;\n\tlong sum_k_prev = 0;\n\tlong max_sum_prev = 0;\n\tlong sum_prev = 0;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (i == index) \n\t\t{\n\t\t\tmax_sum_k = a[i];\n\t\t\tsum_k = a[i];\n\t\t\tmax_sum_k_prev = a[i];\n\t\t\tsum_k_prev = a[i];\n\t\t}\n\t\telse if (i == k) \n\t\t{\n\t\t\tmax_sum_k = a[i];\n\t\t\tsum_k = a[i];\n\t\t}\n\t\telse if (i < index) \n\t\t{\n\t\t\tmax_sum_prev = max_sum;\n\t\t\tsum_prev = sum;\n\t\t\tmax_sum = max(max_sum, a[i]);\n\t\t\tsum = max(sum, a[i]);\n\t\t}\n\t\telse if (i > index && i < k) \n\t\t{\n\t\t\tmax_sum_k_prev = max_sum_k;\n\t\t\tsum_k_prev = sum_k;\n\t\t\tmax_sum_k = max(max_sum_k, a[i]);\n\t\t\tsum_k = max(sum_k, a[i]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmax_sum = max(max_sum, max_sum_k_prev + a[i]);\n\t\t\tsum = max(sum, sum_k_prev + a[i]);\n\t\t}\n\t}\n\t\n\treturn max(max_sum_prev, sum_prev + max_sum_k);\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = max(max_sum, sum + dp[k]);\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif(sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\tforeach(i; 0 .. n)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\tforeach(i; 0 .. n)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[i] > a[j] && i < k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(i <= index)\n\t\t{\n\t\t\tsum += dp[i];\n\t\t}\n\t\tmax_sum = max(max_sum, dp[i]);\n\t}\n\treturn sum - max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tlong max_sum = 0;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tdp[i] = a[i];\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(a[j] < a[i] && j < k && i > k)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t\tmax_sum = max(max_sum, dp[i]);\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong[] dp = new long[n];\n\tlong max = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i] && j < k && i > k) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, dp[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_till_now = 0;\n\tlong max_sum_till_now_index = 0;\n\tlong max_sum_till_now_k = 0;\n\tlong max_sum_till_now_k_index = 0;\n\tlong max_sum_till_now_k_index_sum = 0;\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tif(i < index)\n\t\t{\n\t\t\tif(a[i] < a[index])\n\t\t\t{\n\t\t\t\tsum += a[i];\n\t\t\t\tif(sum > max_sum_till_now)\n\t\t\t\t{\n\t\t\t\t\tmax_sum_till_now = sum;\n\t\t\t\t\tmax_sum_till_now_index = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum = 0;\n\t\t\t}\n\t\t}\n\t\telse if(i == index)\n\t\t{\n\t\t\tsum = 0;\n\t\t}\n\t\telse if(i > index)\n\t\t{\n\t\t\tif(a[i] < a[k])\n\t\t\t{\n\t\t\t\tsum += a[i];\n\t\t\t\tif(sum > max_sum_till_now_k)\n\t\t\t\t{\n\t\t\t\t\tmax_sum_till_now_k = sum;\n\t\t\t\t\tmax_sum_till_now_k_index = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tmax_sum_till_now_k_index_sum = max_sum_till_now_k + max_sum_till_now;\n\t\n\treturn max_sum_till_now_k_index_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = index + 1; i < n; i++) \n\t{\n\t\tif (a[i] > a[index] && i != k) \n\t\t{\n\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum_k > max_sum_k) \n\t\t\t{\n\t\t\t\tmax_sum_k = sum_k;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + max_sum_k + a[index];\n}",
    "{ \n\tlong sum = 0; \n\tif (index == 0) \n\t\treturn a[0]; \n\telse if (index == 1) \n\t\treturn max(a[0], a[1]); \n\telse\n\t{ \n\t\tfor (long i = 0; i < index; i++) \n\t\t{ \n\t\t\tif (a[i] < a[index]) \n\t\t\t\tsum = max(sum, max_sum_increasing_subseq(a, n, i, k) + a[index]); \n\t\t} \n\t} \n\tif (index < k) \n\t\tsum = max(sum, max_sum_increasing_subseq(a, n, index + 1, k)); \n\treturn sum; \n} ",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[index];\n\t}\n\t\n\tif (k == n)\n\t{\n\t\treturn a[index];\n\t}\n\t\n\tfor (i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index) + a[index];\n\t\t\tif (sum > max)\n\t\t\t{\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + dp[k];\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (index == 0)\n\t{\n\t\treturn a[0];\n\t}\n\t\n\tif (index == 1)\n\t{\n\t\tif (a[0] < a[1])\n\t\t{\n\t\t\treturn a[1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn a[0];\n\t\t}\n\t}\n\t\n\tif (index == k)\n\t{\n\t\treturn a[index];\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t{\n\t\tif (a[i] < a[index])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_prev = 0;\n\tlong sum_k_prev = 0;\n\tlong max_sum_prev = 0;\n\tlong sum_prev = 0;\n\tlong max_sum_prev_prev = 0;\n\tlong sum_prev_prev = 0;\n\t\n\tif (index == 0)\n\t{\n\t\tmax_sum = a[0];\n\t\tsum = a[0];\n\t}\n\telse if (index == 1)\n\t{\n\t\tmax_sum = a[1];\n\t\tsum = a[1];\n\t\tmax_sum_prev = a[0];\n\t\tsum_prev = a[0];\n\t}\n\telse if (index == 2)\n\t{\n\t\tmax_sum = a[2];\n\t\tsum = a[2];\n\t\tmax_sum_prev = a[1];\n\t\tsum_prev = a[1];\n\t\tmax_sum_prev_prev = a[0];\n\t\tsum_prev_prev = a[0];\n\t}\n\telse\n\t{\n\t\tmax_sum = a[index];\n\t\tsum = a[index];\n\t\tmax_sum_prev = a[index-1];\n\t\tsum_prev = a[index-1];\n\t\tmax_sum_prev_prev = a[index-2];\n\t\tsum_prev_prev = a[index-2];\n\t}\n\t\n\tif (k == index)\n\t{\n\t\tmax_sum_k = a[k];\n\t\tsum_k = a[k];\n\t}\n\telse if (k == index+1)\n\t{\n\t\tmax_sum_k = a[k];\n\t\tsum_k = a[k];\n\t\tmax_sum_k_prev = a[k-1];\n\t\tsum_k_prev = a[k-1];\n\t}\n\telse if (k == index+2)\n\t{\n\t\tmax_sum_k",
    "{\n\tlong sum = 0;\n\tlong max_sum = 0;\n\tlong i = 0;\n\t\n\tfor (i = 0; i < index; i++) {\n\t\tif (a[i] < a[k]) {\n\t\t\tsum += a[i];\n\t\t}\n\t}\n\t\n\tif (sum > max_sum) {\n\t\tmax_sum = sum;\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, index);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = index + 1; i < k; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum_k > max_sum_k) \n\t\t\t{\n\t\t\t\tmax_sum_k = sum_k;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn a[index] + a[k] + max_sum + max_sum_k;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = index;\n\twhile(i < k)\n\t{\n\t\tsum += a[i];\n\t\ti++;\n\t}\n\tmax_sum = sum;\n\twhile(k < n)\n\t{\n\t\tsum = sum - a[i] + a[k];\n\t\tmax_sum = max(max_sum, sum);\n\t\ti++;\n\t\tk++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tfor(long i = 0; i < index; i++)\n\t{\n\t\tif(a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[k];\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tif (index == 0)\n\t\treturn a[0];\n\tif (k == 0)\n\t\treturn a[0];\n\tif (k == 1)\n\t\treturn a[0] + a[1];\n\tif (k == 2)\n\t\treturn a[0] + a[2];\n\tif (k == 3)\n\t\treturn a[0] + a[2] + a[3];\n\tif (k == 4)\n\t\treturn a[0] + a[2] + a[4];\n\tif (k == 5)\n\t\treturn a[0] + a[2] + a[4] + a[5];\n\tif (k == 6)\n\t\treturn a[0] + a[2] + a[4] + a[6];\n\tif (k == 7)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[7];\n\tif (k == 8)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8];\n\tif (k == 9)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8] + a[9];\n\tif (k == 10)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8] + a[10];\n\tif (k == 11)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8] + a[10] + a[11];\n\tif (k == 12)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8] + a[10] + a[12];\n\tif (k == 13)\n\t\treturn a[0] + a[2] + a[4] + a[6] + a[8] + a[10] + a[12] + a[13];\n\tif (k == 14)\n\t\treturn a[0] + a[2] + a[4",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t\tdp[i] = a[i];\n\t\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (a[i] > a[j] && dp[i] < dp[j] + a[i])\n\t\t\t\tdp[i] = dp[j] + a[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++)\n\t\tsum += a[i];\n\t\t\n\tmax_sum = dp[index] - sum;\n\t\n\tfor (long i = index; i < k; i++)\n\t\tmax_sum += a[i];\n\t\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tif (index == 0) \n\t{\n\t\treturn a[0];\n\t}\n\t\n\tfor (i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tmax = max(max, a[k] + max_sum_increasing_subseq(a, n, i, k));\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\t\n\tif (k == n)\n\t\treturn a[n - 1];\n\t\n\tfor (long i = index; i < k; i++) {\n\t\tsum = max_sum_increasing_subseq(a, n, i, k + 1);\n\t\tif (a[i] < a[k])\n\t\t\tsum += a[i];\n\t\tif (sum > max_sum)\n\t\t\tmax_sum = sum;\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tfor (i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k);\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_sum + a[k];\n}",
    "{\n\tlong[] dp = new long[n];\n\tdp[0] = a[0];\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i] && j < k && i > k) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[index];\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\tlong max_sum_k_1 = 0;\n\tlong sum_k_1 = 0;\n\tlong max_sum_k_2 = 0;\n\tlong sum_k_2 = 0;\n\t\n\tif (n == 1)\n\t\treturn a[0];\n\t\n\tif (k == 0)\n\t\treturn max_sum_increasing_subseq(a, n-1, index, k);\n\t\n\tif (k == 1)\n\t\treturn max_sum_increasing_subseq(a, n-1, index, k);\n\t\n\tif (k == 2)\n\t\treturn max_sum_increasing_subseq(a, n-1, index, k);\n\t\n\tif (k > 2)\n\t{\n\t\tmax_sum_k_2 = max_sum_increasing_subseq(a, n-1, index, k-2);\n\t\tsum_k_2 = max_sum_k_2 + a[index+k-2];\n\t\t\n\t\tmax_sum_k_1 = max_sum_increasing_subseq(a, n-1, index, k-1);\n\t\tsum_k_1 = max_sum_k_1 + a[index+k-1];\n\t\t\n\t\tmax_sum_k = max_sum_increasing_subseq(a, n-1, index, k);\n\t\tsum_k = max_sum_k + a[index+k];\n\t\t\n\t\tmax_sum = max(max_sum_k_2, max_sum_k_1, max_sum_k);\n\t\tsum = max(sum_k_2, sum_k_1, sum_k);\n\t}\n\t\n\treturn max(max_sum, sum);\n}",
    "{\n\tlong max = 0;\n\tlong sum = 0;\n\tlong max_sum = 0;\n\tlong[] dp = new long[n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tdp[i] = a[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (a[j] < a[i]) \n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i], dp[j] + a[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (dp[i] > max) \n\t\t{\n\t\t\tmax = dp[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tsum += a[i];\n\t}\n\t\n\tmax_sum = sum + max;\n\t\n\treturn max_sum;\n}",
    "{\n\tif (index == n) \n\t\treturn 0;\n\t\n\tlong max_sum = 0;\n\t\n\tfor (long i = index; i < n; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tlong sum = max_sum_increasing_subseq(a, n, i + 1, k) + a[i];\n\t\t\t\n\t\t\tif (sum > max_sum) \n\t\t\t\tmax_sum = sum;\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < index)\n\t{\n\t\tif (a[i] < a[k])\n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, i) + a[k];\n\t\t\tif (sum > max_sum)\n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn max_sum;\n}",
    "{\n\tif (index == n) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong max = 0;\n\t\n\tif (a[index] < a[k]) \n\t{\n\t\tmax = max_sum_increasing_subseq(a, n, index + 1, k) + a[index];\n\t}\n\t\n\treturn max(max, max_sum_increasing_subseq(a, n, index + 1, k));\n}",
    "{\n\tlong max_sum = 0;\n\tlong sum = 0;\n\tlong max_sum_k = 0;\n\tlong sum_k = 0;\n\t\n\tfor (long i = 0; i < index; i++) \n\t{\n\t\tif (a[i] < a[index]) \n\t\t{\n\t\t\tsum = max_sum_increasing_subseq(a, n, i, k) + a[index];\n\t\t\tif (sum > max_sum) \n\t\t\t{\n\t\t\t\tmax_sum = sum;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = index + 1; i < k; i++) \n\t{\n\t\tif (a[i] < a[k]) \n\t\t{\n\t\t\tsum_k = max_sum_increasing_subseq(a, n, i, k) + a[k];\n\t\t\tif (sum_k > max_sum_k) \n\t\t\t{\n\t\t\t\tmax_sum_k = sum_k;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max(max_sum, max_sum_k);\n}"
  ]
}
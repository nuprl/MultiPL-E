{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the next perfect square greater than a given number.\n\t\n*/\nlong next_Perfect_Square(long N) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = next_Perfect_Square;\n\n    assert(candidate(35L) == 36L);\n    assert(candidate(6L) == 9L);\n    assert(candidate(9L) == 16L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) + 1;\n}",
    "{\n\tlong i = N;\n\twhile (true) \n\t{\n\t\tif (i * i > N)\n\t\t\treturn i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti += 1;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{ \n\tlong i = 1; \n\twhile (i * i <= N) \n\t\ti++; \n\treturn i * i; \n} ",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN+1)*(sqrtN+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong x = (long)sqrt(N);\n\treturn (x+1)*(x+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}"
  ]
}
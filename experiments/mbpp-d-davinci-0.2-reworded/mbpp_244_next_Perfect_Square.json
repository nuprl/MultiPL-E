{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the next perfect square greater than a given number.\n\t\n*/\nlong next_Perfect_Square(long N) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = next_Perfect_Square;\n\n    assert(candidate(35L) == 36L);\n    assert(candidate(6L) == 9L);\n    assert(candidate(9L) == 16L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) + 1;\n}",
    "{\n\tlong i = N;\n\twhile (true) \n\t{\n\t\tif (i * i > N)\n\t\t\treturn i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti += 1;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{ \n\tlong i = 1; \n\twhile (i * i <= N) \n\t\ti++; \n\treturn i * i; \n} ",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN+1)*(sqrtN+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong x = (long)sqrt(N);\n\treturn (x+1)*(x+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{ \n\t// Base cases \n\tif (N <= 0) \n\t\treturn -1; ",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 0;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn -1;\n}",
    "{ \n\tlong i = 1; \n\twhile (i * i <= N) \n\t\ti++; \n\treturn i * i; \n} ",
    "{\n\tlong i = 1;\n\twhile(i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = N;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong sqrt = cast(long)sqrt(N);\n\treturn (sqrt + 1) * (sqrt + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrt = cast(long)sqrt(N);\n\treturn (sqrt + 1) * (sqrt + 1);\n}",
    "{\n\tlong result = 0;\n\tlong sqrt_N = sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t{\n\t\tresult = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\telse\n\t{\n\t\tresult = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\treturn result;\n}",
    "{\n\tlong i = 0;\n\twhile(i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{ \n\tlong i = 1; \n\twhile (i * i <= N) \n\t\ti++; \n\treturn i * i; \n} ",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i;\n\tfor(i = N; ; i++)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t\treturn i;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong result = 0;\n\tif(N < 0)\n\t{\n\t\treturn -1;\n\t}\n\telse\n\t{\n\t\tresult = (long)ceil(sqrt(N));\n\t\treturn result * result;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong result = 0;\n\tlong sqrt_N = sqrt(N);\n\tif(sqrt_N * sqrt_N == N)\n\t{\n\t\tresult = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\telse\n\t{\n\t\tresult = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\treturn result;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\tif (sqrtN * sqrtN == N)\n\t\treturn (sqrtN + 1) * (sqrtN + 1);\n\telse\n\t\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N+1)*(sqrt_N+1);\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{ \n\t// If N is already a perfect square \n\tif (isPerfectSquare(N)) \n\t\treturn N; \n\t\n\t// If N is not a perfect square \n\t// Find the smallest number x such that x*x is greater than or equal to N. \n\tlong x = 1; \n\twhile (x * x < N) \n\t\tx++; \n\t\n\t// Return the smallest number x such that x*x is greater than or equal to N. \n\treturn x * x; \n} ",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i * i > N)\n\t\t{\n\t\t\treturn i * i;\n\t\t}\n\t\ti++;\n\t}\n}",
    "{ \n\tlong sqrtN = (long)sqrt(N); \n\treturn (sqrtN + 1) * (sqrtN + 1); \n} ",
    "{ \n\tlong sqrtN = (long)sqrt(N); \n\treturn (sqrtN + 1) * (sqrtN + 1); \n} ",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N * sqrt_N == N) ? (sqrt_N + 1) * (sqrt_N + 1) : -1;\n}",
    "{\n\tlong sqrt_N = sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong n = ceil(sqrt(N));\n\treturn n * n;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong n = N;\n\twhile (true) \n\t{\n\t\tlong sqrt = cast(long)sqrt(n);\n\t\tif (sqrt * sqrt == n)\n\t\t\treturn n;\n\t\tn++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong x = ceil(sqrt(N));\n\treturn x*x;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i;\n\tfor(i = N; i < N + 10; i++)\n\t{\n\t\tif(i % sqrt(i) == 0)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong num = N;\n\tlong sqrt = (long)sqrt(num);\n\tlong next_sqrt = sqrt + 1;\n\tlong next_perfect_sqrt = next_sqrt * next_sqrt;\n\treturn next_perfect_sqrt;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong x = (long)sqrt(N);\n\treturn (x+1)*(x+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long) sqrt(N);\n\t\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn -1;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrt_N = cast(long) sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong x = 1;\n\twhile (x * x < N)\n\t\tx++;\n\treturn x * x;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN+1)*(sqrtN+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\tlong next_Perfect_Square = sqrt_N * sqrt_N;\n\tif (next_Perfect_Square == N)\n\t{\n\t\treturn next_Perfect_Square;\n\t}\n\telse\n\t{\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong x = (long)sqrt(N);\n\treturn (x+1)*(x+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}"
  ]
}
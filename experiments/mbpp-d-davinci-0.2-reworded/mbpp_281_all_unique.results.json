{
  "name": "mbpp_281_all_unique",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] test_list_sorted = test_list.dup;\n\ttest_list_sorted.sort;\n\t\n\tforeach (long i, long j; test_list_sorted)\n\t{\n\t\tif (i == j)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp25ucaq_q.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp25ucaq_q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\tfor (long i = 0; i < unique_list.length - 1; i++)\n\t{\n\t\tif (unique_list[i] == unique_list[i+1])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp9c7_3lcc.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9c7_3lcc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j && test_list[i] == test_list[j])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(index, element; test_list)\n\t{\n\t\tif(seen[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[element] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpkveed9q8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpkveed9q8.all_unique(long[]) [0x427eaf]\n??:? void tmpkveed9q8.__unittest_L21_C1() [0x427f41]\n??:? void tmpkveed9q8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] unique_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(unique_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9nkt0u0n.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmp9nkt0u0n.all_unique(long[]) [0x427d58]\n??:? void tmp9nkt0u0n.__unittest_L24_C1() [0x427ded]\n??:? void tmp9nkt0u0n.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_set = set(test_list);\n\treturn test_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpmjphuvwg.d(10): Error: undefined identifier `set`, did you mean template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjphuvwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpbgcg5fom.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpbgcg5fom.all_unique(long[]) [0x427eaf]\n??:? void tmpbgcg5fom.__unittest_L24_C1() [0x427f41]\n??:? void tmpbgcg5fom.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_array[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_array[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9trv5ym4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp9trv5ym4.all_unique(long[]) [0x427eaf]\n??:? void tmp9trv5ym4.__unittest_L20_C1() [0x427f41]\n??:? void tmp9trv5ym4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t\treturn false;\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp_gzrcpvk.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp_gzrcpvk.all_unique(long[]) [0x427eaf]\n??:? void tmp_gzrcpvk.__unittest_L19_C1() [0x427f41]\n??:? void tmp_gzrcpvk.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = [];\n\tforeach(item; test_list)\n\t{\n\t\tif(item in unique_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list ~= item;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpcwee27vz.d(13): Error: incompatible types for `(item) in (unique_list)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcwee27vz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen;\n\tforeach(element; test_list)\n\t{\n\t\tif(seen[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[element] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplfo2tcam.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmplfo2tcam.all_unique(long[]) [0x427d58]\n??:? void tmplfo2tcam.__unittest_L21_C1() [0x427ded]\n??:? void tmplfo2tcam.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(num; test_list)\n\t{\n\t\tif(test_array[num])\n\t\t\treturn false;\n\t\ttest_array[num] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmptpv1im_g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmptpv1im_g.all_unique(long[]) [0x427eaf]\n??:? void tmptpv1im_g.__unittest_L19_C1() [0x427f41]\n??:? void tmptpv1im_g.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_list_set = test_list.toSet();\n\treturn test_list_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpf9q4zd73.d(10): Error: no property `toSet` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9q4zd73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tint[] test_list_int = test_list.map!(a => cast(int)a);\n\tint[] test_list_int_sorted = test_list_int.dup.sort;\n\t\n\tforeach(i, element; test_list_int_sorted)\n\t{\n\t\tif(element == test_list_int_sorted[i+1])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpedg8djvv.d(10): Error: no property `map` for type `long[]`\n/tmp/tmpedg8djvv.d(11): Error: no property `sort` for type `int[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpedg8djvv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpg7k8qv36.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpg7k8qv36.all_unique(long[]) [0x427eba]\n??:? void tmpg7k8qv36.__unittest_L21_C1() [0x427f71]\n??:? void tmpg7k8qv36.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] test_list_copy = test_list.dup;\n\ttest_list_copy.sort;\n\tforeach(i, item; test_list_copy)\n\t{\n\t\tif(i > 0 && test_list_copy[i] == test_list_copy[i-1])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpc8wqij4l.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc8wqij4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(long test_value; test_list)\n\t{\n\t\tif(is_unique[test_value])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tis_unique[test_value] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpqqvaepc3.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpqqvaepc3.all_unique(long[]) [0x427eaf]\n??:? void tmpqqvaepc3.__unittest_L21_C1() [0x427f41]\n??:? void tmpqqvaepc3.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(check_list[element] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp6jmvul3c.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmp6jmvul3c.all_unique(long[]) [0x427d58]\n??:? void tmp6jmvul3c.__unittest_L24_C1() [0x427ded]\n??:? void tmp6jmvul3c.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(element in unique_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list ~= element;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp_aq9z5ac.d(13): Error: incompatible types for `(element) in (unique_list)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_aq9z5ac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnmmtybtd.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpnmmtybtd.all_unique(long[]) [0x427eba]\n??:? void tmpnmmtybtd.__unittest_L24_C1() [0x427f71]\n??:? void tmpnmmtybtd.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(int i, long element; test_list)\n\t{\n\t\tif(check_list[element] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpehzp24il.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpehzp24il.all_unique(long[]) [0x427eb1]\n??:? void tmpehzp24il.__unittest_L24_C1() [0x427f45]\n??:? void tmpehzp24il.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_array[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_array[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpuax9zaet.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpuax9zaet.all_unique(long[]) [0x427eaf]\n??:? void tmpuax9zaet.__unittest_L21_C1() [0x427f41]\n??:? void tmpuax9zaet.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(is_unique[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tis_unique[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptjrfvqj_.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428275]\n??:? void tmptjrfvqj_.__unittest_L21_C1() [0x427f85]\n??:? void tmptjrfvqj_.__modtest() [0x427ff4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c36f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b202]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43048d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43093c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430419]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1d9]\n??:? runModuleUnitTests [0x42c145]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428738]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(long test_item; test_list) \n\t{\n\t\tif(seen[test_item]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp79fddaho.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp79fddaho.all_unique(long[]) [0x427eaf]\n??:? void tmp79fddaho.__unittest_L21_C1() [0x427f41]\n??:? void tmp79fddaho.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1d6du0nc.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp1d6du0nc.all_unique(long[]) [0x427eba]\n??:? void tmp1d6du0nc.__unittest_L20_C1() [0x427f71]\n??:? void tmp1d6du0nc.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpkbl6e2_z.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpkbl6e2_z.all_unique(long[]) [0x427eaf]\n??:? void tmpkbl6e2_z.__unittest_L24_C1() [0x427f45]\n??:? void tmpkbl6e2_z.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto list_length = test_list.length;\n\tauto test_list_sorted = test_list.dup;\n\ttest_list_sorted.sort;\n\tfor (auto i = 0; i < list_length - 1; i++)\n\t{\n\t\tif (test_list_sorted[i] == test_list_sorted[i + 1])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmpfzd7s_g9.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfzd7s_g9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp16wfre3e.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp16wfre3e.all_unique(long[]) [0x427eba]\n??:? void tmp16wfre3e.__unittest_L24_C1() [0x427f71]\n??:? void tmp16wfre3e.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t\tcontinue;\n\t\t\tif(i == j)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeneq9pee.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmpeneq9pee.__unittest_L22_C1() [0x427e35]\n??:? void tmpeneq9pee.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c10f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430135]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af79]\n??:? runModuleUnitTests [0x42bee5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428574]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen;\n\tforeach(element; test_list)\n\t{\n\t\tif(element in seen)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen ~= element;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmprgs3fyga.d(13): Error: incompatible types for `(element) in (seen)`: `long` and `bool[]`\n/tmp/tmprgs3fyga.d(17): Error: cannot append type `long` to type `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprgs3fyga.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpk6rc7enm.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpk6rc7enm.all_unique(long[]) [0x427eaf]\n??:? void tmpk6rc7enm.__unittest_L19_C1() [0x427f41]\n??:? void tmpk6rc7enm.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto unique_list = test_list.dup;\n\tunique_list.sort;\n\tunique_list.uniq;\n\treturn unique_list.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmpzh5s4au8.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmpzh5s4au8.d(12): Error: no property `uniq` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh5s4au8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(long i; test_list)\n\t{\n\t\tif(i in check_list)\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmp1ofag2kf.d(13): Error: incompatible types for `(i) in (check_list)`: `long` and `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ofag2kf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(num; test_list)\n\t{\n\t\tif(check_list[num])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[num] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp_yh_5s6m.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp_yh_5s6m.all_unique(long[]) [0x427eaf]\n??:? void tmp_yh_5s6m.__unittest_L24_C1() [0x427f41]\n??:? void tmp_yh_5s6m.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpjtdhrt28.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpjtdhrt28.all_unique(long[]) [0x427eaf]\n??:? void tmpjtdhrt28.__unittest_L24_C1() [0x427f41]\n??:? void tmpjtdhrt28.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen;\n\tforeach(i; test_list) \n\t{\n\t\tif (seen[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2cap5g14.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmp2cap5g14.all_unique(long[]) [0x427d58]\n??:? void tmp2cap5g14.__unittest_L21_C1() [0x427ded]\n??:? void tmp2cap5g14.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tint[] test_list_int = test_list.map!(a => cast(int)a).array;\n\tint[] unique_list = test_list_int.dup.sort.uniq;\n\treturn test_list_int.length == unique_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmprcjir0l7.d(10): Error: no property `map` for type `long[]`\n/tmp/tmprcjir0l7.d(11): Error: no property `sort` for type `int[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprcjir0l7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t\treturn false;\n\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\n/*\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpfuss49vt.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpfuss49vt.all_unique(long[]) [0x427eaf]\n??:? void tmpfuss49vt.__unittest_L23_C1() [0x427f41]\n??:? void tmpfuss49vt.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpzg2_buvb.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpzg2_buvb.all_unique(long[]) [0x427eba]\n??:? void tmpzg2_buvb.__unittest_L20_C1() [0x427f71]\n??:? void tmpzg2_buvb.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3lauduih.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp3lauduih.all_unique(long[]) [0x427eaf]\n??:? void tmp3lauduih.__unittest_L20_C1() [0x427f41]\n??:? void tmp3lauduih.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(i, v; test_list)\n\t{\n\t\tif(is_unique[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tis_unique[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfqsndo9r.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpfqsndo9r.__unittest_L20_C1() [0x427fa5]\n??:? void tmpfqsndo9r.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c38f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b222]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43095c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430439]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1f9]\n??:? runModuleUnitTests [0x42c165]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] list_of_bools = new bool[test_list.length];\n\tforeach(i, test_list)\n\t{\n\t\tif(list_of_bools[i] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist_of_bools[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmpswy0q1yx.d(11): Error: no identifier for declarator `test_list`\n/tmp/tmpswy0q1yx.d(11): Error: found `)` when expecting `;`\n/tmp/tmpswy0q1yx.d(22): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpswy0q1yx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach (i; test_list) \n\t{\n\t\tif (check_list[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpfthhd45r.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpfthhd45r.all_unique(long[]) [0x427d58]\n??:? void tmpfthhd45r.__unittest_L21_C1() [0x427ded]\n??:? void tmpfthhd45r.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp16wfre3e.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp16wfre3e.all_unique(long[]) [0x427eba]\n??:? void tmp16wfre3e.__unittest_L24_C1() [0x427f71]\n??:? void tmp16wfre3e.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tforeach(j; 0..test_list.length)\n\t\t{\n\t\t\tif(i != j && test_list[i] == test_list[j])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t\tcontinue;\n\t\t\tif(i == j)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeneq9pee.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmpeneq9pee.__unittest_L22_C1() [0x427e35]\n??:? void tmpeneq9pee.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c10f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430135]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af79]\n??:? runModuleUnitTests [0x42bee5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428574]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, elem; test_list)\n\t{\n\t\tif(test_list_bool[elem])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[elem] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp14un2n_i.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp14un2n_i.all_unique(long[]) [0x427eaf]\n??:? void tmp14un2n_i.__unittest_L20_C1() [0x427f41]\n??:? void tmp14un2n_i.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach (i, item; test_list)\n\t{\n\t\tif (test_list_bool[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpf5nwpi1w.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpf5nwpi1w.all_unique(long[]) [0x427eaf]\n??:? void tmpf5nwpi1w.__unittest_L21_C1() [0x427f41]\n??:? void tmpf5nwpi1w.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tint[] count = new int[test_list.length];\n\tforeach(int i; 0..test_list.length)\n\t{\n\t\tcount[test_list[i]]++;\n\t}\n\tforeach(int i; 0..test_list.length)\n\t{\n\t\tif(count[test_list[i]] > 1)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmpu4ars8ob.d(11): Error: cannot implicitly convert expression `test_list.length` of type `ulong` to `int`\n/tmp/tmpu4ars8ob.d(15): Error: cannot implicitly convert expression `test_list.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4ars8ob.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp16wfre3e.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp16wfre3e.all_unique(long[]) [0x427eba]\n??:? void tmp16wfre3e.__unittest_L24_C1() [0x427f71]\n??:? void tmp16wfre3e.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tint i = 0;\n\tforeach(long element; test_list)\n\t{\n\t\tif(check_list[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2qr1tl1v.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2qr1tl1v.all_unique(long[]) [0x427eaf]\n??:? void tmp2qr1tl1v.__unittest_L25_C1() [0x427f41]\n??:? void tmp2qr1tl1v.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, value; test_list)\n\t{\n\t\tif(test_list_bool[value])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[value] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9rixxj0k.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp9rixxj0k.all_unique(long[]) [0x427eaf]\n??:? void tmp9rixxj0k.__unittest_L21_C1() [0x427f41]\n??:? void tmp9rixxj0k.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] unique_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(unique_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxob0jd81.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpxob0jd81.all_unique(long[]) [0x427eba]\n??:? void tmpxob0jd81.__unittest_L24_C1() [0x427f71]\n??:? void tmpxob0jd81.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long element; test_list)\n\t{\n\t\tif(test_list_bool[element] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpiji1l3k0.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpiji1l3k0.all_unique(long[]) [0x427eaf]\n??:? void tmpiji1l3k0.__unittest_L24_C1() [0x427f45]\n??:? void tmpiji1l3k0.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] unique_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(unique_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tunique_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphojkgedb.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmphojkgedb.all_unique(long[]) [0x427d58]\n??:? void tmphojkgedb.__unittest_L21_C1() [0x427ded]\n??:? void tmphojkgedb.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\tunique_list.unique;\n\treturn unique_list.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmpsc_0z5cj.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmpsc_0z5cj.d(12): Error: no property `unique` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_0z5cj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool result = true;\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\tresult = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\ttest_list_bool[i] = false;\n\t}\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp28bw1ycl.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x4283c6]\n??:? bool tmp28bw1ycl.all_unique(long[]) [0x427f03]\n??:? void tmp28bw1ycl.__unittest_L28_C1() [0x427fbd]\n??:? void tmp28bw1ycl.__modtest() [0x428098]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c40f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b2a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43052d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b279]\n??:? runModuleUnitTests [0x42c1e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(long element; test_list) \n\t{\n\t\tif(seen[element]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[element] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpq_dr6ofs.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpq_dr6ofs.all_unique(long[]) [0x427eaf]\n??:? void tmpq_dr6ofs.__unittest_L21_C1() [0x427f41]\n??:? void tmpq_dr6ofs.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp860pxeuz.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp860pxeuz.all_unique(long[]) [0x427eba]\n??:? void tmp860pxeuz.__unittest_L24_C1() [0x427f71]\n??:? void tmp860pxeuz.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach (element; test_list)\n\t{\n\t\tif (element in check_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list ~= element;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmpx5k9ij5g.d(13): Error: incompatible types for `(element) in (check_list)`: `long` and `bool[]`\n/tmp/tmpx5k9ij5g.d(19): Error: cannot append type `long` to type `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx5k9ij5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(element in unique_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list ~= element;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmp_aq9z5ac.d(13): Error: incompatible types for `(element) in (unique_list)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_aq9z5ac.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(i; 0..test_list.length) {\n\t\tif(test_array[test_list[i]]) {\n\t\t\treturn false;\n\t\t}\n\t\ttest_array[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpvh0c8g9n.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpvh0c8g9n.all_unique(long[]) [0x427eba]\n??:? void tmpvh0c8g9n.__unittest_L19_C1() [0x427f71]\n??:? void tmpvh0c8g9n.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] temp_list = test_list.dup;\n\ttemp_list.sort;\n\t\n\tforeach(i, item; temp_list)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(temp_list[i] == temp_list[i-1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmp7nh0gv48.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7nh0gv48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1d6du0nc.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp1d6du0nc.all_unique(long[]) [0x427eba]\n??:? void tmp1d6du0nc.__unittest_L20_C1() [0x427f71]\n??:? void tmp1d6du0nc.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_set = set(test_list);\n\treturn test_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpmjphuvwg.d(10): Error: undefined identifier `set`, did you mean template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjphuvwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tint i = 0;\n\tint j = 0;\n\tint length = test_list.length;\n\tbool result = true;\n\t\n\tfor(i = 0; i < length; i++)\n\t{\n\t\tfor(j = i + 1; j < length; j++)\n\t\t{\n\t\t\tif(test_list[i] == test_list[j])\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmpwwgbbed1.d(12): Error: cannot implicitly convert expression `test_list.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwgbbed1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen;\n\tforeach(i; test_list) \n\t{\n\t\tif(seen[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpi3cpj_hn.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpi3cpj_hn.all_unique(long[]) [0x427d58]\n??:? void tmpi3cpj_hn.__unittest_L21_C1() [0x427ded]\n??:? void tmpi3cpj_hn.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\t\n\tforeach(i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpf49iliov.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpf49iliov.all_unique(long[]) [0x427eaf]\n??:? void tmpf49iliov.__unittest_L25_C1() [0x427f41]\n??:? void tmpf49iliov.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnmmtybtd.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpnmmtybtd.all_unique(long[]) [0x427eba]\n??:? void tmpnmmtybtd.__unittest_L24_C1() [0x427f71]\n??:? void tmpnmmtybtd.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto seen = new bool[test_list.length];\n\tforeach(i, item; test_list) \n\t{\n\t\tif(seen[item]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpawp7e2db.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpawp7e2db.all_unique(long[]) [0x427eaf]\n??:? void tmpawp7e2db.__unittest_L21_C1() [0x427f41]\n??:? void tmpawp7e2db.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t\treturn false;\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp168hre15.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp168hre15.all_unique(long[]) [0x427eaf]\n??:? void tmp168hre15.__unittest_L19_C1() [0x427f41]\n??:? void tmp168hre15.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[item] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpgzbfvio2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpgzbfvio2.all_unique(long[]) [0x427eaf]\n??:? void tmpgzbfvio2.__unittest_L24_C1() [0x427f41]\n??:? void tmpgzbfvio2.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpl1w1gq2h.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpl1w1gq2h.all_unique(long[]) [0x427eaf]\n??:? void tmpl1w1gq2h.__unittest_L21_C1() [0x427f41]\n??:? void tmpl1w1gq2h.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp860pxeuz.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp860pxeuz.all_unique(long[]) [0x427eba]\n??:? void tmp860pxeuz.__unittest_L24_C1() [0x427f71]\n??:? void tmp860pxeuz.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i;0..test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp6avx8al2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp6avx8al2.all_unique(long[]) [0x427eba]\n??:? void tmp6avx8al2.__unittest_L21_C1() [0x427f71]\n??:? void tmp6avx8al2.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxbwvw_id.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpxbwvw_id.all_unique(long[]) [0x427eaf]\n??:? void tmpxbwvw_id.__unittest_L21_C1() [0x427f41]\n??:? void tmpxbwvw_id.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t\treturn false;\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp168hre15.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp168hre15.all_unique(long[]) [0x427eaf]\n??:? void tmp168hre15.__unittest_L19_C1() [0x427f41]\n??:? void tmp168hre15.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j && i == j)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr41u784z.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42811d]\n??:? void tmpr41u784z.__unittest_L22_C1() [0x427e31]\n??:? void tmpr41u784z.__modtest() [0x427ea0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c107]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43012d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af71]\n??:? runModuleUnitTests [0x42bedd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42856c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(element; test_list)\n\t{\n\t\tif(count(test_list, element) > 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmp31kzu8ec.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp31kzu8ec.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpd2wynpgl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpd2wynpgl.all_unique(long[]) [0x427d58]\n??:? void tmpd2wynpgl.__unittest_L20_C1() [0x427ded]\n??:? void tmpd2wynpgl.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpg7k8qv36.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpg7k8qv36.all_unique(long[]) [0x427eba]\n??:? void tmpg7k8qv36.__unittest_L21_C1() [0x427f71]\n??:? void tmpg7k8qv36.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwsa3_hy.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmpcwsa3_hy.__unittest_L26_C1() [0x427e35]\n??:? void tmpcwsa3_hy.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c10f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430135]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af79]\n??:? runModuleUnitTests [0x42bee5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428574]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] flags = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(flags[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tflags[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphvxfwh5g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmphvxfwh5g.all_unique(long[]) [0x427eaf]\n??:? void tmphvxfwh5g.__unittest_L20_C1() [0x427f41]\n??:? void tmphvxfwh5g.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(element in check_list)\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list ~= element;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmplcf6zrce.d(13): Error: incompatible types for `(element) in (check_list)`: `long` and `bool[]`\n/tmp/tmplcf6zrce.d(16): Error: cannot append type `long` to type `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplcf6zrce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3lauduih.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp3lauduih.all_unique(long[]) [0x427eaf]\n??:? void tmp3lauduih.__unittest_L20_C1() [0x427f41]\n??:? void tmp3lauduih.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i, v; test_list)\n\t{\n\t\tif(check_list[v])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[v] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpiinjbyfs.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpiinjbyfs.all_unique(long[]) [0x427eaf]\n??:? void tmpiinjbyfs.__unittest_L21_C1() [0x427f41]\n??:? void tmpiinjbyfs.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i, v; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphbrvy4g4.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmphbrvy4g4.__unittest_L24_C1() [0x427fa5]\n??:? void tmphbrvy4g4.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c38f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b222]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43095c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430439]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1f9]\n??:? runModuleUnitTests [0x42c165]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(is_unique[item])\n\t\t\treturn false;\n\t\telse\n\t\t\tis_unique[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2pv39h00.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2pv39h00.all_unique(long[]) [0x427eaf]\n??:? void tmp2pv39h00.__unittest_L20_C1() [0x427f41]\n??:? void tmp2pv39h00.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpoqmnixd1.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpoqmnixd1.all_unique(long[]) [0x427eba]\n??:? void tmpoqmnixd1.__unittest_L21_C1() [0x427f71]\n??:? void tmpoqmnixd1.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpd2wynpgl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpd2wynpgl.all_unique(long[]) [0x427d58]\n??:? void tmpd2wynpgl.__unittest_L20_C1() [0x427ded]\n??:? void tmpd2wynpgl.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tforeach(j; 0..test_list.length)\n\t\t{\n\t\t\tif(i != j && test_list[i] == test_list[j])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(int i, long element; test_list)\n\t{\n\t\tif(check_list[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpqwjawzxc.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpqwjawzxc.all_unique(long[]) [0x427eb1]\n??:? void tmpqwjawzxc.__unittest_L24_C1() [0x427f45]\n??:? void tmpqwjawzxc.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\t\n\tforeach(i, v; test_list)\n\t{\n\t\tif(test_list_bool[v])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[v] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnvevfil1.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpnvevfil1.all_unique(long[]) [0x427eaf]\n??:? void tmpnvevfil1.__unittest_L25_C1() [0x427f41]\n??:? void tmpnvevfil1.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[item] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpgzbfvio2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpgzbfvio2.all_unique(long[]) [0x427eaf]\n??:? void tmpgzbfvio2.__unittest_L24_C1() [0x427f41]\n??:? void tmpgzbfvio2.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp16wfre3e.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp16wfre3e.all_unique(long[]) [0x427eba]\n??:? void tmp16wfre3e.__unittest_L24_C1() [0x427f71]\n??:? void tmp16wfre3e.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(test_array[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_array[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpk50t3s99.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpk50t3s99.all_unique(long[]) [0x427eba]\n??:? void tmpk50t3s99.__unittest_L24_C1() [0x427f71]\n??:? void tmpk50t3s99.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\ttest_list_bool[i] = false;\n\t}\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp5598z0hm.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x4283c6]\n??:? bool tmp5598z0hm.all_unique(long[]) [0x427f03]\n??:? void tmp5598z0hm.__unittest_L25_C1() [0x427fb9]\n??:? void tmp5598z0hm.__modtest() [0x428094]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c40f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b2a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43052d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b279]\n??:? runModuleUnitTests [0x42c1e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpiud6fzzl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpiud6fzzl.all_unique(long[]) [0x427eba]\n??:? void tmpiud6fzzl.__unittest_L20_C1() [0x427f71]\n??:? void tmpiud6fzzl.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t\tcontinue;\n\t\t\telse if(i == j)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ndk45ua.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmp0ndk45ua.__unittest_L22_C1() [0x427e35]\n??:? void tmp0ndk45ua.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c10f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430135]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af79]\n??:? runModuleUnitTests [0x42bee5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428574]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\ttest_list_bool[i] = false;\n\t}\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwhfpmm3y.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x4283c6]\n??:? bool tmpwhfpmm3y.all_unique(long[]) [0x427f03]\n??:? void tmpwhfpmm3y.__unittest_L28_C1() [0x427fb9]\n??:? void tmpwhfpmm3y.__modtest() [0x428094]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c40f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b2a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43052d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b279]\n??:? runModuleUnitTests [0x42c1e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(check_list[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[item] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmfrk21xx.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmfrk21xx.all_unique(long[]) [0x427eaf]\n??:? void tmpmfrk21xx.__unittest_L24_C1() [0x427f41]\n??:? void tmpmfrk21xx.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3lauduih.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp3lauduih.all_unique(long[]) [0x427eaf]\n??:? void tmp3lauduih.__unittest_L20_C1() [0x427f41]\n??:? void tmp3lauduih.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_dict = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_dict[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_dict[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphzplx7r6.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmphzplx7r6.all_unique(long[]) [0x427eaf]\n??:? void tmphzplx7r6.__unittest_L20_C1() [0x427f41]\n??:? void tmphzplx7r6.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tseen[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp4t6fls51.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp4t6fls51.all_unique(long[]) [0x427eba]\n??:? void tmp4t6fls51.__unittest_L24_C1() [0x427f71]\n??:? void tmp4t6fls51.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnmmtybtd.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpnmmtybtd.all_unique(long[]) [0x427eba]\n??:? void tmpnmmtybtd.__unittest_L24_C1() [0x427f71]\n??:? void tmpnmmtybtd.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(check_list[item])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpy_zkezwr.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpy_zkezwr.all_unique(long[]) [0x427eaf]\n??:? void tmpy_zkezwr.__unittest_L20_C1() [0x427f41]\n??:? void tmpy_zkezwr.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] flags = new bool[test_list.length];\n\tforeach(index, value; test_list)\n\t{\n\t\tif(flags[value])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tflags[value] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplmz2hf2v.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmplmz2hf2v.all_unique(long[]) [0x427eaf]\n??:? void tmplmz2hf2v.__unittest_L24_C1() [0x427f41]\n??:? void tmplmz2hf2v.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] unique_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(unique_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tunique_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\n/*\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpo4b00v0j.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpo4b00v0j.all_unique(long[]) [0x427eba]\n??:? void tmpo4b00v0j.__unittest_L25_C1() [0x427f71]\n??:? void tmpo4b00v0j.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9_o84gnx.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp9_o84gnx.all_unique(long[]) [0x427eaf]\n??:? void tmp9_o84gnx.__unittest_L21_C1() [0x427f41]\n??:? void tmp9_o84gnx.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = [];\n\tforeach(element; test_list)\n\t{\n\t\tif(element in unique_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tunique_list ~= element;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpycpbzq3n.d(13): Error: incompatible types for `(element) in (unique_list)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpycpbzq3n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(check_list[element] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp6jmvul3c.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmp6jmvul3c.all_unique(long[]) [0x427d58]\n??:? void tmp6jmvul3c.__unittest_L24_C1() [0x427ded]\n??:? void tmp6jmvul3c.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(seen[item])\n\t\t\treturn false;\n\t\tseen[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpx61neqwm.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpx61neqwm.all_unique(long[]) [0x427eaf]\n??:? void tmpx61neqwm.__unittest_L19_C1() [0x427f41]\n??:? void tmpx61neqwm.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_list_length = test_list.length;\n\tauto test_list_set = test_list.toSet;\n\treturn test_list_length == test_list_set.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpz7a6e1kp.d(11): Error: no property `toSet` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7a6e1kp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpd2wynpgl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpd2wynpgl.all_unique(long[]) [0x427d58]\n??:? void tmpd2wynpgl.__unittest_L20_C1() [0x427ded]\n??:? void tmpd2wynpgl.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(int i, long element; test_list)\n\t{\n\t\tif(test_array[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_array[element] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpm998_4ac.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpm998_4ac.all_unique(long[]) [0x427eb1]\n??:? void tmpm998_4ac.__unittest_L21_C1() [0x427f45]\n??:? void tmpm998_4ac.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpr6xx88ih.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpr6xx88ih.all_unique(long[]) [0x427eaf]\n??:? void tmpr6xx88ih.__unittest_L21_C1() [0x427f41]\n??:? void tmpr6xx88ih.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] temp_list = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(temp_list[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttemp_list[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpty2zrwgp.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpty2zrwgp.all_unique(long[]) [0x427eaf]\n??:? void tmpty2zrwgp.__unittest_L21_C1() [0x427f41]\n??:? void tmpty2zrwgp.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_list_set = test_list.toSet();\n\treturn test_list_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpf9q4zd73.d(10): Error: no property `toSet` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9q4zd73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnmmtybtd.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpnmmtybtd.all_unique(long[]) [0x427eba]\n??:? void tmpnmmtybtd.__unittest_L24_C1() [0x427f71]\n??:? void tmpnmmtybtd.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] flags = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(flags[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tflags[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplgtyzc9p.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmplgtyzc9p.all_unique(long[]) [0x427eba]\n??:? void tmplgtyzc9p.__unittest_L24_C1() [0x427f71]\n??:? void tmplgtyzc9p.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpeuyu_skh.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpeuyu_skh.all_unique(long[]) [0x427eba]\n??:? void tmpeuyu_skh.__unittest_L21_C1() [0x427f71]\n??:? void tmpeuyu_skh.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j && test_list[i] == test_list[j])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpl1w1gq2h.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpl1w1gq2h.all_unique(long[]) [0x427eaf]\n??:? void tmpl1w1gq2h.__unittest_L21_C1() [0x427f41]\n??:? void tmpl1w1gq2h.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(index, element; test_list)\n\t{\n\t\tif(check_list[element])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[element] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmppadwjqwa.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmppadwjqwa.all_unique(long[]) [0x427eaf]\n??:? void tmppadwjqwa.__unittest_L20_C1() [0x427f41]\n??:? void tmppadwjqwa.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\t\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2jxpsopp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp2jxpsopp.all_unique(long[]) [0x427eba]\n??:? void tmp2jxpsopp.__unittest_L25_C1() [0x427f71]\n??:? void tmp2jxpsopp.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\t\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2ulpqiqp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmp2ulpqiqp.all_unique(long[]) [0x427eba]\n??:? void tmp2ulpqiqp.__unittest_L25_C1() [0x427f71]\n??:? void tmp2ulpqiqp.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(check_list[test_list[i]])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpiud6fzzl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpiud6fzzl.all_unique(long[]) [0x427eba]\n??:? void tmpiud6fzzl.__unittest_L20_C1() [0x427f71]\n??:? void tmpiud6fzzl.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] test_list_copy = test_list.dup;\n\ttest_list_copy.sort;\n\tforeach(i, item; test_list_copy)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(test_list_copy[i] == test_list_copy[i-1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpq8s0xkdk.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8s0xkdk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_list_set = test_list.toSet;\n\treturn test_list_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpqxkwoe5i.d(10): Error: no property `toSet` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxkwoe5i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpd2wynpgl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpd2wynpgl.all_unique(long[]) [0x427d58]\n??:? void tmpd2wynpgl.__unittest_L20_C1() [0x427ded]\n??:? void tmpd2wynpgl.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(index, item; test_list)\n\t{\n\t\tif(check_list[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2fxreee0.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2fxreee0.all_unique(long[]) [0x427eaf]\n??:? void tmp2fxreee0.__unittest_L21_C1() [0x427f41]\n??:? void tmp2fxreee0.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i,x;test_list)\n\t{\n\t\tif(test_list_bool[x])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[x] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpe1xbpkdw.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpe1xbpkdw.all_unique(long[]) [0x427eaf]\n??:? void tmpe1xbpkdw.__unittest_L21_C1() [0x427f41]\n??:? void tmpe1xbpkdw.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\tunique_list.uniq;\n\treturn unique_list.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpruksye1u.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmpruksye1u.d(12): Error: no property `uniq` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpruksye1u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tforeach(j; 0..test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tint[] temp = new int[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\ttemp[i] = item;\n\t}\n\ttemp.sort();\n\tforeach(i, item; temp)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(item == temp[i-1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmppb3y4s9k.d(13): Error: cannot implicitly convert expression `item` of type `long` to `int`\n/tmp/tmppb3y4s9k.d(15): Error: no property `sort` for type `int[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppb3y4s9k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(is_unique[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tis_unique[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2aalzf9k.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2aalzf9k.all_unique(long[]) [0x427eaf]\n??:? void tmp2aalzf9k.__unittest_L21_C1() [0x427f41]\n??:? void tmp2aalzf9k.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\t\n\tforeach(i, item; test_list)\n\t{\n\t\tif(unique_list[i] != item)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpmycth9i3.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmycth9i3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(element; test_list)\n\t{\n\t\tif(count(test_list, element) > 1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "/tmp/tmp31kzu8ec.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp31kzu8ec.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tforeach(j; 0 .. test_list.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(test_list[i] == test_list[j])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t\treturn false;\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp_gzrcpvk.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp_gzrcpvk.all_unique(long[]) [0x427eaf]\n??:? void tmp_gzrcpvk.__unittest_L19_C1() [0x427f41]\n??:? void tmp_gzrcpvk.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i, element; test_list)\n\t{\n\t\tforeach(j, element2; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(element == element2)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_array[item])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_array[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp0t1dwts4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp0t1dwts4.all_unique(long[]) [0x427eaf]\n??:? void tmp0t1dwts4.__unittest_L20_C1() [0x427f41]\n??:? void tmp0t1dwts4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(int i, long element; test_list)\n\t{\n\t\tif(check_list[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpqwjawzxc.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpqwjawzxc.all_unique(long[]) [0x427eb1]\n??:? void tmpqwjawzxc.__unittest_L24_C1() [0x427f45]\n??:? void tmpqwjawzxc.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(seen[i])\n\t\t\treturn false;\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp_gzrcpvk.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp_gzrcpvk.all_unique(long[]) [0x427eaf]\n??:? void tmp_gzrcpvk.__unittest_L19_C1() [0x427f41]\n??:? void tmp_gzrcpvk.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\t\n\tforeach(i, item; unique_list)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(unique_list[i] == unique_list[i-1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmptxdqgs2_.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptxdqgs2_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(long i; test_list) \n\t{\n\t\tif(seen[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmppyik71fn.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmppyik71fn.all_unique(long[]) [0x427eaf]\n??:? void tmppyik71fn.__unittest_L21_C1() [0x427f41]\n??:? void tmppyik71fn.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(index, element; test_list)\n\t{\n\t\tif(test_list_bool[element])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2zmj5uba.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2zmj5uba.all_unique(long[]) [0x427eaf]\n??:? void tmp2zmj5uba.__unittest_L24_C1() [0x427f41]\n??:? void tmp2zmj5uba.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array;\n\ttest_array = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\ttest_array[i] = false;\n\t}\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_array[i] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_array[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1hk5cqmz.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x4282d5]\n??:? void tmp1hk5cqmz.__unittest_L29_C1() [0x427fe9]\n??:? void tmp1hk5cqmz.__modtest() [0x428058]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b262]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43099c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430479]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]\n??:? runModuleUnitTests [0x42c1a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428798]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\t\n\tfor (int i = 0; i < test_list.length; i++) \n\t{\n\t\tif (seen[test_list[i]]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp19_nfp5k.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42836e]\n??:? bool tmp19_nfp5k.all_unique(long[]) [0x427ead]\n??:? void tmp19_nfp5k.__unittest_L22_C1() [0x427f61]\n??:? void tmp19_nfp5k.__modtest() [0x42803c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b24a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430984]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430461]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b221]\n??:? runModuleUnitTests [0x42c18d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_set = new bool[test_list.length];\n\tforeach(long test_item; test_list)\n\t{\n\t\tif(test_set[test_item])\n\t\t\treturn false;\n\t\ttest_set[test_item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpcdat3snl.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpcdat3snl.all_unique(long[]) [0x427eaf]\n??:? void tmpcdat3snl.__unittest_L19_C1() [0x427f41]\n??:? void tmpcdat3snl.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(index, element; test_list)\n\t{\n\t\tif(test_list_bool[element] == true)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[element] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpq04k2gh2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpq04k2gh2.all_unique(long[]) [0x427eaf]\n??:? void tmpq04k2gh2.__unittest_L24_C1() [0x427f45]\n??:? void tmpq04k2gh2.__modtest() [0x428020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpoqmnixd1.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpoqmnixd1.all_unique(long[]) [0x427eba]\n??:? void tmpoqmnixd1.__unittest_L21_C1() [0x427f71]\n??:? void tmpoqmnixd1.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(item; test_list)\n\t{\n\t\tif(test_array[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_array[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpcxwsgvt6.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpcxwsgvt6.all_unique(long[]) [0x427eaf]\n??:? void tmpcxwsgvt6.__unittest_L21_C1() [0x427f41]\n??:? void tmpcxwsgvt6.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, v; test_list)\n\t{\n\t\tif(test_list_bool[v])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[v] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpkosh2jsp.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpkosh2jsp.all_unique(long[]) [0x427eaf]\n??:? void tmpkosh2jsp.__unittest_L21_C1() [0x427f41]\n??:? void tmpkosh2jsp.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen;\n\tforeach(item; test_list)\n\t{\n\t\tif(item in seen)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmp1qo6xd4l.d(13): Error: incompatible types for `(item) in (seen)`: `long` and `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qo6xd4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[test_list[i]] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpnmmtybtd.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpnmmtybtd.all_unique(long[]) [0x427eba]\n??:? void tmpnmmtybtd.__unittest_L24_C1() [0x427f71]\n??:? void tmpnmmtybtd.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen_before;\n\tforeach(item; test_list)\n\t{\n\t\tif(seen_before[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen_before[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpuerighgg.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281f6]\n??:? bool tmpuerighgg.all_unique(long[]) [0x427d58]\n??:? void tmpuerighgg.__unittest_L21_C1() [0x427ded]\n??:? void tmpuerighgg.__modtest() [0x427ec8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b036]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430678]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430155]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]\n??:? runModuleUnitTests [0x42bf79]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach (i, item; test_list) {\n\t\tif (test_list_bool[item]) {\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwdwytcme.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpwdwytcme.all_unique(long[]) [0x427eaf]\n??:? void tmpwdwytcme.__unittest_L19_C1() [0x427f41]\n??:? void tmpwdwytcme.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpjtdhrt28.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpjtdhrt28.all_unique(long[]) [0x427eaf]\n??:? void tmpjtdhrt28.__unittest_L24_C1() [0x427f41]\n??:? void tmpjtdhrt28.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_dict = new bool[test_list.length];\n\tforeach(long test_item; test_list)\n\t{\n\t\tif(test_dict[test_item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_dict[test_item] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpgf8na15n.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpgf8na15n.all_unique(long[]) [0x427eaf]\n??:? void tmpgf8na15n.__unittest_L24_C1() [0x427f41]\n??:? void tmpgf8na15n.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(index, value; test_list)\n\t{\n\t\tif(test_list_bool[value])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[value] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1w4aacf4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp1w4aacf4.all_unique(long[]) [0x427eaf]\n??:? void tmp1w4aacf4.__unittest_L24_C1() [0x427f41]\n??:? void tmp1w4aacf4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmptdgqw4t8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmptdgqw4t8.all_unique(long[]) [0x427eaf]\n??:? void tmptdgqw4t8.__unittest_L21_C1() [0x427f41]\n??:? void tmptdgqw4t8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; test_list)\n\t{\n\t\tif(test_list_bool[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp32jqbrw_.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp32jqbrw_.all_unique(long[]) [0x427eaf]\n??:? void tmp32jqbrw_.__unittest_L24_C1() [0x427f41]\n??:? void tmp32jqbrw_.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\tforeach(i, item; unique_list)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (unique_list[i] == unique_list[i-1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmpanj4xotg.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpanj4xotg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach (i,v; test_list)\n\t{\n\t\tif (test_list_bool[v])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[v] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpu6f69rmy.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpu6f69rmy.all_unique(long[]) [0x427eaf]\n??:? void tmpu6f69rmy.__unittest_L20_C1() [0x427f41]\n??:? void tmpu6f69rmy.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list;\n\tforeach(element; test_list)\n\t{\n\t\tif(element in check_list)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list ~= element;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmp6bmburhi.d(13): Error: incompatible types for `(element) in (check_list)`: `long` and `bool[]`\n/tmp/tmp6bmburhi.d(19): Error: cannot append type `long` to type `bool[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6bmburhi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto unique_list = test_list.dup;\n\tunique_list.sort;\n\tunique_list.uniq;\n\treturn unique_list.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124216,
      "stdout": "",
      "stderr": "/tmp/tmpzh5s4au8.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmpzh5s4au8.d(12): Error: no property `uniq` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh5s4au8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto test_set = set(test_list);\n\treturn test_set.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517283,
      "stdout": "",
      "stderr": "/tmp/tmpmjphuvwg.d(10): Error: undefined identifier `set`, did you mean template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjphuvwg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_array = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(test_array[i])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_array[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9trv5ym4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp9trv5ym4.all_unique(long[]) [0x427eaf]\n??:? void tmp9trv5ym4.__unittest_L20_C1() [0x427f41]\n??:? void tmp9trv5ym4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(test_list_bool[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ttest_list_bool[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpeuyu_skh.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpeuyu_skh.all_unique(long[]) [0x427eba]\n??:? void tmpeuyu_skh.__unittest_L21_C1() [0x427f71]\n??:? void tmpeuyu_skh.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwsa3_hy.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmpcwsa3_hy.__unittest_L26_C1() [0x427e35]\n??:? void tmpcwsa3_hy.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c10f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430135]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af79]\n??:? runModuleUnitTests [0x42bee5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428574]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\t\n\tforeach(long i; 1..unique_list.length)\n\t{\n\t\tif(unique_list[i] == unique_list[i-1])\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmp3db017eu.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3db017eu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tauto unique_list = test_list.dup;\n\tunique_list.sort;\n\tunique_list.unique;\n\treturn unique_list.length == test_list.length;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "/tmp/tmp_9vwr22i.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmp_9vwr22i.d(12): Error: no property `unique` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9vwr22i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach (i, v; test_list)\n\t{\n\t\ttest_list_bool[i] = false;\n\t}\n\tforeach (i, v; test_list)\n\t{\n\t\tif (test_list_bool[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[i] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp33008vg8.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4282ed]\n??:? void tmp33008vg8.__unittest_L28_C1() [0x428001]\n??:? void tmp33008vg8.__modtest() [0x428070]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b27a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430505]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430491]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b251]\n??:? runModuleUnitTests [0x42c1bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(index, item; test_list)\n\t{\n\t\tif(check_list[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcheck_list[item] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp0tteenb4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp0tteenb4.all_unique(long[]) [0x427eaf]\n??:? void tmp0tteenb4.__unittest_L24_C1() [0x427f41]\n??:? void tmp0tteenb4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; 0 .. test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t\treturn false;\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpb7ol81uw.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpb7ol81uw.all_unique(long[]) [0x427eba]\n??:? void tmpb7ol81uw.__unittest_L19_C1() [0x427f71]\n??:? void tmpb7ol81uw.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\t\n\tforeach(i, value; test_list)\n\t{\n\t\tif(test_list_bool[value])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_list_bool[value] = true;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp_26vdhtg.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp_26vdhtg.all_unique(long[]) [0x427eaf]\n??:? void tmp_26vdhtg.__unittest_L25_C1() [0x427f41]\n??:? void tmp_26vdhtg.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] is_unique = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(is_unique[item])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tis_unique[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2aalzf9k.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmp2aalzf9k.all_unique(long[]) [0x427eaf]\n??:? void tmp2aalzf9k.__unittest_L21_C1() [0x427f41]\n??:? void tmp2aalzf9k.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] test_list_bool = new bool[test_list.length];\n\tforeach(i, item; test_list)\n\t{\n\t\tif(test_list_bool[item])\n\t\t\treturn false;\n\t\telse\n\t\t\ttest_list_bool[item] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwcyv_uu4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpwcyv_uu4.all_unique(long[]) [0x427eaf]\n??:? void tmpwcyv_uu4.__unittest_L20_C1() [0x427f41]\n??:? void tmpwcyv_uu4.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tlong[] unique_list = test_list.dup;\n\tunique_list.sort;\n\t\n\tforeach(i, item; test_list)\n\t{\n\t\tif(item != unique_list[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "/tmp/tmppsi4adbe.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppsi4adbe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] seen = new bool[test_list.length];\n\tforeach(i; 0..test_list.length)\n\t{\n\t\tif(seen[test_list[i]])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tseen[test_list[i]] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124218,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpoqmnixd1.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42837e]\n??:? bool tmpoqmnixd1.all_unique(long[]) [0x427eba]\n??:? void tmpoqmnixd1.__unittest_L21_C1() [0x427f71]\n??:? void tmpoqmnixd1.__modtest() [0x42804c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430994]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b231]\n??:? runModuleUnitTests [0x42c19d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tbool[] check_list = new bool[test_list.length];\n\tforeach(long i; test_list)\n\t{\n\t\tif(check_list[i])\n\t\t\treturn false;\n\t\telse\n\t\t\tcheck_list[i] = true;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpmteux_e8.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42834e]\n??:? bool tmpmteux_e8.all_unique(long[]) [0x427eaf]\n??:? void tmpmteux_e8.__unittest_L20_C1() [0x427f41]\n??:? void tmpmteux_e8.__modtest() [0x42801c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c397]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b22a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430964]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430441]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b201]\n??:? runModuleUnitTests [0x42c16d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(cha",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if the elements of a given array are unique or not.\n\t\n*/\nbool all_unique(long[] test_list) \n{\n\tforeach(i; test_list)\n\t{\n\t\tforeach(j; test_list)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_unique;\n\n    assert(candidate([1L, 2L, 3L]) == true);\n    assert(candidate([1L, 2L, 1L, 2L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n}\nvoid main(){}",
      "timestamp": 1666124217,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxle1gzo6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpxle1gzo6.__unittest_L25_C1() [0x427e41]\n??:? void tmpxle1gzo6.__modtest() [0x427eb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c117]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43013d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af81]\n??:? runModuleUnitTests [0x42beed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42857c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
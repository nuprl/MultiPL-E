{
  "name": "mbpp_432_median_trapezium",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the median length of a trapezium.\n\t\n*/\nfloat median_trapezium(long base1, long base2, long height) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = median_trapezium;\n\n    assert(candidate(15L, 25L, 35L) == 20L);\n    assert(candidate(10L, 20L, 30L) == 15L);\n    assert(candidate(6L, 9L, 4L) == 7.5);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn (base1 + base2) / 2.0f * height;\n}",
    "{\n\treturn (base1 + base2) / 2.0 * height;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\tfloat median;\n\tmedian = (base1 + base2) / 2;\n\treturn median;\n}",
    "{\n\tfloat median = 0;\n\tmedian = (base1 + base2) / 2;\n\treturn median;\n}",
    "{\n\tfloat median;\n\tmedian = (base1 + base2) / 2;\n\treturn median;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\tfloat median = 0;\n\tfloat side1 = 0;\n\tfloat side2 = 0;\n\t\n\tside1 = (base1 - base2) / 2;\n\tside2 = sqrt(pow(side1, 2) + pow(height, 2));\n\tmedian = (side1 + side2) / 2;\n\t\n\treturn median;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\treturn (base1 + base2) / 2;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\treturn (base1 + base2) / 2;\n}",
    "{\n\tfloat median;\n\tmedian = (base1 + base2) / 2;\n\treturn median;\n}",
    "{\n\treturn (base1 + base2) / 2 * height;\n}",
    "{\n\tfloat median = 0.0f;\n\tmedian = (base1 + base2) / 2.0f;\n\treturn median;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\treturn (base1 + base2) / 2.0;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}",
    "{\n\treturn (base1 + base2) / 2.0f;\n}"
  ]
}
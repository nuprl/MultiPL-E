{
  "name": "mbpp_11_remove_Occ",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to remove first and last occurrence of a given character from the string.\n\t\n*/\nstring remove_Occ(string s, string ch) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_Occ;\n\n    assert(candidate(\"hello\", \"l\") == \"heo\");\n    assert(candidate(\"abcda\", \"a\") == \"bcd\");\n    assert(candidate(\"PHP\", \"P\") == \"H\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\treturn s[0..first] ~ s[first+1..last-1] ~ s[last+1..$];\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\ts = s.remove(first,1);\n\ts = s.remove(last-1,1);\n\treturn s;\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\treturn s[first..last];\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\tif (first == -1)\n\t\treturn s;\n\tif (first == last)\n\t\treturn s.remove(first, 1);\n\treturn s.remove(first, 1).remove(last - 1, 1);\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = s.length;\n\tstring temp = \"\";\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tif(s[i] == ch[0])\n\t\t{\n\t\t\tj = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(i = len - 1; i >= 0; i--)\n\t{\n\t\tif(s[i] == ch[0])\n\t\t{\n\t\t\tk = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tif(i == j || i == k)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp ~= s[i];\n\t\t}\n\t}\n\t\n\treturn temp;\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\tif (first == -1 || last == -1)\n\t\treturn s;\n\treturn s[0..first] ~ s[first+1..$-1] ~ s[last..$-1] ~ s[last+1..$];\n}",
    "{\n\tint n = s.length;\n\tint i = 0;\n\tint j = n - 1;\n\tint f = 0;\n\tint l = 0;\n\tstring res = \"\";\n\twhile (i < n) \n\t{\n\t\tif (s[i] == ch) \n\t\t{\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile (j >= 0) \n\t{\n\t\tif (s[j] == ch) \n\t\t{\n\t\t\tl = 1;\n\t\t\tbreak;\n\t\t}\n\t\tj--;\n\t}\n\tif (f == 1 && l == 1) \n\t{\n\t\tres = s[0..i] ~ s[i + 1..j] ~ s[j + 1..$];\n\t}\n\telse if (f == 1 && l == 0) \n\t{\n\t\tres = s[0..i] ~ s[i + 1..$];\n\t}\n\telse if (f == 0 && l == 1) \n\t{\n\t\tres = s[0..j] ~ s[j + 1..$];\n\t}\n\telse \n\t{\n\t\tres = s;\n\t}\n\treturn res;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = s.length;\n\tstring temp = \"\";\n\tstring temp2 = \"\";\n\t\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (s[i] == ch)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (j = i; j < len; j++)\n\t{\n\t\ttemp += s[j];\n\t}\n\t\n\tlen = temp.length;\n\t\n\tfor (k = len - 1; k >= 0; k--)\n\t{\n\t\tif (temp[k] == ch)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < k; i++)\n\t{\n\t\ttemp2 += temp[i];\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint xxx = 0;\n\t",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = s.length;\n\tstring temp = \"\";\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tif(s[i] == ch)\n\t\t{\n\t\t\tfor(j = i; j < len; j++)\n\t\t\t{\n\t\t\t\tif(s[j] != ch)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(k = j; k < len; k++)\n\t\t\t{\n\t\t\t\ttemp ~= s[k];\n\t\t\t}\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp ~= s[i];\n\t\t}\n\t}\n\t\n\treturn temp;\n}",
    "{ \n\tint n = s.length; \n\tint x = s.find(ch); \n\tint y = s.rfind(ch); \n\treturn s[0..x] ~ s[x+1..y] ~ s[y+1..$]; \n} ",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif(first == -1)\n\t\treturn s;\n\t\n\tif(first == last)\n\t\treturn s[0..first] ~ s[first+1..$];\n\t\n\treturn s[0..first] ~ s[first+1..last-1] ~ s[last+1..$];\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif(first == last)\n\t\treturn s.remove(first,1);\n\telse\n\t\treturn s.remove(first,1).remove(last-1,1);\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif(first == -1)\n\t{\n\t\treturn s;\n\t}\n\t\n\tif(first == last)\n\t{\n\t\treturn s[0..first] ~ s[first+1..$];\n\t}\n\t\n\treturn s[0..first] ~ s[first+1..last-1] ~ s[last+1..$];\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif (first == -1)\n\t\treturn s;\n\t\n\treturn s[0..first] ~ s[first+1..$-1] ~ s[last..$-1] ~ s[last+1..$];\n}",
    "{\n\tint pos = s.find(ch);\n\tif (pos == -1)\n\t\treturn s;\n\treturn s[0..pos] ~ s[pos+1..$];\n}",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif(first == last)\n\t{\n\t\treturn s.erase(first,1);\n\t}\n\telse\n\t{\n\t\treturn s.erase(first,1).erase(last-1,1);\n\t}\n}",
    "{\n\tint start = s.find(ch);\n\tint end = s.rfind(ch);\n\tif (start == end)\n\t\treturn s.remove(start, 1);\n\telse\n\t\treturn s.remove(start, 1).remove(end - 1, 1);\n}",
    "{ \n    int n = s.length; \n    int x = s.find(ch); \n    if (x == -1) \n        return s; \n    string s1 = s.substr(0, x); \n    string s2 = s.substr(x + 1, n - x); \n    int y = s2.rfind(ch); \n    string s3 = s2.substr(0, y); \n    string s4 = s2.substr(y + 1, n - y); \n    return s1 + s3 + s4; \n} ",
    "{\n\tint first = s.find(ch);\n\tint last = s.rfind(ch);\n\t\n\tif (first == -1 || last == -1)\n\t\treturn s;\n\t\n\treturn s[0..first] ~ s[first+1..last-1] ~ s[last+1..$];\n}"
  ]
}
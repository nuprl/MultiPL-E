{
  "name": "mbpp_640_remove_parenthesis",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9hfs2h0g.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp9hfs2h0g.__unittest_L28_C1() [0x427cb2]\n??:? void tmp9hfs2h0g.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\t\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\tresult ~= item[1..$-2];\n\t\telse\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4oyzqqi8.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmp4oyzqqi8.__unittest_L23_C1() [0x427c8e]\n??:? void tmp4oyzqqi8.__modtest() [0x427e14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaujz1c88.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmpaujz1c88.__unittest_L23_C1() [0x427c0e]\n??:? void tmpaujz1c88.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) {\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxhktv_9n.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428aed]\n??:? void tmpxhktv_9n.__unittest_L16_C1() [0x427bd2]\n??:? void tmpxhktv_9n.__modtest() [0x427d58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428846]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ada0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ac9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42881d]\n??:? runModuleUnitTests [0x42dc39]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f3c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9hfs2h0g.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp9hfs2h0g.__unittest_L28_C1() [0x427cb2]\n??:? void tmp9hfs2h0g.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')') \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4t1nrz3y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp4t1nrz3y.__unittest_L23_C1() [0x427c3e]\n??:? void tmp4t1nrz3y.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$];\n\t\t}\n\t\tif(item.length > 0 && item[$-1] == ')')\n\t\t{\n\t\t\titem = item[0..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbdlzqy4t.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpbdlzqy4t.__unittest_L25_C1() [0x427cae]\n??:? void tmpbdlzqy4t.__modtest() [0x427e34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-2];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoq9fub4u.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpoq9fub4u.__unittest_L28_C1() [0x427cb2]\n??:? void tmpoq9fub4u.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjqqhpk6f.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpjqqhpk6f.__unittest_L28_C1() [0x427cb2]\n??:? void tmpjqqhpk6f.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb4tlvttd.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpb4tlvttd.__unittest_L31_C1() [0x427cba]\n??:? void tmpb4tlvttd.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzfms7oq6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpzfms7oq6.__unittest_L18_C1() [0x427bfe]\n??:? void tmpzfms7oq6.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu2su6utu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpu2su6utu.__unittest_L27_C1() [0x427c96]\n??:? void tmpu2su6utu.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tresult ~= \"\";\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tresult ~= \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5vemsmrs.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b8d]\n??:? void tmp5vemsmrs.__unittest_L28_C1() [0x427c72]\n??:? void tmp5vemsmrs.__modtest() [0x427df8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288bd]\n??:? runModuleUnitTests [0x42dcd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fdc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-2];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf0m6f6d7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpf0m6f6d7.__unittest_L28_C1() [0x427cb2]\n??:? void tmpf0m6f6d7.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 1) \n\t\t{\n\t\t\tif(item[0] == '(' && item[$ - 1] == ')') \n\t\t\t{\n\t\t\t\titem = item[1 .. $ - 1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1m9c7h1p.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmp1m9c7h1p.__unittest_L24_C1() [0x427c82]\n??:? void tmp1m9c7h1p.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[item.length-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[1..item.length-2];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\titem = item[1..item.length];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(item[item.length-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..item.length-2];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoupeu9xs.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428c4d]\n??:? void tmpoupeu9xs.__unittest_L35_C1() [0x427d32]\n??:? void tmpoupeu9xs.__modtest() [0x427eb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e037]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4289a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aee5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42897d]\n??:? runModuleUnitTests [0x42de0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429110]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tint i = 0;\n\twhile (i < items.length)\n\t{\n\t\tif (items[i] == \"(\")\n\t\t{\n\t\t\tint j = i + 1;\n\t\t\twhile (j < items.length)\n\t\t\t{\n\t\t\t\tif (items[j] == \")\")\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\ti = j;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= items[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpid0_crmo.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428bbd]\n??:? void tmpid0_crmo.__unittest_L35_C1() [0x427c9e]\n??:? void tmpid0_crmo.__modtest() [0x427e24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfa7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aee4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ade1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288ed]\n??:? runModuleUnitTests [0x42dd7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429080]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item != \"(\" && item != \")\")\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp067oize4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp067oize4.__unittest_L20_C1() [0x427c36]\n??:? void tmp067oize4.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxiwqb4t2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpxiwqb4t2.__unittest_L28_C1() [0x427cb2]\n??:? void tmpxiwqb4t2.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphjzvtk5e.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428ba5]\n??:? void tmphjzvtk5e.__unittest_L28_C1() [0x427c86]\n??:? void tmphjzvtk5e.__modtest() [0x427e0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288d5]\n??:? runModuleUnitTests [0x42dd65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429068]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxxlsy6u1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxxlsy6u1.__unittest_L20_C1() [0x427c06]\n??:? void tmpxxlsy6u1.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring ret;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[1..$-1];\n\t\t\t}\n\t\t\tret ~= item;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp26f285o0.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmp26f285o0.__unittest_L24_C1() [0x427c82]\n??:? void tmp26f285o0.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(')\n\t\t{\n\t\t\tint index = item.find(')');\n\t\t\tif(index != -1)\n\t\t\t{\n\t\t\t\tresult ~= item[0..index];\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "/tmp/tmpc3w2sdup.d(19): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3w2sdup.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxiwqb4t2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpxiwqb4t2.__unittest_L28_C1() [0x427cb2]\n??:? void tmpxiwqb4t2.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0oavn25b.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp0oavn25b.__unittest_L28_C1() [0x427cb2]\n??:? void tmp0oavn25b.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item != \"(\" && item != \")\") \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2r2h0w78.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp2r2h0w78.__unittest_L20_C1() [0x427c36]\n??:? void tmp2r2h0w78.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\n/*\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "/tmp/tmp8ib2pqls.d(31): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8ib2pqls.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprbsw4ynr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmprbsw4ynr.__unittest_L20_C1() [0x427c02]\n??:? void tmprbsw4ynr.__modtest() [0x427d88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpvhijho.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpfpvhijho.__unittest_L27_C1() [0x427c6a]\n??:? void tmpfpvhijho.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\t\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwv7z78bt.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwv7z78bt.__unittest_L25_C1() [0x427c3e]\n??:? void tmpwv7z78bt.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0) \n\t\t\t{\n\t\t\t\tif(item[$-1] == ')') \n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxcx0l06u.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpxcx0l06u.__unittest_L31_C1() [0x427cba]\n??:? void tmpxcx0l06u.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp842m0jj8.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmp842m0jj8.__unittest_L27_C1() [0x427c32]\n??:? void tmp842m0jj8.__modtest() [0x427db8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')') \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph4oddpbn.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmph4oddpbn.__unittest_L23_C1() [0x427c3e]\n??:? void tmph4oddpbn.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmv2ezyfe.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpmv2ezyfe.__unittest_L27_C1() [0x427c6a]\n??:? void tmpmv2ezyfe.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxiwqb4t2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpxiwqb4t2.__unittest_L28_C1() [0x427cb2]\n??:? void tmpxiwqb4t2.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpguhn4qjr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpguhn4qjr.__unittest_L20_C1() [0x427c06]\n??:? void tmpguhn4qjr.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1gq192_d.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmp1gq192_d.__unittest_L23_C1() [0x427c0a]\n??:? void tmp1gq192_d.__modtest() [0x427d90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "/tmp/tmpbele_tmk.d(78): Error: no identifier for declarator `int`\n/tmp/tmpbele_tmk.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbele_tmk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzgg0ekvk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzgg0ekvk.__unittest_L24_C1() [0x427c3e]\n??:? void tmpzgg0ekvk.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsg8hgoas.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpsg8hgoas.__unittest_L31_C1() [0x427c5a]\n??:? void tmpsg8hgoas.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvawc63tj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpvawc63tj.__unittest_L31_C1() [0x427cb2]\n??:? void tmpvawc63tj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring output;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\toutput ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpam21kkhn.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpam21kkhn.__unittest_L23_C1() [0x427c3a]\n??:? void tmpam21kkhn.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$];\n\t\t\tif(item.length == 0)\n\t\t\t\tcontinue;\n\t\t}\n\t\tif(item[$-1] == ')')\n\t\t\titem = item[0..$-2];\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprvnrzj2_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmprvnrzj2_.__unittest_L27_C1() [0x427cb6]\n??:? void tmprvnrzj2_.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkou00wz6.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpkou00wz6.__unittest_L28_C1() [0x427cb2]\n??:? void tmpkou00wz6.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjp0lflrw.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpjp0lflrw.__unittest_L28_C1() [0x427cb2]\n??:? void tmpjp0lflrw.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[item.length-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp9o0gy5t.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpp9o0gy5t.__unittest_L27_C1() [0x427c96]\n??:? void tmpp9o0gy5t.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkou00wz6.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpkou00wz6.__unittest_L28_C1() [0x427cb2]\n??:? void tmpkou00wz6.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item[0] == '(') \n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd165tl8u.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpd165tl8u.__unittest_L21_C1() [0x427c46]\n??:? void tmpd165tl8u.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzgg0ekvk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzgg0ekvk.__unittest_L24_C1() [0x427c3e]\n??:? void tmpzgg0ekvk.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxxlsy6u1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxxlsy6u1.__unittest_L20_C1() [0x427c06]\n??:? void tmpxxlsy6u1.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfgfrwys7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfgfrwys7.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfgfrwys7.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxiwqb4t2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpxiwqb4t2.__unittest_L28_C1() [0x427cb2]\n??:? void tmpxiwqb4t2.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdqx7zvjn.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpdqx7zvjn.__unittest_L31_C1() [0x427cb6]\n??:? void tmpdqx7zvjn.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvawc63tj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpvawc63tj.__unittest_L31_C1() [0x427cb2]\n??:? void tmpvawc63tj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp10tqdimq.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp10tqdimq.__unittest_L27_C1() [0x427c66]\n??:? void tmp10tqdimq.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyxmtm8mc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428ba5]\n??:? void tmpyxmtm8mc.__unittest_L31_C1() [0x427c86]\n??:? void tmpyxmtm8mc.__modtest() [0x427e0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288d5]\n??:? runModuleUnitTests [0x42dd65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429068]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item == \"(\" || item == \")\") \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpecfp35_i.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpecfp35_i.__unittest_L21_C1() [0x427c36]\n??:? void tmpecfp35_i.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach (string item; items) \n\t{\n\t\tif (item.length == 0) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif (item[0] == '(') \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif (item[item.length - 1] == ')') \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp00v3xdsm.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp00v3xdsm.__unittest_L29_C1() [0x427c36]\n??:? void tmp00v3xdsm.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[item.length - 1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoeaslo2z.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpoeaslo2z.__unittest_L27_C1() [0x427c96]\n??:? void tmpoeaslo2z.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7fbxe2z9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp7fbxe2z9.__unittest_L28_C1() [0x427cb2]\n??:? void tmp7fbxe2z9.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09o1oxlx.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp09o1oxlx.__unittest_L31_C1() [0x427cba]\n??:? void tmp09o1oxlx.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjqqhpk6f.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpjqqhpk6f.__unittest_L28_C1() [0x427cb2]\n??:? void tmpjqqhpk6f.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tint i = 1;\n\t\t\tint count = 1;\n\t\t\twhile(count > 0)\n\t\t\t{\n\t\t\t\tif(item[i] == '(')\n\t\t\t\t\tcount++;\n\t\t\t\telse if(item[i] == ')')\n\t\t\t\t\tcount--;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tresult ~= item[i..$];\n\t\t}\n\t\telse\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxsmq8hwi.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428be5]\n??:? void tmpxsmq8hwi.__unittest_L34_C1() [0x427cca]\n??:? void tmpxsmq8hwi.__modtest() [0x427e50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42893e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af0c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428915]\n??:? runModuleUnitTests [0x42dda5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290a8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[1..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsqmfyq7b.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmpsqmfyq7b.__unittest_L24_C1() [0x427c82]\n??:? void tmpsqmfyq7b.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item != \"(\" && item != \")\")\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp067oize4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp067oize4.__unittest_L20_C1() [0x427c36]\n??:? void tmp067oize4.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0 && item[0] != '(') \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0o_06if4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmp0o_06if4.__unittest_L20_C1() [0x427c06]\n??:? void tmp0o_06if4.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp27xeye42.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp27xeye42.__unittest_L24_C1() [0x427c3e]\n??:? void tmp27xeye42.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5jxmnaee.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp5jxmnaee.__unittest_L20_C1() [0x427bfe]\n??:? void tmp5jxmnaee.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[item.length - 1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8zdtie0i.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp8zdtie0i.__unittest_L23_C1() [0x427c3a]\n??:? void tmp8zdtie0i.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[1..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsqmfyq7b.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmpsqmfyq7b.__unittest_L24_C1() [0x427c82]\n??:? void tmpsqmfyq7b.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppssd3dn7.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmppssd3dn7.__unittest_L24_C1() [0x427c32]\n??:? void tmppssd3dn7.__modtest() [0x427db8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphi892cnz.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmphi892cnz.__unittest_L24_C1() [0x427c56]\n??:? void tmphi892cnz.__modtest() [0x427ddc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1gq192_d.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmp1gq192_d.__unittest_L23_C1() [0x427c0a]\n??:? void tmp1gq192_d.__modtest() [0x427d90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb4tlvttd.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpb4tlvttd.__unittest_L31_C1() [0x427cba]\n??:? void tmpb4tlvttd.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9lb9c9ms.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp9lb9c9ms.__unittest_L21_C1() [0x427bfe]\n??:? void tmp9lb9c9ms.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzulm10yf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzulm10yf.__unittest_L23_C1() [0x427c3e]\n??:? void tmpzulm10yf.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item != \"(\" && item != \")\") \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2r2h0w78.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp2r2h0w78.__unittest_L20_C1() [0x427c36]\n??:? void tmp2r2h0w78.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfpvhijho.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpfpvhijho.__unittest_L27_C1() [0x427c6a]\n??:? void tmpfpvhijho.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring ret = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-2];\n\t\t\t}\n\t\t\tret ~= item;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2x2kaiyw.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp2x2kaiyw.__unittest_L28_C1() [0x427cb2]\n??:? void tmp2x2kaiyw.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp27xeye42.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp27xeye42.__unittest_L24_C1() [0x427c3e]\n??:? void tmp27xeye42.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyxmtm8mc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428ba5]\n??:? void tmpyxmtm8mc.__unittest_L31_C1() [0x427c86]\n??:? void tmpyxmtm8mc.__modtest() [0x427e0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288d5]\n??:? runModuleUnitTests [0x42dd65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429068]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slvm3ht.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp1slvm3ht.__unittest_L31_C1() [0x427cb2]\n??:? void tmp1slvm3ht.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5jxmnaee.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp5jxmnaee.__unittest_L20_C1() [0x427bfe]\n??:? void tmp5jxmnaee.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-2];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpais8icdi.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428c05]\n??:? void tmpais8icdi.__unittest_L34_C1() [0x427ce6]\n??:? void tmpais8icdi.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42895e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af2c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428935]\n??:? runModuleUnitTests [0x42ddc5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpep2r5mzj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpep2r5mzj.__unittest_L31_C1() [0x427cb2]\n??:? void tmpep2r5mzj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzulm10yf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzulm10yf.__unittest_L23_C1() [0x427c3e]\n??:? void tmpzulm10yf.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7fbxe2z9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp7fbxe2z9.__unittest_L28_C1() [0x427cb2]\n??:? void tmp7fbxe2z9.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdqx7zvjn.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpdqx7zvjn.__unittest_L31_C1() [0x427cb6]\n??:? void tmpdqx7zvjn.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyctlhpzg.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpyctlhpzg.__unittest_L21_C1() [0x427c36]\n??:? void tmpyctlhpzg.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq3m5vl_v.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b3d]\n??:? void tmpq3m5vl_v.__unittest_L24_C1() [0x427c22]\n??:? void tmpq3m5vl_v.__modtest() [0x427da8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428896]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42add5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae64]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42886d]\n??:? runModuleUnitTests [0x42dcfd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429000]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')') \n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprca3u0of.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmprca3u0of.__unittest_L28_C1() [0x427cb2]\n??:? void tmprca3u0of.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7fbxe2z9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp7fbxe2z9.__unittest_L28_C1() [0x427cb2]\n??:? void tmp7fbxe2z9.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxxlsy6u1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxxlsy6u1.__unittest_L20_C1() [0x427c06]\n??:? void tmpxxlsy6u1.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdb7ykism.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpdb7ykism.__unittest_L27_C1() [0x427c6a]\n??:? void tmpdb7ykism.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5jxmnaee.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp5jxmnaee.__unittest_L20_C1() [0x427bfe]\n??:? void tmp5jxmnaee.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')') \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4t1nrz3y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp4t1nrz3y.__unittest_L23_C1() [0x427c3e]\n??:? void tmp4t1nrz3y.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpep2r5mzj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpep2r5mzj.__unittest_L31_C1() [0x427cb2]\n??:? void tmpep2r5mzj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfo1vr6qs.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmpfo1vr6qs.__unittest_L23_C1() [0x427c0e]\n??:? void tmpfo1vr6qs.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')') \n\t\t\t{\n\t\t\t\titem = item[1..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0xl54k9x.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmp0xl54k9x.__unittest_L24_C1() [0x427c82]\n??:? void tmp0xl54k9x.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0) \n\t\t\t{\n\t\t\t\tif(item[$-1] == ')') \n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf8qg41id.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpf8qg41id.__unittest_L31_C1() [0x427cba]\n??:? void tmpf8qg41id.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[item.length - 1] == ')')\n\t\t\t{\n\t\t\t\titem = item[1 .. item.length - 2];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplri0wgii.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmplri0wgii.__unittest_L24_C1() [0x427c82]\n??:? void tmplri0wgii.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1 && item[0] == '(')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse if(item.length == 1 && item[0] == ')')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi89chzz3.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmpi89chzz3.__unittest_L28_C1() [0x427c2e]\n??:? void tmpi89chzz3.__modtest() [0x427db4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9hfs2h0g.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp9hfs2h0g.__unittest_L28_C1() [0x427cb2]\n??:? void tmp9hfs2h0g.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp04jllr84.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp04jllr84.__unittest_L21_C1() [0x427bfe]\n??:? void tmp04jllr84.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdq4csaix.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpdq4csaix.__unittest_L21_C1() [0x427c36]\n??:? void tmpdq4csaix.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalgj15qj.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpalgj15qj.__unittest_L27_C1() [0x427c6a]\n??:? void tmpalgj15qj.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item[0] == '(') \n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppd1j50e1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmppd1j50e1.__unittest_L21_C1() [0x427c46]\n??:? void tmppd1j50e1.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpguhn4qjr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpguhn4qjr.__unittest_L20_C1() [0x427c06]\n??:? void tmpguhn4qjr.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxxlsy6u1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxxlsy6u1.__unittest_L20_C1() [0x427c06]\n??:? void tmpxxlsy6u1.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzulm10yf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzulm10yf.__unittest_L23_C1() [0x427c3e]\n??:? void tmpzulm10yf.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] != '(')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc499q1lb.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpc499q1lb.__unittest_L20_C1() [0x427c06]\n??:? void tmpc499q1lb.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0 && item[0] != '(') \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0o_06if4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmp0o_06if4.__unittest_L20_C1() [0x427c06]\n??:? void tmp0o_06if4.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpguhn4qjr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpguhn4qjr.__unittest_L20_C1() [0x427c06]\n??:? void tmpguhn4qjr.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_ylugwfi.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp_ylugwfi.__unittest_L21_C1() [0x427c46]\n??:? void tmp_ylugwfi.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring ret = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[item.length - 1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[1..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tret ~= item;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps3_a_2ug.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmps3_a_2ug.__unittest_L27_C1() [0x427c8e]\n??:? void tmps3_a_2ug.__modtest() [0x427e14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0qk9y91s.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp0qk9y91s.__unittest_L31_C1() [0x427cb2]\n??:? void tmp0qk9y91s.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0qk9y91s.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp0qk9y91s.__unittest_L31_C1() [0x427cb2]\n??:? void tmp0qk9y91s.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_ylugwfi.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmp_ylugwfi.__unittest_L21_C1() [0x427c46]\n??:? void tmp_ylugwfi.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\tif(item.length > 1) \n\t\t\t\t{\n\t\t\t\t\tif(item[$-1] == ')') \n\t\t\t\t\t{\n\t\t\t\t\t\t// remove the parenthesis\n\t\t\t\t\t\titem = item[1..$-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbd9f180t.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpbd9f180t.__unittest_L31_C1() [0x427c9a]\n??:? void tmpbd9f180t.__modtest() [0x427e20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz9bgke6c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpz9bgke6c.__unittest_L20_C1() [0x427be6]\n??:? void tmpz9bgke6c.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\titem = item[1..$-1];\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpveby3o9v.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b95]\n??:? void tmpveby3o9v.__unittest_L21_C1() [0x427c7a]\n??:? void tmpveby3o9v.__modtest() [0x427e00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df7f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aebc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288c5]\n??:? runModuleUnitTests [0x42dd55]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429058]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif (item.length > 0)\n\t\t{\n\t\t\tif (item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy_jn5svt.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpy_jn5svt.__unittest_L23_C1() [0x427c3e]\n??:? void tmpy_jn5svt.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc4rfe6ed.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpc4rfe6ed.__unittest_L24_C1() [0x427c5a]\n??:? void tmpc4rfe6ed.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5jxmnaee.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmp5jxmnaee.__unittest_L20_C1() [0x427bfe]\n??:? void tmp5jxmnaee.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tint count = 1;\n\t\t\tint i = 1;\n\t\t\twhile(count != 0)\n\t\t\t{\n\t\t\t\tif(item[i] == '(')\n\t\t\t\t\tcount++;\n\t\t\t\telse if(item[i] == ')')\n\t\t\t\t\tcount--;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tresult ~= item[i..$];\n\t\t}\n\t\telse\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp08_kjgvl.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428be5]\n??:? void tmp08_kjgvl.__unittest_L34_C1() [0x427cca]\n??:? void tmp08_kjgvl.__modtest() [0x427e50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42893e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af0c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428915]\n??:? runModuleUnitTests [0x42dda5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290a8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzulm10yf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzulm10yf.__unittest_L23_C1() [0x427c3e]\n??:? void tmpzulm10yf.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tint start = 0;\n\tint end = 0;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tstart = 1;\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tend = 1;\n\t\t}\n\t\telse if(start == 0 && end == 0)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(start == 1 && end == 1)\n\t\t{\n\t\t\tstart = 0;\n\t\t\tend = 0;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpthymcfov.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428b95]\n??:? void tmpthymcfov.__unittest_L35_C1() [0x427c7a]\n??:? void tmpthymcfov.__modtest() [0x427e00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288c5]\n??:? runModuleUnitTests [0x42dce1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya66yaiz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpya66yaiz.__unittest_L31_C1() [0x427cba]\n??:? void tmpya66yaiz.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp10tqdimq.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp10tqdimq.__unittest_L27_C1() [0x427c66]\n??:? void tmp10tqdimq.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphjzvtk5e.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428ba5]\n??:? void tmphjzvtk5e.__unittest_L28_C1() [0x427c86]\n??:? void tmphjzvtk5e.__modtest() [0x427e0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288d5]\n??:? runModuleUnitTests [0x42dd65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429068]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwx7n8t3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpjwx7n8t3.__unittest_L19_C1() [0x427c36]\n??:? void tmpjwx7n8t3.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\twhile(item != \")\")\n\t\t\t{\n\t\t\t\titem = items.popFront();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "/tmp/tmpsp681tk6.d(17): Error: no property `popFront` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsp681tk6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxxlsy6u1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxxlsy6u1.__unittest_L20_C1() [0x427c06]\n??:? void tmpxxlsy6u1.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjgiu9p58.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpjgiu9p58.__unittest_L20_C1() [0x427be6]\n??:? void tmpjgiu9p58.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiose7tw.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpfiose7tw.__unittest_L20_C1() [0x427be6]\n??:? void tmpfiose7tw.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb1v_sp9s.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpb1v_sp9s.__unittest_L23_C1() [0x427c3e]\n??:? void tmpb1v_sp9s.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7fbxe2z9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp7fbxe2z9.__unittest_L28_C1() [0x427cb2]\n??:? void tmp7fbxe2z9.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbxdg0g4c.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpbxdg0g4c.__unittest_L18_C1() [0x427c06]\n??:? void tmpbxdg0g4c.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpguhn4qjr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpguhn4qjr.__unittest_L20_C1() [0x427c06]\n??:? void tmpguhn4qjr.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7fbxe2z9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp7fbxe2z9.__unittest_L28_C1() [0x427cb2]\n??:? void tmp7fbxe2z9.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-2];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoq9fub4u.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpoq9fub4u.__unittest_L28_C1() [0x427cb2]\n??:? void tmpoq9fub4u.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy544pgl_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpy544pgl_.__unittest_L31_C1() [0x427cba]\n??:? void tmpy544pgl_.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfd7mml5_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpfd7mml5_.__unittest_L24_C1() [0x427c5a]\n??:? void tmpfd7mml5_.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123132,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvawc63tj.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpvawc63tj.__unittest_L31_C1() [0x427cb2]\n??:? void tmpvawc63tj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t\tif(item.length > 0)\n\t\t\t\t{\n\t\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t\t{\n\t\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpypcokl0c.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bdd]\n??:? void tmpypcokl0c.__unittest_L31_C1() [0x427cbe]\n??:? void tmpypcokl0c.__modtest() [0x427e44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af04]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42890d]\n??:? runModuleUnitTests [0x42dd9d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
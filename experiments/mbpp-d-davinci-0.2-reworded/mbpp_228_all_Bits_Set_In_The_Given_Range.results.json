{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r) - pow(2, l - 1); \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe6_fg227.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpe6_fg227.__unittest_L12_C1() [0x427aca]\n??:? void tmpe6_fg227.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzazr8qr2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpzazr8qr2.__unittest_L13_C1() [0x427aca]\n??:? void tmpzazr8qr2.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpdwc5w1kt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdwc5w1kt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdwc5w1kt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long m = pow(2, r - l + 1) - 1; \n    m = m << (l - 1); \n    return (n & m) == m; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqw50mp06.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpqw50mp06.__unittest_L13_C1() [0x427aca]\n??:? void tmpqw50mp06.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpv9y6te11.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv9y6te11.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeuyv5x7v.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpeuyv5x7v.__unittest_L13_C1() [0x427a82]\n??:? void tmpeuyv5x7v.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    if ((n & mask) == mask) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpsj49jxo7.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsj49jxo7.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsj49jxo7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long int x = pow(2, r - l + 1) - 1; \n\treturn ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmps9tzidfd.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmps9tzidfd.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps9tzidfd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2bavz2nc.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2bavz2nc.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bavz2nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = pow(2, r - l + 1) - 1; \n    return ((n >> l) & max) == max; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc1cv1k6_.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpc1cv1k6_.__unittest_L12_C1() [0x427aba]\n??:? void tmpc1cv1k6_.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2lrgsqx_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2lrgsqx_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lrgsqx_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2gn5i4wh.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2gn5i4wh.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2gn5i4wh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = pow(2, r - l + 1) - 1; \n    long mask = max << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpytmtvmey.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpytmtvmey.__unittest_L13_C1() [0x427aca]\n??:? void tmpytmtvmey.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2lrgsqx_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2lrgsqx_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lrgsqx_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpjl46npyg.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjl46npyg.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjl46npyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpmvwq7ahb.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvwq7ahb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzazr8qr2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpzazr8qr2.__unittest_L13_C1() [0x427aca]\n??:? void tmpzazr8qr2.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max_ele = (1 << r) - 1; \n    long min_ele = (1 << (l - 1)) - 1; \n    long mask = max_ele - min_ele; \n    return (n & mask) == mask; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp94ell6yg.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp94ell6yg.__unittest_L14_C1() [0x427a86]\n??:? void tmp94ell6yg.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == 0); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpngftbqfi.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpngftbqfi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpcmowztko.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpcmowztko.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmowztko.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all bits are set in the given range \n    // we need to check if all bits are set in the range \n    // [0, r] and [0, l - 1] are unset. \n    // So we need to check if the bits in the range [0, r] \n    // are set and bits in the range [0, l - 1] are unset. \n    // To check if bits in the range [0, r] are set, we need \n    // to check if the number (2^r - 1) is a subset of n. \n    // To check if bits in the range [0, l - 1] are unset, \n    // we need to check if the number (2^l - 1) is not a \n    // subset of n. \n    // So the final condition is (2^r - 1) & n == (2^r - 1) \n    // and (2^l - 1) & n != (2^l - 1) \n    return (pow(2, r) - 1) & n == (pow(2, r) - 1) && \n           (pow(2, l) - 1) & n != (pow(2, l) - 1); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpp8puopgb.d(21): Error: `n == pow(2, r) - 1` must be parenthesized when next to operator `&`\n/tmp/tmpp8puopgb.d(22): Error: `n != pow(2, l) - 1` must be parenthesized when next to operator `&`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp8puopgb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2gn5i4wh.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2gn5i4wh.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2gn5i4wh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2lrgsqx_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2lrgsqx_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lrgsqx_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpyf7zlop4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyf7zlop4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf7zlop4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - (1 << l-1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpze7tgcd7.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpze7tgcd7.__unittest_L12_C1() [0x427a7e]\n??:? void tmpze7tgcd7.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long temp = pow(2, r - l + 1) - 1; \n    temp = temp << (l - 1); \n    if ((n & temp) == temp) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk1nz5liv.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpk1nz5liv.__unittest_L16_C1() [0x427ad6]\n??:? void tmpk1nz5liv.__modtest() [0x427bf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa05]\n??:? runModuleUnitTests [0x42b971]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max_ele = pow(2, r - l + 1) - 1; \n    return ((n >> l) & max_ele) == max_ele; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr_l3a0bo.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpr_l3a0bo.__unittest_L12_C1() [0x427aba]\n??:? void tmpr_l3a0bo.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - 1; \n    num = num ^ ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb3542j32.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpb3542j32.__unittest_L13_C1() [0x427a82]\n??:? void tmpb3542j32.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpat40q1rt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpat40q1rt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpat40q1rt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return (n & x) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // If all bits are set in the range \n    if (((n >> l) & ((1 << (r - l + 1)) - 1)) == ((1 << (r - l + 1)) - 1)) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyd7h2xv3.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpyd7h2xv3.__unittest_L15_C1() [0x427a76]\n??:? void tmpyd7h2xv3.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzazr8qr2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpzazr8qr2.__unittest_L13_C1() [0x427aca]\n??:? void tmpzazr8qr2.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << r) - 1; \n    long min = (1 << (l - 1)) - 1; \n    return ((n & max) == max) && ((n & min) == 0); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc8zfdj0l.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpc8zfdj0l.__unittest_L13_C1() [0x427a8e]\n??:? void tmpc8zfdj0l.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n  \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmplf4bcj9o.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmplf4bcj9o.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplf4bcj9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return !(n & x << l); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa159p1lb.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpa159p1lb.__unittest_L12_C1() [0x427ab2]\n??:? void tmpa159p1lb.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    long y = (1 << (l - 1)) - 1; \n    long z = x ^ y; \n    return ((n & z) == z); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7rv0skcs.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp7rv0skcs.__unittest_L14_C1() [0x427a86]\n??:? void tmp7rv0skcs.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps82l3krr.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmps82l3krr.__unittest_L12_C1() [0x427ab2]\n??:? void tmps82l3krr.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu5ysyrdk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpu5ysyrdk.__unittest_L13_C1() [0x427a8e]\n??:? void tmpu5ysyrdk.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((x & n) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpmtdn5tq2.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpmtdn5tq2.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmtdn5tq2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvfbcccsg.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpvfbcccsg.__unittest_L13_C1() [0x427a92]\n??:? void tmpvfbcccsg.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvfbcccsg.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpvfbcccsg.__unittest_L13_C1() [0x427a92]\n??:? void tmpvfbcccsg.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vflt6tp.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp6vflt6tp.__unittest_L12_C1() [0x427aba]\n??:? void tmp6vflt6tp.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2lrgsqx_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2lrgsqx_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lrgsqx_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check whether all the bits are set in the given range \n    // or not. \n    for (long i = l; i <= r; i++) \n        if (!(n & (1 << i))) \n            return false; \n  \n    return true; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsuiptcgc.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpsuiptcgc.__unittest_L19_C1() [0x427a7e]\n??:? void tmpsuiptcgc.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvpexjc9.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpjvpexjc9.__unittest_L12_C1() [0x427ab2]\n??:? void tmpjvpexjc9.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return (n & x) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return ((n & y) == y); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp0g2ggt73.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(9): Error: no identifier for declarator `long`\n/tmp/tmp0g2ggt73.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2ggt73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == (num << l); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpz0eh1wm1.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0eh1wm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // If the number is negative, \n    // then it is not possible to \n    // check all bits are set or not \n    if (n < 0) \n        return false; \n  \n    // If the number is 0, then \n    // all bits are unset \n    if (n == 0) \n        return true; \n  \n    // If the number is not 0, then \n    // check if all bits are set \n    // in the given range \n    long num = n; \n    for (long i = l; i <= r; i++) { \n        // If the bit is not set, \n        // then return false \n        if ((num & (1 << i)) == 0) \n            return false; \n    } \n  \n    // If all bits are set, \n    // then return true \n    return true; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsj8io0rz.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpsj8io0rz.__unittest_L37_C1() [0x427a9a]\n??:? void tmpsj8io0rz.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long m = pow(2, r - l + 1) - 1; \n    m = m << (l - 1); \n    return ((n & m) == m); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx866wv27.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpx866wv27.__unittest_L13_C1() [0x427aca]\n??:? void tmpx866wv27.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzazr8qr2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpzazr8qr2.__unittest_L13_C1() [0x427aca]\n??:? void tmpzazr8qr2.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9yu9m1he.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9yu9m1he.__unittest_L12_C1() [0x427aba]\n??:? void tmp9yu9m1he.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << (r - l + 1)) - 1; \n    return ((n >> l) & max) == max; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpswfvnfku.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpswfvnfku.__unittest_L12_C1() [0x427a72]\n??:? void tmpswfvnfku.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return ((n & y) == y); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp0g2ggt73.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(9): Error: no identifier for declarator `long`\n/tmp/tmp0g2ggt73.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2ggt73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq0txhrz0.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpq0txhrz0.__unittest_L12_C1() [0x427ab2]\n??:? void tmpq0txhrz0.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return ((n & y) == y); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp0g2ggt73.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(9): Error: no identifier for declarator `long`\n/tmp/tmp0g2ggt73.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2ggt73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num ? true : false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpdqk_x0q_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdqk_x0q_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdqk_x0q_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpjl46npyg.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpjl46npyg.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjl46npyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong num = pow(2, r - l + 1) - 1; \n\tnum = num << (l - 1); \n\treturn ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd0c8krz8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpd0c8krz8.__unittest_L13_C1() [0x427aca]\n??:? void tmpd0c8krz8.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << r) - 1; \n    long min = (1 << (l - 1)) - 1; \n    return (n & max) == max && (n & min) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2syygfkb.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp2syygfkb.__unittest_L13_C1() [0x427a8e]\n??:? void tmp2syygfkb.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpat40q1rt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpat40q1rt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpat40q1rt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpy5ajn6eu.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5ajn6eu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpat40q1rt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpat40q1rt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpat40q1rt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeuyv5x7v.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpeuyv5x7v.__unittest_L13_C1() [0x427a82]\n??:? void tmpeuyv5x7v.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpat40q1rt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpat40q1rt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpat40q1rt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpat40q1rt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpat40q1rt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpat40q1rt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2gn5i4wh.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2gn5i4wh.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2gn5i4wh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << r) - 1; \n    mask = mask - ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp_qrwmjli.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_qrwmjli.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_qrwmjli.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvt8o4cth.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpvt8o4cth.__unittest_L12_C1() [0x427ab2]\n??:? void tmpvt8o4cth.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps82l3krr.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmps82l3krr.__unittest_L12_C1() [0x427ab2]\n??:? void tmps82l3krr.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpfncar5xy.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpfncar5xy.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfncar5xy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpyf7zlop4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyf7zlop4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf7zlop4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk8ygyg9_.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpk8ygyg9_.__unittest_L13_C1() [0x427a7e]\n??:? void tmpk8ygyg9_.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long int num = pow(2, r - l + 1) - 1; \n\tnum = num << (l - 1); \n\treturn ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp0o5nyzgp.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0o5nyzgp.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0o5nyzgp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmppmw9p4tq.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppmw9p4tq.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppmw9p4tq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpxotg3_1f.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpxotg3_1f.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxotg3_1f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    if ((num & n) == num) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpa_uc2ur3.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa_uc2ur3.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_uc2ur3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp74gdqr6p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp74gdqr6p.__unittest_L12_C1() [0x427ab2]\n??:? void tmp74gdqr6p.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpuy0_w7zv.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuy0_w7zv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check whether all bits are set in the given range \n    // or not, we will check whether the bitwise AND of \n    // the number and the number obtained by left shifting \n    // 1 by (r - l + 1) is 0 or not. \n  \n    // Left shifting 1 by (r - l + 1) \n    long num = 1 << (r - l + 1); \n  \n    // Subtracting 1 from the number \n    num = num - 1; \n  \n    // Left shifting the number by l - 1 \n    num = num << (l - 1); \n  \n    // If the bitwise AND of the number and the given \n    // number is 0, then all bits are set in the given \n    // range, else not. \n    return (n & num) == 0; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = 0; \n    for (long i = l; i <= r; i++) \n        num |= (1 << i); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqzw5fdl3.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpqzw5fdl3.__unittest_L14_C1() [0x427a8e]\n??:? void tmpqzw5fdl3.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpyvr7t0mx.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyvr7t0mx.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvr7t0mx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\t// Write your code here\n\t// To print results to the standard output you can use print\n\t// Example: print \"Hello world!\"\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx <<= l - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzu_s5rk_.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpzu_s5rk_.__unittest_L16_C1() [0x427a92]\n??:? void tmpzu_s5rk_.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpdozut1cu.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdozut1cu.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdozut1cu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeuyv5x7v.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpeuyv5x7v.__unittest_L13_C1() [0x427a82]\n??:? void tmpeuyv5x7v.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_bnsabn.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpz_bnsabn.__unittest_L13_C1() [0x427aca]\n??:? void tmpz_bnsabn.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpy5ajn6eu.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5ajn6eu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpwxnci5m4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwxnci5m4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxnci5m4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp3lqwmiqh.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3lqwmiqh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long int x = pow(2, r - l + 1) - 1; \n\tx = x << (l - 1); \n\tif ((n & x) == x) \n\t\treturn true; \n\telse\n\t\treturn false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp553mxcoj.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp553mxcoj.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp553mxcoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpomhk950u.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomhk950u.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomhk950u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpyvr7t0mx.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyvr7t0mx.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvr7t0mx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\t// To check whether all the bits are unset in the given range or not \n\t// we need to check whether the given number is divisible by 2^(r-l+1) or not. \n\t// If the given number is divisible by 2^(r-l+1) then all the bits are unset in the given range. \n\t// If the given number is not divisible by 2^(r-l+1) then all the bits are not unset in the given range. \n\t\n\t// Calculate 2^(r-l+1) \n\tlong x = pow(2, (r - l + 1)); \n\t\n\t// Check whether the given number is divisible by 2^(r-l+1) or not \n\tif (n % x == 0) \n\t\treturn true; \n\telse\n\t\treturn false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprhbjfs0s.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmprhbjfs0s.__unittest_L23_C1() [0x427ae3]\n??:? void tmprhbjfs0s.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9yu9m1he.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9yu9m1he.__unittest_L12_C1() [0x427aba]\n??:? void tmp9yu9m1he.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpyf7zlop4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpyf7zlop4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf7zlop4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9yu9m1he.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9yu9m1he.__unittest_L12_C1() [0x427aba]\n??:? void tmp9yu9m1he.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5l9bay_7.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp5l9bay_7.__unittest_L13_C1() [0x427aca]\n??:? void tmp5l9bay_7.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9yu9m1he.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9yu9m1he.__unittest_L12_C1() [0x427aba]\n??:? void tmp9yu9m1he.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vflt6tp.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp6vflt6tp.__unittest_L12_C1() [0x427aba]\n??:? void tmp6vflt6tp.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpeavhny6a.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpeavhny6a.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeavhny6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // Check if all bits are set in the given range \n    for (long i = l; i <= r; i++) \n        if (!(n & (1 << i))) \n            return false; \n    return true; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptcekw2td.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmptcekw2td.__unittest_L15_C1() [0x427a7e]\n??:? void tmptcekw2td.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpijfpwgn_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpijfpwgn_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpijfpwgn_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpdwc5w1kt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdwc5w1kt.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdwc5w1kt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2gn5i4wh.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2gn5i4wh.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2gn5i4wh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long x = pow(2, r - l + 1) - 1; \n\tx = x << (l - 1); \n\treturn ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpjqz3semx.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjqz3semx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe9jrxv35.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpe9jrxv35.__unittest_L13_C1() [0x427a86]\n??:? void tmpe9jrxv35.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpomhk950u.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpomhk950u.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomhk950u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    if ((num & n) == num) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpa_uc2ur3.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa_uc2ur3.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_uc2ur3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvpexjc9.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpjvpexjc9.__unittest_L12_C1() [0x427ab2]\n??:? void tmpjvpexjc9.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return (n & (x << (l - 1))) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long int num = pow(2, r - l + 1) - 1; \n\treturn ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpqqjf6dzg.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqqjf6dzg.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqqjf6dzg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp74gdqr6p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp74gdqr6p.__unittest_L12_C1() [0x427ab2]\n??:? void tmp74gdqr6p.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all the bits are set in the given range \n    // or not. \n    for (long i = l; i <= r; i++) \n        if (!(n & (1 << i))) \n            return false; \n  \n    return true; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp__akehdj.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp__akehdj.__unittest_L19_C1() [0x427a7e]\n??:? void tmp__akehdj.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpfncar5xy.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpfncar5xy.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfncar5xy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpdozut1cu.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdozut1cu.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdozut1cu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    if ((num & n) == num) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpa_uc2ur3.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa_uc2ur3.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_uc2ur3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vflt6tp.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp6vflt6tp.__unittest_L12_C1() [0x427aba]\n??:? void tmp6vflt6tp.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == (num << l); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpuhrrrbcx.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuhrrrbcx.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhrrrbcx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tint count = 0;\n\tfor (int i = l; i <= r; i++)\n\t{\n\t\tif (n & (1 << i))\n\t\t\tcount++;\n\t}\n\treturn count == (r - l + 1);\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpz6a1lgvg.d(10): Error: cannot implicitly convert expression `l` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6a1lgvg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpmitq4vif.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpmitq4vif.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmitq4vif.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    if ((num & n) == num) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpkspo_bln.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpkspo_bln.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkspo_bln.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return (n & x) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpngftbqfi.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpngftbqfi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7e88m5v5.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7e88m5v5.__unittest_L12_C1() [0x427aba]\n??:? void tmp7e88m5v5.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu5ysyrdk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpu5ysyrdk.__unittest_L13_C1() [0x427a8e]\n??:? void tmpu5ysyrdk.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << (r - l + 1)) - 1; \n    return ((n >> l) & max) == max; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpswfvnfku.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpswfvnfku.__unittest_L12_C1() [0x427a72]\n??:? void tmpswfvnfku.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int m = pow(2, r - l + 1) - 1; \n    m = m << (l - 1); \n    return ((n & m) == m); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpx2y0hezo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpx2y0hezo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2y0hezo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long m = pow(2, r - l + 1) - 1; \n    m = m << (l - 1); \n    return ((n & m) == m); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx866wv27.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpx866wv27.__unittest_L13_C1() [0x427aca]\n??:? void tmpx866wv27.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // Initialize result \n    bool result = true; \n  \n    // Check all bits in the given range \n    for (long i = l; i <= r; i++) \n        result &= ((n & (1 << i)) != 0); \n  \n    return result; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_6ao4kx2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp_6ao4kx2.__unittest_L18_C1() [0x427a8a]\n??:? void tmp_6ao4kx2.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60_43t1j.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp60_43t1j.__unittest_L13_C1() [0x427aca]\n??:? void tmp60_43t1j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long num = pow(2, r - l + 1) - 1; \n\treturn ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpnfv32_le.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnfv32_le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpwxnci5m4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwxnci5m4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxnci5m4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - 1;\n\tx = x - ((1 << (l - 1)) - 1);\n\treturn (x & n) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8v71vzjt.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp8v71vzjt.__unittest_L13_C1() [0x427a8e]\n??:? void tmp8v71vzjt.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all bits are set in the given range \n    // we can use the following formula \n    // (2^(r-l+1))-1 \n    long num = (1 << (r - l + 1)) - 1; \n  \n    // If the given number is greater than the number \n    // then all bits are not set in the given range \n    if (n > num) \n        return false; \n  \n    // If the given number is less than the number \n    // then all bits are set in the given range \n    else if (n < num) \n        return true; \n  \n    // If the given number is equal to the number \n    // then all bits are set in the given range \n    else\n        return true; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpks4bq3go.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpks4bq3go.__unittest_L31_C1() [0x427a7a]\n??:? void tmpks4bq3go.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxshcq5l8.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxshcq5l8.__unittest_L13_C1() [0x427a7e]\n??:? void tmpxshcq5l8.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpf02ola9b.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf02ola9b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp74gdqr6p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp74gdqr6p.__unittest_L12_C1() [0x427ab2]\n??:? void tmp74gdqr6p.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpeavhny6a.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpeavhny6a.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeavhny6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn8q8w8w0.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpn8q8w8w0.__unittest_L13_C1() [0x427aca]\n??:? void tmpn8q8w8w0.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return ((n & y) == y); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmp0g2ggt73.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(9): Error: no identifier for declarator `long`\n/tmp/tmp0g2ggt73.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp0g2ggt73.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2ggt73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all bits are set in the given range \n    // we can use the following formula \n    // (2^(r-l+1))-1 \n    // if the result of the above formula is equal \n    // to the result of the following formula then \n    // all bits are set in the given range \n    // (n>>l)&((2^(r-l+1))-1) \n    return (((1 << (r - l + 1)) - 1) == ((n >> l) & ((1 << (r - l + 1)) - 1))); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph_7_hp42.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmph_7_hp42.__unittest_L18_C1() [0x427a72]\n??:? void tmph_7_hp42.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpwxnci5m4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwxnci5m4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxnci5m4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmp2lrgsqx_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp2lrgsqx_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2lrgsqx_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpfp3mxbnn.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfp3mxbnn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r) - pow(2, l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxvr8wrf4.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxvr8wrf4.__unittest_L12_C1() [0x427ac6]\n??:? void tmpxvr8wrf4.__modtest() [0x427be4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp6jfemcup.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6jfemcup.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r) - pow(2, l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpuihuv4nm.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpuihuv4nm.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuihuv4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num ? true : false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "/tmp/tmpdqk_x0q_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpdqk_x0q_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdqk_x0q_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjvpexjc9.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpjvpexjc9.__unittest_L12_C1() [0x427ab2]\n??:? void tmpjvpexjc9.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvt8o4cth.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpvt8o4cth.__unittest_L12_C1() [0x427ab2]\n??:? void tmpvt8o4cth.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r) - pow(2, l-1); \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz9tiz6v6.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpz9tiz6v6.__unittest_L12_C1() [0x427aca]\n??:? void tmpz9tiz6v6.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu5ysyrdk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpu5ysyrdk.__unittest_L13_C1() [0x427a8e]\n??:? void tmpu5ysyrdk.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = 1; \n    x = x << r; \n    x = x - 1; \n    x = x << (l - r + 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpigqkhgoj.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpigqkhgoj.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpigqkhgoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpeavhny6a.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpeavhny6a.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeavhny6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((n & num) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp3dtieo3h.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3dtieo3h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpm3zizfty.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3zizfty.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n  \n    if ((num & n) == num) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp83tw9df9.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp83tw9df9.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83tw9df9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max_ele = pow(2, r) - 1; \n    long min_ele = pow(2, l) - 1; \n    return ((n & max_ele) == max_ele && \n            (n & min_ele) == 0); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8lt1fp5e.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp8lt1fp5e.__unittest_L14_C1() [0x427ad2]\n??:? void tmp8lt1fp5e.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa26]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9fd]\n??:? runModuleUnitTests [0x42b969]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vflt6tp.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp6vflt6tp.__unittest_L12_C1() [0x427aba]\n??:? void tmp6vflt6tp.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // Traverse the bits in the given range \n    for (long i = l; i <= r; i++) \n        if (!(n & (1 << i))) \n            return false; \n  \n    return true; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptnucdw5q.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmptnucdw5q.__unittest_L18_C1() [0x427a7e]\n??:? void tmptnucdw5q.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517590,
      "stdout": "",
      "stderr": "/tmp/tmpz9g96609.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpz9g96609.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9g96609.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
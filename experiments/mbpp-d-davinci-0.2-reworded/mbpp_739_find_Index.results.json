{
  "name": "mbpp_739_find_Index",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\tlong ans = 0; \n\t\n\t// Do binary search to find index \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If number of digits in mid is equal to n, \n\t\t// then return mid. \n\t\tif (floor(log10(mid * (mid + 1) / 2)) + 1 == n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\t\n\t\t// If number of digits in mid is less than n, \n\t\t// then search in right half \n\t\telse if (floor(log10(mid * (mid + 1) / 2)) + 1 < n) \n\t\t\tlow = mid + 1; \n\t\t\n\t\t// If number of digits in mid is more than n, \n\t\t// then search in left half \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\t\n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmf4p516h.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427fd5]\n??:? void tmpmf4p516h.__unittest_L40_C1() [0x427cfc]\n??:? void tmpmf4p516h.__modtest() [0x427d54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42febd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43036c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ad01]\n??:? runModuleUnitTests [0x42bc6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428424]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 0; \n\twhile (count < n) \n\t{ \n\t\tj = j + 1; \n\t\tcount = count + (int)log10(j) + 1; \n\t\ti = i + 1; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpt6a6gctm.d(16): Error: C style cast illegal, use `cast(int)log10(j)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6a6gctm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else { \n            low = mid + 1; \n        } \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8oeu7rd.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpz8oeu7rd.__unittest_L28_C1() [0x427aa4]\n??:? void tmpz8oeu7rd.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long tri = (mid * (mid + 1)) / 2; \n        if (tri < n) \n        { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6puaozi0.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp6puaozi0.__unittest_L26_C1() [0x427aa8]\n??:? void tmp6puaozi0.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number must be of the form n(n+1)/2. \n\t// The value of n must be greater than or equal to \n\t// the number of digits in n(n+1)/2. \n\t// So, we can use binary search to find the value of n. \n\tlong low = 1, high = 2 * n; \n\twhile (low < high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\tlong temp = mid * (mid + 1) / 2; \n\t\tif (temp >= n) \n\t\t\thigh = mid; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqx_2cl8y.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpqx_2cl8y.__unittest_L30_C1() [0x427aa0]\n??:? void tmpqx_2cl8y.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000, mid; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong tri = (mid * (mid + 1)) / 2; \n\t\tif (tri >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjdrhby6l.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpjdrhby6l.__unittest_L26_C1() [0x427aa8]\n??:? void tmpjdrhby6l.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) { \n\t\tmid = (low + high) / 2; \n\t\tif ((mid * (mid + 1)) / 2 < (long)pow(10, n - 1)) { \n\t\t\tlow = mid + 1; \n\t\t\tans = mid; \n\t\t} \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp_km5tbeh.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_km5tbeh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp2hvfu99v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hvfu99v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\t\n\t// loop till low is less than high \n\twhile (low < high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// if mid*(mid+1)/2 has n digits, \n\t\t// then search in left half \n\t\tif (floor(log10(mid * (mid + 1) / 2)) + 1 == n) \n\t\t\thigh = mid; \n\t\t\n\t\t// else search in right half \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\t// return low as index \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcjj5v4kj.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427f4d]\n??:? void tmpcjj5v4kj.__unittest_L32_C1() [0x427c78]\n??:? void tmpcjj5v4kj.__modtest() [0x427cd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aca2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4302e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fdc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ac79]\n??:? runModuleUnitTests [0x42bbe5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42839c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\t\n\t// loop untill low is less than or equal to high \n\twhile (low <= high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If mid is triangular number with n digits \n\t\tif (mid * (mid + 1) / 2 == n) \n\t\t\treturn mid; \n\t\t\n\t\t// If mid is more than n, then search in left half \n\t\telse if (mid * (mid + 1) / 2 > n) \n\t\t\thigh = mid - 1; \n\t\t\n\t\t// If mid is less than n, then search in right half \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\t// If no triangular number is present \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph53dqi9j.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmph53dqi9j.__unittest_L35_C1() [0x427ac4]\n??:? void tmph53dqi9j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \n\t\n\t// A temporary array to store triangular numbers \n\tlong[] dp = new long[n + 1]; \n\t\n\t// Initialize first two values in table \n\tdp[0] = 0; \n\tdp[1] = 1; \n\t\n\t// Fill entries in dp[] using recursive formula \n\tfor (long i = 2; i <= n; i++) \n\t\tdp[i] = dp[i - 1] + i; \n\t\n\t// Now find the index of largest triangular number \n\t// with n digits. \n\tlong index = 0; \n\tfor (long i = 1; i <= n; i++) \n\t{ \n\t\tif (dp[i] >= pow(10, n - 1)) \n\t\t{ \n\t\t\tindex = i; \n\t\t\tbreak; \n\t\t} \n\t} \n\t\n\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3k6rzoug.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp3k6rzoug.__unittest_L41_C1() [0x427e8c]\n??:? void tmp3k6rzoug.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430339]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\tlong triangle = (mid * (mid + 1)) / 2; \n\t\tif (triangle >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp_rvidfo.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpp_rvidfo.__unittest_L26_C1() [0x427aa8]\n??:? void tmpp_rvidfo.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxgoeph5q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpxgoeph5q.__unittest_L26_C1() [0x427aa4]\n??:? void tmpxgoeph5q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long triangularNumber = 0; \n    while (count * (count + 1) / 2 < n) { \n        count++; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyfc2bxdv.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpyfc2bxdv.__unittest_L17_C1() [0x427a54]\n??:? void tmpyfc2bxdv.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t{ \n\t\t\tif (triangularNumber.toString().length() == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp7rmd_3xa.d(17): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7rmd_3xa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(t) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpgu82rxwd.d(15): Error: C style cast illegal, use `cast(long)log10(t)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu82rxwd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long temp = (mid * (mid + 1)) / 2; \n        if (temp >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else { \n            low = mid + 1; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7r7y4str.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp7r7y4str.__unittest_L26_C1() [0x427aa8]\n??:? void tmp7r7y4str.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long ans = 0; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        long val = mid * (mid + 1) / 2; \n        if (val >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqt2ogu5j.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpqt2ogu5j.__unittest_L26_C1() [0x427aa4]\n??:? void tmpqt2ogu5j.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 0, high = n, mid; \n\tlong count; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tcount = (mid * (mid + 1)) / 2; \n\t\tif (count == n) \n\t\t\treturn mid; \n\t\telse if (count < n) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuyvcvs2k.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpuyvcvs2k.__unittest_L25_C1() [0x427ab4]\n??:? void tmpuyvcvs2k.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxgoeph5q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpxgoeph5q.__unittest_L26_C1() [0x427aa4]\n??:? void tmpxgoeph5q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2) + 1) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpdi824erk.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpdi824erk.d(15): Error: C style cast illegal, use `cast(long)log10(2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdi824erk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\twhile (count * (count + 1) / 2 < Math.pow(10, n - 1)) { \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcq31eeq4.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq31eeq4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber > pow(10, n)) \n\t\t\tbreak; \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp86bq8w3g.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp86bq8w3g.__unittest_L21_C1() [0x427ac0]\n??:? void tmp86bq8w3g.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long x = 1; \n    long i = 1; \n    while (true) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n        { \n            if (t < pow(10, n)) \n                return x; \n            else\n                break; \n        } \n        x++; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\t\n\t// loop till low is less than or equal to high \n\twhile (low < high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\n\t\t// If mid is triangular number \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t\thigh = mid; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\t// return low as index \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps68jmr7c.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmps68jmr7c.__unittest_L29_C1() [0x427aa4]\n??:? void tmps68jmr7c.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number must be of the form n(n+1)/2. \n\t// The value of n must be greater than or equal to \n\t// the number of digits in n(n+1)/2. \n\tlong triangularNumber = 1; \n\tlong i = 1; \n\twhile (triangularNumber <= n) \n\t{ \n\t\ti++; \n\t\ttriangularNumber = i * (i + 1) / 2; \n\t} \n\t\n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp41g_96nc.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp41g_96nc.__unittest_L27_C1() [0x427a7c]\n??:? void tmp41g_96nc.__modtest() [0x427ad4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tif (t >= pow(10, n - 1)) \n\t\t\tbreak; \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0, i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpu3nbggug.d(14): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu3nbggug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(t) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpgu82rxwd.d(15): Error: C style cast illegal, use `cast(long)log10(t)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu82rxwd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n, mid; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbjt2kb1q.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpbjt2kb1q.__unittest_L25_C1() [0x427aa4]\n??:? void tmpbjt2kb1q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong nth = 1; \n\tlong triangularNumber = 0; \n\t\n\twhile (true) \n\t{ \n\t\ttriangularNumber = (nth * (nth + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t\treturn nth; \n\t\tnth++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1hszlub5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmp1hszlub5.__unittest_L21_C1() [0x427a89]\n??:? void tmp1hszlub5.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp2hvfu99v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hvfu99v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcs1l_jpw.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpcs1l_jpw.__unittest_L26_C1() [0x427aa4]\n??:? void tmpcs1l_jpw.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, digits; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tdigits = (long)log10(0.5 * mid * (mid + 1)) + 1; \n\t\tif (digits == n) \n\t\t\treturn mid; \n\t\tif (digits < n) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpl2hrzf7z.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl2hrzf7z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long tri = (mid * (mid + 1)) / 2; \n        if (tri < n) \n        { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpay29_7q4.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpay29_7q4.__unittest_L27_C1() [0x427aa8]\n??:? void tmpay29_7q4.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangle = 0; \n\twhile (true) \n\t{ \n\t\ttriangle = (count * (count + 1)) / 2; \n\t\tif (triangle % 10 == 0) \n\t\t{ \n\t\t\tif (triangle.to!string.length == n) \n\t\t\t\treturn count; \n\t\t} \n\t\tcount++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpski2j31m.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpski2j31m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcrlpisyv.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpcrlpisyv.__unittest_L25_C1() [0x427aa4]\n??:? void tmpcrlpisyv.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong triangularNumber = 0; \n\twhile (count * (count + 1) / 2 < n) \n\t{ \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplega2lls.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmplega2lls.__unittest_L18_C1() [0x427a54]\n??:? void tmplega2lls.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcs1l_jpw.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpcs1l_jpw.__unittest_L26_C1() [0x427aa4]\n??:? void tmpcs1l_jpw.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong mid; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (triangular(mid) >= n) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmplpn7bw7y.d(15): Error: undefined identifier `triangular`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpn7bw7y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 0, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2e62f6ma.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp2e62f6ma.__unittest_L26_C1() [0x427aa0]\n??:? void tmp2e62f6ma.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number must be of form n(n+1)/2. \n\t// The index of smallest triangular number with n digits is \n\t// given by floor(log10(n(n+1)/2)) + 1. \n\t// floor(log10(n(n+1)/2)) + 1 = floor(log10(n) + log10(n+1) - log10(2)) + 1 \n\t// floor(log10(n) + log10(n+1) - log10(2)) + 1 = floor(log10(n) + log10(n(1 + 1/n))) + 1 \n\t// floor(log10(n) + log10(n(1 + 1/n))) + 1 = floor(log10(n) + log10(n) + log10(1 + 1/n)) + 1 \n\t// floor(log10(n) + log10(n) + log10(1 + 1/n)) + 1 = floor(2log10(n) + log10(1 + 1/n)) + 1 \n\t// floor(2log10(n) + log10(1 + 1/n)) + 1 = 2log10(n) + log10(1 + 1/n) + 1 \n\t// 2log10(n) + log10(1 + 1/n) + 1 = 2log10(n) + log10(1 + 1/n) + 1 - log10(n) + log10(n) \n\t// 2log10(n) + log10(1 + 1/n) + 1 - log10(n) + log10(n) = (2 - 1)log10(n) + log10(1 + 1/n) + log10(n) \n\t// (2 - 1)log10(n) + log10(1 + 1/n) + log10(n) = log10(n) + log10(1 + 1/n) + log10(n) \n\t// log10(n) + log10(1 + 1/n) + log10(n) = log10(\nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpckigpnlh.d(26): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpckigpnlh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp66ksbau1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp66ksbau1.__unittest_L25_C1() [0x427aa8]\n??:? void tmp66ksbau1.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number is n(n+1)/2. The \n\t// index of triangular number is n-1. \n\t// So index of n digit triangular number \n\t// is (n-1)*(n-1+1)/2 \n\tlong index = (n - 1) * (n - 1 + 1) / 2; \n\t\n\t// binary search for the index \n\tlong low = 0, high = index; \n\twhile (low < high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// if mid is n digit triangular number \n\t\tif (mid * (mid + 1) / 2 >= pow(10, n - 1)) \n\t\t\thigh = mid; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvzz19kji.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427ead]\n??:? void tmpvzz19kji.__unittest_L35_C1() [0x427b1c]\n??:? void tmpvzz19kji.__modtest() [0x427c2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa66]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]\n??:? runModuleUnitTests [0x42b9a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    while (true) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t % 10 == 0) \n        { \n            long d = log10(t) + 1; \n            if (d == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpuxgoxuc2.d(16): Error: cannot implicitly convert expression `log10(cast(real)t) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuxgoxuc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = count + (int)log10(j) + 1; \n        i = i + 1; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpxmaj1hmw.d(16): Error: C style cast illegal, use `cast(int)log10(j)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmaj1hmw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long temp = (mid * (mid + 1)) / 2; \n        if (temp == n) \n            return mid; \n        else if (temp > n) \n            high = mid - 1; \n        else { \n            low = mid + 1; \n            ans = mid; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmparbx04gh.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmparbx04gh.__unittest_L27_C1() [0x427abc]\n??:? void tmparbx04gh.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid, ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong tri = (mid * (mid + 1)) / 2; \n\t\tif (tri >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe_i9rj03.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpe_i9rj03.__unittest_L26_C1() [0x427ab4]\n??:? void tmpe_i9rj03.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) { \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmptj63a0_a.d(14): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptj63a0_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n; \n  \n    // loop till low is less than or equal to high \n    while (low <= high) \n    { \n        // Find the mid value \n        long mid = (low + high) / 2; \n  \n        // If mid is triangular number and \n        // mid+1 is not triangular \n        if (mid * (mid + 1) / 2 == n && \n            (mid + 1) * (mid + 2) / 2 > n) \n            return mid; \n  \n        // If mid is less than n \n        else if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // If mid is greater than n \n        else\n            high = mid - 1; \n    } \n  \n    // If no triangular number is found \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw_t1j36.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmptw_t1j36.__unittest_L37_C1() [0x427ae8]\n??:? void tmptw_t1j36.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\twhile (count * (count + 1) / 2 < Math.pow(10, n - 1)) \n\t{ \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmp3pyztjot.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pyztjot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong x = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(x) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpugegl78q.d(15): Error: C style cast illegal, use `cast(long)log10(x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpugegl78q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number is n*(n+1)/2 \n\t// The index is 1 more than the number \n\t// of digits in n*(n+1)/2 \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\t\n\t// Loop until n-digit triangular number \n\t// is found \n\twhile (count * (count + 1) / 2 < Math.pow(10, n)) \n\t{ \n\t\tcount++; \n\t\ttriangularNumber = count * (count + 1) / 2; \n\t} \n\t\n\t// Return the index \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmp4bjgphij.d(22): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4bjgphij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    long triangularNumber = 0; \n    while (count < n) \n    { \n        triangularNumber = triangularNumber + i; \n        i++; \n        count = countDigit(triangularNumber); \n    } \n    return (i - 1); \n} \nlong countDigit(long n) \n{ \n    long count = 0; \n    while (n != 0) \n    { \n        n = n / 10; \n        ++count; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, index = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong t = (mid * (mid + 1)) / 2; \n\t\tif (t >= n) \n\t\t{ \n\t\t\tindex = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprle0g8cq.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmprle0g8cq.__unittest_L26_C1() [0x427ab0]\n??:? void tmprle0g8cq.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangle = 0; \n\twhile (true) \n\t{ \n\t\ttriangle = (i * (i + 1)) / 2; \n\t\tif (triangle % 10 == 0) \n\t\t{ \n\t\t\tif (triangle.to!string().length == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpm2is25ym.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm2is25ym.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\twhile (count * (count + 1) / 2 < n) \n\t{ \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpysmlm5fh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpysmlm5fh.__unittest_L18_C1() [0x427a58]\n??:? void tmpysmlm5fh.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpgvi0hyk6.d(15): Error: cannot implicitly convert expression `log10(cast(real)triangle) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgvi0hyk6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n, mid; \n    long ans = -1; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long temp = mid * (mid + 1) / 2; \n        if (temp == n) \n            return mid; \n        else if (temp < n) \n        { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp327cs6y8.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp327cs6y8.__unittest_L28_C1() [0x427ac4]\n??:? void tmp327cs6y8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\twhile (count * (count + 1) / 2 < Math.pow(10, n - 1)) \n\t{ \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmp3pyztjot.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pyztjot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfrrdykh.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmprfrrdykh.__unittest_L25_C1() [0x427aa8]\n??:? void tmprfrrdykh.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number must be of the form n(n+1)/2. \n\t// The value of n must be greater than or equal to \n\t// the number of digits in n(n+1)/2. \n\t// So, we can find the value of n by taking the \n\t// ceil of the square root of 2*10^n. \n\tlong nth = ceil(sqrt(2 * pow(10, n))); \n\t\n\t// Now, we can find the number of digits in n(n+1)/2 \n\t// using the formula log10(n(n+1)/2) + 1. \n\tlong digits = nth * (nth + 1) / 2; \n\t\n\t// If the number of digits in n(n+1)/2 is greater \n\t// than n, then we need to find the index of the \n\t// triangular number with n digits which is just \n\t// nth - 1. \n\tif (log10(digits) + 1 > n) \n\t\treturn nth - 1; \n\t\n\t// If the number of digits in n(n+1)/2 is equal \n\t// to n, then we need to find the index of the \n\t// triangular number with n digits which is just \n\t// nth. \n\telse\n\t\treturn nth; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpw9ss2dxk.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw9ss2dxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\tlong ans = -1; \n\t\n\t// Do binary search for finding the index \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If number of digits in mid*(mid+1)/2 is equal to n, \n\t\t// then update the ans and break \n\t\tif (floor(log10(mid * (mid + 1) / 2)) + 1 == n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\tbreak; \n\t\t} \n\t\t\n\t\t// If number of digits in mid*(mid+1)/2 is less than n, \n\t\t// then search in right half \n\t\telse if (floor(log10(mid * (mid + 1) / 2)) + 1 < n) \n\t\t\tlow = mid + 1; \n\t\t\n\t\t// If number of digits in mid*(mid+1)/2 is more than n, \n\t\t// then search in left half \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\t\n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbba56u0k.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427fb5]\n??:? void tmpbba56u0k.__unittest_L40_C1() [0x427cdc]\n??:? void tmpbba56u0k.__modtest() [0x427d34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43034c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ace1]\n??:? runModuleUnitTests [0x42bc4d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428404]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigits(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpbi_w2gdf.d(17): Error: undefined identifier `countDigits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbi_w2gdf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // if mid*(mid+1)/2 has n digits \n        if (floor(log10(mid * (mid + 1) / 2)) + 1 == n) { \n            ans = mid; \n            high = mid - 1; \n        } \n  \n        // if mid*(mid+1)/2 has more than n digits \n        else if (floor(log10(mid * (mid + 1) / 2)) + 1 > n) \n            high = mid - 1; \n  \n        // if mid*(mid+1)/2 has less than n digits \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptn0cliey.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427fc5]\n??:? void tmptn0cliey.__unittest_L36_C1() [0x427cec]\n??:? void tmptn0cliey.__modtest() [0x427d44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad1a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fead]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43035c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe39]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42acf1]\n??:? runModuleUnitTests [0x42bc5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428414]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmptlkrgzyg.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptlkrgzyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Base cases \n    if (n <= 0) \n        return 0; \n    if (n == 1) \n        return 1; \n  \n    // A triangular number is n(n+1)/2. The  \n    // index is the number of digits in n(n+1)/2. \n    // Find ceiling of n-1th root of 2 times  \n    // 10 raised to n-1 (10^(n-1)). \n    long lo = 1, hi = (long)pow(10, n - 1); \n    long mid = 0; \n    while (lo < hi) { \n        mid = (lo + hi) / 2; \n  \n        // If n-1th root of mid*10^(n-1) is  \n        // triangular number \n        if (mid * (mid + 1) / 2 < pow(10, n - 1)) \n            lo = mid + 1; \n        else\n            hi = mid; \n    } \n  \n    // n-1th root of (lo-1)*10^(n-1) is the  \n    // previous triangular number \n    return lo - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpkuigj_mh.d(20): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkuigj_mh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2) + 1) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpkzx8pdgm.d(16): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpkzx8pdgm.d(16): Error: C style cast illegal, use `cast(long)log10(2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzx8pdgm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tif (t % 10 == 0) \n\t\t\tcount++; \n\t\ti++; \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3dqixi3q.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp3dqixi3q.__unittest_L21_C1() [0x427a84]\n??:? void tmp3dqixi3q.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong tri = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(tri) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpg3pv352l.d(15): Error: C style cast illegal, use `cast(long)log10(tri)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3pv352l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong triangularNumber = 0; \n\twhile (count * (count + 1) / 2 < n) { \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpomrnk61n.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpomrnk61n.__unittest_L17_C1() [0x427a54]\n??:? void tmpomrnk61n.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmyjejjh7.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpmyjejjh7.__unittest_L27_C1() [0x427aa4]\n??:? void tmpmyjejjh7.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long l = 1, r = 1000000, mid; \n    while (l <= r) \n    { \n        mid = (l + r) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n            r = mid - 1; \n        else\n            l = mid + 1; \n    } \n    return l; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ghxj00z.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp0ghxj00z.__unittest_L21_C1() [0x427aa0]\n??:? void tmp0ghxj00z.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long x = mid * (mid + 1) / 2; \n        long digits = (long)log10(x) + 1; \n        if (digits == n) \n            return mid; \n        else if (digits < n) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n    return mid; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpsn90kpwh.d(16): Error: C style cast illegal, use `cast(long)log10(x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsn90kpwh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong tri = mid * (mid + 1) / 2; \n\t\tif (tri < n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\tlow = mid + 1; \n\t\t} \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplxmrtvnd.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmplxmrtvnd.__unittest_L27_C1() [0x427aa8]\n??:? void tmplxmrtvnd.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 0, high = n * (n + 1) / 2; \n\tlong mid, count; \n\twhile (low < high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tcount = 0; \n\t\tfor (long i = 1; i <= n; i++) \n\t\t\tcount += min(n, mid / i); \n\t\tif (count < n) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpe8_dkflu.d(17): Error: undefined identifier `min`, did you mean variable `mid`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8_dkflu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \n\t\n\t// A temporary array of size n+1. temp[i] \n\t// stores index of triangular number with \n\t// i digits. \n\tlong[] temp = new long[n + 1]; \n\t\n\t// Initialize value of last entry \n\ttemp[0] = 0; \n\ttemp[1] = 1; \n\t\n\t// Fill entries of temp[] using recursive \n\t// formula. \n\tfor (long i = 2; i <= n; i++) \n\t{ \n\t\ttemp[i] = temp[i - 1] + i; \n\t} \n\t\n\t// Return index of last entry \n\treturn temp[n]; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb413o_3q.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x4280dd]\n??:? void tmpb413o_3q.__unittest_L35_C1() [0x427e08]\n??:? void tmpb413o_3q.__modtest() [0x427e60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0db]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430185]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af45]\n??:? runModuleUnitTests [0x42beb1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpezeegt9f.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpezeegt9f.__unittest_L21_C1() [0x427a9c]\n??:? void tmpezeegt9f.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid, index = -1; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long temp = (mid * (mid + 1)) / 2; \n        if (temp >= n) \n        { \n            index = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx2p5093p.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpx2p5093p.__unittest_L26_C1() [0x427ab0]\n??:? void tmpx2p5093p.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid, ans = -1; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (triangular(mid) >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nlong triangular(long n) \n{ \n    return (n * (n + 1)) / 2; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpezl8l6sl.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpezl8l6sl.__unittest_L29_C1() [0x427b04]\n??:? void tmpezl8l6sl.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong x = 1; \n\tlong y = 1; \n\tlong count = 2; \n\twhile (true) \n\t{ \n\t\tlong z = x + y; \n\t\tif (z.to!string.length == n) \n\t\t\treturn count; \n\t\tx = y; \n\t\ty = z; \n\t\tcount++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpt0bqy53h.d(16): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt0bqy53h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 1; \n\twhile (true) \n\t{ \n\t\tif (triangularNumber % (long)pow(10, n - 1) == 0) \n\t\t\treturn i; \n\t\ti++; \n\t\ttriangularNumber = triangularNumber + i; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmp8uzhh5ke.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8uzhh5ke.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = count_digits(triangularNumber); \n\t} \n\treturn (i - 1); \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpvb59t6ut.d(17): Error: undefined identifier `count_digits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvb59t6ut.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp718d8318.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp718d8318.__unittest_L26_C1() [0x427aa4]\n??:? void tmp718d8318.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif ((mid * (mid + 1)) / 2 >= n) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3jj_toe.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpd3jj_toe.__unittest_L21_C1() [0x427a9c]\n??:? void tmpd3jj_toe.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong t = (mid * (mid + 1)) / 2; \n\t\tif (t >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpup1dv9lh.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpup1dv9lh.__unittest_L26_C1() [0x427aa8]\n??:? void tmpup1dv9lh.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong temp = (mid * (mid + 1)) / 2; \n\t\tif (temp >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0g8b8wpa.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp0g8b8wpa.__unittest_L26_C1() [0x427aa8]\n??:? void tmp0g8b8wpa.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp2hvfu99v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hvfu99v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong x = (i * (i + 1)) / 2; \n\t\tif (x % 10 == 0) \n\t\t\tcount++; \n\t\ti++; \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbev5seoe.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpbev5seoe.__unittest_L21_C1() [0x427a84]\n??:? void tmpbev5seoe.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 1; \n\twhile (count * (count + 1) / 2 < Math.pow(10, n - 1)) \n\t{ \n\t\tcount++; \n\t\ttriangularNumber = count * (count + 1) / 2; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpgn4p8xs2.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgn4p8xs2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long digits = (long)log10(mid * 2) + 1; \n        if (digits == n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else if (digits > n) \n            high = mid - 1; \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpq75i_dm5.d(14): Error: C style cast illegal, use `cast(long)log10(mid * 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq75i_dm5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong j = 1; \n\twhile (count < n) \n\t{ \n\t\tj = j + i; \n\t\ti++; \n\t\tif (j % 10 == 0) \n\t\t\tcount++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong sum = 0; \n\twhile (true) \n\t{ \n\t\tsum = sum + i; \n\t\tif (sum >= pow(10, n - 1) && sum < pow(10, n)) \n\t\t\treturn i; \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2) + 1) \n            high = mid - 1; \n        else\n            low = mid + 1; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpupn9v4p5.d(16): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpupn9v4p5.d(16): Error: C style cast illegal, use `cast(long)log10(2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpupn9v4p5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = count + (int)log10(j) + 1; \n        i = i + 1; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpxmaj1hmw.d(16): Error: C style cast illegal, use `cast(int)log10(j)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmaj1hmw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        long temp = (i * (i + 1)) / 2; \n        if (temp % 10 == 0) \n        { \n            count = count + 1; \n        } \n        i = i + 1; \n    } \n    return j; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9f7j6na2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp9f7j6na2.__unittest_L25_C1() [0x427aa0]\n??:? void tmp9f7j6na2.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) { \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) { \n\t\t\tif (triangularNumber.toString().length() == n) \n\t\t\t\tbreak; \n\t\t} \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp0am8rlgy.d(15): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0am8rlgy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(t) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpgu82rxwd.d(15): Error: C style cast illegal, use `cast(long)log10(t)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu82rxwd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpekj0od8o.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpekj0od8o.__unittest_L27_C1() [0x427aa8]\n??:? void tmpekj0od8o.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong sum = 0; \n\twhile (true) \n\t{ \n\t\tsum = sum + i; \n\t\tif (sum % (long)pow(10, n - 1) == 0) \n\t\t\treturn i; \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp0dwbrfsg.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0dwbrfsg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber % 10 == 0) \n        { \n            long temp = triangularNumber; \n            long count = 0; \n            while (temp != 0) \n            { \n                count++; \n                temp /= 10; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxd0owb1q.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpxd0owb1q.__unittest_L30_C1() [0x427ad1]\n??:? void tmpxd0owb1q.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong t = 1; \n\twhile (t < n) { \n\t\ti++; \n\t\tt = (i * (i + 1)) / 2; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplxqeao0r.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmplxqeao0r.__unittest_L18_C1() [0x427a6c]\n??:? void tmplxqeao0r.__modtest() [0x427ac4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, num; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        num = (long)log10(0.5 * mid * (mid + 1)); \n        if (num < n - 1) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpjm5p6v3u.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjm5p6v3u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (triangular(mid) >= pow(10, n - 1) && triangular(mid - 1) < pow(10, n - 1)) \n\t\t\treturn mid; \n\t\telse if (triangular(mid) < pow(10, n - 1)) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmptd7bqa7_.d(15): Error: undefined identifier `triangular`\n/tmp/tmptd7bqa7_.d(15): Error: undefined identifier `triangular`\n/tmp/tmptd7bqa7_.d(17): Error: undefined identifier `triangular`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptd7bqa7_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\tlong count = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tcount = (mid * (mid + 1)) / 2; \n\t\tif (count == n) \n\t\t\treturn mid; \n\t\telse if (count > n) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmle0ufo5.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpmle0ufo5.__unittest_L25_C1() [0x427ab8]\n??:? void tmpmle0ufo5.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:? __libc_start_main [0xa7fb0554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmptlkrgzyg.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptlkrgzyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2) + 1) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmphblt6t_a.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmphblt6t_a.d(15): Error: C style cast illegal, use `cast(long)log10(2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphblt6t_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcs1l_jpw.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpcs1l_jpw.__unittest_L26_C1() [0x427aa4]\n??:? void tmpcs1l_jpw.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\t\n\t// loop till low is less than high \n\twhile (low < high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If mid triangular number has n digits \n\t\tif (mid * (mid + 1) / 2 >= pow(10, n - 1)) \n\t\t\thigh = mid; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpul7k3_wo.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpul7k3_wo.__unittest_L28_C1() [0x427af0]\n??:? void tmpul7k3_wo.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigits(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpbi_w2gdf.d(17): Error: undefined identifier `countDigits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbi_w2gdf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangularNumber = 0; \n\twhile (count * (count + 1) / 2 < Math.pow(10, n - 1)) \n\t{ \n\t\tcount++; \n\t} \n\treturn count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp0f2k6jm1.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0f2k6jm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong t = 1; \n\twhile (t <= n) \n\t{ \n\t\tt = t * 10; \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtescoc3.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpqtescoc3.__unittest_L19_C1() [0x427a60]\n??:? void tmpqtescoc3.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(t) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpgu82rxwd.d(15): Error: C style cast illegal, use `cast(long)log10(t)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgu82rxwd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong t = (mid * (mid + 1)) / 2; \n\t\tif (t < 0) \n\t\t\thigh = mid - 1; \n\t\telse if (t >= pow(10, n - 1) && t < pow(10, n)) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse if (t < pow(10, n - 1)) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrb4nm.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrb4nm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 1; \n\tlong triangle = 0; \n\twhile (true) \n\t{ \n\t\ttriangle = (count * (count + 1)) / 2; \n\t\tif (triangle % 10 == 0) \n\t\t\treturn count; \n\t\tcount++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4yqztrtm.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmp4yqztrtm.__unittest_L20_C1() [0x427a89]\n??:? void tmp4yqztrtm.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// Initialize result \n\tlong sum = 0; \n\t\n\t// Keep incrementing until \n\t// sum of series becomes \n\t// n-digit number \n\tlong i = 1; \n\twhile (true) \n\t{ \n\t\tsum = sum + i; \n\t\t\n\t\t// sum becomes n-digit \n\t\tif (sum > pow(10, n - 1) && \n\t\t\tsum < pow(10, n)) \n\t\t\treturn i; \n\t\t\n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbm0b5xvn.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpbm0b5xvn.__unittest_L33_C1() [0x427ad4]\n??:? void tmpbm0b5xvn.__modtest() [0x427be4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n, mid; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7vdbcjtz.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp7vdbcjtz.__unittest_L25_C1() [0x427aa0]\n??:? void tmp7vdbcjtz.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 100000; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong t = (mid * (mid + 1)) / 2; \n\t\tif (t >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsjdhj08a.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpsjdhj08a.__unittest_L27_C1() [0x427aa8]\n??:? void tmpsjdhj08a.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n == 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp_0qs2t89.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0qs2t89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigit(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp60gcabf7.d(17): Error: undefined identifier `countDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp60gcabf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong mid, ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong tri = (mid * (mid + 1)) / 2; \n\t\tif (tri % 1000000 == 0) \n\t\t{ \n\t\t\tans = mid; \n\t\t\tbreak; \n\t\t} \n\t\telse if (tri % 1000000 < 1000000) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4tezwbcv.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp4tezwbcv.__unittest_L28_C1() [0x427ad4]\n??:? void tmp4tezwbcv.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long t = (mid * (mid + 1)) / 2; \n        if (t >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfecu57z1.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpfecu57z1.__unittest_L26_C1() [0x427aa8]\n??:? void tmpfecu57z1.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2) + 1) \n            high = mid - 1; \n        else\n            low = mid + 1; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpg4wt2k0k.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpg4wt2k0k.d(15): Error: C style cast illegal, use `cast(long)log10(2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4wt2k0k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong tri = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(tri) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "/tmp/tmpg3pv352l.d(15): Error: C style cast illegal, use `cast(long)log10(tri)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3pv352l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid, ans = 0; \n  \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsv4oeebo.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpsv4oeebo.__unittest_L28_C1() [0x427aa4]\n??:? void tmpsv4oeebo.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2kf_2266.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp2kf_2266.__unittest_L25_C1() [0x427aa4]\n??:? void tmp2kf_2266.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 1; \n\twhile (count < n) \n\t{ \n\t\tj = j + 1; \n\t\tcount = count + to!string(j).length; \n\t\tif (count >= n) \n\t\t\tbreak; \n\t\ti = i + 1; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpvx39bwai.d(16): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvx39bwai.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\tlong temp = (mid * (mid + 1)) / 2; \n\t\tif (temp >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd6hkaukt.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpd6hkaukt.__unittest_L27_C1() [0x427aa4]\n??:? void tmpd6hkaukt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n; \n  \n    // loop till low is less than or equal to high \n    while (low <= high) \n    { \n        // Find the mid value \n        long mid = (low + high) / 2; \n  \n        // If mid is perfect square \n        if (mid * (mid + 1) / 2 == n) \n            return mid; \n  \n        // If mid is smaller than n \n        else if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // If mid is greater than n \n        else\n            high = mid - 1; \n    } \n  \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdi13_a24.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpdi13_a24.__unittest_L34_C1() [0x427ac4]\n??:? void tmpdi13_a24.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigits(triangularNumber); \n\t} \n\treturn (i - 1); \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp8jhvjco9.d(17): Error: undefined identifier `countDigits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8jhvjco9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n; \n  \n    // loop till low is less than or equal to high \n    while (low <= high) \n    { \n        // Find the mid value \n        long mid = (low + high) / 2; \n  \n        // If mid is perfect square \n        if (mid * (mid + 1) / 2 == n) \n            return mid; \n  \n        // If mid is smaller than n \n        else if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // If mid is greater than n \n        else\n            high = mid - 1; \n    } \n  \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdi13_a24.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpdi13_a24.__unittest_L34_C1() [0x427ac4]\n??:? void tmpdi13_a24.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = (long)log10(triangularNumber) + 1; \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpf747h2r1.d(17): Error: C style cast illegal, use `cast(long)log10(triangularNumber)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf747h2r1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri = 0; \n    while (true) \n    { \n        tri = (i * (i + 1)) / 2; \n        if (tri % (long)pow(10, n - 1) == 0) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpaztu95bb.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaztu95bb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 1; \n    while (count * (count + 1) / 2 < Math.pow(10, n - 1)) \n    { \n        count++; \n        triangularNumber = count * (count + 1) / 2; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp54_kmkn2.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp54_kmkn2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tif (t < 0) \n\t\t\treturn -1; \n\t\tif (t > 0 && t < 10) \n\t\t\tcount++; \n\t\telse if (t > 9 && t < 100) \n\t\t\tcount += 2; \n\t\telse if (t > 99 && t < 1000) \n\t\t\tcount += 3; \n\t\telse if (t > 999 && t < 10000) \n\t\t\tcount += 4; \n\t\telse if (t > 9999 && t < 100000) \n\t\t\tcount += 5; \n\t\telse if (t > 99999 && t < 1000000) \n\t\t\tcount += 6; \n\t\telse if (t > 999999 && t < 10000000) \n\t\t\tcount += 7; \n\t\telse if (t > 9999999 && t < 100000000) \n\t\t\tcount += 8; \n\t\telse if (t > 99999999 && t < 1000000000) \n\t\t\tcount += 9; \n\t\telse if (t > 999999999 && t < 10000000000) \n\t\t\tcount += 10; \n\t\ti++; \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpomhpqdga.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpomhpqdga.__unittest_L41_C1() [0x427bb0]\n??:? void tmpomhpqdga.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong tri = (mid * (mid + 1)) / 2; \n\t\tif (tri < n) \n\t\t{ \n\t\t\tlow = mid + 1; \n\t\t\tans = mid; \n\t\t} \n\t\telse if (tri > n) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\treturn mid; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1f8_3gb4.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp1f8_3gb4.__unittest_L28_C1() [0x427ac0]\n??:? void tmp1f8_3gb4.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base cases \n\tif (n <= 0) \n\t\treturn 0; \n\tif (n == 1) \n\t\treturn 1; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpb_cx5gfy.d(15): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_cx5gfy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxgoeph5q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpxgoeph5q.__unittest_L26_C1() [0x427aa4]\n??:? void tmpxgoeph5q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n; \n\tlong ans = 0; \n\t\n\t// Do binary search for floor(sqrt(n)) \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If n is a triangular number \n\t\tif (mid * (mid + 1) / 2 == n) \n\t\t\treturn mid; \n\t\t\n\t\t// If n is less than the current mid \n\t\t// consider the left half \n\t\telse if (mid * (mid + 1) / 2 > n) \n\t\t\thigh = mid - 1; \n\t\t\n\t\t// If n is more than the current mid \n\t\t// consider the right half \n\t\telse\n\t\t{ \n\t\t\tlow = mid + 1; \n\t\t\tans = mid; \n\t\t} \n\t} \n\t\n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuco2i9o1.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpuco2i9o1.__unittest_L39_C1() [0x427ad0]\n??:? void tmpuco2i9o1.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n) - n * log10(2) + 1) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpxs88n1ub.d(16): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxs88n1ub.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = count_digits(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpppfkunb5.d(17): Error: undefined identifier `count_digits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpppfkunb5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmp2hvfu99v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hvfu99v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// Initialize result \n\tlong sum = 0; \n\tlong i = 1; \n\t\n\t// Add natural numbers upto \n\t// n and check for triangular \n\t// number \n\twhile (true) \n\t{ \n\t\tsum = sum + i; \n\t\t\n\t\t// If n-digit triangular number \n\t\tif (sum == n * (n + 1) / 2) \n\t\t\treturn i; \n\t\t\n\t\t// If n-digit triangular number \n\t\t// is not found then increment \n\t\t// i by 1 \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn4vnjww7.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpn4vnjww7.__unittest_L35_C1() [0x427a80]\n??:? void tmpn4vnjww7.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \n\t\n\t// A triangular number is n*(n+1)/2. The \n\t// index of minimum number with n digits is \n\t// pow(10, n-1) as minimum number will be \n\t// 10^(n-1) + 1. \n\tlong index = pow(10, n - 1); \n\t\n\t// find the count of digits in index'th \n\t// triangular number \n\tlong count = count_digits(index * (index + 1) / 2); \n\t\n\t// If count of digits in index'th triangular \n\t// number is not equal to n, then triangular \n\t// number is not n digit number. So, we need \n\t// to find the triangular number with n-1 \n\t// digits. \n\tif (count > n) \n\t\treturn find_Index(n - 1); \n\t\n\t// If count of digits in index'th triangular \n\t// number is equal to n, then we need to find \n\t// the triangular number with n+1 digits. \n\telse if (count < n) \n\t\treturn find_Index(n + 1); \n\t\n\t// If count of digits in index'th triangular \n\t// number is equal to n, then we have found \n\t// the index. \n\telse\n\t\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmpbfgfnqzd.d(22): Error: undefined identifier `count_digits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbfgfnqzd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Base case \n\tif (n <= 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpukk1ly0v.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukk1ly0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long a = 45 * n * n + 26 * n + 7; \n    long b = 15 * n * n + 14 * n + 4; \n    long c = a / b; \n    return c; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122581,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprzlrziyp.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmprzlrziyp.__unittest_L15_C1() [0x427a68]\n??:? void tmprzlrziyp.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// base case \n\tif (n == 0) \n\t\treturn 0; \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "/tmp/tmp_0qs2t89.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_0qs2t89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
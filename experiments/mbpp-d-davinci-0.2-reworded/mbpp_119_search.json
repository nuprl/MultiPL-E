{
  "name": "mbpp_119_search",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the element that appears only once in a sorted array.\n\t\n*/\nlong search(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = search;\n\n    assert(candidate([1L, 1L, 2L, 2L, 3L]) == 3L);\n    assert(candidate([1L, 1L, 3L, 3L, 4L, 4L, 5L, 5L, 7L, 7L, 8L]) == 8L);\n    assert(candidate([1L, 2L, 2L, 3L, 3L, 4L, 4L]) == 1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[mid]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long n = arr.length; \n    long low = 0, high = n - 1; \n    long mid = 0; \n  \n    // Iterate till single element is left \n    while (low != high) { \n        // Find the mid element \n        mid = (low + high) / 2; \n  \n        // If mid is even and element next to mid is \n        // same as mid, then output element lies on \n        // right side, else on left side \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n  \n        // If mid is odd \n        else if (mid % 2 == 1) { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n  \n    return arr[low]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n\tlong n = arr.length; \n\tlong low = 0; \n\tlong high = n - 1; \n\tlong mid = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid % 2 == 0) \n\t\t{ \n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t\tlow = mid + 2; \n\t\t\telse\n\t\t\t\thigh = mid; \n\t\t} \n\t\telse\n\t\t{ \n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t\tlow = mid + 1; \n\t\t\telse\n\t\t\t\thigh = mid - 1; \n\t\t} \n\t} \n\treturn arr[low]; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low+high)/2;\n\t\tif(mid == 0 || mid == n-1)\n\t\t\treturn arr[mid];\n\t\tif(arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1])\n\t\t\treturn arr[mid];\n\t\telse if(arr[mid] == arr[mid-1] && mid%2 == 0)\n\t\t\tlow = mid+1;\n\t\telse if(arr[mid] == arr[mid+1] && mid%2 == 1)\n\t\t\tlow = mid+1;\n\t\telse\n\t\t\thigh = mid-1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\t\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\t\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else if (arr[mid] == arr[mid - 1]) \n                high = mid - 2; \n            else\n                return arr[mid]; \n        } else { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else if (arr[mid] == arr[mid + 1]) \n                high = mid - 1; \n        } \n    } \n    return arr[mid]; \n} ",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l <= r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) {\n\t\t\tif (arr[mid] == arr[mid + 1]) {\n\t\t\t\tlow = mid + 2;\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arr[mid] == arr[mid - 1]) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\t\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\t\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid == 0 || arr[mid] != arr[mid - 1] && \n            mid == arr.length - 1 || arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n        else if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid - 2; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) { \n        if (low == high) \n            return arr[low]; \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else if (mid % 2 == 1) { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t\treturn arr[mid];\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < arr.length && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong l = 0;\n\tlong r = n - 1;\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile(low <= high)\n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t\treturn arr[mid];\n\t\telse if (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid+1]) \n\t\t\t{\n\t\t\t\tlow = mid+2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid-1]) \n\t\t\t{\n\t\t\t\tlow = mid+1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid-1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n  \n    return arr[mid]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong start = 0;\n\tlong end = arr.length - 1;\n\t\n\twhile (start < end) \n\t{\n\t\tlong mid = (start + end) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tstart = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tend = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tstart = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tend = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[start];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1])\n\t\t\t\thigh = mid - 2;\n\t\t\telse\n\t\t\t\treturn arr[mid];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1])\n\t\t\t\thigh = mid - 1;\n\t\t\telse\n\t\t\t\treturn arr[mid];\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low <= high)\n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tint n = arr.length;\n\tint low = 0;\n\tint high = n - 1;\n\tint mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        if (low == high) \n            return arr[low]; \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong l = 0;\n\tlong r = arr.length-1;\n\tlong mid = 0;\n\twhile(l <= r)\n\t{\n\t\tmid = (l+r)/2;\n\t\tif(arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1])\n\t\t\treturn arr[mid];\n\t\telse if(arr[mid] == arr[mid-1])\n\t\t{\n\t\t\tif((mid-1)%2 == 0)\n\t\t\t\tr = mid-2;\n\t\t\telse\n\t\t\t\tl = mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif((mid-1)%2 == 0)\n\t\t\t\tl = mid+2;\n\t\t\telse\n\t\t\t\tr = mid-1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[low]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\telse if (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t}\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) { \n        long mid = (low + high) / 2; \n        if (mid == 0 || arr[mid - 1] < arr[mid] && \n            mid == arr.length - 1 || arr[mid] < arr[mid + 1]) \n            return arr[mid]; \n        else if (mid > 0 && arr[mid - 1] == arr[mid]) { \n            if ((mid - 1) % 2 == 0) \n                high = mid - 2; \n            else\n                low = mid + 1; \n        } else if (mid < arr.length - 1 && arr[mid] == arr[mid + 1]) { \n            if (mid % 2 == 0) \n                low = mid + 2; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0) {\n\t\t\tif (arr[mid] != arr[mid + 1]) {\n\t\t\t\treturn arr[mid];\n\t\t\t} else {\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t} else if (mid == arr.length - 1) {\n\t\t\tif (arr[mid] != arr[mid - 1]) {\n\t\t\t\treturn arr[mid];\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} else if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n\t\t\treturn arr[mid];\n\t\t} else if (arr[mid] == arr[mid - 1]) {\n\t\t\tif ((mid - 1) % 2 == 0) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} else if (arr[mid] == arr[mid + 1]) {\n\t\t\tif ((mid + 1) % 2 == 0) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || mid == n - 1) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile(l <= r)\n\t{\n\t\tmid = l + (r - l) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid == 0 || mid == n-1)\n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif(arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1])\n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\telse if(arr[mid] == arr[mid-1])\n\t\t{\n\t\t\tif((mid-1) % 2 == 0)\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse if(arr[mid] == arr[mid+1])\n\t\t{\n\t\t\tif((mid+1) % 2 == 0)\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        if (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n        else if (arr[mid] == arr[mid - 1]) \n        { \n            if ((mid - 1) % 2 == 0) \n                low = mid + 1; \n            else\n                high = mid - 2; \n        } \n        else if (arr[mid] == arr[mid + 1]) \n        { \n            if (mid % 2 == 0) \n                low = mid + 2; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || mid == n - 1) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) { \n        if (low == high) \n            return arr[low]; \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else if (mid % 2 == 1) { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t\treturn arr[mid];\n\t\telse if (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t\thigh = mid - 2;\n\t\t\telse\n\t\t\t\tlow = mid + 1;\n\t\t} \n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n    long n = arr.length; \n    long low = 0, high = n - 1; \n    long mid = 0; \n  \n    // Iterate till single element is left \n    while (low != high) \n    { \n        // Find the mid index \n        mid = (low + high) / 2; \n  \n        // If mid is even and element next to mid is \n        // same as mid, then output element lies on \n        // right side, else on left side \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n  \n        // If mid is odd \n        else if (mid % 2 == 1) \n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n  \n    return arr[low]; \n} \n  \n// Driver code ",
    "{\n\tlong result = 0;\n\tforeach(i;0..arr.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tif(arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(i == arr.length-1)\n\t\t{\n\t\t\tif(arr[i] != arr[i-1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[i] != arr[i-1] && arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[mid]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid; \n  \n    // If there is not exactly one element \n    if (high == 0) \n        return arr[0]; \n  \n    // Find the middle point \n    mid = (low + high) / 2; \n  \n    // Check if the middle point is the element \n    // itself \n    if (mid % 2 == 1) \n    { \n        if (arr[mid] == arr[mid - 1]) \n            low = mid + 1; \n        else if (arr[mid] == arr[mid + 1]) \n            high = mid - 1; \n        else\n            return arr[mid]; \n    } \n  \n    // If the middle point is not the element \n    // itself, then the element lies on the \n    // left side of the middle point \n    else\n    { \n        if (arr[mid] == arr[mid + 1]) \n            low = mid + 2; \n        else if (arr[mid] == arr[mid - 1]) \n            high = mid - 2; \n    } \n  \n    return search(arr[low..high]); \n} ",
    "{\n    long low = 0;\n    long high = arr.length - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else if (arr[mid] == arr[mid - 1]) {\n                high = mid - 2;\n            } else {\n                return arr[mid];\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else if (arr[mid] == arr[mid + 1]) {\n                high = mid - 1;\n            } else {\n                return arr[mid];\n            }\n        }\n    }\n    return -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong result = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tif(arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(i == arr.length-1)\n\t\t{\n\t\t\tif(arr[i] != arr[i-1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[i] != arr[i-1] && arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong start = 0;\n\tlong end = arr.length - 1;\n\tlong mid = 0;\n\twhile (start <= end)\n\t{\n\t\tmid = (start + end) / 2;\n\t\tif (arr[mid] == arr[mid - 1])\n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t{\n\t\t\t\tstart = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend = mid - 2;\n\t\t\t}\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1])\n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t{\n\t\t\t\tstart = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\telse if (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) { \n        if (low == high) \n            return arr[low]; \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } else { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t\treturn arr[mid];\n\t\telse if (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tint n = arr.length;\n\tint low = 0;\n\tint high = n - 1;\n\tint mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low+high)/2;\n\t\tif(arr[mid] == arr[mid-1])\n\t\t{\n\t\t\tif(mid%2 == 0)\n\t\t\t\thigh = mid-2;\n\t\t\telse\n\t\t\t\tlow = mid+1;\n\t\t}\n\t\telse if(arr[mid] == arr[mid+1])\n\t\t{\n\t\t\tif(mid%2 == 0)\n\t\t\t\tlow = mid+2;\n\t\t\telse\n\t\t\t\thigh = mid-1;\n\t\t}\n\t\telse\n\t\t\treturn arr[mid];\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (arr[m] == arr[m - 1]) \n\t\t{\n\t\t\tif ((m - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tr = m - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t} \n\t\telse if (arr[m] == arr[m + 1]) \n\t\t{\n\t\t\tif (m % 2 == 0) \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\treturn arr[m];\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tint l = 0;\n\tint r = arr.length - 1;\n\twhile(l < r)\n\t{\n\t\tint m = (l + r) / 2;\n\t\tif(m % 2 == 0)\n\t\t{\n\t\t\tif(arr[m] == arr[m + 1])\n\t\t\t\tl = m + 2;\n\t\t\telse\n\t\t\t\tr = m;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[m] == arr[m - 1])\n\t\t\t\tl = m + 1;\n\t\t\telse\n\t\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong m = 0;\n\twhile (l <= r)\n\t{\n\t\tm = (l + r) / 2;\n\t\tif (m % 2 == 0)\n\t\t{\n\t\t\tif (arr[m] == arr[m + 1])\n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[m] == arr[m - 1])\n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) {\n\t\t\tif (arr[mid] == arr[mid + 1]) {\n\t\t\t\tlow = mid + 2;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arr[mid] == arr[mid - 1]) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n\tlong n = arr.length; \n\tlong low = 0; \n\tlong high = n - 1; \n\tlong mid = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid % 2 == 0) \n\t\t{ \n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t\tlow = mid + 2; \n\t\t\telse\n\t\t\t\thigh = mid; \n\t\t} \n\t\telse\n\t\t{ \n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t\tlow = mid + 1; \n\t\t\telse\n\t\t\t\thigh = mid - 1; \n\t\t} \n\t} \n\treturn arr[low]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid == 0 || mid == arr.length - 1) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n    long n = arr.length; \n    long i; \n    for (i = 0; i < n; i++) \n    { \n        if (i == 0) \n        { \n            if (arr[i] != arr[i + 1]) \n                return arr[i]; \n        } \n        else if (i == n - 1) \n        { \n            if (arr[i] != arr[i - 1]) \n                return arr[i]; \n        } \n        else\n        { \n            if (arr[i] != arr[i - 1] && arr[i] != arr[i + 1]) \n                return arr[i]; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile(low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif(mid == 0 || mid == arr.length - 1) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\t\n\t\tif(arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\t\n\t\tif(arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse if(arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif((mid + 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length-1;\n\twhile (l < r) \n\t{\n\t\tlong m = (l+r)/2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m+1]) \n\t\t\t{\n\t\t\t\tl = m+2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m-1]) \n\t\t\t{\n\t\t\t\tl = m+1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m-1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong m = 0;\n\twhile (l <= r) \n\t{\n\t\tm = (l + r) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\t\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\twhile (l < r) \n\t{\n\t\tlong m = l + (r - l) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid;\n\twhile (l <= r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[mid]; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[low]; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid+1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid-1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[low]; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l < r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong result = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tif(arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(i == arr.length - 1)\n\t\t{\n\t\t\tif(arr[i] != arr[i-1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[i] != arr[i-1] && arr[i] != arr[i+1])\n\t\t\t{\n\t\t\t\tresult = arr[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    long mid; \n  \n    // iterate till search space contains at-least one element \n    while (low <= high) \n    { \n        // find the mid value in the search space and  \n        // compares it with its next element \n        mid = (low + high) / 2; \n        if (mid == 0 || arr[mid] != arr[mid - 1] &&  \n                            arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n  \n        // if the mid element is equal to its previous \n        // element, then the required element  \n        // is in the left half of mid \n        if (arr[mid] == arr[mid - 1]) \n        { \n            if (mid % 2 == 0) \n                high = mid - 2; \n            else\n                low = mid + 1; \n        } \n  \n        // if the mid element is equal to its next \n        // element, then the required element  \n        // is in the right half of mid \n        else\n        { \n            if (mid % 2 == 0) \n                low = mid + 2; \n            else\n                high = mid - 1; \n        } \n    } \n  \n    // we reach here when no element is found in the array \n    return -1; \n} ",
    "{ \n    long left = 0, right = arr.length - 1; \n    while (left < right) \n    { \n        long mid = (left + right) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid+1]) \n                left = mid + 2; \n            else\n                right = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid-1]) \n                left = mid + 1; \n            else\n                right = mid - 1; \n        } \n    } \n    return arr[left]; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        if (mid == 0 || mid == arr.length - 1) \n            return arr[mid]; \n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n        if (arr[mid] == arr[mid - 1]) \n        { \n            if ((mid - 1) % 2 == 0) \n                low = mid + 1; \n            else\n                high = mid - 2; \n        } \n        else if (arr[mid] == arr[mid + 1]) \n        { \n            if (mid % 2 == 0) \n                low = mid + 2; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\twhile (low <= high)\n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\telse if (arr[mid] == arr[mid - 1])\n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1])\n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1])\n\t\t\t\thigh = mid - 2;\n\t\t\telse\n\t\t\t\treturn arr[mid];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1])\n\t\t\t\thigh = mid - 1;\n\t\t\telse\n\t\t\t\treturn arr[mid];\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l < r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\t\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || mid == n - 1) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        if (mid == 0 || arr[mid] != arr[mid - 1] && \n            mid == arr.length - 1 || arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid + 1]) \n                low = mid + 2; \n            else\n                high = mid - 2; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid - 1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n\tlong n = arr.length; \n\tlong low = 0; \n\tlong high = n - 1; \n\tlong mid = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid % 2 == 0) \n\t\t{ \n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t\tlow = mid + 2; \n\t\t\telse\n\t\t\t\thigh = mid; \n\t\t} \n\t\telse\n\t\t{ \n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t\tlow = mid + 1; \n\t\t\telse\n\t\t\t\thigh = mid - 1; \n\t\t} \n\t} \n\treturn arr[low]; \n} ",
    "{ \n    long low = 0, high = arr.length - 1, mid; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid == 0 || arr[mid - 1] < arr[mid] && \n            mid == arr.length - 1 || arr[mid + 1] > arr[mid]) \n            return arr[mid]; \n        else if (arr[mid] < arr[mid - 1]) \n            high = mid - 1; \n        else\n            low = mid + 1; \n    } \n    return -1; \n} ",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = low + (high - low) / 2; \n        if (mid == 0 || arr[mid] != arr[mid - 1] && \n            mid == arr.length - 1 || arr[mid] != arr[mid + 1]) \n            return arr[mid]; \n        else if (mid > 0 && arr[mid] == arr[mid - 1]) \n        { \n            if ((mid - 1) % 2 == 0) \n                high = mid - 2; \n            else\n                low = mid + 1; \n        } \n        else if (mid < arr.length - 1 && arr[mid] == arr[mid + 1]) \n        { \n            if (mid % 2 == 0) \n                low = mid + 2; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid - 1] < arr[mid] && (mid == n - 1 || arr[mid + 1] > arr[mid])) \n\t\t{\n\t\t\treturn arr[mid];\n\t\t} \n\t\telse if (arr[mid] < arr[mid - 1]) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong result = 0;\n\tint n = arr.length;\n\tint i = 0;\n\twhile(i < n)\n\t{\n\t\tif(i == n-1)\n\t\t{\n\t\t\tresult = arr[i];\n\t\t\tbreak;\n\t\t}\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tresult = arr[i];\n\t\t\tbreak;\n\t\t}\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{ \n    long low = 0; \n    long high = arr.length - 1; \n    long mid = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid+1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid-1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return arr[mid]; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = arr.length;\n\tlong l = 0;\n\tlong r = n - 1;\n\twhile (l <= r)\n\t{\n\t\tlong mid = (l + r) / 2;\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tl = mid + 2;\n\t\t\telse\n\t\t\t\tr = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tl = mid + 1;\n\t\t\telse\n\t\t\t\tr = mid - 1;\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tint n = arr.length;\n\tint low = 0;\n\tint high = n - 1;\n\tint mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    long mid; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid == 0 || arr[mid - 1] < arr[mid] && \n            mid == arr.length - 1 || arr[mid] < arr[mid + 1]) \n            return arr[mid]; \n        else if (mid > 0 && arr[mid - 1] == arr[mid]) \n        { \n            if ((mid - 1) % 2 == 0) \n                high = mid - 2; \n            else\n                low = mid + 1; \n        } \n        else if (mid < arr.length - 1 && arr[mid] == arr[mid + 1]) \n        { \n            if (mid % 2 == 0) \n                high = mid - 1; \n            else\n                low = mid + 2; \n        } \n    } \n    return -1; \n} ",
    "{\n\tint n = arr.length;\n\tint low = 0;\n\tint high = n-1;\n\tint mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid+1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid-1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid+1]) \n                low = mid + 2; \n            else if (arr[mid] == arr[mid-1]) \n                high = mid - 2; \n            else\n                return arr[mid]; \n        } \n        else\n        { \n            if (arr[mid] == arr[mid-1]) \n                low = mid + 1; \n            else if (arr[mid] == arr[mid+1]) \n                high = mid - 1; \n            else\n                return arr[mid]; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l <= r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0)\n\t\t{\n\t\t\tif(arr[mid] == arr[mid+1])\n\t\t\t\tlow = mid+2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[mid] == arr[mid-1])\n\t\t\t\tlow = mid+1;\n\t\t\telse\n\t\t\t\thigh = mid-1;\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n\t\t\treturn arr[mid];\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif ((mid + 1) % 2 == 0)\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tlong n = arr.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = low + (high - low) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t} \n\t\t\telse if (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid - 1 >= 0 && arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse if (mid + 1 < n && arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\treturn arr[mid];\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{ \n\tlong low = 0; \n\tlong high = arr.length - 1; \n\tlong mid = 0; \n\twhile (low < high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid % 2 == 0) \n\t\t{ \n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t\tlow = mid + 2; \n\t\t\telse\n\t\t\t\thigh = mid; \n\t\t} \n\t\telse\n\t\t{ \n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t\tlow = mid + 1; \n\t\t\telse\n\t\t\t\thigh = mid - 1; \n\t\t} \n\t} \n\treturn arr[low]; \n} ",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l < r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (mid % 2 == 0) \n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\tlong mid = 0;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(mid % 2 == 0) \n\t\t{\n\t\t\tif(arr[mid] == arr[mid + 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[mid] == arr[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[mid];\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn -1;\n\t\n\tlong low = 0;\n\tlong high = arr.length - 1;\n\t\n\twhile (low < high)\n\t{\n\t\tlong mid = (low + high) / 2;\n\t\t\n\t\tif (mid % 2 == 0)\n\t\t{\n\t\t\tif (arr[mid] == arr[mid + 1])\n\t\t\t\tlow = mid + 2;\n\t\t\telse\n\t\t\t\thigh = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[mid] == arr[mid - 1])\n\t\t\t\tlow = mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\t\n\treturn arr[low];\n}",
    "{\n\tlong n = arr.length;\n\tlong l = 0;\n\tlong r = n - 1;\n\t\n\twhile(l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\t\n\t\tif(m % 2 == 0) \n\t\t{\n\t\t\tif(arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn arr[l];\n}",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\tlong mid = 0;\n\twhile (l < r) \n\t{\n\t\tmid = (l + r) / 2;\n\t\tif (arr[mid] == arr[mid - 1]) \n\t\t{\n\t\t\tif ((mid - 1) % 2 == 0) \n\t\t\t{\n\t\t\t\tr = mid - 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t} \n\t\telse if (arr[mid] == arr[mid + 1]) \n\t\t{\n\t\t\tif (mid % 2 == 0) \n\t\t\t{\n\t\t\t\tl = mid + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\treturn arr[mid];\n\t\t}\n\t}\n\treturn arr[l];\n}",
    "{ \n    long low = 0, high = arr.length - 1; \n    while (low <= high) \n    { \n        if (low == high) \n            return arr[low]; \n        long mid = (low + high) / 2; \n        if (mid % 2 == 0) \n        { \n            if (arr[mid] == arr[mid+1]) \n                low = mid + 2; \n            else\n                high = mid; \n        } \n        else if (mid % 2 == 1) \n        { \n            if (arr[mid] == arr[mid-1]) \n                low = mid + 1; \n            else\n                high = mid - 1; \n        } \n    } \n    return -1; \n} ",
    "{\n\tlong l = 0;\n\tlong r = arr.length - 1;\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (m % 2 == 0) \n\t\t{\n\t\t\tif (arr[m] == arr[m + 1]) \n\t\t\t{\n\t\t\t\tl = m + 2;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (arr[m] == arr[m - 1]) \n\t\t\t{\n\t\t\t\tl = m + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[l];\n}"
  ]
}
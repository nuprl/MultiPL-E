{
  "name": "mbpp_57_find_Max_Num",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr1 = arr.dup;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tauto len = arr.length;\n\tauto num = 0L;\n\tauto i = 0L;\n\tauto j = 0L;\n\tauto temp = 0L;\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tfor(j = i + 1; j < len; j++)\n\t\t{\n\t\t\tif(arr[i] < arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tnum = num * 10 + arr[i];\n\t}\n\t\n\treturn num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong maxNum = 0;\n\t\n\tforeach(elem; arr)\n\t{\n\t\tmaxNum = max(maxNum, elem);\n\t}\n\t\n\treturn maxNum;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t\ttemp[i] = arr[i];\n\t\n\tsort(temp);\n\t\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax_num += temp[i] * pow(10, temp.length - i - 1);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\t// sort the array in descending order\n\tarr_copy.sort!((a, b) => b - a);\n\t\n\tforeach(i, val; arr_copy)\n\t{\n\t\tmax_num += val * pow(10, i);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n    long maxNum = 0;\n    foreach(i; arr)\n    {\n        maxNum = max(maxNum, i);\n    }\n    return maxNum;\n}",
    "{\n\tlong max_num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr2 = arr.dup;\n\t\n\tarr2.sort;\n\t\n\tforeach(i; arr2)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\t\n\treturn temp;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tarr_copy.sort;\n\t\n\tforeach(i; arr_copy)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\t\n\tmax = temp;\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] digits = new long[10];\n\tforeach(i; arr)\n\t{\n\t\tdigits[i]++;\n\t}\n\tforeach(i; 0 .. 10)\n\t{\n\t\tif(digits[i] != 0)\n\t\t{\n\t\t\tmax_num = max_num * 10 + i;\n\t\t\tdigits[i]--;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong maxNum = 0;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmaxNum = maxNum * 10 + arr[i];\n\t}\n\t\n\treturn maxNum;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong maxNum = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmaxNum = max(maxNum, i);\n\t}\n\t\n\treturn maxNum;\n}",
    "{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tarr_copy.reverse;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tnum = i;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong len = arr.length;\n\t\n\tforeach(i; 0 .. len)\n\t{\n\t\tmax_num += arr[i] * pow(10, len - i - 1);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong maxNum = 0;\n\tforeach(i; arr)\n\t{\n\t\tmaxNum = max(maxNum, i);\n\t}\n\treturn maxNum;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num += arr[i] * pow(10, i);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] digits = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tdigits[i] = arr[i];\n\t}\n\tdigits.sort!((a, b) => b - a);\n\tforeach(i; 0 .. digits.length)\n\t{\n\t\tmax = max * 10 + digits[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax_num += arr[i] * pow(10, arr.length - i - 1);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max_num * 10 + arr[i];\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i,v;arr)\n\t{\n\t\ttemp[i] = v;\n\t}\n\tsort(temp);\n\tforeach(i,v;temp)\n\t{\n\t\tmax = max * 10 + v;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{ \n\tlong max = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n} ",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong maxNum = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0..arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\t\n\tsort(temp);\n\t\n\tforeach(i; 0..temp.length)\n\t{\n\t\tmaxNum = maxNum * 10 + temp[i];\n\t}\n\t\n\treturn maxNum;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] temp = arr;\n\ttemp.sort();\n\ttemp.reverse();\n\tforeach(i; temp)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong maxNum = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(i; temp)\n\t{\n\t\tmaxNum = maxNum*10 + i;\n\t}\n\treturn maxNum;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tint n = arr.length;\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = i + 1; j < n; j++)\n\t\t{\n\t\t\tif (arr[i] < arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tstring str = \"\";\n\tforeach(i; arr_copy)\n\t{\n\t\tstr ~= i.to!string;\n\t}\n\treturn to!long(str);\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort();\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tfor(int i = 0; i < temp.length; i++)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] digits = arr.dup;\n\tdigits.sort;\n\tdigits.reverse;\n\tforeach(digit; digits)\n\t{\n\t\tmax_num = max_num * 10 + digit;\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] temp_arr = arr.dup;\n\ttemp_arr.sort;\n\ttemp_arr.reverse;\n\tforeach(long num; temp_arr)\n\t{\n\t\tmax_num = max_num * 10 + num;\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tarr_copy.sort;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr_copy[i] * pow(10, arr.length - i - 1);\n\t\tmax += temp;\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] arr2 = arr.dup;\n\tarr2.sort;\n\tforeach(i; arr2)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr2 = arr.dup;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr[i];\n\t\tforeach(j; i + 1 .. arr.length)\n\t\t{\n\t\t\tif(arr[j] > temp)\n\t\t\t{\n\t\t\t\ttemp = arr[j];\n\t\t\t\tarr2[j] = arr[i];\n\t\t\t\tarr2[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tforeach(i; 0 .. arr2.length)\n\t{\n\t\tmax = max * 10 + arr2[i];\n\t}\n\treturn max;\n}",
    "{\n\t// sort the array in descending order\n\tsort(arr, (a, b) => b - a);\n\t\n\t// convert array to string\n\tstring str = arr.join(\"\");\n\t\n\t// convert string to long\n\treturn to!long(str);\n}",
    "{\n\tlong max_num = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\tsort(arr_copy);\n\tforeach(i; arr_copy)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\tmax_num = temp;\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\ttemp.reverse;\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\ttemp.reverse;\n\tlong max = 0;\n\tforeach(i; 0..temp.length)\n\t{\n\t\tmax += temp[i] * pow(10, i);\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tfor (int i = 0; i < temp.length; i++)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0..arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\t\n\tsort(temp);\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tint n = arr.length;\n\tif (n == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tsort(arr);\n\t\n\tlong[] res = new long[n];\n\t\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tres[i] = arr[i] * pow(10, n - i - 1);\n\t}\n\t\n\treturn sum(res);\n}",
    "{\n\tlong max_num = 0;\n\tlong[] digits = new long[arr.length];\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tdigits[i] = arr[i];\n\t}\n\t\n\tdigits.sort!((a,b) => b - a);\n\t\n\tforeach(i; 0 .. digits.length)\n\t{\n\t\tmax_num = max_num * 10 + digits[i];\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tlong temp = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; i .. arr.length)\n\t\t{\n\t\t\tif(arr[i] < arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max_num * 10 + arr[i];\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] digits = arr;\n\tdigits.sort();\n\tdigits.reverse();\n\tforeach(digit; digits)\n\t{\n\t\tmax_num = max_num * 10 + digit;\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i, a; arr)\n\t{\n\t\ttemp[i] = a;\n\t}\n\tsort(temp);\n\tforeach(i, a; temp)\n\t{\n\t\tmax = max * 10 + a;\n\t}\n\treturn max;\n}",
    "{\n\tauto arr_len = arr.length;\n\tauto arr_copy = arr.dup;\n\tauto max_num = 0L;\n\t\n\tfor (int i = 0; i < arr_len; i++) \n\t{\n\t\tauto max_index = 0;\n\t\tfor (int j = 0; j < arr_copy.length; j++) \n\t\t{\n\t\t\tif (arr_copy[j] > arr_copy[max_index]) \n\t\t\t{\n\t\t\t\tmax_index = j;\n\t\t\t}\n\t\t}\n\t\tmax_num = max_num * 10 + arr_copy[max_index];\n\t\tarr_copy.remove(max_index);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tfor (long j = i + 1; j < n; j++) {\n\t\t\tif (arr[i] < arr[j]) {\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong[] digits = arr.dup;\n\tdigits.sort;\n\tdigits.reverse;\n\tforeach(long i; digits)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong[] nums = arr.dup;\n\tnums.sort;\n\tforeach(num; nums)\n\t{\n\t\tmax = max * 10 + num;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr_copy[i];\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(temp < arr_copy[j])\n\t\t\t{\n\t\t\t\ttemp = arr_copy[j];\n\t\t\t\tarr_copy[j] = arr_copy[i];\n\t\t\t\tarr_copy[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr_copy[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max_num = 0;\n\tlong num = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(long i; temp)\n\t{\n\t\tnum = num * 10 + i;\n\t}\n\tmax_num = num;\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}"
  ]
}
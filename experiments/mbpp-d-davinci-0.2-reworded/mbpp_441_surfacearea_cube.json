{
  "name": "mbpp_441_surfacearea_cube",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the surface area of a cube of a given size.\n\t\n*/\nlong surfacearea_cube(long l) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_441_surfacearea_cube.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = surfacearea_cube;\n\n    assert(candidate(5L) == 150L);\n    assert(candidate(3L) == 54L);\n    assert(candidate(10L) == 600L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn l * l * 6;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6*l*l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}",
    "{\n\treturn 6 * l * l;\n}"
  ]
}
{
  "name": "mbpp_164_are_equivalent",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to determine if the sum of the divisors of two integers are the same.\n\t\n*/\nbool are_equivalent(long num1, long num2) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = are_equivalent;\n\n    assert(candidate(36L, 57L) == false);\n    assert(candidate(2L, 4L) == false);\n    assert(candidate(23L, 47L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = getDivisors(num1);\n\tauto divisors2 = getDivisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tforeach(i; 1..num1)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tforeach(i; 1..num2)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum1 = sum(divisors(num1));\n\tauto sum2 = sum(divisors(num2));\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto div1 = divisors(num1);\n\tauto div2 = divisors(num2);\n\treturn sum(div1) == sum(div2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn divisors1.sum == divisors2.sum;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum1 = sum(divisors(num1));\n\tauto sum2 = sum(divisors(num2));\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = new long[](0);\n\tauto divisors2 = new long[](0);\n\t\n\tfor (long i = 1; i < num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tdivisors1 ~= i;\n\t\t}\n\t}\n\t\n\tfor (long i = 1; i < num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tdivisors2 ~= i;\n\t\t}\n\t}\n\t\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tforeach (i; divisors1)\n\t{\n\t\tsum1 += i;\n\t}\n\t\n\tforeach (i; divisors2)\n\t{\n\t\tsum2 += i;\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisor_sum = (n) {\n\t\treturn iota(1, n).filter!(x => n % x == 0).sum;\n\t};\n\treturn divisor_sum(num1) == divisor_sum(num2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tfor(long i = 1; i <= num1; i++)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tfor(long i = 1; i <= num2; i++)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = getDivisors(num1);\n\tauto divisors2 = getDivisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\t// get the divisors of each number\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\t// sum the divisors\n\tlong sum1 = reduce!((a,b) => a + b)(divisors1);\n\tlong sum2 = reduce!((a,b) => a + b)(divisors2);\n\t\n\t// return the comparison\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divs1 = divisors(num1);\n\tauto divs2 = divisors(num2);\n\t\n\treturn sum(divs1) == sum(divs2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn divisors1.sum == divisors2.sum;\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tforeach(divisor; divisors(num1))\n\t{\n\t\tsum1 += divisor;\n\t}\n\t\n\tforeach(divisor; divisors(num2))\n\t{\n\t\tsum2 += divisor;\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto div1 = divisors(num1);\n\tauto div2 = divisors(num2);\n\treturn sum(div1) == sum(div2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum1 = 0;\n\tauto sum2 = 0;\n\t\n\tforeach(i; 1..num1)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tforeach(i; 1..num2)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn divisors1.sum == divisors2.sum;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn divisorSum(num1) == divisorSum(num2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn divisors1.sum == divisors2.sum;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\tforeach(i; 1..num1)\n\t{\n\t\tif(num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\t\n\tforeach(i; 1..num2)\n\t{\n\t\tif(num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\t\n\treturn sum1 == sum2;\n}",
    "{\n\tauto sum1 = 0;\n\tauto sum2 = 0;\n\tfor (auto i = 1; i <= num1; i++)\n\t{\n\t\tif (num1 % i == 0)\n\t\t{\n\t\t\tsum1 += i;\n\t\t}\n\t}\n\tfor (auto i = 1; i <= num2; i++)\n\t{\n\t\tif (num2 % i == 0)\n\t\t{\n\t\t\tsum2 += i;\n\t\t}\n\t}\n\treturn sum1 == sum2;\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto sum_divisors = (long num) {\n\t\tlong sum = 0;\n\t\tfor (long i = 1; i <= num; i++) {\n\t\t\tif (num % i == 0) {\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t};\n\treturn sum_divisors(num1) == sum_divisors(num2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\treturn sum(divisors(num1)) == sum(divisors(num2));\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = divisors(num1);\n\tauto divisors2 = divisors(num2);\n\t\n\treturn sum(divisors1) == sum(divisors2);\n}",
    "{\n\tauto divisors1 = get_divisors(num1);\n\tauto divisors2 = get_divisors(num2);\n\treturn sum(divisors1) == sum(divisors2);\n}"
  ]
}
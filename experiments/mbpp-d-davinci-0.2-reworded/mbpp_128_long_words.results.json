{
  "name": "mbpp_128_long_words",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpgswy2xoq.d(10): Error: undefined identifier `split`\n/tmp/tmpgswy2xoq.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgswy2xoq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpc0752i48.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0752i48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tauto result = filter!(a => a.length > n)(words);\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpv4zlimxf.d(10): Error: undefined identifier `split`\n/tmp/tmpv4zlimxf.d(11): Error: template instance `filter!((a) => a.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4zlimxf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\treturn filter!(w => w.length > n)(words);\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpw54fjcns.d(10): Error: undefined identifier `split`\n/tmp/tmpw54fjcns.d(11): Error: template instance `filter!((w) => w.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw54fjcns.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpu6x3hoam.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6x3hoam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmp3z7sed86.d(10): Error: undefined identifier `split`\n/tmp/tmp3z7sed86.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3z7sed86.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\t\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\t\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpdba5zfok.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdba5zfok.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpxqel5cq8.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqel5cq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words;\n\tstring[] long_words;\n\tint i;\n\t\n\twords = str.split(\" \");\n\t\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\t\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpr4crydv5.d(14): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4crydv5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tlong_words ~= word;\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp08rqmij0.d(10): Error: no property `split` for type `string`\n/tmp/tmp08rqmij0.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08rqmij0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpl97r_k8l.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl97r_k8l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpux4wxe4v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpux4wxe4v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmproho6l8k.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmproho6l8k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpawn5exch.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpawn5exch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpux4wxe4v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpux4wxe4v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmphve3n4ot.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphve3n4ot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpu6x3hoam.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6x3hoam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tauto words = str.split;\n\treturn words.filter!(a => a.length > n);\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpum7s6r2z.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpum7s6r2z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpg279k6dh.d(10): Error: undefined identifier `split`\n/tmp/tmpg279k6dh.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg279k6dh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpdhogwybu.d(10): Error: no property `split` for type `string`\n/tmp/tmpdhogwybu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdhogwybu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tlong_words ~= word;\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp16_ny7zl.d(10): Error: undefined identifier `split`\n/tmp/tmp16_ny7zl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16_ny7zl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tauto result = filter!(a => a.length > n)(words);\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpv4zlimxf.d(10): Error: undefined identifier `split`\n/tmp/tmpv4zlimxf.d(11): Error: template instance `filter!((a) => a.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4zlimxf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmppd33o8ud.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppd33o8ud.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpgswy2xoq.d(10): Error: undefined identifier `split`\n/tmp/tmpgswy2xoq.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgswy2xoq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpxqel5cq8.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqel5cq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp95vfl12f.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95vfl12f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmp3z7sed86.d(10): Error: undefined identifier `split`\n/tmp/tmp3z7sed86.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3z7sed86.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words = words.filter!(a => a.length > n);\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp01zm0kg2.d(10): Error: no property `split` for type `string`\n/tmp/tmp01zm0kg2.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp01zm0kg2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words = words.filter!(a => a.length > n);\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp01zm0kg2.d(10): Error: no property `split` for type `string`\n/tmp/tmp01zm0kg2.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp01zm0kg2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpc2ad6gnq.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2ad6gnq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = words.filter!(a => a.length > n);\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmplw5nkalp.d(10): Error: no property `split` for type `string`\n/tmp/tmplw5nkalp.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplw5nkalp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp3b0a3h46.d(10): Error: no property `split` for type `string`\n/tmp/tmp3b0a3h46.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3b0a3h46.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp09yxv93f.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09yxv93f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = words.filter!(a => a.length > n);\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmplw5nkalp.d(10): Error: no property `split` for type `string`\n/tmp/tmplw5nkalp.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplw5nkalp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpu6x3hoam.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6x3hoam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp5d21aje6.d(10): Error: undefined identifier `split`\n/tmp/tmp5d21aje6.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5d21aje6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tlong_words ~= word;\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpze8mqqxt.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpze8mqqxt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpkc7xn5ux.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkc7xn5ux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpgswy2xoq.d(10): Error: undefined identifier `split`\n/tmp/tmpgswy2xoq.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgswy2xoq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\treturn filter!(a => a.length > n)(words);\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpx70icqyd.d(10): Error: undefined identifier `split`\n/tmp/tmpx70icqyd.d(11): Error: template instance `filter!((a) => a.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx70icqyd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpb4p1v81x.d(10): Error: no property `split` for type `string`\n/tmp/tmpb4p1v81x.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4p1v81x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmprrbgm2bs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprrbgm2bs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpc0752i48.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0752i48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp6_2nhmum.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_2nhmum.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpzm4altsv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzm4altsv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpwz9klbr7.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwz9klbr7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmproho6l8k.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmproho6l8k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tauto res = filter!(a => a.length > n)(words);\n\treturn res;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmphto1och6.d(10): Error: undefined identifier `split`\n/tmp/tmphto1och6.d(11): Error: template instance `filter!((a) => a.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphto1och6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = words.filter!(a => a.length > n);\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp3zp8m2sh.d(10): Error: undefined identifier `split`\n/tmp/tmp3zp8m2sh.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3zp8m2sh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpg279k6dh.d(10): Error: undefined identifier `split`\n/tmp/tmpg279k6dh.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg279k6dh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmphve3n4ot.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphve3n4ot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] longWords;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tlongWords ~= word;\n\t}\n\treturn longWords;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpzhgchdwo.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhgchdwo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpdhogwybu.d(10): Error: no property `split` for type `string`\n/tmp/tmpdhogwybu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdhogwybu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\treturn words.filter!(a => a.length > n);\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp35484tkz.d(10): Error: no property `split` for type `string`\n/tmp/tmp35484tkz.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35484tkz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpu6x3hoam.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6x3hoam.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmprrbgm2bs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprrbgm2bs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpxqel5cq8.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqel5cq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp09yxv93f.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09yxv93f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpc0752i48.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0752i48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words) {\n\t\tif(word.length > n) {\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpchdwuxiu.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpchdwuxiu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = words.filter!(a => a.length > n);\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmplw5nkalp.d(10): Error: no property `split` for type `string`\n/tmp/tmplw5nkalp.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplw5nkalp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpzm4altsv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzm4altsv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n) \n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp50_l7_59.d(10): Error: undefined identifier `split`\n/tmp/tmp50_l7_59.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp50_l7_59.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\treturn filter!(a => a.length > n)(words);\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpx70icqyd.d(10): Error: undefined identifier `split`\n/tmp/tmpx70icqyd.d(11): Error: template instance `filter!((a) => a.length > n)` template `filter` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx70icqyd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmphve3n4ot.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphve3n4ot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplmp0a_tu.d(10): Error: undefined identifier `split`\n/tmp/tmplmp0a_tu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmp0a_tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tauto words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp5j2_t1d3.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5j2_t1d3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpdhogwybu.d(10): Error: no property `split` for type `string`\n/tmp/tmpdhogwybu.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdhogwybu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpl97r_k8l.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl97r_k8l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words = words.filter!(a => a.length > n);\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp01zm0kg2.d(10): Error: no property `split` for type `string`\n/tmp/tmp01zm0kg2.d(11): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp01zm0kg2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpux4wxe4v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpux4wxe4v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpl97r_k8l.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl97r_k8l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words) \n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpd1mvn_0g.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1mvn_0g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpoi7eerfl.d(10): Error: undefined identifier `split`\n/tmp/tmpoi7eerfl.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi7eerfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = new string[0];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpbxjq8mat.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxjq8mat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmpk_pubdbp.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_pubdbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmplgg563rc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg563rc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp0r32x0fs.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0r32x0fs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words = [];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp09yxv93f.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09yxv93f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1665517257,
      "stdout": "",
      "stderr": "/tmp/tmprd8k1_a7.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd8k1_a7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split(\" \");\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp47552w_f.d(10): Error: no property `split` for type `string`\n/tmp/tmp47552w_f.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp47552w_f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = str.split;\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp3b0a3h46.d(10): Error: no property `split` for type `string`\n/tmp/tmp3b0a3h46.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3b0a3h46.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str);\n\tstring[] result = new string[];\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmp3hggdpg5.d(10): Error: undefined identifier `split`\n/tmp/tmp3hggdpg5.d(11): Error: new can only create structs, dynamic arrays or class objects, not `string[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3hggdpg5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find words that are longer than n characters from a given array of words.\n\t\n*/\nstring[] long_words(long n, string str) \n{\n\tstring[] words = split(str, \" \");\n\tstring[] long_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length > n)\n\t\t{\n\t\t\tlong_words ~= word;\n\t\t}\n\t}\n\treturn long_words;\n}\nunittest\n{\n    alias candidate = long_words;\n\n    assert(candidate(3L, \"python is a programming language\") == [\"python\", \"programming\", \"language\"]);\n    assert(candidate(2L, \"writing a program\") == [\"writing\", \"program\"]);\n    assert(candidate(5L, \"sorting list\") == [\"sorting\"]);\n}\nvoid main(){}",
      "timestamp": 1666124156,
      "stdout": "",
      "stderr": "/tmp/tmpds0di8kw.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpds0di8kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
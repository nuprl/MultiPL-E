{
  "name": "mbpp_627_find_First_Missing",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the smallest missing number from a sorted array of natural numbers.\n\t\n*/\nlong find_First_Missing(long[] array) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_First_Missing;\n\n    assert(candidate([0L, 1L, 2L, 3L]) == 4L);\n    assert(candidate([0L, 1L, 2L, 6L, 9L]) == 3L);\n    assert(candidate([2L, 3L, 5L, 8L, 9L]) == 0L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong n = array.length;\n\tlong left = 0;\n\tlong right = n - 1;\n\tlong mid = 0;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\tif (left == n) \n\t{\n\t\treturn n + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length - 1;\n\tlong mid;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\t\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong i = 0;\n\tlong n = array.length;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn n;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\t\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid-1] == mid-1)\n\t\t\t\treturn mid;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn n;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\twhile (low <= high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong length = array.length;\n\tlong i = 0;\n\twhile (i < length) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1)\n\t\t\tbreak;\n\t\ti++;\n\t}\n\treturn i + 1;\n}",
    "{\n\tlong left = 0;\n\tlong right = array.length - 1;\n\tlong mid;\n\t\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\t\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong mid_val = 0;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tmid_val = array[mid];\n\t\t\n\t\tif(mid_val > mid)\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t\telse if(mid_val < mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\tlong m = (i + j) / 2;\n\t\n\twhile(i < j)\n\t{\n\t\tif(array[m] > m)\n\t\t{\n\t\t\tj = m;\n\t\t}\n\t\telse if(array[m] < m)\n\t\t{\n\t\t\ti = m + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti = m + 1;\n\t\t}\n\t\tm = (i + j) / 2;\n\t}\n\t\n\treturn i;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = first + (last - first) / 2;\n\t\t\n\t\tif(array[mid] > mid)\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong left = 0;\n\tlong right = n - 1;\n\tlong mid;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong count = last - first + 1;\n\tlong[] temp = new long[count];\n\tforeach(i; 0 .. count)\n\t\ttemp[i] = first + i;\n\treturn temp.difference(array).front;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\twhile(first <= last) \n\t{\n\t\tmid = first + (last - first) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong mid_value = 0;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = first + (last - first) / 2;\n\t\tmid_value = array[mid];\n\t\t\n\t\tif(mid_value == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong index = 0;\n\tlong n = array.length;\n\twhile (first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (mid == array[mid - 1]) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse if (mid == array[mid]) \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong length = array.length;\n\tlong start = 0;\n\tlong end = length - 1;\n\tlong mid = 0;\n\twhile (start <= end) \n\t{\n\t\tmid = (start + end) / 2;\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tif (mid == 0 || array[mid - 1] == mid)\n\t\t\t\treturn mid + 1;\n\t\t\tend = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstart = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong n = array.length;\n\tlong first_missing = 0;\n\t\n\tfor(i = 0; i < n; i++) \n\t{\n\t\tif(array[i] != i) \n\t\t{\n\t\t\tfirst_missing = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn first_missing;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong left = 0;\n\tlong right = array.length - 1;\n\tlong mid;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t} \n\t\telse if (array[mid] > mid) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t}\n\treturn left;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\t\n\twhile(first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong count = last - first + 1;\n\tlong[] temp = new long[count];\n\tforeach(i; 0 .. count)\n\t{\n\t\ttemp[i] = first + i;\n\t}\n\treturn temp[0];\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] > mid) \n\t\t{\n\t\t\tlast = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tif (mid == 0 || array[mid - 1] == mid) \n\t\t\t{\n\t\t\t\treturn mid + 1;\n\t\t\t}\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if(array[mid] != mid + 1)\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong result = 0;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse if(array[mid] > mid)\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong i = 0;\n\tlong n = array.length;\n\twhile(i < n) \n\t{\n\t\tif(array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] > mid) \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong[] temp = array.dup;\n\ttemp.sort;\n\tlong i = 0;\n\tforeach(long num; temp)\n\t{\n\t\tif(num != i)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong min = array[0];\n\tlong max = array[$-1];\n\tlong range = max - min + 1;\n\tlong[] count = new long[range];\n\tforeach(i; array)\n\t{\n\t\tcount[i-min]++;\n\t}\n\tfor(long i = 0; i < range; i++)\n\t{\n\t\tif(count[i] == 0)\n\t\t{\n\t\t\treturn i+min;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile(i < n)\n\t{\n\t\tif(array[i] != i)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\t\n\twhile (first <= last) \n\t{\n\t\tmid = first + (last - first) / 2;\n\t\t\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid;\n\twhile (first < last) \n\t{\n\t\tmid = first + (last - first) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\tlong index;\n\t\n\twhile (first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif (array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid) \n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1) \n\t\t\t{\n\t\t\t\treturn mid;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlast = mid;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong h = n - 1;\n\tlong mid;\n\twhile (l <= h) \n\t{\n\t\tmid = (l + h) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tl = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\th = mid - 1;\n\t\t}\n\t}\n\treturn l;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong i = 0;\n\twhile(first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid + 1) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong count = last - first + 1;\n\tlong[] temp = new long[count];\n\tforeach(i; array)\n\t{\n\t\ttemp[i-first] = 1;\n\t}\n\tforeach(i; 0..count)\n\t{\n\t\tif(temp[i] == 0)\n\t\t{\n\t\t\treturn i+first;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1)\n\t\t\tlow = mid + 1;\n\t\telse\n\t\t\thigh = mid - 1;\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if(array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\twhile(first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0, r = n - 1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (array[m] == m + 1) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn l + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] > mid) \n\t\t{\n\t\t\tlast = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong h = n - 1;\n\tlong mid;\n\twhile (l <= h) \n\t{\n\t\tmid = (l + h) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t\treturn mid + 1;\n\t\telse if (array[mid] != mid + 1)\n\t\t\th = mid - 1;\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\treturn -1;\n}",
    "{ \n    long n = array.length; \n    long l = 0, r = n - 1; \n    while (l <= r) { \n        long m = (l + r) / 2; \n        if (array[m] != m + 1 && array[m - 1] == m) \n            return m + 1; \n        if (array[m] != m + 1) \n            r = m - 1; \n        else\n            l = m + 1; \n    } \n    return -1; \n} ",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong r = n - 1;\n\tlong m = 0;\n\t\n\twhile (l <= r) \n\t{\n\t\tm = (l + r) / 2;\n\t\tif (array[m] == m + 1) \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn l + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong index = 0;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile(i < n)\n\t{\n\t\tif(array[i] != i)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\twhile (first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (mid == array[mid - array[0]]) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif(array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if(array[mid] != mid + 1)\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\t\n\tif(low > high)\n\t{\n\t\treturn mid + 1;\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong r = n - 1;\n\tlong m = 0;\n\twhile (l <= r) \n\t{\n\t\tm = (l + r) / 2;\n\t\tif (array[m] == m + 1) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn l + 1;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\twhile (i < j) \n\t{\n\t\tlong m = (i + j) / 2;\n\t\tif (array[m] == m) \n\t\t{\n\t\t\ti = m + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = m;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] > mid)\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong result = 0;\n\t\n\twhile(first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\tresult = first;\n\treturn result;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high)/2;\n\t\tif(array[mid] != mid+1)\n\t\t{\n\t\t\tif(mid == 0 || array[mid-1] == mid)\n\t\t\t\treturn mid+1;\n\t\t\telse\n\t\t\t\thigh = mid-1;\n\t\t}\n\t\telse\n\t\t\tlow = mid+1;\n\t}\n\treturn mid+1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\tlong mid_element;\n\tlong mid_element_next;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tmid_element = array[mid];\n\t\tmid_element_next = array[mid + 1];\n\t\tif (mid_element + 1 != mid_element_next) \n\t\t{\n\t\t\treturn mid_element + 1;\n\t\t}\n\t\tif (mid_element % 2 == 0) \n\t\t{\n\t\t\tif (mid_element == array[mid - 1]) \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (mid_element == array[mid - 1]) \n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\twhile (i < array.length)\n\t{\n\t\tif (array[i] != i)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong len = array.length;\n\tlong low = 0;\n\tlong high = len - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t\treturn mid + 1;\n\t\tif (array[mid] != mid + 1)\n\t\t\thigh = mid - 1;\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$ - 1];\n\tlong mid;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti = i + 1;\n\t}\n\treturn n;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] > mid) \n\t\t{\n\t\t\tlast = mid;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length - 1;\n\tlong mid = 0;\n\t\n\twhile (first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tif (mid == 0 || array[mid - 1] == mid)\n\t\t\t\treturn mid + 1;\n\t\t\telse\n\t\t\t\tlast = mid - 1;\n\t\t} \n\t\telse\n\t\t\tfirst = mid + 1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong size = last - first;\n\t\n\tif (size == 0)\n\t\treturn first + 1;\n\t\t\n\tlong[] temp = new long[size];\n\t\n\tforeach(i; 0 .. size)\n\t\ttemp[i] = first + i;\n\t\t\n\treturn temp.difference(array).front;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid + 1)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid)\n\t\t\t\treturn mid + 1;\n\t\t\telse\n\t\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t\tfirst = mid + 1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\t\n\treturn low + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] > mid)\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong[] result = array.filter!(a => a > 0);\n\tif(result.length == 0)\n\t\treturn 1;\n\telse\n\t{\n\t\tlong max = result.max;\n\t\tlong min = result.min;\n\t\tif(min != 1)\n\t\t\treturn 1;\n\t\telse\n\t\t{\n\t\t\tlong[] temp = new long[max];\n\t\t\tforeach(long i; result)\n\t\t\t{\n\t\t\t\ttemp[i - 1] = i;\n\t\t\t}\n\t\t\tlong[] temp2 = temp.filter!(a => a == 0);\n\t\t\tif(temp2.length == 0)\n\t\t\t\treturn max + 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tlong[] temp3 = temp2.map!(a => a + 1);\n\t\t\t\treturn temp3[0];\n\t\t\t}\n\t\t}\n\t}\n}",
    "{\n\tlong i = 0;\n\tforeach(long x; array)\n\t{\n\t\tif(x != i)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid) \n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1)\n\t\t\t\treturn mid;\n\t\t\telse\n\t\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t\tfirst = mid + 1;\n\t}\n\t\n\tif(first == array.length)\n\t\treturn array.length;\n\t\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\tlong mid = 0;\n\twhile (i < j) \n\t{\n\t\tmid = (i + j) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\ti = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = mid;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\tlong mid = 0;\n\twhile (i < j) \n\t{\n\t\tmid = (i + j) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\ti = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = mid;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong count = last - first + 1;\n\tlong[] temp = new long[count];\n\tforeach(i; array)\n\t{\n\t\ttemp[i-first] = 1;\n\t}\n\tforeach(i; temp)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\treturn first + i;\n\t\t}\n\t}\n\treturn last + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t\treturn mid + 1;\n\t\telse if (array[mid] != mid + 1)\n\t\t\thigh = mid - 1;\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\tlong mid = 0;\n\twhile (i < j) \n\t{\n\t\tmid = (i + j) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\ti = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = mid;\n\t\t}\n\t}\n\treturn i + 1;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\t\n\twhile(low <= high)\n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif(array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if(array[mid] != mid + 1)\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\t\n\tif(low > 0)\n\t{\n\t\treturn low + 1;\n\t}\n\t\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse if(array[mid] > mid)\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1)\n\t\t\t{\n\t\t\t\treturn mid;\n\t\t\t}\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile(low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tif (mid == 0 || array[mid - 1] == mid)\n\t\t\t\treturn mid + 1;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t} \n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length;\n\tlong mid = 0;\n\twhile (i < j) \n\t{\n\t\tmid = (i + j) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\ti = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tj = mid;\n\t\t}\n\t}\n\treturn i + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\tlong n = array.length;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length - 1;\n\tlong mid = 0;\n\t\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] != mid + 1)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid)\n\t\t\t{\n\t\t\t\treturn mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thigh = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\tlong j = array.length - 1;\n\t\n\twhile(i < j) \n\t{\n\t\tlong mid = (i + j) / 2;\n\t\t\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\ti = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tj = mid;\n\t\t}\n\t}\n\t\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong left = 0;\n\tlong right = n - 1;\n\tlong mid = 0;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\tif (left == n) \n\t{\n\t\treturn n + 1;\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = first + (last - first) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1)\n\t\t\t{\n\t\t\t\treturn mid;\n\t\t\t}\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\tif(first == array.length)\n\t{\n\t\treturn array.length;\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile (first < last) \n\t{\n\t\tmid = first + (last - first) / 2;\n\t\t\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong start = 0;\n\tlong end = array.length - 1;\n\tlong mid = 0;\n\twhile (start <= end) \n\t{\n\t\tmid = (start + end) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tstart = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tend = mid - 1;\n\t\t}\n\t}\n\treturn start;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = first + (last - first) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn (low + 1);\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong i = 0;\n\tlong n = array.length;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n-1;\n\tlong mid = 0;\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid-1] == mid-1)\n\t\t\t\treturn mid;\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn mid;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length - 1;\n\tlong mid = 0;\n\t\n\twhile (first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong[] temp = array.dup;\n\ttemp.sort;\n\tlong i = 0;\n\twhile(i < temp.length)\n\t{\n\t\tif(temp[i] != i)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn temp.length;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\t\n\tif(first != 1)\n\t\treturn 1;\n\t\n\tif(last == $)\n\t\treturn $+1;\n\t\n\tlong mid = (first + last) / 2;\n\t\n\twhile(first < last)\n\t{\n\t\tif(array[mid] == mid)\n\t\t\tfirst = mid + 1;\n\t\telse\n\t\t\tlast = mid;\n\t\t\n\t\tmid = (first + last) / 2;\n\t}\n\t\n\treturn mid;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid)\n\t\t\treturn mid + 1;\n\t\telse if (array[mid] != mid + 1)\n\t\t\thigh = mid - 1;\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] > mid)\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\tlong index;\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong h = n - 1;\n\tlong mid = 0;\n\twhile(l <= h) \n\t{\n\t\tmid = (l + h) / 2;\n\t\tif(array[mid] != mid + 1) \n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid)\n\t\t\t\treturn mid + 1;\n\t\t\th = mid - 1;\n\t\t}\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid = 0;\n\tlong index = 0;\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong i = 0;\n\twhile (i < array.length) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong min = array[0];\n\tlong max = array[$-1];\n\tlong range = max - min + 1;\n\tlong[] counter = new long[range];\n\tforeach(i; array)\n\t{\n\t\tcounter[i - min]++;\n\t}\n\tforeach(i; counter)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\treturn min + counter.indexOf(i);\n\t\t}\n\t}\n\treturn max + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$ - 1];\n\tlong mid = 0;\n\tlong index = 0;\n\t\n\twhile(first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong start = 0;\n\tlong end = array.length;\n\tlong mid = 0;\n\twhile (start < end) \n\t{\n\t\tmid = (start + end) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tstart = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tend = mid;\n\t\t}\n\t}\n\treturn start;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length;\n\twhile (low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\t\n\tif (first != 1)\n\t\treturn 1;\n\t\n\tif (last == $)\n\t\treturn last+1;\n\t\n\tlong mid = (first + last) / 2;\n\t\n\twhile (first < last) \n\t{\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\tmid = (first + last) / 2;\n\t}\n\treturn first;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length;\n\tlong mid = 0;\n\twhile(low < high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = array.length;\n\tlong left = 0;\n\tlong right = n - 1;\n\tlong mid = 0;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t} \n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\tif (left == n) \n\t{\n\t\treturn n + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\t\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\t\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\t\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\t\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile(i < n) \n\t{\n\t\tif(array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\tlong result = 0;\n\twhile(first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\twhile (first < last) \n\t{\n\t\tlong mid = (first + last) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0, r = n - 1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (array[m] != m + 1) \n\t\t{\n\t\t\tif (m == 0 || array[m - 1] == m)\n\t\t\t\treturn m + 1;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse\n\t\t\tl = m + 1;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong first = array[0];\n\tlong last = array[$-1];\n\tlong mid;\n\t\n\twhile (first <= last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length - 1;\n\tlong mid = 0;\n\twhile(first <= last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid) \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlast = mid - 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong length = array.length;\n\tlong i = 0;\n\twhile (i < length) \n\t{\n\t\tif (array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1)\n\t\t\t\treturn mid;\n\t\t\telse\n\t\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t\tfirst = mid + 1;\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\t\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > 0) \n\t{\n\t\treturn low + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] != mid)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid - 1)\n\t\t\t\treturn mid;\n\t\t\telse\n\t\t\t\tlast = mid;\n\t\t}\n\t\telse\n\t\t\tfirst = mid + 1;\n\t}\n\t\n\tif(first == array.length)\n\t\treturn array.length;\n\t\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile(i < n) \n\t{\n\t\tif(array[i] != i) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\t\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\t\n\treturn first;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > high) \n\t{\n\t\treturn mid + 2;\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong left = 0;\n\tlong right = n - 1;\n\tlong mid = 0;\n\twhile(left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif(array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if(array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong h = n - 1;\n\tlong mid = 0;\n\twhile (l <= h) \n\t{\n\t\tmid = (l + h) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\th = mid - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\treturn mid + 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n;\n\tlong mid = 0;\n\twhile(low < high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong n = array.length;\n\tlong first_missing = n + 1;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\tfirst_missing = i + 1;\n\t\t\tbreak;\n\t\t}\n\t\ti = i + 1;\n\t}\n\treturn first_missing;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length - 1;\n\tlong mid = 0;\n\tlong result = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult = mid;\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong n = array.length;\n\tlong l = 0;\n\tlong h = n - 1;\n\tlong mid;\n\twhile (l <= h) \n\t{\n\t\tmid = (l + h) / 2;\n\t\tif (array[mid] == mid) \n\t\t{\n\t\t\tl = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\th = mid - 1;\n\t\t}\n\t}\n\treturn l;\n}",
    "{\n\tlong n = array.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (array[i] != i + 1) \n\t\t{\n\t\t\treturn i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn n + 1;\n}",
    "{\n\tlong min = array[0];\n\tlong max = array[$-1];\n\tlong range = max - min + 1;\n\tlong[] count = new long[range];\n\tforeach(i; array)\n\t{\n\t\tcount[i-min] = 1;\n\t}\n\tlong i = 0;\n\twhile(i < range && count[i] == 1)\n\t{\n\t\ti++;\n\t}\n\treturn i+min;\n}",
    "{\n\tlong left = 0;\n\tlong right = array.length - 1;\n\tlong mid;\n\twhile (left <= right) \n\t{\n\t\tmid = (left + right) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t} \n\t\telse if (array[mid] != mid + 1) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\twhile (first < last) \n\t{\n\t\tmid = (first + last) / 2;\n\t\tif (array[mid] > mid) \n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t\tfirst = mid + 1;\n\t\telse\n\t\t\tlast = mid;\n\t}\n\treturn first;\n}",
    "{\n\tlong start = 0;\n\tlong end = array.length - 1;\n\tlong mid = 0;\n\t\n\twhile(start <= end)\n\t{\n\t\tmid = start + (end - start) / 2;\n\t\t\n\t\tif(array[mid] != mid + 1)\n\t\t{\n\t\t\tif(mid == 0 || array[mid - 1] == mid)\n\t\t\t{\n\t\t\t\treturn mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend = mid - 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = mid + 1;\n\t\t}\n\t}\n\t\n\treturn mid + 1;\n}",
    "{\n\tlong low = 0;\n\tlong high = array.length - 1;\n\tlong mid = 0;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\tif (mid == 0 || array[mid - 1] == mid) \n\t\t\t{\n\t\t\t\treturn mid + 1;\n\t\t\t}\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\tif (low > array.length) \n\t{\n\t\treturn array.length + 1;\n\t}\n\treturn 1;\n}",
    "{\n\tlong n = array.length;\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid;\n\twhile (low <= high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] != mid + 1 && array[mid - 1] == mid) \n\t\t{\n\t\t\treturn mid + 1;\n\t\t}\n\t\tif (array[mid] != mid + 1) \n\t\t{\n\t\t\thigh = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first = 0;\n\tlong last = array.length;\n\tlong mid = 0;\n\t\n\twhile(first < last)\n\t{\n\t\tmid = (first + last) / 2;\n\t\tif(array[mid] == mid)\n\t\t{\n\t\t\tfirst = mid + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlast = mid;\n\t\t}\n\t}\n\treturn first;\n}",
    "{\n\tlong min = array[0];\n\tlong max = array[$-1];\n\tlong range = max - min;\n\tlong[] hash = new long[range + 1];\n\tforeach(i; array)\n\t{\n\t\thash[i - min] = 1;\n\t}\n\tforeach(i; 0 .. hash.length)\n\t{\n\t\tif(hash[i] == 0)\n\t\t{\n\t\t\treturn i + min;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong first_missing = -1;\n\tlong[] diff = new long[array.length];\n\t\n\tfor(long i = 0; i < array.length; i++)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tdiff[i] = array[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiff[i] = array[i] - array[i-1];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < diff.length; i++)\n\t{\n\t\tif(diff[i] != 1)\n\t\t{\n\t\t\tfirst_missing = array[i] + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn first_missing;\n}"
  ]
}
{
  "name": "mbpp_772_remove_length",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp0yz9f8se.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0yz9f8se.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp4kb0txyr.d(10): Error: no property `split` for type `string`\n/tmp/tmp4kb0txyr.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4kb0txyr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp7wr407rb.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wr407rb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptraeo_0z.d(10): Error: no property `split` for type `string`\n/tmp/tmptraeo_0z.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptraeo_0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] new_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tnew_words ~= word;\n\t\t}\n\t}\n\treturn new_words.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpg5ss1839.d(10): Error: no property `split` for type `string`\n/tmp/tmpg5ss1839.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5ss1839.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result.join(\" \");\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpno8x46o2.d(10): Error: no property `split` for type `string`\n/tmp/tmpno8x46o2.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpno8x46o2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpo66ar6e2.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo66ar6e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] new_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tnew_words ~= word;\n\t\t}\n\t}\n\treturn new_words.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpg5ss1839.d(10): Error: no property `split` for type `string`\n/tmp/tmpg5ss1839.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5ss1839.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach (string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmphprq84z6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphprq84z6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmplfqpw5yn.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfqpw5yn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpzkvjgftr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkvjgftr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split;\n    string result = \"\";\n    foreach(string word; words)\n    {\n        if(word.length != K)\n        {\n            result ~= word ~ \" \";\n        }\n    }\n    return result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpsg7_wobh.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsg7_wobh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpe23yya01.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe23yya01.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring res = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpf52gb_vd.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf52gb_vd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words; \n    string result = \"\"; \n    words = test_str.split(); \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpr27kbdn3.d(12): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr27kbdn3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = split(test_str, \" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpc7jdjx0b.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7jdjx0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpfn2sv2z4.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfn2sv2z4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmprlw3m0w6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprlw3m0w6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp7wr407rb.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wr407rb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str, \" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpy8a94bqj.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8a94bqj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result.stripRight;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpiunhrxc3.d(10): Error: no property `split` for type `string`\n/tmp/tmpiunhrxc3.d(19): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiunhrxc3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp2eee9u7c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eee9u7c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpnnzemr3y.d(10): Error: no property `split` for type `string`\n/tmp/tmpnnzemr3y.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnnzemr3y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result.join(\" \");\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp06cx_ahp.d(10): Error: no property `split` for type `string`\n/tmp/tmp06cx_ahp.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp06cx_ahp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp2eee9u7c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eee9u7c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result.stripRight; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpd3ir2mdg.d(10): Error: no property `split` for type `string`\n/tmp/tmpd3ir2mdg.d(16): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd3ir2mdg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmptraeo_0z.d(10): Error: no property `split` for type `string`\n/tmp/tmptraeo_0z.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptraeo_0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpo66ar6e2.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo66ar6e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpttxmnoyq.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttxmnoyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpo66ar6e2.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo66ar6e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring ret = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tret ~= word ~ \" \";\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpegsacvct.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpegsacvct.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp0yz9f8se.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0yz9f8se.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmps7_qbq0y.d(10): Error: no property `split` for type `string`\n/tmp/tmps7_qbq0y.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7_qbq0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp0rad0uiv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rad0uiv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp9ajj49f7.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ajj49f7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t\tresult ~= \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp43en8fq3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43en8fq3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp7n_ire60.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n_ire60.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring result = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t{ \n\t\t\tresult ~= word ~ \" \"; \n\t\t} \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpaqjv9_lm.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqjv9_lm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string result = \"\"; \n    string[] words = test_str.split(\" \"); \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result += word + \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpemjy1qdh.d(11): Error: no property `split` for type `string`\n/tmp/tmpemjy1qdh.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemjy1qdh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpuv9rwx1x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv9rwx1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp7xeazflv.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7xeazflv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmplfqpw5yn.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfqpw5yn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpzkvjgftr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkvjgftr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp1jnoty17.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1jnoty17.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] new_words;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tnew_words ~= word;\n\t\t}\n\t}\n\treturn new_words.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp4hahgloi.d(10): Error: no property `split` for type `string`\n/tmp/tmp4hahgloi.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4hahgloi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp5nylpyqi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5nylpyqi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string result = \"\"; \n    string[] words = test_str.split; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp5rn47jj_.d(11): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5rn47jj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp7n_ire60.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n_ire60.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpd0j7tijo.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0j7tijo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t{ \n\t\t\tresult ~= word ~ \" \"; \n\t\t} \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp5sjddux3.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5sjddux3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split();\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result.stripRight;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp_sbtnsem.d(10): Error: no property `split` for type `string`\n/tmp/tmp_sbtnsem.d(19): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_sbtnsem.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tauto words = test_str.split;\n\tstring result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp5tq5pw9m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5tq5pw9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpk4gmhywc.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk4gmhywc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmps7_qbq0y.d(10): Error: no property `split` for type `string`\n/tmp/tmps7_qbq0y.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7_qbq0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpd0j7tijo.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0j7tijo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpzkvjgftr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkvjgftr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) { \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp2m32n9n8.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2m32n9n8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpuv9rwx1x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv9rwx1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tforeach(word; words)\n\t{\n\t\tif(word.length == K)\n\t\t{\n\t\t\ttest_str = test_str.replace(word, \"\");\n\t\t}\n\t}\n\treturn test_str;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpfi92qyx3.d(10): Error: no property `split` for type `string`\n/tmp/tmpfi92qyx3.d(15): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfi92qyx3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result.stripRight;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpr282m80m.d(10): Error: no property `split` for type `string`\n/tmp/tmpr282m80m.d(19): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr282m80m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result.stripRight; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpu4_342rr.d(10): Error: no property `split` for type `string`\n/tmp/tmpu4_342rr.d(17): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4_342rr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n    string[] words = test_str.split;\n    string result = \"\";\n    foreach(word; words)\n    {\n        if(word.length != K)\n        {\n            result ~= word ~ \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpf7lhvnu3.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf7lhvnu3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp7wr407rb.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wr407rb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp7n_ire60.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n_ire60.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmph2_ex07k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2_ex07k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring res = \"\"; \n\tforeach(word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tres ~= word ~ \" \"; \n\t} \n\treturn res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp1o3ucll0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1o3ucll0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (word; words) \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    return result.stripRight; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpks48rbib.d(10): Error: no property `split` for type `string`\n/tmp/tmpks48rbib.d(15): Error: no property `stripRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpks48rbib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(); \n\tstring result = \"\"; \n\tforeach (string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp0jcbza9t.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0jcbza9t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split();\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result.join(\" \");\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpg2mbzndi.d(10): Error: no property `split` for type `string`\n/tmp/tmpg2mbzndi.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2mbzndi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(string word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpv5m_uueo.d(10): Error: no property `split` for type `string`\n/tmp/tmpv5m_uueo.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5m_uueo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp4kb0txyr.d(10): Error: no property `split` for type `string`\n/tmp/tmp4kb0txyr.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4kb0txyr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp9ajj49f7.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ajj49f7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \"); \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif(word.length != K) \n\t\t{ \n\t\t\tresult ~= word; \n\t\t\tresult ~= \" \"; \n\t\t} \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp77k31su4.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp77k31su4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn result.join;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpfg3l65pn.d(10): Error: no property `split` for type `string`\n/tmp/tmpfg3l65pn.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfg3l65pn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpnm1_0us0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnm1_0us0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] new_words;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tnew_words ~= word;\n\t}\n\treturn new_words.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpb2ln_sal.d(10): Error: no property `split` for type `string`\n/tmp/tmpb2ln_sal.d(17): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2ln_sal.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string res = \"\"; \n    foreach (string word; words) \n        if (word.length != K) \n            res ~= word ~ \" \"; \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp40e3ubid.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp40e3ubid.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word ~ \" \";\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmp7n_ire60.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n_ire60.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpuv9rwx1x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv9rwx1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmpyhmyz6i6.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhmyz6i6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split(\" \");\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpuv9rwx1x.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv9rwx1x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp4kb0txyr.d(10): Error: no property `split` for type `string`\n/tmp/tmp4kb0txyr.d(19): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4kb0txyr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) { \n            result ~= word ~ \" \"; \n        } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpevbjlt02.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpevbjlt02.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmplmgn7of0.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmgn7of0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "/tmp/tmp7d186wjp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7d186wjp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split; \n\tstring result = \"\"; \n\tforeach(string word; words) \n\t{ \n\t\tif (word.length != K) \n\t\t\tresult ~= word ~ \" \"; \n\t} \n\treturn result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpo66ar6e2.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo66ar6e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = split(test_str, \" \");\n\tstring[] result;\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t\tresult ~= word;\n\t}\n\treturn join(result, \" \");\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmps7hwjmuu.d(10): Error: undefined identifier `split`\n/tmp/tmps7hwjmuu.d(17): Error: undefined identifier `join`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7hwjmuu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmps1phpt_l.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps1phpt_l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result.trim; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmpo2ps3g46.d(10): Error: no property `split` for type `string`\n/tmp/tmpo2ps3g46.d(17): Error: no property `trim` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2ps3g46.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split; \n    string result = \"\"; \n    foreach (string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpxwx0pfmi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwx0pfmi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string res = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            res += word + \" \"; \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1666123623,
      "stdout": "",
      "stderr": "/tmp/tmps7_qbq0y.d(10): Error: no property `split` for type `string`\n/tmp/tmps7_qbq0y.d(15): Error: invalid array operation `word + \" \"` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7_qbq0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{\n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpdklsde6g.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdklsde6g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach(string word; words) \n    { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpipjqy_2c.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipjqy_2c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n    string[] words = test_str.split(\" \"); \n    string result = \"\"; \n    foreach (string word; words) { \n        if (word.length != K) \n            result ~= word ~ \" \"; \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmpj18769_m.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj18769_m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove all the words with k length in the given string.\n\t\n*/\nstring remove_length(string test_str, long K) \n{ \n\tstring[] words = test_str.split;\n\tstring result = \"\";\n\tforeach(word; words)\n\t{\n\t\tif(word.length != K)\n\t\t{\n\t\t\tresult ~= word ~ \" \";\n\t\t}\n\t}\n\treturn result;\n} \nunittest\n{\n    alias candidate = remove_length;\n\n    assert(candidate(\"The person is most value tet\", 3L) == \"person is most value\");\n    assert(candidate(\"If you told me about this ok\", 4L) == \"If you me about ok\");\n    assert(candidate(\"Forces of darkeness is come into the play\", 4L) == \"Forces of darkeness is the\");\n}\nvoid main(){}",
      "timestamp": 1665517548,
      "stdout": "",
      "stderr": "/tmp/tmp76q99ekr.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76q99ekr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
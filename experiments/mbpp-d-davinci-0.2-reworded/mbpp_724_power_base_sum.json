{
  "name": "mbpp_724_power_base_sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n\t\n*/\nlong power_base_sum(long base, long power) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = power_base_sum;\n\n    assert(candidate(2L, 100L) == 115L);\n    assert(candidate(8L, 10L) == 37L);\n    assert(candidate(8L, 15L) == 62L);\n    assert(candidate(3L, 3L) == 9L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tlong num = pow(base, power);\n\twhile(num != 0)\n\t{\n\t\tsum += num % 10;\n\t\tnum /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\t\n\tif (power == 0)\n\t\treturn 1;\n\t\n\tif (power == 1)\n\t\treturn base;\n\t\n\tif (power % 2 == 0)\n\t\tresult = power_base_sum(base, power / 2) * power_base_sum(base, power / 2);\n\telse\n\t\tresult = base * power_base_sum(base, power / 2) * power_base_sum(base, power / 2);\n\t\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\t\n\tfor (int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile (temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile(power_result > 0) \n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) {\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong num = pow(base, power);\n\tforeach(c; num.to!string)\n\t\tsum += c.to!long;\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong num = pow(base, power);\n\twhile (num > 0) {\n\t\tsum += num % 10;\n\t\tnum /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) {\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor (int i = 1; i < power; i++) \n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp > 0) \n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\treturn base.to!string.map!(a => a.to!long).sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\tforeach(digit; power_result.to!string)\n\t{\n\t\tresult += to!long(digit);\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile (temp != 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0) \n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base != 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong base_power = pow(base, power);\n\twhile(base_power > 0)\n\t{\n\t\tsum += base_power % 10;\n\t\tbase_power /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp != 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong base_power = pow(base, power);\n\twhile (base_power > 0) \n\t{\n\t\tsum += base_power % 10;\n\t\tbase_power /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong base_power = pow(base, power);\n\twhile (base_power > 0) \n\t{\n\t\tsum += base_power % 10;\n\t\tbase_power /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0) \n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong p = pow(base, power);\n\twhile (p > 0)\n\t{\n\t\tsum += p % 10;\n\t\tp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result != 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\t\n\tforeach(digit; power_result.to!string)\n\t{\n\t\tresult += digit.to!long;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) {\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile (temp > 0) \n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\treturn sum_digits(result);\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0) \n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tforeach(digit; to!string(pow(base, power)))\n\t{\n\t\tsum += to!long(digit);\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(long i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile (power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor(long i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp != 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\twhile(power > 0)\n\t{\n\t\tif(power % 2 == 1)\n\t\t{\n\t\t\tsum += temp;\n\t\t}\n\t\ttemp = temp * temp;\n\t\tpower /= 2;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = 1;\n\t\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\t\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0) \n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile (temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp != 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\t\n\twhile (result > 0) {\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base != 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp != 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\t\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile (temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\treturn sum_digits(result);\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp != 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\tforeach(digit; to!string(power_base))\n\t{\n\t\tsum += to!long(digit);\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result != 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 1;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\tforeach(digit; power_result.to!string)\n\t{\n\t\tsum += digit.to!long;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\t\n\tfor (long i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile (temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\t\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong num = pow(base, power);\n\twhile (num > 0) \n\t{\n\t\tsum += num % 10;\n\t\tnum /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 1;\n\tfor (int i = 0; i < power; i++) \n\t{\n\t\tresult *= base;\n\t}\n\treturn sum(result.digits);\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp = temp * base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tforeach(digit; to!string(pow(base, power)))\n\t{\n\t\tsum += to!long(digit);\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = 0;\n\t\n\ttemp = pow(base, power);\n\t\n\twhile (temp != 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\t\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = 1;\n\t\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\t\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong pow = pow(base, power);\n\twhile (pow != 0)\n\t{\n\t\tsum += pow % 10;\n\t\tpow /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = power_base_sum(base, power);\n\twhile(power_base != 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\t\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0) \n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong number = pow(base, power);\n\twhile(number > 0)\n\t{\n\t\tsum += number % 10;\n\t\tnumber /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\treturn sum(result.to!string.map!(a => a.to!long));\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0) \n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor (int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp != 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong p = pow(base, power);\n\twhile (p > 0) \n\t{\n\t\tsum += p % 10;\n\t\tp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\t\n\tforeach(digit; to!string(pow(base, power)))\n\t{\n\t\tsum += to!long(digit);\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0)\n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\tforeach(digit; power_base.to!string)\n\t{\n\t\tsum += to!long(digit);\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = 0;\n\tlong temp_power = power;\n\tlong temp_base = base;\n\twhile (temp_power > 0)\n\t{\n\t\ttemp = temp_base;\n\t\twhile (temp > 0)\n\t\t{\n\t\t\tresult += temp % 10;\n\t\t\ttemp /= 10;\n\t\t}\n\t\ttemp_base *= base;\n\t\ttemp_power--;\n\t}\n\treturn result;\n}",
    "{\n\tauto result = pow(base, power);\n\treturn sum(result.to!string().map!(a => a.to!long));\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\twhile(power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor (int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\t\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\tforeach(digit; to!string(power_result))\n\t\tresult += to!long(digit);\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong temp = 0;\n\tlong temp2 = 0;\n\t\n\ttemp = pow(base, power);\n\t\n\twhile(temp != 0)\n\t{\n\t\ttemp2 = temp % 10;\n\t\tresult += temp2;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = power_base_sum(base, power);\n\twhile (temp > 0) \n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\t\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile (power_result > 0) \n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\t\n\twhile(power_base > 0)\n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong power_result = pow(base, power);\n\t\n\twhile (power_result > 0)\n\t{\n\t\tsum += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong base_power = pow(base, power);\n\twhile(base_power > 0) \n\t{\n\t\tsum += base_power % 10;\n\t\tbase_power /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0) \n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong power_result = pow(base, power);\n\twhile (power_result > 0)\n\t{\n\t\tresult += power_result % 10;\n\t\tpower_result /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 1;\n\tfor(long i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong power_base = pow(base, power);\n\twhile (power_base > 0) \n\t{\n\t\tsum += power_base % 10;\n\t\tpower_base /= 10;\n\t}\n\treturn sum;\n}"
  ]
}
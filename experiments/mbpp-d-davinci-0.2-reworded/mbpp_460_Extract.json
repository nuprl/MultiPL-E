{
  "name": "mbpp_460_Extract",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the first element of each subarray.\n\t\n*/\nlong[] Extract(long[][] lst) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = Extract;\n\n    assert(candidate([[1L, 2L], [3L, 4L, 5L], [6L, 7L, 8L, 9L]]) == [1L, 3L, 6L]);\n    assert(candidate([[1L, 2L, 3L], [4L, 5L]]) == [1L, 4L]);\n    assert(candidate([[9L, 8L, 1L], [1L, 2L]]) == [9L, 1L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tret[i] = e[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, sub; lst)\n\t{\n\t\tresult[i] = sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst) \n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tret[i] = elem[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tresult[i] = v[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, subarray; lst) \n\t{\n\t\tresult[i] = subarray[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, v; lst)\n\t\tresult[i] = v[0];\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t\tresult[i] = l[0];\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst) \n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, sub; lst)\n\t{\n\t\tresult[i] = sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, sublst; lst) \n\t{\n\t\tresult[i] = sublst[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tfor (int i = 0; i < lst.length; i++)\n\t{\n\t\tresult[i] = lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tint i = 0;\n\tforeach(long[] sub; lst)\n\t{\n\t\tresult[i] = sub[0];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, sub; lst)\n\t{\n\t\tresult ~= sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tres[i] = e[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, element; lst)\n\t{\n\t\tresult[i] = element[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tres[i] = e[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tres[i] = elem[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tauto ret = new long[](lst.length);\n\tforeach(i, item; lst)\n\t{\n\t\tret[i] = item[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, x; lst)\n\t{\n\t\tresult[i] = x[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e;lst)\n\t{\n\t\tret[i] = e[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result;\n\tforeach(l; lst) \n\t{\n\t\tresult ~= l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tres[i] = v[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}\n/*",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tres[i] = item[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res;\n\tforeach(i; lst)\n\t{\n\t\tres ~= i[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, element; lst)\n\t{\n\t\tresult[i] = element[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length) \n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, sub; lst)\n\t{\n\t\tresult[i] = sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, x; lst)\n\t{\n\t\tresult[i] = x[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, val; lst)\n\t{\n\t\tret[i] = val[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tret[i] = item[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, sublst; lst)\n\t{\n\t\tresult[i] = sublst[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, val; lst)\n\t{\n\t\tret[i] = val[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result;\n\tforeach (i; 0 .. lst.length) \n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = e[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tint i = 0;\n\tforeach(long[] sublst; lst) {\n\t\tresult[i] = sublst[0];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tret[i] = e[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, element; lst)\n\t{\n\t\tresult[i] = element[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{ \n\tlong[] result = new long[lst.length];\n\tforeach(i, sub; lst)\n\t{\n\t\tresult[i] = sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tres[i] = v[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach (i, item; lst)\n\t{\n\t\tres[i] = item[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(l; lst)\n\t{\n\t\tresult ~= l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length) \n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tresult[i] = v[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tres[i] = item[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, subarray; lst)\n\t{\n\t\tresult[i] = subarray[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, sub; lst)\n\t{\n\t\tresult ~= sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tres[i] = e[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i, sub; lst)\n\t{\n\t\tresult ~= sub[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(idx, elem; lst) \n\t{\n\t\tresult ~= elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, l; lst)\n\t\tres[i] = l[0];\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tfor (int i = 0; i < lst.length; i++)\n\t{\n\t\tresult[i] = lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach (i, l; lst)\n\t{\n\t\tres[i] = l[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, element; lst) \n\t{\n\t\tresult[i] = element[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(l; lst)\n\t{\n\t\tresult ~= l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first element of each subarray.\n*/\nlong[] Extract2(long[][] lst) \n{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first element of each subarray.\n*/\nlong[] Extract3(long[][] lst) \n{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first element of each subarray.\n*/\nlong[] Extract4(long[][] lst) \n{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first element of each subarray.\n*/\nlong[] Extract5(long[][] lst) \n{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first element of each subarray.\n*/\nlong[] Extract6(long[][] lst) \n{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}\n/*\n\tWrite a dthon function to get the first",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tres[i] = e[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tresult[i] = v[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tresult[i] = e[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tres[i] = item[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i, l; lst)\n\t{\n\t\tret[i] = l[0];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, elem; lst)\n\t{\n\t\tresult[i] = elem[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = e[0];\n\t}\n\treturn ret;\n}\n/*\n\tWrite a dthon function to get the last element of each subarray.\n*/\nlong[] ExtractLast(long[][] lst) \n{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = e[e.length-1];\n\t}\n\treturn ret;\n}\n/*\n\tWrite a dthon function to get the maximum element of each subarray.\n*/\nlong[] ExtractMax(long[][] lst) \n{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = max(e);\n\t}\n\treturn ret;\n}\n/*\n\tWrite a dthon function to get the minimum element of each subarray.\n*/\nlong[] ExtractMin(long[][] lst) \n{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = min(e);\n\t}\n\treturn ret;\n}\n/*\n\tWrite a dthon function to get the sum of all elements of each subarray.\n*/\nlong[] ExtractSum(long[][] lst) \n{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = sum(e);\n\t}\n\treturn ret;\n}\n/*\n\tWrite a dthon function to get the average of all elements of each subarray.\n*/\nlong[] ExtractAvg(long[][] lst) \n{\n\tlong[] ret = new long[lst.length];\n\tforeach(i,e; lst)\n\t{\n\t\tret[i] = sum(e)/e.length;\n\t}\n\treturn ret;\n}\n/*",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, subarray; lst)\n\t\tresult[i] = subarray[0];\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, l; lst) \n\t{\n\t\tresult[i] = l[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, el; lst)\n\t{\n\t\tresult[i] = el[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst)\n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach (i, subarray; lst)\n\t\tresult[i] = subarray[0];\n\treturn result;\n}",
    "{\n\tlong[] res = new long[lst.length];\n\tforeach(i, e; lst)\n\t{\n\t\tres[i] = e[0];\n\t}\n\treturn res;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, item; lst) \n\t{\n\t\tresult[i] = item[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tresult ~= lst[i][0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[lst.length];\n\tforeach(i, v; lst)\n\t{\n\t\tresult[i] = v[0];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; lst)\n\t{\n\t\tresult ~= i[0];\n\t}\n\treturn result;\n}"
  ]
}
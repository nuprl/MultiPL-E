{
  "name": "mbpp_805_max_sum_list",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that returns the array in an array of arrays whose sum of elements is the highest.\n\t\n*/\nlong[] max_sum_list(long[][] lists) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = max_sum_list;\n\n    assert(candidate([[1L, 2L, 3L], [4L, 5L, 6L], [10L, 11L, 12L], [7L, 8L, 9L]]) == [10L, 11L, 12L]);\n    assert(candidate([[3L, 2L, 1L], [6L, 5L, 4L], [12L, 11L, 10L]]) == [12L, 11L, 10L]);\n    assert(candidate([[2L, 3L, 1L]]) == [2L, 3L, 1L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong max = 0;\n\tlong[] max_list = new long[];\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max)\n\t\t{\n\t\t\tmax = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong max_sum = 0;\n\tlong[] max_sum_list;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_sum_list = list;\n\t\t}\n\t}\n\treturn max_sum_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long i; list)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong max = 0;\n\tlong[] max_list = new long[];\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max)\n\t\t{\n\t\t\tmax = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong max_sum = 0;\n\tlong[] max_list = new long[0];\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t\tsum += element;\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long i; list)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}"
  ]
}
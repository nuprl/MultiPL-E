{
  "name": "mbpp_77_is_Diff",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0;\n\tlong sum_even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t\t\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint even = 0;\n\tint odd = 0;\n\twhile (n)\n\t{\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmpdm4mb4.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpmpdm4mb4.__unittest_L25_C1() [0x427b29]\n??:? void tmpmpdm4mb4.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile (n > 0)\n\t{\n\t\tif (n % 2 == 0)\n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xmn324v.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp3xmn324v.__unittest_L27_C1() [0x427b0d]\n??:? void tmp3xmn324v.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_sum = 0;\n\tlong even_sum = 0;\n\tlong i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile(n) \n\t{\n\t\tif(i%2 == 0)\n\t\t\todd += n%10;\n\t\telse\n\t\t\teven += n%10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd-even)%11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1, d2;\n\td1 = n % 10;\n\tn /= 10;\n\td2 = n % 10;\n\tn /= 10;\n\twhile (n > 0) {\n\t\td1 -= d2;\n\t\td2 = n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(d1) == d2;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpblel7pyi.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpblel7pyi.__unittest_L21_C1() [0x427afd]\n??:? void tmpblel7pyi.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n) \n\t{\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9mahbk6l.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp9mahbk6l.__unittest_L20_C1() [0x427b0d]\n??:? void tmp9mahbk6l.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd_sum += n % 10;\n\t\t} else {\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n != 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\tint s1 = 0;\n\tint s2 = 0;\n\tint i = 0;\n\tint j = 0;\n\twhile (n > 0) \n\t{\n\t\ts1 += n % 10;\n\t\tn /= 10;\n\t\ts2 += n % 10;\n\t\tn /= 10;\n\t}\n\ts = abs(s1 - s2);\n\tif (s % 11 == 0)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\td = d + n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\td = d - n % 10;\n\t\t}\n\t\ti++;\n\t\tn = n / 10;\n\t}\n\tif (d % 11 == 0) \n\t{\n\t\treturn true;\n\t} \n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "/tmp/tmp501t9uob.d(15): Error: cannot implicitly convert expression `cast(long)d + n % 10L` of type `long` to `int`\n/tmp/tmp501t9uob.d(19): Error: cannot implicitly convert expression `cast(long)d - n % 10L` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp501t9uob.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1, d2;\n\td1 = n % 10;\n\tn /= 10;\n\td2 = n % 10;\n\tn /= 10;\n\tif (n == 0)\n\t\treturn abs(d1 - d2) == 0;\n\treturn abs(d1 - d2) == is_Diff(n);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4msdfypj.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp4msdfypj.__unittest_L18_C1() [0x427af9]\n??:? void tmp4msdfypj.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0, even_sum = 0;\n\twhile (n != 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_even += n % 10;\n\t\t} else {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1, d2;\n\td1 = n % 10;\n\tn /= 10;\n\td2 = n % 10;\n\tn /= 10;\n\twhile (n > 0) {\n\t\td1 -= d2;\n\t\td2 = n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(d1) == d2;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpblel7pyi.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpblel7pyi.__unittest_L21_C1() [0x427afd]\n??:? void tmpblel7pyi.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile (n > 0) \n\t{\n\t\td = n % 10;\n\t\tif (d % 2 == 0) \n\t\t{\n\t\t\tsum1 += d;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum2 += d;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbpnpchqp.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpbpnpchqp.__unittest_L27_C1() [0x427af1]\n??:? void tmpbpnpchqp.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0, sum_even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum += n % 10;\n\t\t}\n\t\telse {\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) {\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t\t\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint i = 0;\n\twhile(n)\n\t{\n\t\td += (n % 10) * pow(-1, i);\n\t\ti++;\n\t\tn /= 10;\n\t}\n\treturn d % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) n = -n;\n\tif (n < 10) return false;\n\tint s1 = 0, s2 = 0;\n\twhile (n > 0) \n\t{\n\t\ts1 += n % 10;\n\t\tn /= 10;\n\t\ts2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s1 - s2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile (n != 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0;\n\tlong sum_even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) {\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd_sum += n % 10;\n\t\t} else {\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1 = n % 10;\n\tint d2 = (n / 10) % 10;\n\tint d3 = (n / 100) % 10;\n\tint d4 = (n / 1000) % 10;\n\tint d5 = (n / 10000) % 10;\n\tint d6 = (n / 100000) % 10;\n\tint d7 = (n / 1000000) % 10;\n\tint d8 = (n / 10000000) % 10;\n\tint d9 = (n / 100000000) % 10;\n\tint d10 = (n / 1000000000) % 10;\n\tint d11 = (n / 10000000000) % 10;\n\tint d12 = (n / 100000000000) % 10;\n\tint d13 = (n / 1000000000000) % 10;\n\tint d14 = (n / 10000000000000) % 10;\n\tint d15 = (n / 100000000000000) % 10;\n\tint d16 = (n / 1000000000000000) % 10;\n\tint d17 = (n / 10000000000000000) % 10;\n\tint d18 = (n / 100000000000000000) % 10;\n\tint d19 = (n / 1000000000000000000) % 10;\n\tint d20 = (n / 10000000000000000000) % 10;\n\tint d21 = (n / 100000000000000000000) % 10;\n\tint d22 = (n / 1000000000000000000000) % 10;\n\tint d23 = (n / 10000000000000000000000) % 10;\n\tint d24 = (n / 100000000000000000000000) % 10;\n\tint d25 = (n / 1000000000000000000000000) % 10;\n\tint d26 = (n / 10000000000000000000000000) % 10;\n\tint d27 = (n / 100000000000000000000000000) % 10;\n\tint d28 = (n / 1000000000000000000000000000) % 10;\n\tint d29 = (n / 10000000000000000000000000000) % 10;\n\tint d30 = (n / 100000000000000000000000000000) % 10;\n\tint d31 = (n / 1000000000000000000000000000000) % 10;\n\tint d32 = (n / 10000000000000000000000000000000) % 10;\n\tint d33 = (n / 100000000000000000000000000000000\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "/tmp/tmp59n_fh99.d(28): Error: signed integer overflow\n/tmp/tmp59n_fh99.d(29): Error: integer overflow\n/tmp/tmp59n_fh99.d(30): Error: integer overflow\n/tmp/tmp59n_fh99.d(31): Error: integer overflow\n/tmp/tmp59n_fh99.d(32): Error: integer overflow\n/tmp/tmp59n_fh99.d(33): Error: integer overflow\n/tmp/tmp59n_fh99.d(34): Error: integer overflow\n/tmp/tmp59n_fh99.d(35): Error: integer overflow\n/tmp/tmp59n_fh99.d(36): Error: integer overflow\n/tmp/tmp59n_fh99.d(37): Error: integer overflow\n/tmp/tmp59n_fh99.d(38): Error: integer overflow\n/tmp/tmp59n_fh99.d(39): Error: integer overflow\n/tmp/tmp59n_fh99.d(40): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: found `unittest` when expecting `)`\n/tmp/tmp59n_fh99.d(43): Error: semicolon expected, not `{`\n/tmp/tmp59n_fh99.d(50): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59n_fh99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\tif (n > 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t\tn /= 10;\n\t\t}\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint evenSum = 0;\n\tint oddSum = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tevenSum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\toddSum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(evenSum - oddSum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint even = 0;\n\tint odd = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\tif(abs(sum - diff) % 11 == 0)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint count = 0;\n\twhile (n != 0) \n\t{\n\t\tif (count % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\tcount++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmple53hxq_.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmple53hxq_.__unittest_L27_C1() [0x427b0d]\n??:? void tmple53hxq_.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0, sum2 = 0;\n\twhile(n > 0) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile(n != 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0) \n        return true; \n  \n    if (n == 1) \n        return false; \n  \n    long odd_digits = 0, even_digits = 0; \n  \n    while (n > 0) \n    { \n        odd_digits += n % 10; \n        n = n / 100; \n  \n        even_digits += n % 10; \n        n = n / 100; \n    } \n  \n    return is_Diff(abs(odd_digits - even_digits)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122609,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) \n    { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) \n        { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122609,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0, sum2 = 0;\n\twhile (n) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_digits += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\tsum1 += n % 10;\n\t\telse\n\t\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n    while (n) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122610,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n != 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd += n % 10;\n\t\t}\n\t\telse {\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\t\n\twhile (n > 0) {\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint even = 0;\n\tint odd = 0;\n\twhile (n) {\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3d9dueq9.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmp3d9dueq9.__unittest_L24_C1() [0x427b29]\n??:? void tmp3d9dueq9.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd = 0;\n\tlong even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tif (n < 10)\n\t\treturn false;\n\t\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile (n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint diff = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\tdiff = abs(sum1 - sum2);\n\t\n\tif(diff % 11 == 0)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigitSum = 0; \n    int evenDigitSum = 0; \n    int count = 0; \n  \n    while (n > 0) { \n        if (count % 2 == 0) \n            evenDigitSum += n % 10; \n        else\n            oddDigitSum += n % 10; \n        n /= 10; \n        count++; \n    } \n  \n    return abs(oddDigitSum - evenDigitSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile(n > 0) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits_sum = 0;\n\tint even_digits_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_digits_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_digits_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\telse {\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile (n != 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_sum = 0;\n\tlong even_sum = 0;\n\tlong i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigits = 0, evenDigits = 0; \n    while (n != 0) { \n        if ((n & 1) != 0) \n            oddDigits++; \n        else\n            evenDigits++; \n        n >>= 1; \n    } \n    return (abs(oddDigits - evenDigits) % 3 == 0); \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx_wn2qve.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpx_wn2qve.__unittest_L21_C1() [0x427ac1]\n??:? void tmpx_wn2qve.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long odd_digits = 0, even_digits = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits (digits at odd places from right) \n    while (n) { \n        odd_digits += n % 10; \n        n /= 100; \n    } \n  \n    // Find sum of even digits (digits at even places from right) \n    n = n / 10; \n    while (n) { \n        even_digits += n % 10; \n        n /= 100; \n    } \n  \n    // If difference is a multiple of 11, then number is divisible by 11 \n    return (abs(odd_digits - even_digits) % 11 == 0); \n} \n  \n// Driver program \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx6tp6qu2.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpx6tp6qu2.__unittest_L33_C1() [0x427b29]\n??:? void tmpx6tp6qu2.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t\t\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint rem;\n\twhile (n != 0) \n\t{\n\t\trem = n % 10;\n\t\tif (rem % 2 == 0) \n\t\t{\n\t\t\teven += rem;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += rem;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphmxiks_9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmphmxiks_9.__unittest_L27_C1() [0x427af1]\n??:? void tmphmxiks_9.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    if (n < 0) \n        n = -n;\n    if (n == 0 || n == 1) \n        return false;\n    long odd_digits = 0, even_digits = 0;\n    while (n > 0) \n    {\n        odd_digits += n % 10;\n        n /= 10;\n        if (n > 0) \n        {\n            even_digits += n % 10;\n            n /= 10;\n        }\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122610,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint sum3 = 0;\n\tint sum4 = 0;\n\tint sum5 = 0;\n\tint sum6 = 0;\n\tint sum7 = 0;\n\tint sum8 = 0;\n\tint sum9 = 0;\n\tint sum10 = 0;\n\tint sum11 = 0;\n\tint sum12 = 0;\n\tint sum13 = 0;\n\tint sum14 = 0;\n\tint sum15 = 0;\n\tint sum16 = 0;\n\tint sum17 = 0;\n\tint sum18 = 0;\n\tint sum19 = 0;\n\tint sum20 = 0;\n\tint sum21 = 0;\n\tint sum22 = 0;\n\tint sum23 = 0;\n\tint sum24 = 0;\n\tint sum25 = 0;\n\tint sum26 = 0;\n\tint sum27 = 0;\n\tint sum28 = 0;\n\tint sum29 = 0;\n\tint sum30 = 0;\n\tint sum31 = 0;\n\tint sum32 = 0;\n\tint sum33 = 0;\n\tint sum34 = 0;\n\tint sum35 = 0;\n\tint sum36 = 0;\n\tint sum37 = 0;\n\tint sum38 = 0;\n\tint sum39 = 0;\n\tint sum40 = 0;\n\tint sum41 = 0;\n\tint sum42 = 0;\n\tint sum43 = 0;\n\tint sum44 = 0;\n\tint sum45 = 0;\n\tint sum46 = 0;\n\tint sum47 = 0;\n\tint sum48 = 0;\n\tint sum49 = 0;\n\tint sum50 = 0;\n\tint sum51 = 0;\n\tint sum52 = 0;\n\tint sum53 = 0;\n\tint sum54 = 0;\n\tint sum55 = 0;\n\tint sum56 = 0;\n\tint sum57 = 0;\n\tint sum58 = 0;\n\tint sum59 = 0;\n\tint sum60 = 0;\n\tint sum61 = 0;\n\tint sum62 = 0;\n\tint sum63 = 0\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpke0s3yhf.d(73): Error: semicolon expected, not `unittest`\n/tmp/tmpke0s3yhf.d(73): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpke0s3yhf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) \n    { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) \n        { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122610,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_even += n % 10;\n\t\t} else {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\twhile (n != 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sumEven = 0;\n\tint sumOdd = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsumEven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsumOdd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sumEven - sumOdd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\tint d = 0;\n\twhile (n > 0) \n\t{\n\t\td = n % 10;\n\t\ts += d;\n\t\tn /= 10;\n\t\td = n % 10;\n\t\ts -= d;\n\t\tn /= 10;\n\t}\n\treturn (s % 11 == 0);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile (n != 0) \n\t{\n\t\td = n % 10;\n\t\tif (d % 2 == 0) \n\t\t{\n\t\t\tsum1 += d;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum2 += d;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ertymul.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp3ertymul.__unittest_L27_C1() [0x427af1]\n??:? void tmp3ertymul.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tif (n < 10) \n\t{\n\t\treturn false;\n\t}\n\tint odd = 0;\n\tint even = 0;\n\twhile (n) \n\t{\n\t\tif (n % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptn_7v5dq.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmptn_7v5dq.__unittest_L33_C1() [0x427b29]\n??:? void tmptn_7v5dq.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0, even_sum = 0;\n\t\n\twhile(n > 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) {\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long odd_dig = 0, even_dig = 0; \n    while (n > 0) { \n        odd_dig += n % 10; \n        n = n / 100; \n        if (n > 0) \n            even_dig += n % 10; \n        n = n / 100; \n    } \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122611,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0, even_sum = 0;\n\t\n\twhile(n > 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int even_digits = 0; \n    int odd_digits = 0; \n    bool is_odd = true; \n  \n    while (n > 0) { \n        if (is_odd) \n            odd_digits += n % 10; \n        else\n            even_digits += n % 10; \n  \n        is_odd = !is_odd; \n        n /= 10; \n    } \n  \n    return abs(odd_digits - even_digits) % 11 == 0; \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile (n > 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\tint t = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\tt += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s - t) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    int oddDigitSum = 0;\n    int evenDigitSum = 0;\n    int count = 0;\n    while (n > 0) \n\t{\n        if (count % 2 == 0) \n\t\t{\n            evenDigitSum += n % 10;\n        } \n\t\telse \n\t\t{\n            oddDigitSum += n % 10;\n        }\n        count++;\n        n /= 10;\n    }\n    return abs(oddDigitSum - evenDigitSum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\t\n\twhile(n > 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile(n > 0) \n\t{\n\t\tif(i % 2 == 0)\n\t\t\todd_sum += n % 10;\n\t\telse\n\t\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong n1 = n;\n\tlong n2 = n;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile(n1 != 0) {\n\t\tsum1 += n1 % 10;\n\t\tn1 /= 10;\n\t\ti++;\n\t\tif(i % 2 == 0) {\n\t\t\tsum2 += n2 % 10;\n\t\t\tn2 /= 10;\n\t\t}\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3ptipdq.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpd3ptipdq.__unittest_L25_C1() [0x427b11]\n??:? void tmpd3ptipdq.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_sum = 0;\n\tlong even_sum = 0;\n\twhile(n > 0) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long oddDigitSum = 0;\n    long evenDigitSum = 0;\n    while (n > 0) \n    {\n        oddDigitSum += n % 10;\n        n /= 10;\n        evenDigitSum += n % 10;\n        n /= 10;\n    }\n    return abs(oddDigitSum - evenDigitSum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1 = n % 10;\n\tint d2 = (n / 10) % 10;\n\t\n\tif (d1 == d2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpprorixuq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmpprorixuq.__unittest_L17_C1() [0x427a46]\n??:? void tmpprorixuq.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1 = n % 10;\n\tint d2 = (n / 10) % 10;\n\tint d3 = (n / 100) % 10;\n\tint d4 = (n / 1000) % 10;\n\tint d5 = (n / 10000) % 10;\n\tint d6 = (n / 100000) % 10;\n\tint d7 = (n / 1000000) % 10;\n\tint d8 = (n / 10000000) % 10;\n\tint d9 = (n / 100000000) % 10;\n\tint d10 = (n / 1000000000) % 10;\n\tint d11 = (n / 10000000000) % 10;\n\tint d12 = (n / 100000000000) % 10;\n\tint d13 = (n / 1000000000000) % 10;\n\tint d14 = (n / 10000000000000) % 10;\n\tint d15 = (n / 100000000000000) % 10;\n\tint d16 = (n / 1000000000000000) % 10;\n\tint d17 = (n / 10000000000000000) % 10;\n\tint d18 = (n / 100000000000000000) % 10;\n\tint d19 = (n / 1000000000000000000) % 10;\n\tint d20 = (n / 10000000000000000000) % 10;\n\tint d21 = (n / 100000000000000000000) % 10;\n\tint d22 = (n / 1000000000000000000000) % 10;\n\tint d23 = (n / 10000000000000000000000) % 10;\n\tint d24 = (n / 100000000000000000000000) % 10;\n\tint d25 = (n / 1000000000000000000000000) % 10;\n\tint d26 = (n / 10000000000000000000000000) % 10;\n\tint d27 = (n / 100000000000000000000000000) % 10;\n\tint d28 = (n / 1000000000000000000000000000) % 10;\n\tint d29 = (n / 10000000000000000000000000000) % 10;\n\tint d30 = (n / 100000000000000000000000000000) % 10;\n\tint d31 = (n / 1000000000000000000000000000000) % 10;\n\tint d32 = (n / 10000000000000000000000000000000) % 10;\n\tint d33 = (n / 100000000000000000000000000000000\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "/tmp/tmp59n_fh99.d(28): Error: signed integer overflow\n/tmp/tmp59n_fh99.d(29): Error: integer overflow\n/tmp/tmp59n_fh99.d(30): Error: integer overflow\n/tmp/tmp59n_fh99.d(31): Error: integer overflow\n/tmp/tmp59n_fh99.d(32): Error: integer overflow\n/tmp/tmp59n_fh99.d(33): Error: integer overflow\n/tmp/tmp59n_fh99.d(34): Error: integer overflow\n/tmp/tmp59n_fh99.d(35): Error: integer overflow\n/tmp/tmp59n_fh99.d(36): Error: integer overflow\n/tmp/tmp59n_fh99.d(37): Error: integer overflow\n/tmp/tmp59n_fh99.d(38): Error: integer overflow\n/tmp/tmp59n_fh99.d(39): Error: integer overflow\n/tmp/tmp59n_fh99.d(40): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: found `unittest` when expecting `)`\n/tmp/tmp59n_fh99.d(43): Error: semicolon expected, not `{`\n/tmp/tmp59n_fh99.d(50): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59n_fh99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile(n > 0) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tsum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1 = n % 10;\n\tint d2 = (n / 10) % 10;\n\tint d3 = (n / 100) % 10;\n\tint d4 = (n / 1000) % 10;\n\tint d5 = (n / 10000) % 10;\n\tint d6 = (n / 100000) % 10;\n\tint d7 = (n / 1000000) % 10;\n\tint d8 = (n / 10000000) % 10;\n\tint d9 = (n / 100000000) % 10;\n\tint d10 = (n / 1000000000) % 10;\n\tint d11 = (n / 10000000000) % 10;\n\tint d12 = (n / 100000000000) % 10;\n\tint d13 = (n / 1000000000000) % 10;\n\tint d14 = (n / 10000000000000) % 10;\n\tint d15 = (n / 100000000000000) % 10;\n\tint d16 = (n / 1000000000000000) % 10;\n\tint d17 = (n / 10000000000000000) % 10;\n\tint d18 = (n / 100000000000000000) % 10;\n\tint d19 = (n / 1000000000000000000) % 10;\n\tint d20 = (n / 10000000000000000000) % 10;\n\tint d21 = (n / 100000000000000000000) % 10;\n\tint d22 = (n / 1000000000000000000000) % 10;\n\tint d23 = (n / 10000000000000000000000) % 10;\n\tint d24 = (n / 100000000000000000000000) % 10;\n\tint d25 = (n / 1000000000000000000000000) % 10;\n\tint d26 = (n / 10000000000000000000000000) % 10;\n\tint d27 = (n / 100000000000000000000000000) % 10;\n\tint d28 = (n / 1000000000000000000000000000) % 10;\n\tint d29 = (n / 10000000000000000000000000000) % 10;\n\tint d30 = (n / 100000000000000000000000000000) % 10;\n\tint d31 = (n / 1000000000000000000000000000000) % 10;\n\tint d32 = (n / 10000000000000000000000000000000) % 10;\n\tint d33 = (n / 100000000000000000000000000000000\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122594,
      "stdout": "",
      "stderr": "/tmp/tmp59n_fh99.d(28): Error: signed integer overflow\n/tmp/tmp59n_fh99.d(29): Error: integer overflow\n/tmp/tmp59n_fh99.d(30): Error: integer overflow\n/tmp/tmp59n_fh99.d(31): Error: integer overflow\n/tmp/tmp59n_fh99.d(32): Error: integer overflow\n/tmp/tmp59n_fh99.d(33): Error: integer overflow\n/tmp/tmp59n_fh99.d(34): Error: integer overflow\n/tmp/tmp59n_fh99.d(35): Error: integer overflow\n/tmp/tmp59n_fh99.d(36): Error: integer overflow\n/tmp/tmp59n_fh99.d(37): Error: integer overflow\n/tmp/tmp59n_fh99.d(38): Error: integer overflow\n/tmp/tmp59n_fh99.d(39): Error: integer overflow\n/tmp/tmp59n_fh99.d(40): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: integer overflow\n/tmp/tmp59n_fh99.d(41): Error: found `unittest` when expecting `)`\n/tmp/tmp59n_fh99.d(43): Error: semicolon expected, not `{`\n/tmp/tmp59n_fh99.d(50): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59n_fh99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\t\n\twhile(n > 0) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0) \n        return true; \n  \n    if (n == 1) \n        return false; \n  \n    long odd_digits = 0, even_digits = 0; \n  \n    while (n != 0) { \n        if ((n & 1) != 0) \n            odd_digits++; \n        else\n            even_digits++; \n  \n        n = n >> 1; \n    } \n  \n    return is_Diff(abs(odd_digits - even_digits)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0sgkjngn.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp0sgkjngn.__unittest_L32_C1() [0x427aca]\n??:? void tmp0sgkjngn.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti += 1;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile (n > 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile(n > 0) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint i1 = 0;\n\tint j1 = 0;\n\tint k1 = 0;\n\tint l1 = 0;\n\tint m1 = 0;\n\tint a1 = 0;\n\tint b1 = 0;\n\tint c1 = 0;\n\tint d1 = 0;\n\tint e1 = 0;\n\tint f1 = 0;\n\tint g1 = 0;\n\tint h1 = 0;\n\tint i2 = 0;\n\tint j2 = 0;\n\tint k2 = 0;\n\tint l2 = 0;\n\tint m2 = 0;\n\tint a2 = 0;\n\tint b2 = 0;\n\tint c2 = 0;\n\tint d2 = 0;\n\tint e2 = 0;\n\tint f2 = 0;\n\tint g2 = 0;\n\tint h2 = 0;\n\tint i3 = 0;\n\tint j3 = 0;\n\tint k3 = 0;\n\tint l3 = 0;\n\tint m3 = 0;\n\tint a3 = 0;\n\tint b3 = 0;\n\tint c3 = 0;\n\tint d3 = 0;\n\tint e3 = 0;\n\tint f3 = 0;\n\tint g3 = 0;\n\tint h3 = 0;\n\tint i4 = 0;\n\tint j4 = 0;\n\tint k4 = 0;\n\tint l4 = 0;\n\tint m4 = 0;\n\tint a4 = 0;\n\tint b4 = 0;\n\tint c4 = 0;\n\tint d4 = 0;\n\tint e4 = 0;\n\tint f4 = 0;\n\tint\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpdizgbww4.d(75): Error: no identifier for declarator `int`\n/tmp/tmpdizgbww4.d(75): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdizgbww4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n) {\n\t\tif (n % 2) odd += n % 10;\n\t\telse even += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn2drs1w0.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpn2drs1w0.__unittest_L17_C1() [0x427b0d]\n??:? void tmpn2drs1w0.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\td = abs(n % 10 - d);\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn d % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmp4khgn5o0.d(13): Error: cannot implicitly convert expression `abs(n % 10L - cast(long)d)` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4khgn5o0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tif (n < 10) \n\t{\n\t\treturn false;\n\t}\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tif (n < 10) \n\t\treturn false;\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0) \n\t\t\teven += n % 10;\n\t\telse \n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpebsx6m23.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpebsx6m23.__unittest_L24_C1() [0x427b29]\n??:? void tmpebsx6m23.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_even += n % 10;\n\t\t} else {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\t\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\t\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tint digit = n % 10;\n\t\tif (digit % 2 == 0) \n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkp9rdgx4.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpkp9rdgx4.__unittest_L26_C1() [0x427aed]\n??:? void tmpkp9rdgx4.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\td = n % 10;\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum1 += d;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum2 += d;\n\t\t}\n\t\tn = n / 10;\n\t\ti++;\n\t}\n\tif (abs(sum1 - sum2) % 11 == 0) \n\t{\n\t\treturn true;\n\t} \n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long even_sum = 0;\n    long odd_sum = 0;\n    long i = 0;\n    while (n > 0) \n    {\n        if (i % 2 == 0) \n        {\n            even_sum += n % 10;\n        } \n        else \n        {\n            odd_sum += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of even and odd digits \n    int even_digits = 0, odd_digits = 0; \n    while (n) { \n        if (n & 1) \n            odd_digits += n % 10; \n        else\n            even_digits += n % 10; \n  \n        n /= 10; \n    } \n  \n    return abs(odd_digits - even_digits) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoiytswfu.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpoiytswfu.__unittest_L25_C1() [0x427b0d]\n??:? void tmpoiytswfu.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) n = -n;\n\tif (n < 10) return false;\n\tint s1 = 0, s2 = 0;\n\twhile (n > 0) \n\t{\n\t\ts1 += n % 10;\n\t\tn /= 10;\n\t\ts2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s1 - s2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\td = n % 10;\n\t\tn /= 10;\n\t\ts += d;\n\t\td = n % 10;\n\t\tn /= 10;\n\t\ts -= d;\n\t}\n\treturn (s % 11 == 0);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        if (n & 1) \n            odd_sum += n % 10; \n        else\n            even_sum += n % 10; \n        n /= 10; \n    } \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkm17kz9c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpkm17kz9c.__unittest_L19_C1() [0x427b01]\n??:? void tmpkm17kz9c.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsfph4oy.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmppsfph4oy.__unittest_L26_C1() [0x427b0d]\n??:? void tmppsfph4oy.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d1 = n % 10;\n\tint d2 = n / 10 % 10;\n\tint d3 = n / 100 % 10;\n\tint d4 = n / 1000 % 10;\n\tint d5 = n / 10000 % 10;\n\tint d6 = n / 100000 % 10;\n\tint d7 = n / 1000000 % 10;\n\tint d8 = n / 10000000 % 10;\n\tint d9 = n / 100000000 % 10;\n\tint d10 = n / 1000000000 % 10;\n\tint d11 = n / 10000000000 % 10;\n\tint d12 = n / 100000000000 % 10;\n\tint d13 = n / 1000000000000 % 10;\n\tint d14 = n / 10000000000000 % 10;\n\tint d15 = n / 100000000000000 % 10;\n\tint d16 = n / 1000000000000000 % 10;\n\tint d17 = n / 10000000000000000 % 10;\n\tint d18 = n / 100000000000000000 % 10;\n\tint d19 = n / 1000000000000000000 % 10;\n\tint d20 = n / 10000000000000000000 % 10;\n\tint d21 = n / 100000000000000000000 % 10;\n\tint d22 = n / 1000000000000000000000 % 10;\n\tint d23 = n / 10000000000000000000000 % 10;\n\tint d24 = n / 100000000000000000000000 % 10;\n\tint d25 = n / 1000000000000000000000000 % 10;\n\tint d26 = n / 10000000000000000000000000 % 10;\n\tint d27 = n / 100000000000000000000000000 % 10;\n\tint d28 = n / 1000000000000000000000000000 % 10;\n\tint d29 = n / 10000000000000000000000000000 % 10;\n\tint d30 = n / 100000000000000000000000000000 % 10;\n\tint d31 = n / 1000000000000000000000000000000 % 10;\n\tint d32 = n / 10000000000000000000000000000000 % 10;\n\tint d33 = n / 100000000000000000000000000000000 % 10;\n\tint d34 = n / 1000000000000000000000000000000000 % 10;\n\tint d35 = n / 10000000000000000000000000000000000 % 10;\n\tint d36 = n / 100000000000000000000000000000000000 % 10;\n\tint d37 = n / 1000000000000000000000000000000000000 % 10;\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmp7qvrafrk.d(28): Error: signed integer overflow\n/tmp/tmp7qvrafrk.d(29): Error: integer overflow\n/tmp/tmp7qvrafrk.d(30): Error: integer overflow\n/tmp/tmp7qvrafrk.d(31): Error: integer overflow\n/tmp/tmp7qvrafrk.d(32): Error: integer overflow\n/tmp/tmp7qvrafrk.d(33): Error: integer overflow\n/tmp/tmp7qvrafrk.d(34): Error: integer overflow\n/tmp/tmp7qvrafrk.d(35): Error: integer overflow\n/tmp/tmp7qvrafrk.d(36): Error: integer overflow\n/tmp/tmp7qvrafrk.d(37): Error: integer overflow\n/tmp/tmp7qvrafrk.d(38): Error: integer overflow\n/tmp/tmp7qvrafrk.d(39): Error: integer overflow\n/tmp/tmp7qvrafrk.d(40): Error: integer overflow\n/tmp/tmp7qvrafrk.d(41): Error: integer overflow\n/tmp/tmp7qvrafrk.d(42): Error: integer overflow\n/tmp/tmp7qvrafrk.d(43): Error: integer overflow\n/tmp/tmp7qvrafrk.d(44): Error: integer overflow\n/tmp/tmp7qvrafrk.d(45): Error: integer overflow\n/tmp/tmp7qvrafrk.d(46): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7qvrafrk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong i = 0;\n\tlong odd = 0;\n\tlong even = 0;\n\twhile(n) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long odd_digits = 0, even_digits = 0; \n    while (n > 0) { \n        if (n & 1) \n            odd_digits += n % 10; \n        else\n            even_digits += n % 10; \n        n /= 10; \n    } \n    return (odd_digits - even_digits) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_tddbwe8.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp_tddbwe8.__unittest_L19_C1() [0x427ab5]\n??:? void tmp_tddbwe8.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong d = 0;\n\twhile (n > 0) {\n\t\td = d + n % 10;\n\t\tn = n / 10;\n\t\td = d - n % 10;\n\t\tn = n / 10;\n\t}\n\tif (d == 0)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile(n) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_odd += n % 10;\n\t\t} else {\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif(n < 0) n = -n;\n\tif(n < 10) return false;\n\tint odd = 0;\n\tint even = 0;\n\twhile(n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0, even_sum = 0;\n\t\n\twhile(n)\n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\teven += n % 10;\n\t\t}\n\t\telse {\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum1 = 0, sum2 = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\t\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 10) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong odd = 0;\n\t\tlong even = 0;\n\t\twhile (n > 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t\tn /= 10;\n\t\t\teven += n % 10;\n\t\t\tn /= 10;\n\t\t}\n\t\treturn is_Diff(abs(odd - even));\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpen2ugypk.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpen2ugypk.__unittest_L27_C1() [0x427ad6]\n??:? void tmpen2ugypk.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum = 0;\n\tlong diff = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint sum3 = 0;\n\tint sum4 = 0;\n\tint sum5 = 0;\n\tint sum6 = 0;\n\tint sum7 = 0;\n\tint sum8 = 0;\n\tint sum9 = 0;\n\tint sum10 = 0;\n\tint sum11 = 0;\n\tint sum12 = 0;\n\tint sum13 = 0;\n\tint sum14 = 0;\n\tint sum15 = 0;\n\tint sum16 = 0;\n\tint sum17 = 0;\n\tint sum18 = 0;\n\tint sum19 = 0;\n\tint sum20 = 0;\n\tint sum21 = 0;\n\tint sum22 = 0;\n\tint sum23 = 0;\n\tint sum24 = 0;\n\tint sum25 = 0;\n\tint sum26 = 0;\n\tint sum27 = 0;\n\tint sum28 = 0;\n\tint sum29 = 0;\n\tint sum30 = 0;\n\tint sum31 = 0;\n\tint sum32 = 0;\n\tint sum33 = 0;\n\tint sum34 = 0;\n\tint sum35 = 0;\n\tint sum36 = 0;\n\tint sum37 = 0;\n\tint sum38 = 0;\n\tint sum39 = 0;\n\tint sum40 = 0;\n\tint sum41 = 0;\n\tint sum42 = 0;\n\tint sum43 = 0;\n\tint sum44 = 0;\n\tint sum45 = 0;\n\tint sum46 = 0;\n\tint sum47 = 0;\n\tint sum48 = 0;\n\tint sum49 = 0;\n\tint sum50 = 0;\n\tint sum51 = 0;\n\tint sum52 = 0;\n\tint sum53 = 0;\n\tint sum54 = 0;\n\tint sum55 = 0;\n\tint sum56 = 0;\n\tint sum57 = 0;\n\tint sum58 = 0;\n\tint sum59 = 0;\n\tint sum60 = 0;\n\tint sum61 = 0;\n\tint sum62 = 0;\n\tint sum63 = 0\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpke0s3yhf.d(73): Error: semicolon expected, not `unittest`\n/tmp/tmpke0s3yhf.d(73): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpke0s3yhf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigits = 0, evenDigits = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Count even and odd digits \n    while (n > 0) { \n        if ((n & 1) == 0) \n            evenDigits++; \n        else\n            oddDigits++; \n        n = n >> 1; \n    } \n  \n    return (abs(oddDigits - evenDigits) % 3 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsbdbt162.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpsbdbt162.__unittest_L26_C1() [0x427ad9]\n??:? void tmpsbdbt162.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd_sum += n % 10;\n\t\t} else {\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint l = n % 10;\n\tint r = n / 10;\n\tif (n < 10)\n\t\treturn false;\n\tif (l - r == 0)\n\t\treturn true;\n\treturn is_Diff(abs(l - r));\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpbhf03g9u.d(10): Error: cannot implicitly convert expression `n / 10L` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhf03g9u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tif (n < 10)\n\t\treturn false;\n\t\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\t\n\tfor (int i = 0; i < n.digits; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\todd_sum += n.digits[i];\n\t\telse\n\t\t\teven_sum += n.digits[i];\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpkwlhy1hw.d(18): Error: no property `digits` for type `long`\n/tmp/tmpkwlhy1hw.d(21): Error: no property `digits` for type `long`\n/tmp/tmpkwlhy1hw.d(23): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwlhy1hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile(n > 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile(n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0) \n        return true; \n  \n    if (n == 1) \n        return false; \n  \n    long odd_digits = 0, even_digits = 0; \n  \n    while (n != 0) { \n  \n        if ((n & 1) == 1) \n            odd_digits++; \n  \n        n = n >> 1; \n  \n        if ((n & 1) == 1) \n            even_digits++; \n  \n        n = n >> 1; \n    } \n  \n    return is_Diff(abs(odd_digits - even_digits)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiibf_3_1.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpiibf_3_1.__unittest_L36_C1() [0x427af6]\n??:? void tmpiibf_3_1.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd = 0, even = 0;\n\twhile(n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\tif(n > 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t\tn /= 10;\n\t\t}\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) n = -n;\n\tif (n < 10) return false;\n\tint s1 = 0, s2 = 0;\n\twhile (n > 0) \n\t{\n\t\ts1 += n % 10;\n\t\tn /= 10;\n\t\ts2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s1 - s2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint d = 0;\n\twhile (n > 0) \n\t{\n\t\td = abs(d + n % 10 - (n / 10) % 10);\n\t\tn /= 100;\n\t}\n\treturn d % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp9cdprh7e.d(12): Error: cannot implicitly convert expression `abs(cast(long)d + n % 10L - n / 10L % 10L)` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9cdprh7e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    if (n < 0) \n        n = -n;\n    if (n == 0 || n == 1) \n        return false;\n    long odd_digits = 0, even_digits = 0;\n    while (n > 0) \n    {\n        odd_digits += n % 10;\n        n /= 10;\n        if (n > 0) \n        {\n            even_digits += n % 10;\n            n /= 10;\n        }\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122610,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile(n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        even_sum += n % 10; \n        n /= 10; \n        odd_sum += n % 10; \n        n /= 10; \n    } \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n != 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn (s == 0);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0, sum_even = 0;\n\twhile (n > 0) \n\t{\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n > 0) \n\t{\n        odd_digits += n % 10;\n        n /= 10;\n        even_digits += n % 10;\n        n /= 10;\n    }\n    return (odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\tint t = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\tt += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s - t) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint n1 = 0;\n\tint n2 = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tn1 += n % 10;\n\t\tn /= 10;\n\t\tn2 += n % 10;\n\t\tn /= 10;\n\t}\n\tdiff = abs(n1 - n2);\n\tif(diff == 0 || diff == 11)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0, even_sum = 0;\n\twhile(n) \n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
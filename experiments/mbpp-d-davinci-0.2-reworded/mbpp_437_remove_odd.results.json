{
  "name": "mbpp_437_remove_odd",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_437_remove_odd.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpic5oue3k.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpic5oue3k.__unittest_L21_C1() [0x427b5a]\n??:? void tmpic5oue3k.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu4qkxs5p.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpu4qkxs5p.__unittest_L20_C1() [0x427b66]\n??:? void tmpu4qkxs5p.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4d2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430358]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a9]\n??:? runModuleUnitTests [0x42c399]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42837c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczv0pguw.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpczv0pguw.__unittest_L18_C1() [0x427b5a]\n??:? void tmpczv0pguw.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqpx9jadb.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpqpx9jadb.__unittest_L20_C1() [0x427b5e]\n??:? void tmpqpx9jadb.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmpms53_55j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms53_55j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i%2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpen57xuce.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpen57xuce.__unittest_L18_C1() [0x427b5e]\n??:? void tmpen57xuce.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach (immutable i, immutable c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvzrbhiok.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpvzrbhiok.__unittest_L20_C1() [0x427b5e]\n??:? void tmpvzrbhiok.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvtijjrcm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpvtijjrcm.__unittest_L20_C1() [0x427b5a]\n??:? void tmpvtijjrcm.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvnc4duza.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpvnc4duza.__unittest_L22_C1() [0x427b66]\n??:? void tmpvnc4duza.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4d2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430358]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a9]\n??:? runModuleUnitTests [0x42c399]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42837c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu8pngsrb.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpu8pngsrb.__unittest_L21_C1() [0x427b5a]\n??:? void tmpu8pngsrb.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvnc4duza.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpvnc4duza.__unittest_L22_C1() [0x427b66]\n??:? void tmpvnc4duza.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4d2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430358]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a9]\n??:? runModuleUnitTests [0x42c399]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42837c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) {\n\t\tif(i % 2 == 0) {\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2x7q8v32.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp2x7q8v32.__unittest_L18_C1() [0x427b5a]\n??:? void tmp2x7q8v32.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpassdvux1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpassdvux1.__unittest_L21_C1() [0x427b5a]\n??:? void tmpassdvux1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphp2zl626.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmphp2zl626.__unittest_L23_C1() [0x427b5a]\n??:? void tmphp2zl626.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i,ch;str1)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplryfz7vy.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmplryfz7vy.__unittest_L20_C1() [0x427b5a]\n??:? void tmplryfz7vy.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmpms53_55j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms53_55j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6qdpl1k7.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp6qdpl1k7.__unittest_L18_C1() [0x427b5a]\n??:? void tmp6qdpl1k7.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmp_rq5r6re.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rq5r6re.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczv0pguw.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpczv0pguw.__unittest_L18_C1() [0x427b5a]\n??:? void tmpczv0pguw.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif((i % 2) == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ircjhqt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp3ircjhqt.__unittest_L20_C1() [0x427b5e]\n??:? void tmp3ircjhqt.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfkbur5c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpbfkbur5c.__unittest_L20_C1() [0x427b5a]\n??:? void tmpbfkbur5c.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp04lb8tyk.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp04lb8tyk.__unittest_L20_C1() [0x427b5e]\n??:? void tmp04lb8tyk.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6cy0ws44.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp6cy0ws44.__unittest_L20_C1() [0x427b5a]\n??:? void tmp6cy0ws44.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczv0pguw.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpczv0pguw.__unittest_L18_C1() [0x427b5a]\n??:? void tmpczv0pguw.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit && c.to!int % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmpv1seajp_.d(13): Error: no property `isDigit` for type `immutable(char)`\n/tmp/tmpv1seajp_.d(13): Error: no property `to` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv1seajp_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp87xptp2g.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp87xptp2g.__unittest_L22_C1() [0x427b5e]\n??:? void tmp87xptp2g.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c62f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b53e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fea1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b515]\n??:? runModuleUnitTests [0x42c405]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6qdpl1k7.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp6qdpl1k7.__unittest_L18_C1() [0x427b5a]\n??:? void tmp6qdpl1k7.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "/tmp/tmp6506r8v9.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6506r8v9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\t\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpznubw0_1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpznubw0_1.__unittest_L20_C1() [0x427b5e]\n??:? void tmpznubw0_1.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable(char) c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "/tmp/tmpec9d5pj9.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpec9d5pj9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwyps33zq.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpwyps33zq.__unittest_L20_C1() [0x427b5a]\n??:? void tmpwyps33zq.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i += 2)\n\t{\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp33u5qw2x.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmp33u5qw2x.__unittest_L18_C1() [0x427b4e]\n??:? void tmp33u5qw2x.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c61f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b52e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b505]\n??:? runModuleUnitTests [0x42c3f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvnc4duza.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpvnc4duza.__unittest_L22_C1() [0x427b66]\n??:? void tmpvnc4duza.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4d2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430358]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a9]\n??:? runModuleUnitTests [0x42c399]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42837c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmpms53_55j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms53_55j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczv0pguw.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpczv0pguw.__unittest_L18_C1() [0x427b5a]\n??:? void tmpczv0pguw.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4u5y3bwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4u5y3bwj.__unittest_L20_C1() [0x427b5a]\n??:? void tmp4u5y3bwj.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach (immutable i, immutable c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczomsmrh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpczomsmrh.__unittest_L18_C1() [0x427b5e]\n??:? void tmpczomsmrh.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5qwnos9c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp5qwnos9c.__unittest_L21_C1() [0x427b5a]\n??:? void tmp5qwnos9c.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphp2zl626.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmphp2zl626.__unittest_L23_C1() [0x427b5a]\n??:? void tmphp2zl626.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i=0;i<str1.length;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2~=str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeciodzip.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpeciodzip.__unittest_L21_C1() [0x427b5a]\n??:? void tmpeciodzip.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfkbur5c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpbfkbur5c.__unittest_L20_C1() [0x427b5a]\n??:? void tmpbfkbur5c.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6v4i_hlr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6v4i_hlr.__unittest_L20_C1() [0x427b5e]\n??:? void tmp6v4i_hlr.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa8erbwjt.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpa8erbwjt.__unittest_L19_C1() [0x427b5a]\n??:? void tmpa8erbwjt.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaq8y04s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaq8y04s8.__unittest_L18_C1() [0x427b5e]\n??:? void tmpaq8y04s8.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwyps33zq.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpwyps33zq.__unittest_L20_C1() [0x427b5a]\n??:? void tmpwyps33zq.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\t\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaol34z5u.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpaol34z5u.__unittest_L22_C1() [0x427b5e]\n??:? void tmpaol34z5u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbfoafwzm.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpbfoafwzm.__unittest_L18_C1() [0x427b5a]\n??:? void tmpbfoafwzm.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6qdpl1k7.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp6qdpl1k7.__unittest_L18_C1() [0x427b5a]\n??:? void tmp6qdpl1k7.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiz4wbmm7.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpiz4wbmm7.__unittest_L21_C1() [0x427b5a]\n??:? void tmpiz4wbmm7.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i=0;i<str1.length;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpepcbucm6.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpepcbucm6.__unittest_L21_C1() [0x427b5a]\n??:? void tmpepcbucm6.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach (i, c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbstt2unh.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpbstt2unh.__unittest_L20_C1() [0x427b5a]\n??:? void tmpbstt2unh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bz560da.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp1bz560da.__unittest_L20_C1() [0x427b5a]\n??:? void tmp1bz560da.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf1kot5wo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpf1kot5wo.__unittest_L20_C1() [0x427b5e]\n??:? void tmpf1kot5wo.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c62f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b53e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fea1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b515]\n??:? runModuleUnitTests [0x42c405]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach (immutable i, immutable c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczomsmrh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpczomsmrh.__unittest_L18_C1() [0x427b5e]\n??:? void tmpczomsmrh.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxmefyzl2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpxmefyzl2.__unittest_L18_C1() [0x427b5a]\n??:? void tmpxmefyzl2.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "/tmp/tmpms53_55j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms53_55j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5qwnos9c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp5qwnos9c.__unittest_L21_C1() [0x427b5a]\n??:? void tmp5qwnos9c.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5qwnos9c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp5qwnos9c.__unittest_L21_C1() [0x427b5a]\n??:? void tmp5qwnos9c.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517491,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcwmvnsa4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpcwmvnsa4.__unittest_L20_C1() [0x427b5a]\n??:? void tmpcwmvnsa4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8902o1d.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpz8902o1d.__unittest_L20_C1() [0x427b5e]\n??:? void tmpz8902o1d.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcv5ytx2u.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpcv5ytx2u.__unittest_L20_C1() [0x427b5e]\n??:? void tmpcv5ytx2u.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprfjs1e5i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmprfjs1e5i.__unittest_L18_C1() [0x427b5e]\n??:? void tmprfjs1e5i.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwyps33zq.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpwyps33zq.__unittest_L20_C1() [0x427b5a]\n??:? void tmpwyps33zq.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy9smhbsr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy9smhbsr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy9smhbsr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
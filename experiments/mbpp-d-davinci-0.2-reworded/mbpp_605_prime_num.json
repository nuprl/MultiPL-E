{
  "name": "mbpp_605_prime_num",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check if the given integer is a prime number.\n\t\n*/\nbool prime_num(long num) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_605_prime_num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = prime_num;\n\n    assert(candidate(13L) == true);\n    assert(candidate(7L) == true);\n    assert(candidate(-1010L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (num <= 1) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (num == 2) \n\t{\n\t\treturn true;\n\t}\n\t\n\tif (num % 2 == 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong i = 3;\n\t\n\twhile (i <= sqrt(num)) \n\t{\n\t\tif (num % i == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\ti += 2;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1)\n\t\treturn false;\n\telse if (num == 2)\n\t\treturn true;\n\telse if (num % 2 == 0)\n\t\treturn false;\n\telse\n\t{\n\t\tlong i = 3;\n\t\twhile (i <= sqrt(num))\n\t\t{\n\t\t\tif (num % i == 0)\n\t\t\t\treturn false;\n\t\t\ti += 2;\n\t\t}\n\t\treturn true;\n\t}\n}",
    "{\n\tif (num <= 1) \n\t\treturn false;\n\telse if (num == 2) \n\t\treturn true;\n\telse if (num % 2 == 0) \n\t\treturn false;\n\telse \n\t{\n\t\tlong i = 3;\n\t\twhile (i <= sqrt(num)) \n\t\t{\n\t\t\tif (num % i == 0) \n\t\t\t\treturn false;\n\t\t\ti += 2;\n\t\t}\n\t\treturn true;\n\t}\n}",
    "{\n\tif (num == 1)\n\t\treturn false;\n\t\n\tif (num == 2)\n\t\treturn true;\n\t\n\tif (num % 2 == 0)\n\t\treturn false;\n\t\n\tfor (long i = 3; i < num; i += 2)\n\t{\n\t\tif (num % i == 0)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num < 2)\n\t\treturn false;\n\telse if (num == 2)\n\t\treturn true;\n\telse if (num % 2 == 0)\n\t\treturn false;\n\telse\n\t{\n\t\tlong max = cast(long)sqrt(num);\n\t\tfor (long i = 3; i <= max; i += 2)\n\t\t{\n\t\t\tif (num % i == 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}",
    "{\n\tif (num <= 1) \n\t{\n\t\treturn false;\n\t}\n\telse if (num <= 3) \n\t{\n\t\treturn true;\n\t}\n\telse if (num % 2 == 0 || num % 3 == 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tfor (long i = 5; i * i <= num; i += 6) \n\t\t{\n\t\t\tif (num % i == 0 || num % (i + 2) == 0) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}",
    "{\n\tif (num <= 1) {\n\t\treturn false;\n\t}\n\t\n\tif (num == 2) {\n\t\treturn true;\n\t}\n\t\n\tif (num % 2 == 0) {\n\t\treturn false;\n\t}\n\t\n\tfor (long i = 3; i <= sqrt(num); i += 2) {\n\t\tif (num % i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1)\n\t\treturn false;\n\t\n\tif (num == 2)\n\t\treturn true;\n\t\n\tif (num % 2 == 0)\n\t\treturn false;\n\t\n\tfor (long i = 3; i < sqrt(num) + 1; i += 2)\n\t{\n\t\tif (num % i == 0)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num < 2) return false;\n\tif (num == 2) return true;\n\tif (num % 2 == 0) return false;\n\t\n\tlong max = cast(long)sqrt(num);\n\t\n\tfor (long i = 3; i <= max; i += 2) \n\t{\n\t\tif (num % i == 0) return false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1) \n\t{\n\t\treturn false;\n\t}\n\telse if (num <= 3) \n\t{\n\t\treturn true;\n\t}\n\telse if (num % 2 == 0 || num % 3 == 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong i = 5;\n\twhile (i * i <= num) \n\t{\n\t\tif (num % i == 0 || num % (i + 2) == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti = i + 6;\n\t}\n\treturn true;\n}",
    "{\n\tif (num < 2) return false;\n\tif (num == 2) return true;\n\tif (num % 2 == 0) return false;\n\t\n\tfor (long i = 3; i <= sqrt(num); i += 2) {\n\t\tif (num % i == 0) return false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1)\n\t\treturn false;\n\telse if (num <= 3)\n\t\treturn true;\n\telse if (num % 2 == 0 || num % 3 == 0)\n\t\treturn false;\n\t\n\tlong i = 5;\n\twhile (i * i <= num) {\n\t\tif (num % i == 0 || num % (i + 2) == 0)\n\t\t\treturn false;\n\t\ti += 6;\n\t}\n\treturn true;\n}",
    "{\n\tif (num < 2) \n\t\treturn false;\n\t\n\tif (num == 2) \n\t\treturn true;\n\t\n\tif (num % 2 == 0) \n\t\treturn false;\n\t\n\tfor (long i = 3; i <= sqrt(num); i += 2) \n\t{\n\t\tif (num % i == 0) \n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num < 2) \n\t\treturn false;\n\t\n\tfor (long i = 2; i < num; i++) \n\t{\n\t\tif (num % i == 0) \n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num < 2)\n\t\treturn false;\n\t\n\tfor (long i = 2; i < num; i++)\n\t{\n\t\tif (num % i == 0)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1)\n\t\treturn false;\n\telse if (num <= 3)\n\t\treturn true;\n\telse if (num % 2 == 0 || num % 3 == 0)\n\t\treturn false;\n\t\n\tlong i = 5;\n\twhile (i * i <= num)\n\t{\n\t\tif (num % i == 0 || num % (i + 2) == 0)\n\t\t\treturn false;\n\t\ti += 6;\n\t}\n\treturn true;\n}",
    "{\n\tif (num < 2) return false;\n\tif (num == 2) return true;\n\tif (num % 2 == 0) return false;\n\t\n\tfor (long i = 3; i <= sqrt(num); i += 2) \n\t{\n\t\tif (num % i == 0) return false;\n\t}\n\treturn true;\n}",
    "{\n\tif (num <= 1) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (num == 2) \n\t{\n\t\treturn true;\n\t}\n\t\n\tif (num % 2 == 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tfor (long i = 3; i <= sqrt(num); i += 2) \n\t{\n\t\tif (num % i == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif(num < 2)\n\t\treturn false;\n\t\n\tif(num == 2)\n\t\treturn true;\n\t\n\tif(num % 2 == 0)\n\t\treturn false;\n\t\n\tfor(long i = 3; i <= sqrt(num); i += 2)\n\t{\n\t\tif(num % i == 0)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (num <= 1) \n\t\treturn false;\n\telse if (num <= 3) \n\t\treturn true;\n\telse if (num % 2 == 0 || num % 3 == 0) \n\t\treturn false;\n\t\n\tlong i = 5;\n\twhile (i * i <= num) \n\t{\n\t\tif (num % i == 0 || num % (i + 2) == 0) \n\t\t\treturn false;\n\t\ti += 6;\n\t}\n\treturn true;\n}"
  ]
}
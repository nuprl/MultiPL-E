{
  "name": "mbpp_784_mul_even_odd",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile(j < list1.length)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tj++;\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1) \n\t{\n\t\tif (i % 2 != 0) \n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile(j < list1.length)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(even == 0)\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse if(odd == 0)\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0t0_m_zt.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmp0t0_m_zt.__unittest_L41_C1() [0x427e1e]\n??:? void tmp0t0_m_zt.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b012]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430654]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe9]\n??:? runModuleUnitTests [0x42bf55]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong product = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j; list1)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd_num = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tproduct = even_num * odd_num;\n\t\n\treturn product;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(l; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = l;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = l;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_5xe9cb8.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp_5xe9cb8.__unittest_L36_C1() [0x427dfa]\n??:? void tmp_5xe9cb8.__modtest() [0x427ef0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong product = 0;\n\tint i = 0;\n\tforeach(element; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = element;\n\t\t\ti = 1;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = element;\n\t\t\ti = 0;\n\t\t}\n\t}\n\tproduct = even * odd;\n\treturn product;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkxdc9y26.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpkxdc9y26.__unittest_L30_C1() [0x427e02]\n??:? void tmpkxdc9y26.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long item; list1)\n\t{\n\t\tif(i == 0)\n\t\t\teven = item;\n\t\telse if(i == 1)\n\t\t\todd = item;\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjm2t66ye.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpjm2t66ye.__unittest_L25_C1() [0x427df6]\n??:? void tmpjm2t66ye.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 1)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tfor(; i < list1.length; i++)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(; i < list1.length; i++)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo5rw_1e2.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x428205]\n??:? void tmpo5rw_1e2.__unittest_L31_C1() [0x427f17]\n??:? void tmpo5rw_1e2.__modtest() [0x427f84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c263]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430289]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430738]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430215]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0cd]\n??:? runModuleUnitTests [0x42c039]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint even_count = 0;\n\tint odd_count = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\teven_count++;\n\t\t\tif(even_count == 1)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t\tif(odd_count == 1)\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven_num = num;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd_num = num;\n\t\t}\n\t\ti++;\n\t}\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfansglwl.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpfansglwl.__unittest_L27_C1() [0x427df6]\n??:? void tmpfansglwl.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong product = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = num;\n\t\t\tj++;\n\t\t}\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tproduct = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn product;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgo69ubkx.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpgo69ubkx.__unittest_L36_C1() [0x427e26]\n??:? void tmpgo69ubkx.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c187]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43065c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff1]\n??:? runModuleUnitTests [0x42bf5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdpv3hdi4.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpdpv3hdi4.__unittest_L30_C1() [0x427e4a]\n??:? void tmpdpv3hdi4.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i;0..list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j;0..list1.length)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsk038_5e.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpsk038_5e.__unittest_L35_C1() [0x427e4a]\n??:? void tmpsk038_5e.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong mul = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = list1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_num = list1[i];\n\t\t}\n\t}\n\tmul = even_num * odd_num;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps4ectv21.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmps4ectv21.__unittest_L27_C1() [0x427e22]\n??:? void tmps4ectv21.__modtest() [0x427f18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b086]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430219]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b05d]\n??:? runModuleUnitTests [0x42bfc9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428658]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf447c2nf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpf447c2nf.__unittest_L29_C1() [0x427df6]\n??:? void tmpf447c2nf.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0a_kbrgq.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmp0a_kbrgq.__unittest_L29_C1() [0x427e46]\n??:? void tmp0a_kbrgq.__modtest() [0x427f3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43067c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430159]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b011]\n??:? runModuleUnitTests [0x42bf7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42860c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = item;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = item;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8weh5mu8.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp8weh5mu8.__unittest_L31_C1() [0x427df6]\n??:? void tmp8weh5mu8.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i;list1)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i;list1)\n\t{\n\t\tif(i%2!=0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tint even_index = 0;\n\tint odd_index = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven_index = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd_index = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn list1[even_index] * list1[odd_index];\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122827,
      "stdout": "",
      "stderr": "/tmp/tmpvuvk5qi4.d(17): Error: cannot implicitly convert expression `i` of type `ulong` to `int`\n/tmp/tmpvuvk5qi4.d(26): Error: cannot implicitly convert expression `i` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvuvk5qi4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122827,
      "stdout": "",
      "stderr": "/tmp/tmprv1b1_lq.d(17): Error: cannot implicitly convert expression `list1[cast(ulong)i]` of type `long` to `int`\n/tmp/tmprv1b1_lq.d(27): Error: cannot implicitly convert expression `list1[cast(ulong)i]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprv1b1_lq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfj4n70co.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpfj4n70co.__unittest_L29_C1() [0x427e4a]\n??:? void tmpfj4n70co.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tj = i;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\twhile(j < list1.length)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tk = j;\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\t\n\twhile(k < list1.length)\n\t{\n\t\tif(list1[k] % 2 == 0)\n\t\t{\n\t\t\teven = list1[k];\n\t\t\tl = k;\n\t\t\tbreak;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(l < list1.length)\n\t{\n\t\tif(list1[l] % 2 != 0)\n\t\t{\n\t\t\todd = list1[l];\n\t\t\tbreak;\n\t\t}\n\t\tl++;\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpydit3rft.d(66): unittest failure\n----------------\n??:? _d_unittestp [0x428315]\n??:? void tmpydit3rft.__unittest_L62_C1() [0x427f9e]\n??:? void tmpydit3rft.__modtest() [0x428094]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c373]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b206]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430399]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430848]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430325]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1dd]\n??:? runModuleUnitTests [0x42c149]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122827,
      "stdout": "",
      "stderr": "/tmp/tmpmymmun99.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpmymmun99.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmymmun99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(item; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = even + item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = odd + item;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpln775w2j.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpln775w2j.__unittest_L27_C1() [0x427e02]\n??:? void tmpln775w2j.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphy08paws.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmphy08paws.__unittest_L36_C1() [0x427e5a]\n??:? void tmphy08paws.__modtest() [0x427f50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\tforeach(i, list1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j, list1)\n\t{\n\t\tif (j % 2 != 0)\n\t\t{\n\t\t\todd = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122827,
      "stdout": "",
      "stderr": "/tmp/tmp8w8segso.d(18): Error: no identifier for declarator `list1`\n/tmp/tmp8w8segso.d(18): Error: found `)` when expecting `;`\n/tmp/tmp8w8segso.d(27): Error: found `foreach` when expecting `)`\n/tmp/tmp8w8segso.d(36): Error: found `result` when expecting `;` following statement\n/tmp/tmp8w8segso.d(36): Error: found `=` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8w8segso.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\t\n\twhile (i < list1.length)\n\t{\n\t\tif (list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\ti = 0;\n\twhile (i < list1.length)\n\t{\n\t\tif (list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = even * elem;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = odd * elem;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqc3t7nhc.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpqc3t7nhc.__unittest_L27_C1() [0x427e02]\n??:? void tmpqc3t7nhc.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr28cuuuo.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpr28cuuuo.__unittest_L36_C1() [0x427e4a]\n??:? void tmpr28cuuuo.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = list1[i];\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmw932gn4.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmpmw932gn4.__unittest_L26_C1() [0x427e1e]\n??:? void tmpmw932gn4.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b086]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430219]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b05d]\n??:? runModuleUnitTests [0x42bfc9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428658]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpitp0f1hc.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpitp0f1hc.__unittest_L31_C1() [0x427df6]\n??:? void tmpitp0f1hc.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong mul = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven_num = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd_num = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even_num * odd_num;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(x % 2 == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = x;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tmul = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6yyh9hud.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmp6yyh9hud.__unittest_L38_C1() [0x427e1e]\n??:? void tmp6yyh9hud.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b012]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430654]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe9]\n??:? runModuleUnitTests [0x42bf55]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(isEven(num))\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpjh0s6578.d(28): Error: undefined identifier `isEven`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjh0s6578.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmptvdya0yg.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmptvdya0yg.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvdya0yg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint flag = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(flag == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tflag = 1;\n\t\t}\n\t\telse if(flag == 1)\n\t\t{\n\t\t\todd = i;\n\t\t\tflag = 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm2mab39r.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpm2mab39r.__unittest_L34_C1() [0x427e02]\n??:? void tmpm2mab39r.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = num;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd7qin0hv.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x428185]\n??:? void tmpd7qin0hv.__unittest_L36_C1() [0x427e12]\n??:? void tmpd7qin0hv.__modtest() [0x427f08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c16f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b002]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430195]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430644]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430121]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afd9]\n??:? runModuleUnitTests [0x42bf45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg_azetnz.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpg_azetnz.__unittest_L34_C1() [0x427e56]\n??:? void tmpg_azetnz.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even_num * odd_num;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(even == 0 && odd == 0)\n\t\t\t{\n\t\t\t\tif(num % 2 == 0)\n\t\t\t\t{\n\t\t\t\t\teven = num;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\todd = num;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(even == 0)\n\t\t\t{\n\t\t\t\tif(num % 2 == 0)\n\t\t\t\t{\n\t\t\t\t\teven = num;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(odd == 0)\n\t\t\t{\n\t\t\t\tif(num % 2 != 0)\n\t\t\t\t{\n\t\t\t\t\todd = num;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1nwzwqh0.d(68): unittest failure\n----------------\n??:? _d_unittestp [0x428205]\n??:? void tmp1nwzwqh0.__unittest_L64_C1() [0x427e92]\n??:? void tmp1nwzwqh0.__modtest() [0x427f88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b082]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430215]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b059]\n??:? runModuleUnitTests [0x42bfc5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428654]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long item; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = item;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = item;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb8kpcpqy.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpb8kpcpqy.__unittest_L31_C1() [0x427df6]\n??:? void tmpb8kpcpqy.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpijlogh0u.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpijlogh0u.__unittest_L29_C1() [0x427e4a]\n??:? void tmpijlogh0u.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tif (list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tif (list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong product = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tproduct = even * odd;\n\t\n\treturn product;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu = 0;\n\tint bv = 0;\n\tint bw = 0\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpglhccyci.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpglhccyci.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglhccyci.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tj++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(k; list1)\n\t{\n\t\tif(k % 2 != 0)\n\t\t{\n\t\t\todd = k;\n\t\t\tl++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(j == 0 || l == 0)\n\t{\n\t\treturn 0;\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpyi1km17n.d(17): Error: variable `i` is shadowing variable `tmpyi1km17n.mul_even_odd.i`\n/tmp/tmpyi1km17n.d(27): Error: variable `k` is shadowing variable `tmpyi1km17n.mul_even_odd.k`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyi1km17n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i;0..list1.length)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i;0..list1.length)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3eqykex.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpo3eqykex.__unittest_L29_C1() [0x427e4a]\n??:? void tmpo3eqykex.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i, e; list1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i, e; list1) \n\t{\n\t\tif(i % 2 != 0) \n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx53mbe5_.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpx53mbe5_.__unittest_L29_C1() [0x427e46]\n??:? void tmpx53mbe5_.__modtest() [0x427f3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43067c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430159]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b011]\n??:? runModuleUnitTests [0x42bf7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42860c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i;list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i;list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i;0..list1.length)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\teven = even + list1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = odd + list1[i];\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpah_phgu4.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpah_phgu4.__unittest_L25_C1() [0x427e26]\n??:? void tmpah_phgu4.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b08e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430221]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b065]\n??:? runModuleUnitTests [0x42bfd1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428660]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong mul_num = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven_num = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd_num = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul_num = even_num * odd_num;\n\treturn mul_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong mul = 0;\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even_num * odd_num;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong aa = 0;\n\tlong bb = 0;\n\tlong cc = 0;\n\tlong dd = 0;\n\tlong ee = 0;\n\tlong ff = 0;\n\tlong gg = 0;\n\tlong hh = 0;\n\tlong ii = 0;\n\tlong jj = 0;\n\tlong kk = 0;\n\tlong ll = 0;\n\tlong mm = 0;\n\tlong nn = 0;\n\tlong oo = 0;\n\tlong pp = 0;\n\tlong qq = 0;\n\tlong rr = 0;\n\tlong ss = 0;\n\tlong tt = 0;\n\tlong uu = 0;\n\tlong vv = 0;\n\tlong ww = 0;\n\tlong xx = 0;\n\tlong yy = 0;\n\tlong zz = 0;\n\tlong aaa = 0;\n\tlong bbb = 0;\n\tlong ccc = 0;\n\tlong ddd = 0;\n\tlong eee = 0;\n\tlong fff = 0;\n\tlong ggg = 0;\n\tlong hhh = 0;\n\tlong iii = 0;\n\tlong jjj = 0;\n\tlong kkk = 0;\n\tlong lll = 0;\n\tlong mmm = 0;\n\tlong nnn = 0;\n\tlong ooo = 0;\n\tlong ppp = 0;\n\tlong qqq = 0;\n\tlong rrr = 0;\n\tlong sss = 0;\n\tlong ttt = 0;\n\tlong uuu = 0;\n\tlong v\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpe2wevgoo.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpe2wevgoo.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2wevgoo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_number = 0;\n\tlong odd_number = 0;\n\tlong result = 0;\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_number = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_number = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even_number * odd_number;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint v\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpag660jbx.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpag660jbx.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpag660jbx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(x % 2 == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(x % 2 != 0)\n\t\t{\n\t\t\todd = x;\n\t\t\tj++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = list1[i];\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0odhxy_7.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmp0odhxy_7.__unittest_L25_C1() [0x427e1e]\n??:? void tmp0odhxy_7.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1f3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b086]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430219]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b05d]\n??:? runModuleUnitTests [0x42bfc9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428658]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num % 2 == 0)\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe7nxgvvb.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpe7nxgvvb.__unittest_L43_C1() [0x427e2a]\n??:? void tmpe7nxgvvb.__modtest() [0x427f20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c187]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43065c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff1]\n??:? runModuleUnitTests [0x42bf5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(x % 2 == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t}\n\t\tif(x % 2 != 0)\n\t\t{\n\t\t\todd = x;\n\t\t\tj++;\n\t\t}\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tresult = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqcnqwze6.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmpqcnqwze6.__unittest_L36_C1() [0x427e3a]\n??:? void tmpqcnqwze6.__modtest() [0x427f30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c197]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301bd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43066c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430149]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b001]\n??:? runModuleUnitTests [0x42bf6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf447c2nf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpf447c2nf.__unittest_L29_C1() [0x427df6]\n??:? void tmpf447c2nf.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(isEven(num))\n\t\t\t{\n\t\t\t\tif(even == 0)\n\t\t\t\t{\n\t\t\t\t\teven = num;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(odd == 0)\n\t\t\t\t{\n\t\t\t\t\todd = num;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmp1rkl0rdf.d(28): Error: undefined identifier `isEven`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rkl0rdf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptdy0ab4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpptdy0ab4.__unittest_L34_C1() [0x427e56]\n??:? void tmpptdy0ab4.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tif(num % 2 == 0)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num % 2 == 0 && even_num == 0)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t}\n\t\t\telse if(num % 2 != 0 && odd_num == 0)\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn even_num * odd_num;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile(even == 0 || odd == 0)\n\t{\n\t\tif(list1[i] % 2 == 0 && even == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t}\n\t\telse if(list1[i] % 2 != 0 && odd == 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpce4v3ten.d(17): Error: cannot implicitly convert expression `list1[cast(ulong)i]` of type `long` to `int`\n/tmp/tmpce4v3ten.d(21): Error: cannot implicitly convert expression `list1[cast(ulong)i]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpce4v3ten.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = elem;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4lg9xyth.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp4lg9xyth.__unittest_L27_C1() [0x427df6]\n??:? void tmp4lg9xyth.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong product = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tproduct = even_num * odd_num;\n\treturn product;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = even + elem;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = odd + elem;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyy10ox6h.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpyy10ox6h.__unittest_L27_C1() [0x427e02]\n??:? void tmpyy10ox6h.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i;list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i;list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = even + elem;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = odd + elem;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuip28kdv.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmpuip28kdv.__unittest_L27_C1() [0x427e02]\n??:? void tmpuip28kdv.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even_num * odd_num;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = elem;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4lg9xyth.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp4lg9xyth.__unittest_L27_C1() [0x427df6]\n??:? void tmp4lg9xyth.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuuabpw6s.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpuuabpw6s.__unittest_L27_C1() [0x427df6]\n??:? void tmpuuabpw6s.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk9nt0pcc.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpk9nt0pcc.__unittest_L33_C1() [0x427e56]\n??:? void tmpk9nt0pcc.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(x % 2 == 0)\n\t\t\t{\n\t\t\t\teven = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = x;\n\t\t\t}\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcy1qqran.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpcy1qqran.__unittest_L41_C1() [0x427e2a]\n??:? void tmpcy1qqran.__modtest() [0x427f20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c187]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43065c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff1]\n??:? runModuleUnitTests [0x42bf5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j; list1)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tbool even_found = false;\n\tbool odd_found = false;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0 && !even_found)\n\t\t{\n\t\t\teven = i;\n\t\t\teven_found = true;\n\t\t}\n\t\telse if(i % 2 != 0 && !odd_found)\n\t\t{\n\t\t\todd = i;\n\t\t\todd_found = true;\n\t\t}\n\t\t\n\t\tif(even_found && odd_found)\n\t\t\tbreak;\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(l; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = l;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = l;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprf9z0c_j.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmprf9z0c_j.__unittest_L32_C1() [0x427dfa]\n??:? void tmprf9z0c_j.__modtest() [0x427ef0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmczaq_a3.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpmczaq_a3.__unittest_L30_C1() [0x427e4a]\n??:? void tmpmczaq_a3.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong aa = 0;\n\tlong bb = 0;\n\tlong cc = 0;\n\tlong dd = 0;\n\tlong ee = 0;\n\tlong ff = 0;\n\tlong gg = 0;\n\tlong hh = 0;\n\tlong ii = 0;\n\tlong jj = 0;\n\tlong kk = 0;\n\tlong ll = 0;\n\tlong mm = 0;\n\tlong nn = 0;\n\tlong oo = 0;\n\tlong pp = 0;\n\tlong qq = 0;\n\tlong rr = 0;\n\tlong ss = 0;\n\tlong tt = 0;\n\tlong uu = 0;\n\tlong vv = 0;\n\tlong ww = 0;\n\tlong xx = 0;\n\tlong yy = 0;\n\tlong zz = 0;\n\tlong aaa = 0;\n\tlong bbb = 0;\n\tlong ccc = 0;\n\tlong ddd = 0;\n\tlong eee = 0;\n\tlong fff = 0;\n\tlong ggg = 0;\n\tlong hhh = 0;\n\tlong iii = 0;\n\tlong jjj = 0;\n\tlong kkk = 0;\n\tlong lll = 0;\n\tlong mmm = 0;\n\tlong nnn = 0;\n\tlong ooo = 0;\n\tlong ppp = 0;\n\tlong qqq = 0;\n\tlong rrr = 0;\n\tlong sss = 0;\n\tlong ttt = 0;\n\tlong uuu = 0;\n\tlong v\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpe2wevgoo.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpe2wevgoo.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2wevgoo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ea5cuzw.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp3ea5cuzw.__unittest_L27_C1() [0x427dfa]\n??:? void tmp3ea5cuzw.__modtest() [0x427ef0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = elem;\n\t\t}\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1oa7dh32.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp1oa7dh32.__unittest_L29_C1() [0x427df6]\n??:? void tmp1oa7dh32.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tif(num % 2 == 0)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num % 2 == 0 && even_num == 0)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(num % 2 != 0 && odd_num == 0)\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = even_num * odd_num;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint v\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpag660jbx.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpag660jbx.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpag660jbx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tint even_index = 0;\n\tint odd_index = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_index = i;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_index = i;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn list1[even_index] * list1[odd_index];\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpig809e5a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281fd]\n??:? void tmpig809e5a.__unittest_L34_C1() [0x427e86]\n??:? void tmpig809e5a.__modtest() [0x427f7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c25b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430281]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430730]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43020d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0c5]\n??:? runModuleUnitTests [0x42c031]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg_azetnz.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpg_azetnz.__unittest_L34_C1() [0x427e56]\n??:? void tmpg_azetnz.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\ti = 0;\n\t\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprpkn6hhk.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmprpkn6hhk.__unittest_L41_C1() [0x427e5a]\n??:? void tmprpkn6hhk.__modtest() [0x427f50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j; list1)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "/tmp/tmp2_9fc0t_.d(17): Error: variable `i` is shadowing variable `tmp2_9fc0t_.mul_even_odd.i`\n/tmp/tmp2_9fc0t_.d(21): Error: cannot implicitly convert expression `i` of type `long` to `int`\n/tmp/tmp2_9fc0t_.d(26): Error: variable `j` is shadowing variable `tmp2_9fc0t_.mul_even_odd.j`\n/tmp/tmp2_9fc0t_.d(30): Error: cannot implicitly convert expression `j` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2_9fc0t_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(element % 2 == 0)\n\t\t{\n\t\t\teven = element;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(element % 2 != 0)\n\t\t{\n\t\t\todd = element;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(num; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptdy0ab4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpptdy0ab4.__unittest_L34_C1() [0x427e56]\n??:? void tmpptdy0ab4.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwybk4394.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpwybk4394.__unittest_L33_C1() [0x427e4a]\n??:? void tmpwybk4394.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5fiwp_34.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmp5fiwp_34.__unittest_L42_C1() [0x427e1e]\n??:? void tmp5fiwp_34.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b012]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430654]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe9]\n??:? runModuleUnitTests [0x42bf55]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint count = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(count == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tcount = 1;\n\t\t}\n\t\telse if(count == 1)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxhk9rrd9.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpxhk9rrd9.__unittest_L28_C1() [0x427dfa]\n??:? void tmpxhk9rrd9.__modtest() [0x427ef0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(long i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t}\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf447c2nf.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpf447c2nf.__unittest_L29_C1() [0x427df6]\n??:? void tmpf447c2nf.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(j == 0)\n\t\t\t{\n\t\t\t\tif(x % 2 == 0)\n\t\t\t\t{\n\t\t\t\t\teven = x;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(j == 1)\n\t\t\t{\n\t\t\t\tif(x % 2 != 0)\n\t\t\t\t{\n\t\t\t\t\todd = x;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw3x8pzsl.d(58): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpw3x8pzsl.__unittest_L53_C1() [0x427edf]\n??:? void tmpw3x8pzsl.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvj4_q5nl.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpvj4_q5nl.__unittest_L30_C1() [0x427df6]\n??:? void tmpvj4_q5nl.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = elem;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(elem % 2 == 0)\n\t\t\t{\n\t\t\t\teven = elem;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = elem;\n\t\t\t}\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjdofc36l.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpjdofc36l.__unittest_L41_C1() [0x427e2a]\n??:? void tmpjdofc36l.__modtest() [0x427f20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c187]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43065c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff1]\n??:? runModuleUnitTests [0x42bf5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long x; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = x;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = x;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnj8f3ekd.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpnj8f3ekd.__unittest_L32_C1() [0x427dfa]\n??:? void tmpnj8f3ekd.__modtest() [0x427ef0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tj = 1;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\twhile(k < list1.length)\n\t{\n\t\tif(list1[k] % 2 != 0)\n\t\t{\n\t\t\todd = list1[k];\n\t\t\tl = 1;\n\t\t\tbreak;\n\t\t}\n\t\tk++;\n\t}\n\t\n\tif(j == 1 && l == 1)\n\t{\n\t\treturn even * odd;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long item; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = item;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(long item; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = item;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsgx3mwea.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpsgx3mwea.__unittest_L34_C1() [0x427e56]\n??:? void tmpsgx3mwea.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long l; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = l;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(long l; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = l;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8e8p84hk.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmp8e8p84hk.__unittest_L34_C1() [0x427e56]\n??:? void tmp8e8p84hk.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint v\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "/tmp/tmpag660jbx.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpag660jbx.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpag660jbx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6ymy2xhu.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmp6ymy2xhu.__unittest_L36_C1() [0x427e5a]\n??:? void tmp6ymy2xhu.__modtest() [0x427f50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long elem; list1)\n\t{\n\t\tif (i == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\ti++;\n\t\t}\n\t\telse if (i == 1)\n\t\t{\n\t\t\todd = elem;\n\t\t\ti++;\n\t\t}\n\t\telse if (i == 2)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprlj60v9e.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x428175]\n??:? void tmprlj60v9e.__unittest_L37_C1() [0x427e02]\n??:? void tmprlj60v9e.__modtest() [0x427ef8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c15f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aff2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430185]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430634]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430111]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc9]\n??:? runModuleUnitTests [0x42bf35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even_num * odd_num;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tforeach(i;list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i;list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122827,
      "stdout": "",
      "stderr": "/tmp/tmpmymmun99.d(78): Error: semicolon expected, not `unittest`\n/tmp/tmpmymmun99.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmymmun99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even*odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122830,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpno_93dak.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpno_93dak.__unittest_L34_C1() [0x427e56]\n??:? void tmpno_93dak.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num % 2 == 0)\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe7nxgvvb.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpe7nxgvvb.__unittest_L43_C1() [0x427e2a]\n??:? void tmpe7nxgvvb.__modtest() [0x427f20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c187]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43065c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff1]\n??:? runModuleUnitTests [0x42bf5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tforeach(long item; list1)\n\t{\n\t\tif(item % 2 == 0)\n\t\t{\n\t\t\teven = item;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = item;\n\t\t\tj++;\n\t\t}\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tresult = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122830,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_mr9l1ya.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x428195]\n??:? void tmp_mr9l1ya.__unittest_L36_C1() [0x427e1e]\n??:? void tmp_mr9l1ya.__modtest() [0x427f14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b012]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430654]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe9]\n??:? runModuleUnitTests [0x42bf55]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122830,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3rhoslrb.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmp3rhoslrb.__unittest_L28_C1() [0x427df6]\n??:? void tmp3rhoslrb.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0, odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = num;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122830,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi4e_9qmz.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpi4e_9qmz.__unittest_L34_C1() [0x427e56]\n??:? void tmpi4e_9qmz.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j; list1)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122829,
      "stdout": "",
      "stderr": "/tmp/tmpv7hlg76b.d(16): Error: variable `i` is shadowing variable `tmpv7hlg76b.mul_even_odd.i`\n/tmp/tmpv7hlg76b.d(25): Error: variable `j` is shadowing variable `tmpv7hlg76b.mul_even_odd.j`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7hlg76b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\t\n\treturn mul;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122830,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}\nunittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666122828,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
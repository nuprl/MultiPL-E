{
  "name": "mbpp_764_number_ctr",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong i = 0;\n\tlong cnt = 0;\n\twhile (i < str.length) \n\t{\n\t\tif (str[i] >= '0' && str[i] <= '9') \n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t\ti++;\n\t}\n\treturn cnt;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpjwkqwo0j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjwkqwo0j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c.isDigit) {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpvnmqbegm.d(12): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvnmqbegm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong number_ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnumber_ctr++;\n\t}\n\treturn number_ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong i = 0;\n\tlong ctr = 0;\n\twhile(i < str.length)\n\t{\n\t\tif(str[i] >= '0' && str[i] <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t\ti++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif (c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\n/*\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpz8hhi1gt.d(18): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8hhi1gt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmp6l84cwvr.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6l84cwvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) {\n\t\tif(c >= '0' && c <= '9') {\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmp3pu44vak.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pu44vak.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpd1z9uc8g.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1z9uc8g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str) {\n\t\tif(c.isDigit) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpyssxch__.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyssxch__.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tint i;\n\tlong ctr = 0;\n\tfor (i = 0; i < str.length; i++)\n\t{\n\t\tif (str[i] >= '0' && str[i] <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpp88uewzt.d(12): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp88uewzt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach (c; str) \n\t{\n\t\tif (c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpphq58shb.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpphq58shb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char ch; str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpcsiae18p.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsiae18p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong i;\n\tlong ctr = 0;\n\tforeach(i; 0 .. str.length)\n\t{\n\t\tif(str[i] >= '0' && str[i] <= '9')\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpiiefpa6a.d(12): Error: variable `i` is shadowing variable `tmpiiefpa6a.number_ctr.i`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiiefpa6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpql3nzs67.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpql3nzs67.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmp0lxyyqkx.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0lxyyqkx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong num_ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum_ctr++;\n\t}\n\treturn num_ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif (c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpib8jnmxe.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpib8jnmxe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach (c; str)\n\t{\n\t\tif (c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpke_5mae0.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpke_5mae0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpql3nzs67.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpql3nzs67.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpea578ki7.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpea578ki7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpjwkqwo0j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjwkqwo0j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpjwkqwo0j.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjwkqwo0j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmp29_xccie.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29_xccie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmp3pu44vak.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pu44vak.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong num_ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum_ctr++;\n\t}\n\treturn num_ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpiwt_2d0h.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwt_2d0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(char c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpr67x1ut_.d(13): Error: no property `isDigit` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr67x1ut_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmpxrjvsi80.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrjvsi80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong count = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tctr++;\n\t\t}\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphelx5ics.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphelx5ics.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "/tmp/tmphocaq8yd.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphocaq8yd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to count number of digits in a given string.\n\t\n*/\nlong number_ctr(string str) \n{\n\tlong ctr = 0;\n\tforeach(c; str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tctr++;\n\t}\n\treturn ctr;\n}\n/*\nunittest\n{\n    alias candidate = number_ctr;\n\n    assert(candidate(\"program2bedone\") == 1L);\n    assert(candidate(\"3wonders\") == 1L);\n    assert(candidate(\"123\") == 3L);\n    assert(candidate(\"3wond-1ers2\") == 3L);\n}\nvoid main(){}",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "/tmp/tmpb0e1p4_a.d(18): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0e1p4_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_639_sample_nam",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] < 'a')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z') \n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. sample_names.length)\n\t{\n\t\tif(sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_names[i].length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(isUpper(i[0]))\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmplylz2i89.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplylz2i89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] < 'a')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpz801a41n.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz801a41n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach (name; sample_names) \n\t{\n\t\tif (name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(isUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp61peuzoj.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp61peuzoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == name[0].toUpper)\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp7et2h5xe.d(13): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7et2h5xe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name.length > 0 && sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i, name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(!isLower(i[0]))\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp79ylsog3.d(13): Error: undefined identifier `isLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79ylsog3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpbeyauqvz.d(20): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbeyauqvz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(!isLower(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp8xjjkb_o.d(13): Error: undefined identifier `isLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xjjkb_o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(isUpper(i[0]))\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmplylz2i89.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplylz2i89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(isUpper(i[0]))\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmplylz2i89.d(13): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplylz2i89.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names) \n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong total_length = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\ttotal_length += sample_name.length;\n\t\t}\n\t}\n\treturn total_length;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. sample_names.length)\n\t{\n\t\tif(sample_names[i][0] >= 'A' && sample_names[i][0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_names[i].length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\treturn sample_names.filter!(a => a[0] >= 'A' && a[0] <= 'Z').map!(a => a.length).sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpqrsafsbu.d(10): Error: no property `filter` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqrsafsbu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names) \n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpz801a41n.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz801a41n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif (name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] == toUpper(sample_name[0]))\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpsam3qcf4.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsam3qcf4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z') \n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpz801a41n.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz801a41n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t{\n\t\t\tsum += i.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names) \n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z') \n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong total_length = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\ttotal_length += sample_name.length;\n\t\t}\n\t}\n\treturn total_length;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names) \n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z') \n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] == name[0].toUpper)\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp9w0vrkqb.d(13): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9w0vrkqb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] == toUpper(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpz801a41n.d(13): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz801a41n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(!isLower(name[0]))\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmpfoh96yva.d(13): Error: undefined identifier `isLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfoh96yva.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] == name[0].toUpper)\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp9w0vrkqb.d(13): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9w0vrkqb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum_len = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum_len += sample_name.length;\n\t\t}\n\t}\n\treturn sum_len;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(i; sample_names)\n\t{\n\t\tif(i[0] >= 'A' && i[0] <= 'Z')\n\t\t\tsum += i.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string s; sample_names)\n\t{\n\t\tif(s[0] >= 'A' && s[0] <= 'Z')\n\t\t\tsum += s.length;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to find the first element in an array of integers that is greater than a given integer.\n\t\n*/\nlong sample_int(long[] sample_ints, long num)\n{\n\tforeach(long i; sample_ints)\n\t{\n\t\tif(i > num)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n/*\n\tWrite a function to find the first element in an array of integers that is greater than a given integer.\n\t\n*/\nlong sample_int(long[] sample_ints, long num)\n{\n\tforeach(long i; sample_ints)\n\t{\n\t\tif(i > num)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n/*\n\tWrite a function to find the first element in an array of integers that is greater than a given integer.\n\t\n*/\nlong sample_int(long[] sample_ints, long num)\n{\n\tforeach(long i; sample_ints)\n\t{\n\t\tif(i > num)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n/*\n\tWrite a function to find the first element in an array of integers that is greater than a given integer.\n\t\n*/\nlong sample_int(long[] sample_ints, long num)\n{\n\tforeach(long i; sample_ints)\n\t{\n\t\tif(i > num)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n/*\n\tWrite a function to find the first element in an array of integers that is greater than a given integer.\n\t\n*/\nlong sample_int(long[] sample_ints, long num)\n{\n\tforeach(long i;\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "/tmp/tmp1pxv7hhd.d(87): Error: expression expected, not `unittest`\n/tmp/tmp1pxv7hhd.d(88): Error: found `{` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pxv7hhd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_118_string_to_list",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\tstring[] list;\n\tint len = string.length;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\tlist.length = len;\n\t\n\twhile (i < len) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tlist[k] = string[j .. i];\n\t\t\tk++;\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist[k] = string[j .. i];\n\t\n\treturn list;\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}"
  ]
}
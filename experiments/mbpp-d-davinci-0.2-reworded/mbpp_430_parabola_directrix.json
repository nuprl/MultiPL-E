{
  "name": "mbpp_430_parabola_directrix",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the directrix of a parabola.\n\t\n*/\nlong parabola_directrix(long a, long b, long c) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = parabola_directrix;\n\n    assert(candidate(5L, 3L, 2L) == -198L);\n    assert(candidate(9L, 8L, 4L) == -2336L);\n    assert(candidate(2L, 4L, 6L) == -130L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn (2*a*c - b*b)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (long)(-b/(2*a));\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (long) (b / (2.0 * a));\n}",
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -c / b;\n}",
    "{\n\treturn -b / (2 * a);\n}"
  ]
}
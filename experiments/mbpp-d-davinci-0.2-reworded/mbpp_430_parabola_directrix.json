{
  "name": "mbpp_430_parabola_directrix",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the directrix of a parabola.\n\t\n*/\nlong parabola_directrix(long a, long b, long c) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = parabola_directrix;\n\n    assert(candidate(5L, 3L, 2L) == -198L);\n    assert(candidate(9L, 8L, 4L) == -2336L);\n    assert(candidate(2L, 4L, 6L) == -130L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn (2*a*c - b*b)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (long)(-b/(2*a));\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (long) (b / (2.0 * a));\n}",
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -c / b;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -(b*b - 4*a*c) / (4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(2*a*c)/b;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (a * a - 4 * b * c) / (4 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b/(2*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn (long)(-b / (2.0 * a));\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b/(2*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2*a);\n}",
    "{\n\treturn (b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn (long) (b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn (long)(-b / (2.0 * a));\n}",
    "{\n\treturn (a * a - 4 * b * c) / (4 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(a * a) / (4 * b) + c;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (2*a*b - c)/(2*a);\n}\n/*\n\tWrite a function to find the focus of a parabola.\n*/\nlong parabola_focus(long a, long b, long c) \n{\n\treturn (2*a*b - c)/(4*a);\n}\n/*\n\tWrite a function to find the vertex of a parabola.\n*/\nlong parabola_vertex(long a, long b, long c) \n{\n\treturn (2*a*b - c)/(4*a);\n}\n/*\n\tWrite a function to find the x-intercepts of a parabola.\n*/\nlong[] parabola_x_intercepts(long a, long b, long c) \n{\n\tlong[] result = new long[2];\n\tresult[0] = (-b + sqrt(b*b - 4*a*c))/(2*a);\n\tresult[1] = (-b - sqrt(b*b - 4*a*c))/(2*a);\n\treturn result;\n}\n/*\n\tWrite a function to find the y-intercepts of a parabola.\n*/\nlong parabola_y_intercept(long a, long b, long c) \n{\n\treturn c;\n}\n/*\n\tWrite a function to find the equation of a parabola given its vertex and focus.\n*/\nlong[] parabola_equation_from_vertex_and_focus(long x, long y, long p) \n{\n\tlong[] result = new long[3];\n\tresult[0] = 1;\n\tresult[1] = -2*p;\n\tresult[2] = p*p + x*x + y*y;\n\treturn result;\n}\n/*\n\tWrite a function to find the equation of a parabola given its vertex and directrix.\n*/\nlong[] parabola_equation_from_vertex_and_directrix(long x, long y, long d) \n{\n\tlong[] result = new long[3];\n\tresult[0] = 1;\n\tresult[1] = -2",
    "{\n\treturn (a * a - 4 * b * c) / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (c - b*b/(4*a));\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn (long)(-b/(2.0*a));\n}",
    "{\n\treturn -(a * a) / (4 * b) + c;\n}",
    "{\n\treturn -4 * a * c / b;\n}",
    "{\n\treturn -b/(2*a);\n}",
    "{\n\treturn (2*a*c-b*b)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -c / b;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (long)(-b / (2.0 * a));\n}",
    "{\n\treturn -c / b;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\tlong x = -b / (2 * a);\n\tlong y = a * x * x + b * x + c;\n\treturn y;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (2*a*b - c)/(4*a);\n}",
    "{\n\treturn (a * a - 4 * b * c) / (4 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b/(2*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\tlong x = -b / (2 * a);\n\tlong y = a * x * x + b * x + c;\n\treturn y;\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (2*a*b - c)/(2*a);\n}",
    "{\n\treturn (long)(-b / (2.0 * a));\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (2*a*c - b*b)/(4*a);\n}",
    "{\n\treturn -c / b;\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(a*a*a)/(4*b) + c;\n}",
    "{\n\treturn (2 * a * c - b * b) / (4 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (2 * a * b - c) / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (long)(b / (2.0 * a));\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn (long) (b / (2.0 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (long)(-b/(2.0*a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(2*a*c)/b;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn (a*a - 4*b*c) / (4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(c / b);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c) / (4*a);\n}",
    "{\n\treturn -(b*b)/(4*a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (2 * a * c - b * b) / (4 * a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b - 4 * a * c) / (4 * a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn (a*a - 4*b*c) / (4*a);\n}",
    "{\n\treturn -(4*a*c)/(b*b);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b*b - 4*a*c)/(4*a);\n}",
    "{\n\treturn -(b / (2 * a));\n}",
    "{\n\treturn (2 * a * b - c) / (2 * a);\n}",
    "{\n\treturn -b / (2 * a);\n}",
    "{\n\treturn -(b * b) / (4 * a) + c;\n}"
  ]
}
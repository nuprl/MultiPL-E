{
  "name": "mbpp_598_armstrong_number",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is armstrong or not.\n\t\n*/\nbool armstrong_number(long number) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = armstrong_number;\n\n    assert(candidate(153L) == true);\n    assert(candidate(259L) == false);\n    assert(candidate(4458L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint length = number.toString().length;\n\tlong sum = 0;\n\tforeach(digit; number.toString())\n\t{\n\t\tsum += pow(digit.to!long, length);\n\t}\n\treturn sum == number;\n}",
    "{\n\tint len = to!string(number).length;\n\tlong sum = 0;\n\tforeach(digit; to!string(number))\n\t{\n\t\tsum += pow(to!int(digit), len);\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint digits = log10(number) + 1;\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp > 0) \n\t{\n\t\tint digit = temp % 10;\n\t\tsum += pow(digit, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint digits = log10(number) + 1;\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp > 0) \n\t{\n\t\tsum += pow(temp % 10, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint digits = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\ttemp /= 10;\n\t\tdigits++;\n\t}\n\ttemp = number;\n\tlong sum = 0;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint sum = 0;\n\tint temp = number;\n\twhile(temp > 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\t// convert number to string\n\tstring str = to!string(number);\n\t\n\t// calculate the power\n\tint power = str.length;\n\t\n\t// initialize sum\n\tlong sum = 0;\n\t\n\t// loop through all digits\n\tforeach (digit; str) \n\t{\n\t\t// add to sum\n\t\tsum += pow(to!int(digit), power);\n\t}\n\t\n\t// check if number is equal to sum\n\treturn number == sum;\n}",
    "{\n\tint digits = 0;\n\tlong temp = number;\n\twhile (temp != 0)\n\t{\n\t\ttemp /= 10;\n\t\tdigits++;\n\t}\n\ttemp = number;\n\tlong sum = 0;\n\twhile (temp != 0)\n\t{\n\t\tsum += pow(temp % 10, digits);\n\t\ttemp /= 10;\n\t}\n\treturn number == sum;\n}",
    "{\n\tint sum = 0;\n\tint temp = number;\n\tint remainder = 0;\n\twhile (temp != 0) \n\t{\n\t\tremainder = temp % 10;\n\t\tsum = sum + pow(remainder, 3);\n\t\ttemp = temp / 10;\n\t}\n\tif (sum == number)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tint sum = 0;\n\tint temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}"
  ]
}
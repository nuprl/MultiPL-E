{
  "name": "mbpp_389_find_lucas",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the n'th lucas number.\n\t\n*/\nlong find_lucas(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_lucas;\n\n    assert(candidate(9L) == 76L);\n    assert(candidate(4L) == 7L);\n    assert(candidate(3L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong lucas_n = 0;\n\tlong lucas_n_1 = 2;\n\tlong lucas_n_2 = 1;\n\t\n\tif (n == 0)\n\t\treturn lucas_n_2;\n\telse if (n == 1)\n\t\treturn lucas_n_1;\n\telse\n\t{\n\t\tfor (long i = 2; i <= n; i++)\n\t\t{\n\t\t\tlucas_n = lucas_n_1 + lucas_n_2;\n\t\t\tlucas_n_2 = lucas_n_1;\n\t\t\tlucas_n_1 = lucas_n;\n\t\t}\n\t\treturn lucas_n;\n\t}\n}",
    "{\n\tlong a = 2, b = 1, c = 0;\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) \n\t\treturn 2;\n\tif (n == 1) \n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tfor (long i = 2; i <= n; i++) {\n\t\tauto c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) \n\t\treturn 2;\n\telse if (n == 1) \n\t\treturn 1;\n\telse \n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0) {\n\t\treturn 2;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\tfor (int i = 2; i <= n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif(n == 1)\n\t\treturn a;\n\tif(n == 2)\n\t\treturn b;\n\t\n\tfor(long i = 3; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tlong i = 2;\n\twhile (i < n) {\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\ti++;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tlong c = 0;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (long i = 2; i <= n; i++)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\t\n\tlong i = 2;\n\twhile (i <= n) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\ti++;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif(n == 0) return 2;\n\tif(n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2, b = 1;\n\twhile (n--) \n\t{\n\t\tlong t = a;\n\t\ta = b;\n\t\tb += t;\n\t}\n\treturn a;\n}",
    "{\n\tlong lucas_n = 0;\n\tlong lucas_n_1 = 2;\n\tlong lucas_n_2 = 1;\n\t\n\tif (n == 1)\n\t{\n\t\treturn lucas_n_2;\n\t}\n\telse if (n == 2)\n\t{\n\t\treturn lucas_n_1;\n\t}\n\telse\n\t{\n\t\tfor (long i = 3; i <= n; i++)\n\t\t{\n\t\t\tlucas_n = lucas_n_1 + lucas_n_2;\n\t\t\tlucas_n_2 = lucas_n_1;\n\t\t\tlucas_n_1 = lucas_n;\n\t\t}\n\t\treturn lucas_n;\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) \n\t\treturn 2;\n\tif (n == 1) \n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (long i = 2; i <= n; i++)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 1)\n\t\treturn a;\n\telse if (n == 2)\n\t\treturn b;\n\telse\n\t{\n\t\tforeach (i; 2..n)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i < n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong lucas_n = 0;\n\tlong lucas_n_1 = 2;\n\tlong lucas_n_2 = 1;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tlucas_n = lucas_n_1 + lucas_n_2;\n\t\tlucas_n_2 = lucas_n_1;\n\t\tlucas_n_1 = lucas_n;\n\t}\n\treturn lucas_n;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif(n == 0) \n\t\treturn 2;\n\tif(n == 1) \n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\t\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\t\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tforeach (i; 2 .. n)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\t\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (long i = 2; i <= n; i++)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong[long] lucas_numbers;\n\tlucas_numbers[0] = 2;\n\tlucas_numbers[1] = 1;\n\tforeach(i; 2..n)\n\t{\n\t\tlucas_numbers[i] = lucas_numbers[i-1] + lucas_numbers[i-2];\n\t}\n\treturn lucas_numbers[n];\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\tfor (long i = 2; i <= n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif(n == 0) return 2;\n\tif(n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\t\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif(n == 0) return 2;\n\tif(n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 1) return a;\n\tif (n == 2) return b;\n\tfor (long i = 3; i <= n; i++) \n\t{\n\t\tauto c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong[long] lucas_cache;\n\tlucas_cache[0] = 2;\n\tlucas_cache[1] = 1;\n\t\n\tif (n < 2)\n\t\treturn lucas_cache[n];\n\t\n\tforeach (i; 2..n)\n\t{\n\t\tlucas_cache[i] = lucas_cache[i - 1] + lucas_cache[i - 2];\n\t}\n\t\n\treturn lucas_cache[n];\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1, c = 0;\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tauto c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\t\t\n\tif (n == 1)\n\t\treturn 1;\n\t\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong a = 2, b = 1;\n\t\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\t\n\tforeach (i; 0 .. n)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (long i = 2; i <= n; i++)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1, c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tlong c = 0;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\t\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong temp;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (int i = 2; i < n; i++)\n\t\t{\n\t\t\ttemp = b;\n\t\t\tb = a + b;\n\t\t\ta = temp;\n\t\t}\n\t\treturn b;\n\t}\n}",
    "{\n\tif(n == 0) return 2;\n\tif(n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1, c = 0;\n\t\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\t\n\tfor(long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tlong i = 1;\n\twhile (i < n) {\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\ti++;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif(n == 0) return 2;\n\tif(n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif(n == 0)\n\t\treturn 2;\n\tif(n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tauto c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn a;\n\tif (n == 1)\n\t\treturn b;\n\t\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\n\treturn c;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 2;\n\t}\n\telse if (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n\t}\n}",
    "{\n\tlong a = 2, b = 1;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = temp + b;\n\t}\n\treturn a;\n}",
    "{\n\tlong a = 2, b = 1, c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tlong a = 2, b = 1;\n\t\n\tif(n == 0)\n\t\treturn a;\n\tif(n == 1)\n\t\treturn b;\n\t\n\tfor(long i = 2; i <= n; i++)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2, b = 1;\n\tif (n == 0) return a;\n\tif (n == 1) return b;\n\tlong i = 2;\n\twhile (i <= n) \n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\ti++;\n\t}\n\treturn b;\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\tfor (long i = 2; i <= n; i++)\n\t{\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0) return 2;\n\tif (n == 1) return 1;\n\treturn find_lucas(n-1) + find_lucas(n-2);\n}",
    "{\n\tlong a = 2;\n\tlong b = 1;\n\tlong c = 0;\n\t\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t{\n\t\tfor (int i = 2; i <= n; i++)\n\t\t{\n\t\t\tc = a + b;\n\t\t\ta = b;\n\t\t\tb = c;\n\t\t}\n\t\treturn c;\n\t}\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}",
    "{\n\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\treturn find_lucas(n - 1) + find_lucas(n - 2);\n}"
  ]
}
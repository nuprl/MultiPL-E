{
  "name": "mbpp_593_removezero_ip",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to remove leading zeroes from an ip address.\n\t\n*/\nstring removezero_ip(string ip) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = removezero_ip;\n\n    assert(candidate(\"216.08.094.196\") == \"216.8.94.196\");\n    assert(candidate(\"12.01.024\") == \"12.1.24\");\n    assert(candidate(\"216.08.094.0196\") == \"216.8.94.196\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i,j,k,l;\n\tstring result;\n\tint len = ip.length;\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tj = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(k=j+1;k<len;k++)\n\t{\n\t\tif(ip[k] == '.')\n\t\t{\n\t\t\tl = k;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=0;i<j;i++)\n\t{\n\t\tif(ip[i] != '0')\n\t\t{\n\t\t\tresult = ip[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=j+1;i<l;i++)\n\t{\n\t\tif(ip[i] != '0')\n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=l+1;i<len;i++)\n\t{\n\t\tif(ip[i] != '0')\n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tif(part.length > 1)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tpart = part[1..$];\n\t\t\t}\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = ip.split(\"\\\\.\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tif(part.length == 1)\n\t\t\tresult ~= part;\n\t\telse\n\t\t\tresult ~= part.lstrip(\"0\");\n\t\tresult ~= \".\";\n\t}\n\treturn result.idup.idup[0..$-1];\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = ip.length;\n\tstring newip = \"\";\n\twhile(i < len)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tnewip += ip[i];\n\t\t\ti++;\n\t\t\tj = i;\n\t\t\tk = i;\n\t\t\twhile(ip[k] == '0')\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif(k > j)\n\t\t\t{\n\t\t\t\tnewip += ip[k];\n\t\t\t\ti = k + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewip += ip[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewip += ip[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn newip;\n}",
    "{\n\tint i;\n\tstring[] ip_arr;\n\tstring result = \"\";\n\t\n\tip_arr = split(ip, \".\");\n\t\n\tforeach(string s; ip_arr)\n\t{\n\t\ti = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\t\n\treturn result[0..$-1];\n}",
    "{\n\tint i;\n\tstring[] ip_arr;\n\tip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ti = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr[$-1] = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint len = ip.length;\n\tstring res = \"\";\n\twhile(i < len) {\n\t\tif(ip[i] == '.') {\n\t\t\tres += ip[i];\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(ip[i] == '0') {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\telse {\n\t\t\twhile(i < len && ip[i] != '.') {\n\t\t\t\tres += ip[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\twhile(part[0] == '0')\n\t\t\tpart = part[1..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) \n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= format(\"%d.\", i);\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tint i,j,k,l;\n\tstring s;\n\t\n\ti = 0;\n\twhile(ip[i] == '0')\n\t{\n\t\ti++;\n\t}\n\t\n\tj = i;\n\twhile(ip[j] != '.')\n\t{\n\t\tj++;\n\t}\n\t\n\tk = j;\n\twhile(ip[k] == '0')\n\t{\n\t\tk++;\n\t}\n\t\n\tl = k;\n\twhile(ip[l] != '.')\n\t{\n\t\tl++;\n\t}\n\t\n\ts = ip[i..j] ~ ip[k..l] ~ ip[l+1..$];\n\treturn s;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, e; ip_arr)\n\t{\n\t\tint e_int = to!int(e);\n\t\tif(e_int == 0)\n\t\t{\n\t\t\tip_arr[i] = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ts = to!string(to!int(s));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr;\n\tstring result;\n\tint i;\n\t\n\tip_arr = split(ip, \".\");\n\tfor (i = 0; i < ip_arr.length; i++) {\n\t\tif (ip_arr[i][0] == '0') {\n\t\t\tip_arr[i] = ip_arr[i][1..$];\n\t\t}\n\t}\n\tresult = join(ip_arr, \".\");\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\telse\n\t\t\treturn ip;\n\t}\n\treturn join(ip_arr[$-1..$], \".\");\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint len = ip.length;\n\tstring ret = \"\";\n\twhile(i < len)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t{\n\t\t\t\tret ~= \"0.\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tret ~= ip[i..i];\n\t\t\t}\n\t\t\ti++;\n\t\t\tj = 0;\n\t\t}\n\t\telse if(ip[i] == '0')\n\t\t{\n\t\t\tif(j == 0)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tret ~= ip[i..i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret ~= ip[i..i];\n\t\t\ti++;\n\t\t}\n\t\tj++;\n\t}\n\treturn ret;\n}",
    "{\n\tstring[] ip_parts = ip.split(\".\");\n\tstring[] new_ip_parts;\n\tforeach(string part; ip_parts) \n\t{\n\t\tnew_ip_parts ~= part.lstrip(\"0\");\n\t}\n\treturn new_ip_parts.join(\".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\tint i = 0;\n\t\t\twhile(s[i] == '0')\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ts = s[i..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_list = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_list) \n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts) {\n\t\tint part_int = to!int(part);\n\t\tresult ~= to!string(part_int);\n\t\tresult ~= \".\";\n\t}\n\tresult = result[0..$-1];\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tip_arr[$-1] = \"0\";\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string i; ip_arr)\n\t{\n\t\tif(i[0] == '0')\n\t\t{\n\t\t\ti = i[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tint i = 0;\n\tstring result = \"\";\n\twhile(i < ip.length)\n\t{\n\t\tif(ip[i] == '0')\n\t\t{\n\t\t\tif(i+1 < ip.length)\n\t\t\t{\n\t\t\t\tif(ip[i+1] == '.')\n\t\t\t\t{\n\t\t\t\t\tresult ~= \"0.\";\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= ip[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= ip[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) {\n\t\tint i = 0;\n\t\twhile(part[i] == '0') {\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tip_arr.remove(s);\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s.length > 1 && s[0] == '0')\n\t\t{\n\t\t\ts = s[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\ts = s[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i, j, k;\n\tstring ret;\n\t\n\tfor (i = 0; i < ip.length; i++) {\n\t\tif (ip[i] == '.') {\n\t\t\tret ~= \".\";\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (ip[i] == '0') {\n\t\t\tfor (j = i; j < ip.length; j++) {\n\t\t\t\tif (ip[j] == '.') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ip[j] != '0') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (j == ip.length) {\n\t\t\t\tret ~= ip[j - 1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (ip[j] == '.') {\n\t\t\t\tret ~= ip[j - 1];\n\t\t\t\ti = j;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (k = j; k < ip.length; k++) {\n\t\t\t\tif (ip[k] == '.') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tret ~= ip[k];\n\t\t\t}\n\t\t\t\n\t\t\ti = k;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tret ~= ip[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tparts[i] = to!string(to!int(part));\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string s; parts)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\treturn \"0.0.0.0\";\n\t\telse if(i > 255)\n\t\t\treturn \"255.255.255.255\";\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i, j, k;\n\tstring result;\n\t\n\tfor (i = 0; i < ip.length; i++)\n\t{\n\t\tif (ip[i] == '.')\n\t\t{\n\t\t\tresult ~= '.';\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (ip[i] == '0')\n\t\t{\n\t\t\tj = i;\n\t\t\twhile (ip[j] == '0')\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t\n\t\t\tif (ip[j] == '.')\n\t\t\t{\n\t\t\t\tresult ~= '0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (k = j; k < ip.length; k++)\n\t\t\t{\n\t\t\t\tresult ~= ip[k];\n\t\t\t}\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tresult ~= ip[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr)\n\t{\n\t\tint ip_int = to!int(ip_arr[i]);\n\t\tip_arr[i] = to!string(ip_int);\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) \n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts) \n\t{\n\t\tresult ~= to!string(to!int(part));\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\tint i = 0;\n\t\t\twhile(s[i] == '0')\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ts = s[i..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tif(part.length > 1 && part[0] == '0')\n\t\t{\n\t\t\tpart = part[1..$];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr.remove(s);\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(i < part.length && part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i .. $];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint p = to!int(part);\n\t\tif(p == 0)\n\t\t{\n\t\t\tparts[i] = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i;\n\tstring[] ip_arr;\n\tstring result = \"\";\n\t\n\tip_arr = split(ip, \".\");\n\t\n\tforeach(string s; ip_arr)\n\t{\n\t\ti = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\t\n\tresult = result[0..$-1];\n\t\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tif(i == 0)\n\t\t\tresult ~= \"0\";\n\t\telse\n\t\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr)\n\t{\n\t\tif(ip_arr[i].length > 1 && ip_arr[i][0] == '0')\n\t\t{\n\t\t\tip_arr[i] = ip_arr[i][1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tif(part.length > 1)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tresult ~= part[1..$];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= part;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= part;\n\t\t}\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_split = split(ip, \".\");\n\tforeach(string s; ip_split) \n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0) \n\t\t{\n\t\t\tip_split[$-1] = \"\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_split, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) {\n\t\tint i = 0;\n\t\twhile(part[i] == '0') {\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tint i = 0;\n\tstring result = \"\";\n\tint len = ip.length;\n\twhile (i < len) \n\t{\n\t\tif (ip[i] == '0' && i < len - 1 && ip[i + 1] == '.') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += ip[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\t\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tif(i == 0) {\n\t\t\tip_arr.remove(s);\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tif(part.length == 1)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tpart = \"\";\n\t\t\t}\n\t\t}\n\t\telse if(part.length == 2)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tpart = part[1];\n\t\t\t}\n\t\t}\n\t\telse if(part.length == 3)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tpart = part[1..$];\n\t\t\t}\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint[] ip_arr;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\tint s;\n\tint t;\n\tint u;\n\tint v;\n\tint w;\n\tint x;\n\tint y;\n\tint z;\n\tint aa;\n\tint bb;\n\tint cc;\n\tint dd;\n\tint ee;\n\tint ff;\n\tint gg;\n\tint hh;\n\tint ii;\n\tint jj;\n\tint kk;\n\tint ll;\n\tint mm;\n\tint nn;\n\tint oo;\n\tint pp;\n\tint qq;\n\tint rr;\n\tint ss;\n\tint tt;\n\tint uu;\n\tint vv;\n\tint ww;\n\tint xx;\n\tint yy;\n\tint zz;\n\tint aaa;\n\tint bbb;\n\tint ccc;\n\tint ddd;\n\tint eee;\n\tint fff;\n\tint ggg;\n\tint hhh;\n\tint iii;\n\tint jjj;\n\tint kkk;\n\tint lll;\n\tint mmm;\n\tint nnn;\n\tint ooo;\n\tint ppp;\n\tint qqq;\n\tint rrr;\n\tint sss;\n\tint ttt;\n\tint uuu;\n\tint vvv;\n\tint www;\n\tint xxx;\n\tint yyy;\n\tint zzz;\n\tint aaaa;\n\tint bbbb;\n\tint cccc;\n\tint dddd;\n\tint eeee;\n\tint ffff;\n\tint gggg;\n\tint hhhh;\n\tint iiii;\n\tint jjjj;\n\tint kkkk;\n\tint llll;\n\tint mmmm;\n\tint nnnn;\n\tint oooo;\n\tint pppp;\n\tint qqqq",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tif(i == 0)\n\t\t{\n\t\t\tparts.remove(part);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr)\n\t{\n\t\tif(ip_arr[i] == \"0\")\n\t\t{\n\t\t\tip_arr[i] = \"\";\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tif(i == 0) {\n\t\t\tip_arr.remove(s);\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr;\n\tstring result = \"\";\n\tint i;\n\tip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ti = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = ip.split(\"\\\\.\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn parts.join(\".\");\n}",
    "{\n\tstring[] ip_split = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_split)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t\ti++;\n\t\tparts[i] = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s.length > 1 && s[0] == '0')\n\t\t{\n\t\t\ts = s[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, v; ip_arr)\n\t{\n\t\tip_arr[i] = to!string(to!int(v));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_array = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_array)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\tresult = result[0..$-1];\n\treturn result;\n}",
    "{\n\tint[] ip_arr;\n\tforeach(i; 0 .. ip.length)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tip_arr ~= i;\n\t\t}\n\t}\n\t\n\tstring[] ip_str;\n\tforeach(i; 0 .. ip_arr.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_str ~= ip[0 .. ip_arr[i]];\n\t\t}\n\t\telse if(i == ip_arr.length - 1)\n\t\t{\n\t\t\tip_str ~= ip[ip_arr[i] + 1 .. ip.length];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tip_str ~= ip[ip_arr[i - 1] + 1 .. ip_arr[i]];\n\t\t}\n\t}\n\t\n\tstring[] ip_str_new;\n\tforeach(i; 0 .. ip_str.length)\n\t{\n\t\tint j = 0;\n\t\twhile(ip_str[i][j] == '0')\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\tip_str_new ~= ip_str[i][j .. ip_str[i].length];\n\t}\n\t\n\tstring ip_new;\n\tforeach(i; 0 .. ip_str_new.length)\n\t{\n\t\tif(i == ip_str_new.length - 1)\n\t\t{\n\t\t\tip_new ~= ip_str_new[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tip_new ~= ip_str_new[i] ~ \".\";\n\t\t}\n\t}\n\t\n\treturn ip_new;\n}",
    "{\n\tint len = ip.length;\n\tint i = 0;\n\tstring result = \"\";\n\twhile(i < len)\n\t{\n\t\tif(ip[i] == '0' && ip[i+1] == '.')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\twhile(part.length > 1 && part[0] == '0')\n\t\t\tpart = part[1 .. $];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tif(i == 0) {\n\t\t\tip_arr = ip_arr[1..$];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) {\n\t\tif(part.length > 1) {\n\t\t\tif(part[0] == '0') {\n\t\t\t\tpart = part[1..$];\n\t\t\t}\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tint num = to!int(part);\n\t\tresult ~= to!string(num);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts) {\n\t\tparts[i] = to!string(to!int(part));\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tif(part.length > 1 && part[0] == '0')\n\t\t{\n\t\t\tparts[i] = part[1..$];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\telse\n\t\t\treturn s;\n\t}\n\treturn \"\";\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ts = to!string(to!int(s));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tstring result = \"\";\n\tstring temp = \"\";\n\t\n\tfor(i = 0; i < ip.length; i++)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tif(temp.length > 1 && temp[0] == '0')\n\t\t\t{\n\t\t\t\tfor(j = 1; j < temp.length; j++)\n\t\t\t\t{\n\t\t\t\t\tresult ~= temp[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= temp;\n\t\t\t}\n\t\t\tresult ~= '.';\n\t\t\ttemp = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp ~= ip[i];\n\t\t}\n\t}\n\t\n\tif(temp.length > 1 && temp[0] == '0')\n\t{\n\t\tfor(j = 1; j < temp.length; j++)\n\t\t{\n\t\t\tresult ~= temp[j];\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult ~= temp;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string ip_part; ip_arr)\n\t{\n\t\tint ip_part_int = to!int(ip_part);\n\t\tif(ip_part_int == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts) \n\t{\n\t\tresult ~= format(\"%d.\", to!int(part));\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ts = to!string(to!int(s));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr.remove(s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string i; ip_arr)\n\t{\n\t\tif(i.length > 1 && i[0] == '0')\n\t\t\ti = i[1..$];\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\twhile(part.length > 1 && part[0] == '0')\n\t\t{\n\t\t\tpart = part[1..$];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i, j;\n\tstring result = \"\";\n\t\n\tfor (i = 0; i < ip.length; i++) \n\t{\n\t\tif (ip[i] == '.') \n\t\t{\n\t\t\tresult += ip[i];\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (ip[i] != '0') \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (j = i; j < ip.length; j++) \n\t{\n\t\tresult += ip[j];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i = 0;\n\tstring res = \"\";\n\tint len = ip.length;\n\tint count = 0;\n\twhile(i < len)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tres += ip[i];\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(ip[i] != '0' || count != 0)\n\t\t{\n\t\t\tres += ip[i];\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\treturn res;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\ts = s[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tint[] ip_arr;\n\tforeach(i;0..4)\n\t{\n\t\tip_arr ~= to!int(ip[i..i+1]);\n\t}\n\t\n\tstring result = \"\";\n\tforeach(i;0..4)\n\t{\n\t\tif(ip_arr[i] == 0)\n\t\t{\n\t\t\tresult ~= \"0\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= to!string(ip_arr[i]);\n\t\t}\n\t\tif(i != 3)\n\t\t{\n\t\t\tresult ~= \".\";\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_split = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_split)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tresult ~= \"0\";\n\t\telse\n\t\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\tresult = result[0..$-1];\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint n = to!int(part);\n\t\tif(n == 0)\n\t\t{\n\t\t\tparts[i] = \"0\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparts[i] = to!string(n);\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr)\n\t{\n\t\tint ip_int = to!int(ip_arr[i]);\n\t\tip_arr[i] = to!string(ip_int);\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) {\n\t\tint i = 0;\n\t\twhile(part[i] == '0') {\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint p = to!int(part);\n\t\tif(p == 0)\n\t\t\tparts[i] = \"\";\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i;\n\tstring res = \"\";\n\tint len = ip.length;\n\tint count = 0;\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tif(count == 0)\n\t\t\t{\n\t\t\t\tres += \"0\";\n\t\t\t}\n\t\t\tres += \".\";\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(ip[i] == '0')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tres += ip[i];\n\t\t\tcount = 0;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring[] parts = ip.split(\"\\\\.\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(i < part.length && part[i] == '0')\n\t\t\ti++;\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i,j,k;\n\tstring temp;\n\tstring[] ip_arr;\n\tip_arr = split(ip,\".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\ti = 0;\n\t\t\twhile(s[i] == '0')\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ttemp = s[i..$];\n\t\t\tip_arr[j] = temp;\n\t\t}\n\t\tj++;\n\t}\n\ttemp = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\ttemp ~= s;\n\t\ttemp ~= \".\";\n\t}\n\treturn temp[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tip_arr.remove(s);\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tif(i == 0)\n\t\t{\n\t\t\tpart = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_array = split(ip, \".\");\n\tforeach(string s; ip_array)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_array = ip_array[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_array, \".\");\n}",
    "{\n\tint[] ip_arr = ip.split(\".\");\n\tstring result = \"\";\n\tforeach(int i; ip_arr)\n\t{\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tparts[i] = to!string(to!int(part));\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\ts = to!string(to!int(s));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i,j,k;\n\tstring s=\"\";\n\tfor(i=0;i<ip.length;i++)\n\t{\n\t\tif(ip[i]=='.')\n\t\t{\n\t\t\ts=s+ip[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif(ip[i]=='0')\n\t\t{\n\t\t\tj=i;\n\t\t\twhile(ip[j]=='0')\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(ip[j]=='.')\n\t\t\t{\n\t\t\t\ts=s+ip[j];\n\t\t\t\ti=j;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts=s+ip[i];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts=s+ip[i];\n\t\t}\n\t}\n\treturn s;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i; 0 .. ip_arr.length)\n\t{\n\t\tip_arr[i] = to!string(to!int(ip_arr[i]));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i,j;\n\tstring ip_new;\n\tip_new = \"\";\n\tfor(i=0;i<ip.length;i++)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tip_new = ip_new + ip[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif(ip[i] == '0')\n\t\t{\n\t\t\tj=i;\n\t\t\twhile(ip[j] == '0')\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(ip[j] == '.')\n\t\t\t{\n\t\t\t\tip_new = ip_new + '0';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tip_new = ip_new + ip[j];\n\t\t\t\ti = j;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tip_new = ip_new + ip[i];\n\t\t}\n\t}\n\treturn ip_new;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tstring result = \"\";\n\tstring temp = \"\";\n\twhile(i < ip.length)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tif(temp.length > 1 && temp[0] == '0')\n\t\t\t{\n\t\t\t\ttemp = temp[1..$];\n\t\t\t}\n\t\t\tresult ~= temp;\n\t\t\tresult ~= \".\";\n\t\t\ttemp = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp ~= ip[i];\n\t\t}\n\t\ti++;\n\t}\n\tif(temp.length > 1 && temp[0] == '0')\n\t{\n\t\ttemp = temp[1..$];\n\t}\n\tresult ~= temp;\n\treturn result;\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tint ip_part = to!int(part);\n\t\tresult ~= to!string(ip_part);\n\t\tif(part != ip_parts[$-1])\n\t\t\tresult ~= \".\";\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, e; ip_arr)\n\t{\n\t\tif(e[0] == '0')\n\t\t{\n\t\t\tip_arr[i] = e[1..$];\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tint i;\n\tstring result;\n\t\n\tfor (i = 0; i < ip.length; i++)\n\t{\n\t\tif (ip[i] == '0' && ip[i+1] == '.')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\telse\n\t\t\treturn ip;\n\t}\n\treturn join(parts[1..$], \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= i.to!string() ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string ip_part; ip_parts)\n\t{\n\t\tint ip_part_int = to!int(ip_part);\n\t\tif(ip_part_int == 0)\n\t\t{\n\t\t\tip_part = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts) {\n\t\tint part_int = to!int(part);\n\t\tresult ~= to!string(part_int);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0 .. $-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tif(s.length == 1)\n\t\t{\n\t\t\tif(s[0] == '0')\n\t\t\t{\n\t\t\t\ts = \"\";\n\t\t\t}\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint start = 0;\n\tint end = 0;\n\tint len = ip.length;\n\tstring newip = \"\";\n\t\n\twhile(i < len)\n\t{\n\t\tif(ip[i] == '.')\n\t\t{\n\t\t\tend = i;\n\t\t\tif(end - start > 1)\n\t\t\t{\n\t\t\t\tnewip ~= ip[start..end];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewip ~= ip[start..end-1];\n\t\t\t}\n\t\t\tstart = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(len - start > 1)\n\t{\n\t\tnewip ~= ip[start..len];\n\t}\n\telse\n\t{\n\t\tnewip ~= ip[start..len-1];\n\t}\n\t\n\treturn newip;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, e; ip_arr) {\n\t\tint num = to!int(e);\n\t\tif(num == 0) {\n\t\t\tip_arr[i] = \"\";\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i .. $];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i,j;\n\tstring result;\n\tint len = ip.length;\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(ip[i]=='0')\n\t\t{\n\t\t\tfor(j=i;j<len;j++)\n\t\t\t{\n\t\t\t\tif(ip[j]!='0')\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult = ip[j..$];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr) {\n\t\tip_arr[i] = to!string(to!int(ip_arr[i]));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] parts = ip.split(\"\\\\.\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn parts.join(\".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tif(part.length > 1)\n\t\t{\n\t\t\tif(part[0] == '0')\n\t\t\t{\n\t\t\t\tparts[i] = part[1..$];\n\t\t\t}\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_split = split(ip, \".\");\n\tforeach(string ip_part; ip_split)\n\t{\n\t\tif(ip_part.length > 1 && ip_part[0] == '0')\n\t\t{\n\t\t\tip_part = ip_part[1..$];\n\t\t}\n\t}\n\treturn join(ip_split, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) {\n\t\twhile(part.length > 1 && part[0] == '0') {\n\t\t\tpart = part[1 .. $];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tif(s != ip_arr[$-1])\n\t\t\tresult ~= \".\";\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts) {\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0) {\n\t\t\tip_parts[$-1] = \"0\";\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint value = to!int(part);\n\t\tif(value == 0)\n\t\t{\n\t\t\tpart = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i = 0;\n\tint len = ip.length;\n\tstring result = \"\";\n\twhile(i < len) \n\t{\n\t\tif(ip[i] == '0') \n\t\t{\n\t\t\tint j = i;\n\t\t\twhile(ip[j] == '0') \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(ip[j] == '.') \n\t\t\t{\n\t\t\t\tresult ~= \"0.\";\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= ip[i..j];\n\t\t\t\ti = j;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= ip[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts) {\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0) {\n\t\t\tresult ~= \"0\";\n\t\t} else {\n\t\t\tresult ~= to!string(part_int);\n\t\t}\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ips = split(ip, \".\");\n\tstring result = \"\";\n\tforeach (string s; ips) \n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tif(part.length > 1 && part[0] == '0')\n\t\t{\n\t\t\tparts[i] = part[1..$];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) {\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tint i,j;\n\tstring res=\"\";\n\tfor(i=0;i<ip.length();i++)\n\t{\n\t\tif(ip[i]=='.')\n\t\t{\n\t\t\tres+='.';\n\t\t\tcontinue;\n\t\t}\n\t\tif(ip[i]=='0')\n\t\t{\n\t\t\tfor(j=i;j<ip.length();j++)\n\t\t\t{\n\t\t\t\tif(ip[j]!='0')\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j==ip.length())\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\t{\n\t\t\t\tres+=ip[j];\n\t\t\t\ti=j;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tres+=ip[i];\n\t}\n\treturn res;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; parts)\n\t{\n\t\tint i = to!int(part);\n\t\tresult ~= format(\"%d.\", i);\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\telse\n\t\t\treturn ip;\n\t}\n\treturn \"\";\n}",
    "{\n\tstring[] ip_array = split(ip, \".\");\n\tforeach(string s; ip_array)\n\t{\n\t\tif(s[0] == '0')\n\t\t{\n\t\t\ts = s[1..$];\n\t\t}\n\t}\n\treturn join(ip_array, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i = 0;\n\tstring result = \"\";\n\tint dot_count = 0;\n\twhile (i < ip.length) \n\t{\n\t\tif (ip[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count == 4) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult += ip[i];\n\t\t}\n\t\telse if (ip[i] != '0') \n\t\t{\n\t\t\tresult += ip[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tif(part_int == 0)\n\t\t{\n\t\t\tparts[i] = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tresult ~= to!string(part_int);\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) \n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts) \n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i..$];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint num = to!int(part);\n\t\tparts[i] = to!string(num);\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tint i = 0;\n\tstring result = \"\";\n\twhile (i < ip.length) \n\t{\n\t\tif (ip[i] == '.') \n\t\t{\n\t\t\tresult += ip[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (ip[i] == '0') \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result + ip.substr(i, ip.length - i);\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tstring[] newparts = new string[4];\n\tforeach(i, part; parts) {\n\t\tnewparts[i] = to!string(to!int(part));\n\t}\n\treturn join(newparts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr) {\n\t\tif(ip_arr[i] == \"0\") {\n\t\t\tip_arr[i] = \"\";\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_array = split(ip, \".\");\n\tforeach(string s; ip_array)\n\t{\n\t\ts = to!string(to!int(s));\n\t}\n\treturn join(ip_array, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i; 0 .. ip_arr.length)\n\t{\n\t\tip_arr[i] = to!string(to!int(ip_arr[i]));\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr) \n\t{\n\t\tint i = to!int(s);\n\t\tif (i == 0) \n\t\t{\n\t\t\tresult ~= \"0.\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= to!string(i) ~ \".\";\n\t\t}\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tint part_int = to!int(part);\n\t\tresult ~= to!string(part_int) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tint num = to!int(part);\n\t\tif(num == 0)\n\t\t{\n\t\t\tparts[i] = \"\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string part; ip_parts)\n\t{\n\t\tint ip_part = to!int(part);\n\t\tif(ip_part == 0)\n\t\t{\n\t\t\tresult ~= \"0\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= to!string(ip_part);\n\t\t}\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(string part; parts)\n\t{\n\t\tint i = 0;\n\t\twhile(part[i] == '0')\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\tpart = part[i .. $];\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tif(i == 0)\n\t\t{\n\t\t\tip_arr = ip_arr[1 .. $];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_arr)\n\t{\n\t\tint i = to!int(s);\n\t\tresult ~= to!string(i) ~ \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, ip_arr) {\n\t\tif(ip_arr[i] == \"0\")\n\t\t\tip_arr[i] = \"\";\n\t}\n\treturn join(ip_arr, \".\");\n}",
    "{\n\tstring[] ip_parts = split(ip, \".\");\n\tforeach(string part; ip_parts)\n\t{\n\t\tint num = to!int(part);\n\t\tif(num == 0)\n\t\t{\n\t\t\tip_parts = ip_parts[1..$];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn join(ip_parts, \".\");\n}",
    "{\n\tstring[] parts = split(ip, \".\");\n\tforeach(i, part; parts)\n\t{\n\t\tif(part.length > 1 && part[0] == '0')\n\t\t{\n\t\t\tparts[i] = part[1..$];\n\t\t}\n\t}\n\treturn join(parts, \".\");\n}",
    "{\n\tstring[] ip_array = split(ip, \".\");\n\tstring result = \"\";\n\tforeach(string s; ip_array)\n\t{\n\t\tresult ~= to!string(to!int(s));\n\t\tresult ~= \".\";\n\t}\n\treturn result[0..$-1];\n}",
    "{\n\tstring[] ip_arr = split(ip, \".\");\n\tforeach(i, e; ip_arr)\n\t\tip_arr[i] = to!string(to!int(e));\n\treturn join(ip_arr, \".\");\n}"
  ]
}
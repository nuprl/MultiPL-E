{
  "name": "mbpp_172_count_occurance",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to count the number of occurence of the string 'std' in a given string.\n\t\n*/\nlong count_occurance(string s) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = count_occurance;\n\n    assert(candidate(\"letstdlenstdporstd\") == 3L);\n    assert(candidate(\"truststdsolensporsd\") == 1L);\n    assert(candidate(\"makestdsostdworthit\") == 2L);\n    assert(candidate(\"stds\") == 1L);\n    assert(candidate(\"\") == 0L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tauto pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true) {\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1) break;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(i + 2 < s.length && s[i + 1] == 't' && s[i + 2] == 'd')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(s[i+1] == 't' && s[i+2] == 'd')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\",pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif (s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length-2)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tauto pos = s.find(\"std\");\n\twhile(pos != string.npos)\n\t{\n\t\tcount++;\n\t\tpos = s.find(\"std\", pos + 1);\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != string.npos)\n\t{\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\t++count;\n\t\t++pos;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != string.npos) \n\t{\n\t\t++count;\n\t\tpos += 3;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tauto it = s.front;\n\twhile(it != s.back)\n\t{\n\t\tif(it.front == 's')\n\t\t{\n\t\t\tif(it.next.front == 't')\n\t\t\t{\n\t\t\t\tif(it.next.next.front == 'd')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tit = it.next;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true) \n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i..i+3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, c; s)\n\t{\n\t\tif(c == 's')\n\t\t{\n\t\t\tif(s[i+1] == 't' && s[i+2] == 'd')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+3] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\t\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\t\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1)\n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) \n\t{\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i;0..s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif (s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true) \n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, c; s) \n\t{\n\t\tif(c == 's') \n\t\t{\n\t\t\tif(i + 2 < s.length && s[i + 1] == 't' && s[i + 2] == 'd') \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach (i; 0 .. s.length - 1)\n\t{\n\t\tif (s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile ((pos = s.indexOf(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach (i; 0 .. s.length - 2) \n\t{\n\t\tif (s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tauto pos = s.find(\"std\");\n\twhile(pos != string.npos) {\n\t\tcount++;\n\t\tpos = s.find(\"std\", pos + 1);\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile((pos = s.find(\"std\", pos)) != string.npos)\n\t{\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length) \n\t{\n\t\tif(s[i..i+2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tauto pos = s.find(\"std\");\n\twhile (pos != string.npos)\n\t{\n\t\tcount++;\n\t\tpos = s.find(\"std\", pos + 1);\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti+=2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile(true) \n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile ((pos = s.indexOf(\"std\", pos)) != string.npos) \n\t{\n\t\t++count;\n\t\tpos += 3;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile (true) \n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tsize_t pos = 0;\n\twhile (true) {\n\t\tpos = s.find(\"std\", pos);\n\t\tif (pos == string.npos) {\n\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile (i < s.length)\n\t{\n\t\tif (s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t\ti += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong i = 0;\n\twhile (i < s.length) \n\t{\n\t\tif (s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos += 3;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, c; s) \n\t{\n\t\tif(c == 's') \n\t\t{\n\t\t\tif(s[i+1] == 't' && s[i+2] == 'd') \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile ((pos = s.find(\"std\", pos)) != -1) {\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\", pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\tcount++;\n\t\tpos++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tlong pos = 0;\n\twhile(true)\n\t{\n\t\tpos = s.find(\"std\",pos);\n\t\tif(pos == -1)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tpos += 3;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tint i = 0;\n\twhile(i < s.length) \n\t{\n\t\tif(s[i..i+2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t\ti += 2;\n\t\t}\n\t\ti++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2) \n\t{\n\t\tif(s[i .. i + 2] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3) \n\t{\n\t\tif(s[i .. i + 3] == \"std\") \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 3)\n\t{\n\t\tif(s[i .. i + 3] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length)\n\t{\n\t\tif(s[i..i+2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. s.length - 2)\n\t{\n\t\tif(s[i .. i + 2] == \"std\")\n\t\t\tcount++;\n\t}\n\treturn count;\n}"
  ]
}
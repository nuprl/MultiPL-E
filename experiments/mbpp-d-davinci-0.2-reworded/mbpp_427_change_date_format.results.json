{
  "name": "mbpp_427_change_date_format",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp3o_r3gwp.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o_r3gwp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_split = dt.split(\"-\");\n\treturn date_split[2] ~ \"-\" ~ date_split[1] ~ \"-\" ~ date_split[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpxg4yevt7.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxg4yevt7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\tauto parts = dt.split(\"-\");\n\tyear = to!int(parts[0]);\n\tmonth = to!int(parts[1]);\n\tday = to!int(parts[2]);\n\treturn format(\"%d-%d-%d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpltrx50i7.d(11): Error: no property `split` for type `string`\n/tmp/tmpltrx50i7.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpltrx50i7.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpltrx50i7.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpltrx50i7.d(15): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltrx50i7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] split_date = dt.split(\"-\");\n\treturn split_date[2] ~ \"-\" ~ split_date[1] ~ \"-\" ~ split_date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpsu5g6dqy.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu5g6dqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint[] date = dt.split(\"-\").map!(a => to!int(a)).array;\n\treturn format(\"%02d-%02d-%04d\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpcl3fbf96.d(10): Error: no property `split` for type `string`\n/tmp/tmpcl3fbf96.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcl3fbf96.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto dt_arr = dt.split(\"-\");\n\treturn dt_arr[2] ~ \"-\" ~ dt_arr[1] ~ \"-\" ~ dt_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpz9k_z6ho.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9k_z6ho.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] splitted = dt.split(\"-\");\n\treturn splitted[2] ~ \"-\" ~ splitted[1] ~ \"-\" ~ splitted[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp1izvlval.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1izvlval.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto [year, month, day] = tuple(dt.split(\"-\"));\n\treturn format(\"%s-%s-%s\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpxq03csn1.d(10): Error: basic type expected, not `[`\n/tmp/tmpxq03csn1.d(10): Error: found `,` when expecting `]`\n/tmp/tmpxq03csn1.d(10): Error: semicolon expected, not `]`\n/tmp/tmpxq03csn1.d(10): Error: found `]` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxq03csn1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp3o_r3gwp.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o_r3gwp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\t\n\tyear = to!int(dt[0..3]);\n\tmonth = to!int(dt[5..6]);\n\tday = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpkwgl4aa9.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwgl4aa9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto dt_arr = dt.split(\"-\");\n\treturn dt_arr[2] ~ \"-\" ~ dt_arr[1] ~ \"-\" ~ dt_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpz9k_z6ho.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz9k_z6ho.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpg4tp5y3o.d(10): Error: undefined identifier `split`\n/tmp/tmpg4tp5y3o.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4tp5y3o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp3o_r3gwp.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o_r3gwp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] dt_arr = dt.split(\"-\");\n\treturn dt_arr[2] ~ \"-\" ~ dt_arr[1] ~ \"-\" ~ dt_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp5076fpt8.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5076fpt8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpmzmc39qz.d(10): Error: no property `split` for type `string`\n/tmp/tmpmzmc39qz.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzmc39qz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto parts = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp5s7s816q.d(10): Error: undefined identifier `split`\n/tmp/tmp5s7s816q.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s7s816q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpg4tp5y3o.d(10): Error: undefined identifier `split`\n/tmp/tmpg4tp5y3o.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4tp5y3o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto dt_arr = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", dt_arr[2], dt_arr[1], dt_arr[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp7esivo00.d(10): Error: no property `split` for type `string`\n/tmp/tmp7esivo00.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7esivo00.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto parts = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp5s7s816q.d(10): Error: undefined identifier `split`\n/tmp/tmp5s7s816q.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s7s816q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\tstring year = parts[0];\n\tstring month = parts[1];\n\tstring day = parts[2];\n\treturn day ~ \"-\" ~ month ~ \"-\" ~ year;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmplblsqu6r.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplblsqu6r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpmzmc39qz.d(10): Error: no property `split` for type `string`\n/tmp/tmpmzmc39qz.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzmc39qz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\tstring new_date = date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n\treturn new_date;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpyvswa8mi.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvswa8mi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpg4tp5y3o.d(10): Error: undefined identifier `split`\n/tmp/tmpg4tp5y3o.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg4tp5y3o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_arr = dt.split(\"-\");\n\treturn date_arr[2] ~ \"-\" ~ date_arr[1] ~ \"-\" ~ date_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpj2vp_adp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj2vp_adp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto arr = dt.split(\"-\");\n\treturn arr[2] ~ \"-\" ~ arr[1] ~ \"-\" ~ arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpyf_akms8.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyf_akms8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto dt_arr = split(dt, \"-\");\n\treturn dt_arr[2] ~ \"-\" ~ dt_arr[1] ~ \"-\" ~ dt_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpbb22z04v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbb22z04v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_arr = dt.split(\"-\");\n\treturn date_arr[2] ~ \"-\" ~ date_arr[1] ~ \"-\" ~ date_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpj2vp_adp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj2vp_adp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpc7bhob1_.d(10): Error: undefined identifier `split`\n/tmp/tmpc7bhob1_.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7bhob1_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpmzmc39qz.d(10): Error: no property `split` for type `string`\n/tmp/tmpmzmc39qz.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzmc39qz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\t\n\tyear = to!int(dt[0..3]);\n\tmonth = to!int(dt[5..6]);\n\tday = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpkwgl4aa9.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwgl4aa9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto [year, month, day] = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmps2rry0yq.d(10): Error: basic type expected, not `[`\n/tmp/tmps2rry0yq.d(10): Error: found `,` when expecting `]`\n/tmp/tmps2rry0yq.d(10): Error: semicolon expected, not `]`\n/tmp/tmps2rry0yq.d(10): Error: found `]` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2rry0yq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0 .. 3]);\n\tint month = to!int(dt[5 .. 6]);\n\tint day = to!int(dt[8 .. 9]);\n\treturn format(\"%d-%d-%d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp36gbcsn6.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp36gbcsn6.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp36gbcsn6.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp36gbcsn6.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36gbcsn6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\tstring new_date = date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n\treturn new_date;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp2y2392yj.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2y2392yj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint y, m, d;\n\ty = to!int(dt[0..3]);\n\tm = to!int(dt[5..6]);\n\td = to!int(dt[8..9]);\n\treturn format(\"%d-%d-%d\", d, m, y);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp2ey8dm81.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp2ey8dm81.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp2ey8dm81.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp2ey8dm81.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ey8dm81.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpuoau4r3v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuoau4r3v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\treturn dt[8..9] ~ \"-\" ~ dt[5..6] ~ \"-\" ~ dt[0..3];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr9qj98et.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427f4d]\n??:? void tmpr9qj98et.__unittest_L12_C1() [0x427b86]\n??:? void tmpr9qj98et.__modtest() [0x427ccc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430140]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab51]\n??:? runModuleUnitTests [0x42ba41]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428410]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto a = dt.split(\"-\");\n\treturn a[2] ~ \"-\" ~ a[1] ~ \"-\" ~ a[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpytybn_g1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpytybn_g1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0 .. 3]);\n\tint month = to!int(dt[5 .. 6]);\n\tint day = to!int(dt[8 .. 9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp11sj_86h.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp11sj_86h.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp11sj_86h.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp11sj_86h.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp11sj_86h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\t\n\tyear = to!int(dt[0..3]);\n\tmonth = to!int(dt[5..6]);\n\tday = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpkwgl4aa9.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpkwgl4aa9.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwgl4aa9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\tstring[] date_parts;\n\tdate_parts = dt.split(\"-\");\n\tyear = to!int(date_parts[0]);\n\tmonth = to!int(date_parts[1]);\n\tday = to!int(date_parts[2]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp57qj5tmh.d(12): Error: no property `split` for type `string`\n/tmp/tmp57qj5tmh.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp57qj5tmh.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp57qj5tmh.d(15): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp57qj5tmh.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp57qj5tmh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpuoau4r3v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuoau4r3v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint[] date = dt.split(\"-\").map!(a => to!int(a)).array;\n\treturn format(\"%02d-%02d-%04d\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpcl3fbf96.d(10): Error: no property `split` for type `string`\n/tmp/tmpcl3fbf96.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcl3fbf96.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpmzmc39qz.d(10): Error: no property `split` for type `string`\n/tmp/tmpmzmc39qz.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzmc39qz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\tstring new_date = date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n\treturn new_date;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp2y2392yj.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2y2392yj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpc7bhob1_.d(10): Error: undefined identifier `split`\n/tmp/tmpc7bhob1_.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7bhob1_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint[] date = dt.split(\"-\").map!(a => to!int(a)).array;\n\treturn format(\"%02d-%02d-%d\", date[2], date[1], date[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpwap9w4op.d(10): Error: no property `split` for type `string`\n/tmp/tmpwap9w4op.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwap9w4op.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = split(dt, \"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpuu1h375_.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuu1h375_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto parts = split(dt, \"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp5s7s816q.d(10): Error: undefined identifier `split`\n/tmp/tmp5s7s816q.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s7s816q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto year = dt[0..4];\n\tauto month = dt[5..6];\n\tauto day = dt[7..8];\n\treturn day ~ \"-\" ~ month ~ \"-\" ~ year;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxk_ivwgx.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427f55]\n??:? void tmpxk_ivwgx.__unittest_L15_C1() [0x427b92]\n??:? void tmpxk_ivwgx.__modtest() [0x427cd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430148]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab59]\n??:? runModuleUnitTests [0x42ba49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428418]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint y, m, d;\n\ty = to!int(dt[0..3]);\n\tm = to!int(dt[5..6]);\n\td = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", d, m, y);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpd2up10dc.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpd2up10dc.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpd2up10dc.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpd2up10dc.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd2up10dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\tstring[] arr = dt.split(\"-\");\n\tyear = to!int(arr[0]);\n\tmonth = to!int(arr[1]);\n\tday = to!int(arr[2]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpcdttdcm1.d(11): Error: no property `split` for type `string`\n/tmp/tmpcdttdcm1.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpcdttdcm1.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpcdttdcm1.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpcdttdcm1.d(15): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcdttdcm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpl1p9o_48.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1p9o_48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint yyyy, mm, dd;\n\t\n\tyyyy = to!int(dt[0..3]);\n\tmm = to!int(dt[5..6]);\n\tdd = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", dd, mm, yyyy);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp38548lks.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp38548lks.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp38548lks.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp38548lks.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp38548lks.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmptwxg9nt2.d(10): Error: no property `split` for type `string`\n/tmp/tmptwxg9nt2.d(11): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwxg9nt2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year, month, day;\n\t\n\tyear = to!int(dt[0..3]);\n\tmonth = to!int(dt[5..6]);\n\tday = to!int(dt[8..9]);\n\t\n\treturn format(\"%d-%d-%d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpro8dvfvi.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpro8dvfvi.d(13): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpro8dvfvi.d(14): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpro8dvfvi.d(16): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpro8dvfvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_arr = dt.split(\"-\");\n\treturn date_arr[2] ~ \"-\" ~ date_arr[1] ~ \"-\" ~ date_arr[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpj2vp_adp.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj2vp_adp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp3o_r3gwp.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o_r3gwp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\t// split the date into year, month and day\n\tauto parts = dt.split(\"-\");\n\t// return the date in dd-mm-yyyy format\n\treturn format(\"%s-%s-%s\", parts[2], parts[1], parts[0]);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp0608qnix.d(11): Error: no property `split` for type `string`\n/tmp/tmp0608qnix.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0608qnix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{ \n\tint year = to!int(dt[0 .. 3]);\n\tint month = to!int(dt[5 .. 6]);\n\tint day = to!int(dt[8 .. 9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n} \nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpz268pzvl.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpz268pzvl.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpz268pzvl.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpz268pzvl.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz268pzvl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto t = split(dt, \"-\");\n\treturn t[2] ~ \"-\" ~ t[1] ~ \"-\" ~ t[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp19ca5_06.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp19ca5_06.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\t\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp3o_r3gwp.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp3o_r3gwp.d(14): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3o_r3gwp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto year = dt[0..4];\n\tauto month = dt[5..6];\n\tauto day = dt[7..8];\n\treturn day ~ \"-\" ~ month ~ \"-\" ~ year;\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxk_ivwgx.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427f55]\n??:? void tmpxk_ivwgx.__unittest_L15_C1() [0x427b92]\n??:? void tmpxk_ivwgx.__modtest() [0x427cd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430148]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab59]\n??:? runModuleUnitTests [0x42ba49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428418]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date_parts = dt.split(\"-\");\n\treturn date_parts[2] ~ \"-\" ~ date_parts[1] ~ \"-\" ~ date_parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpvz9bfwvk.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz9bfwvk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tint year = to!int(dt[0..3]);\n\tint month = to!int(dt[5..6]);\n\tint day = to!int(dt[8..9]);\n\treturn format(\"%02d-%02d-%04d\", day, month, year);\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzhuop1z8.d(10): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(11): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(12): Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzhuop1z8.d(13): Error: undefined identifier `format`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhuop1z8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = dt.split(\"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmph0tbj87k.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0tbj87k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpuoau4r3v.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuoau4r3v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tstring[] parts = dt.split(\"-\");\n\treturn parts[2] ~ \"-\" ~ parts[1] ~ \"-\" ~ parts[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpwdnw1khz.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdnw1khz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n\t\n*/\nstring change_date_format(string dt) \n{\n\tauto date = split(dt, \"-\");\n\treturn date[2] ~ \"-\" ~ date[1] ~ \"-\" ~ date[0];\n}\nunittest\n{\n    alias candidate = change_date_format;\n\n    assert(candidate(\"2026-01-02\") == \"02-01-2026\");\n    assert(candidate(\"2020-11-13\") == \"13-11-2020\");\n    assert(candidate(\"2021-04-26\") == \"26-04-2021\");\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0ebw7_9a.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ebw7_9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
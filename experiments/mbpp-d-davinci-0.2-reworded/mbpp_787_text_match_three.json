{
  "name": "mbpp_787_text_match_three",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that matches a string that has an a followed by three 'b'.\n\t\n*/\nbool text_match_three(string text) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = text_match_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n    assert(candidate(\"caacabbbba\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a(bbb)\");\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a[b]{3}\") is null;\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*bbb\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b\"));\n}",
    "{\n\treturn match(text, \"a/bbb/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\");\n}",
    "{\n\treturn text.match(\"/a{3}/\");\n}",
    "{\n\treturn match(text, \"a+b+b+b+\");\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") != \"\";\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a[b]{3}\") !is null;\n}",
    "{\n\treturn match(text, \"a[b]{3}\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b{3}\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a[b]{3}\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b{3}\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a[b]{3}\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a+b+b+b+\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn (text.find(\"abbb\") != -1);\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*bbb\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn (text.find(\"abbb\") != -1);\n}",
    "{\n\tif (text.length < 4) return false;\n\treturn text[0] == 'a' && text[1] == 'b' && text[2] == 'b' && text[3] == 'b';\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b?\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tfor (int i = 1; i < 4; i++)\n\t{\n\t\tif (text[i] != 'b')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn (text.find(\"abbb\") != -1);\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\tif(text.length < 4)\n\t\treturn false;\n\tif(text[0] != 'a')\n\t\treturn false;\n\tif(text[1] != 'b')\n\t\treturn false;\n\tif(text[2] != 'b')\n\t\treturn false;\n\tif(text[3] != 'b')\n\t\treturn false;\n\treturn true;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b{3}\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn text.match(\"a[b]{3}\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn (text.length() >= 4) && (text[0] == 'a') && (text[1] == 'b') && (text[2] == 'b') && (text[3] == 'b');\n}",
    "{\n\treturn match(text, \"a(bbb)\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn match(text, \"a/bbb/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"a*b*b*b*\");\n}",
    "{\n\treturn (text.find(\"a\") != string.npos && text.find(\"bbb\") != string.npos);\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\tif (text.length < 4)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tif (text[1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn text.match(\"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn (text.find(\"abbb\") != -1);\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a?b?b?b\"));\n}",
    "{\n\treturn match(text, \"a+b+b+b+\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a/bbb/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn text.match(\"/a...b/\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b*b*b*\"));\n}",
    "{\n\treturn text.match(\"/a[b]{3}/\");\n}",
    "{\n\treturn regex_match(text, regex(\"a*b\"));\n}",
    "{\n\treturn match(text, \"a*b*b*b*\");\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}",
    "{\n\treturn match(text, \"a*b*b*b*\") !is null;\n}"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpzjb9aa86.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpzjb9aa86.d(17): Error: no property `find` for type `string`\n/tmp/tmpzjb9aa86.d(19): Error: slice `str2` is not mutable\n/tmp/tmpzjb9aa86.d(22): Error: no property `find` for type `string`\n/tmp/tmpzjb9aa86.d(24): Error: slice `str2` is not mutable\n/tmp/tmpzjb9aa86.d(29): Error: slice `str2` is not mutable\n/tmp/tmpzjb9aa86.d(36): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzjb9aa86.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpwpjkk4vf.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpwpjkk4vf.d(16): Error: no property `find` for type `string`\n/tmp/tmpwpjkk4vf.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwpjkk4vf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult[i] = str1[j];\n\t\t\tresult[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp6nvdtiim.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp6nvdtiim.d(16): Error: no property `find` for type `string`\n/tmp/tmp6nvdtiim.d(16): Error: no property `find` for type `string`\n/tmp/tmp6nvdtiim.d(18): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmp6nvdtiim.d(19): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\n/tmp/tmp6nvdtiim.d(23): Error: no property `find` for type `string`\n/tmp/tmp6nvdtiim.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6nvdtiim.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\tstring result = str1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tstart++;\n\t\t}\n\t\telse if (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tend--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[start] = str1[end];\n\t\t\tresult[end] = str1[start];\n\t\t\tstart++;\n\t\t\tend--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpp_l3u6ct.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpp_l3u6ct.d(16): Error: no property `find` for type `string`\n/tmp/tmpp_l3u6ct.d(20): Error: no property `find` for type `string`\n/tmp/tmpp_l3u6ct.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)start]`\n/tmp/tmpp_l3u6ct.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)end]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp_l3u6ct.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpvw5zfmpg.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvw5zfmpg.d(16): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(18): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(21): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(23): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(28): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw5zfmpg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= str1[j];\n\t\tresult ~= str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpfya9jxro.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfya9jxro.d(16): Error: no property `find` for type `string`\n/tmp/tmpfya9jxro.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfya9jxro.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t} else if (vowels.find(str1[j]) == -1) {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t} else {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tresult ~= str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpvm2s7qf6.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvm2s7qf6.d(15): Error: no property `find` for type `string`\n/tmp/tmpvm2s7qf6.d(18): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvm2s7qf6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring new_str = \"\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tnew_str ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tnew_str ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_str ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tnew_str ~= str1[i];\n\t}\n\treturn new_str;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp_7m6i22t.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmp_7m6i22t.d(17): Error: no property `find` for type `string`\n/tmp/tmp_7m6i22t.d(22): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_7m6i22t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str1[i], str1[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpwle7bt0f.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpwle7bt0f.d(15): Error: no property `find` for type `string`\n/tmp/tmpwle7bt0f.d(20): Error: no property `find` for type `string`\n/tmp/tmpwle7bt0f.d(25): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwle7bt0f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp_3bb4me0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp_3bb4me0.d(16): Error: no property `find` for type `string`\n/tmp/tmp_3bb4me0.d(16): Error: no property `find` for type `string`\n/tmp/tmp_3bb4me0.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp_3bb4me0.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp_3bb4me0.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp_3bb4me0.d(24): Error: no property `find` for type `string`\n/tmp/tmp_3bb4me0.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3bb4me0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp74sqr4ix.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp74sqr4ix.d(16): Error: no property `find` for type `string`\n/tmp/tmp74sqr4ix.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74sqr4ix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring vowels = \"aeiouAEIOU\";\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpwo7wf242.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpwo7wf242.d(15): Error: no property `find` for type `string`\n/tmp/tmpwo7wf242.d(15): Error: no property `find` for type `string`\n/tmp/tmpwo7wf242.d(17): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpwo7wf242.d(18): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpwo7wf242.d(22): Error: no property `find` for type `string`\n/tmp/tmpwo7wf242.d(26): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwo7wf242.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint left = 0;\n\tint right = str1.length - 1;\n\tstring str2 = str1.dup;\n\twhile (left < right) \n\t{\n\t\tif (vowels.find(str2[left]) == -1) \n\t\t{\n\t\t\tleft++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str2[right]) == -1) \n\t\t{\n\t\t\tright--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str2[left], str2[right]);\n\t\tleft++;\n\t\tright--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp9j2d7al_.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp9j2d7al_.d(16): Error: no property `find` for type `string`\n/tmp/tmp9j2d7al_.d(21): Error: no property `find` for type `string`\n/tmp/tmp9j2d7al_.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9j2d7al_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmprk7gw2jf.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmprk7gw2jf.d(16): Error: no property `find` for type `string`\n/tmp/tmprk7gw2jf.d(18): Error: slice `str2` is not mutable\n/tmp/tmprk7gw2jf.d(21): Error: no property `find` for type `string`\n/tmp/tmprk7gw2jf.d(23): Error: slice `str2` is not mutable\n/tmp/tmprk7gw2jf.d(28): Error: slice `str2` is not mutable\n/tmp/tmprk7gw2jf.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprk7gw2jf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint j = 0;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr1[j] = str2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpm7e4dm46.d(14): Error: no property `canFind` for type `string`\n/tmp/tmpm7e4dm46.d(19): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpm7e4dm46.d(23): Error: no property `canFind` for type `string`\n/tmp/tmpm7e4dm46.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm7e4dm46.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpvw5zfmpg.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvw5zfmpg.d(16): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(18): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(21): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(23): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(28): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw5zfmpg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile(i < j) \n\t{\n\t\tif(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpqeb1gy51.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpqeb1gy51.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpqeb1gy51.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqeb1gy51.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\t// create a list of vowels\n\tstring vowels = \"aeiouAEIOU\";\n\t// create a list of the vowels in the string\n\tstring[] vowels_in_str1 = str1.filter!(a => vowels.canFind(a));\n\t// create a list of the vowels in the string in reverse order\n\tstring[] vowels_in_str1_reversed = vowels_in_str1.reverse();\n\t// create a list of the characters in the string\n\tstring[] chars_in_str1 = str1.split(\"\");\n\t// create a list of the characters in the string with the vowels replaced by the reversed vowels\n\tstring[] chars_in_str1_reversed = chars_in_str1.map!(a => (vowels.canFind(a)) ? vowels_in_str1_reversed.popFront() : a);\n\t// return the string with the reversed vowels\n\treturn chars_in_str1_reversed.join(\"\");\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp4aug9t8o.d(13): Error: no property `filter` for type `string`\n/tmp/tmp4aug9t8o.d(15): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp4aug9t8o.d(17): Error: no property `split` for type `string`\n/tmp/tmp4aug9t8o.d(19): Error: no property `map` for type `string[]`\n/tmp/tmp4aug9t8o.d(21): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4aug9t8o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpeizg55uz.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpeizg55uz.d(16): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(18): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(21): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(23): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeizg55uz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpdoaqp0jb.d(11): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpdoaqp0jb.d(17): Error: no property `find` for type `string`\n/tmp/tmpdoaqp0jb.d(21): Error: no property `find` for type `string`\n/tmp/tmpdoaqp0jb.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpdoaqp0jb.d(28): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdoaqp0jb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiou\";\n\tforeach (c; str1)\n\t{\n\t\tif (vowels.find(c) == -1)\n\t\t\tstr2 ~= c;\n\t}\n\t\n\tstring str3 = \"\";\n\tforeach (c; str1)\n\t{\n\t\tif (vowels.find(c) != -1)\n\t\t\tstr3 ~= c;\n\t}\n\t\n\tstr3 = str3.dup.reverse;\n\t\n\tint i = 0;\n\tforeach (c; str1)\n\t{\n\t\tif (vowels.find(c) != -1)\n\t\t{\n\t\t\tstr2[i] = str3[0];\n\t\t\tstr3 = str3[1..$];\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpnz4o4to6.d(14): Error: no property `find` for type `string`\n/tmp/tmpnz4o4to6.d(21): Error: no property `find` for type `string`\n/tmp/tmpnz4o4to6.d(25): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpnz4o4to6.d(30): Error: no property `find` for type `string`\n/tmp/tmpnz4o4to6.d(32): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnz4o4to6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str2 ~ str1[j] ~ str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tstr2 = str2 ~ str1[i] ~ str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str2 ~ str1[j] ~ str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 = str2 ~ str1[i] ~ str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 = str2 ~ str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpks62mvxj.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpks62mvxj.d(16): Error: no property `find` for type `string`\n/tmp/tmpks62mvxj.d(16): Error: no property `find` for type `string`\n/tmp/tmpks62mvxj.d(22): Error: no property `find` for type `string`\n/tmp/tmpks62mvxj.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpks62mvxj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpslh6rg73.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpslh6rg73.d(16): Error: no property `find` for type `string`\n/tmp/tmpslh6rg73.d(18): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(21): Error: no property `find` for type `string`\n/tmp/tmpslh6rg73.d(23): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(28): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpslh6rg73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length-1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp0a8jkmql.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp0a8jkmql.d(16): Error: no property `find` for type `string`\n/tmp/tmp0a8jkmql.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a8jkmql.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tresult += str1[start];\n\t\t\tstart++;\n\t\t}\n\t\telse if (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t\tstart++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp2rhvxlfp.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2rhvxlfp.d(16): Error: no property `find` for type `string`\n/tmp/tmp2rhvxlfp.d(18): Error: slice `result` is not mutable\n/tmp/tmp2rhvxlfp.d(21): Error: no property `find` for type `string`\n/tmp/tmp2rhvxlfp.d(23): Error: slice `result` is not mutable\n/tmp/tmp2rhvxlfp.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rhvxlfp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\twhile(start < end)\n\t{\n\t\tif(vowels.find(str1[start]) == -1)\n\t\t{\n\t\t\tresult ~= str1[start];\n\t\t\tstart++;\n\t\t}\n\t\telse if(vowels.find(str1[end]) == -1)\n\t\t{\n\t\t\tresult ~= str1[end];\n\t\t\tend--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[end];\n\t\t\tend--;\n\t\t\tstart++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmprd4hh786.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmprd4hh786.d(16): Error: no property `find` for type `string`\n/tmp/tmprd4hh786.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprd4hh786.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tstr2[j] = str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2[i] = str1[i];\n\t\t\tstr2[j] = str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2[i] = str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp9yrtg6bz.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp9yrtg6bz.d(16): Error: no property `find` for type `string`\n/tmp/tmp9yrtg6bz.d(16): Error: no property `find` for type `string`\n/tmp/tmp9yrtg6bz.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp9yrtg6bz.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmp9yrtg6bz.d(23): Error: no property `find` for type `string`\n/tmp/tmp9yrtg6bz.d(25): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmp9yrtg6bz.d(28): Error: no property `find` for type `string`\n/tmp/tmp9yrtg6bz.d(30): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp9yrtg6bz.d(35): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp9yrtg6bz.d(36): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmp9yrtg6bz.d(43): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\nFailed: [\"dmd\", ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbre7piv_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbre7piv_.d(16): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(21): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbre7piv_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tresult += str1[start];\n\t\t\tstart++;\n\t\t} \n\t\telse if (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t\tstart++;\n\t\t}\n\t}\n\tif (start == end) \n\t{\n\t\tresult += str1[start];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp52o53nk4.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp52o53nk4.d(16): Error: no property `find` for type `string`\n/tmp/tmp52o53nk4.d(18): Error: slice `result` is not mutable\n/tmp/tmp52o53nk4.d(21): Error: no property `find` for type `string`\n/tmp/tmp52o53nk4.d(23): Error: slice `result` is not mutable\n/tmp/tmp52o53nk4.d(28): Error: slice `result` is not mutable\n/tmp/tmp52o53nk4.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp52o53nk4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpjq00eyc9.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpjq00eyc9.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpjq00eyc9.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjq00eyc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpjq00eyc9.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpjq00eyc9.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpjq00eyc9.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjq00eyc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) {\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpz0iytyey.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpz0iytyey.d(15): Error: no property `find` for type `string`\n/tmp/tmpz0iytyey.d(19): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0iytyey.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2;\n\tint[] vowels = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpzw8evudd.d(12): Error: expression expected, not `unittest`\n/tmp/tmpzw8evudd.d(13): Error: comma expected separating array initializers, not `{`\n/tmp/tmpzw8evudd.d(20): Error: comma expected separating array initializers, not `void`\n/tmp/tmpzw8evudd.d(20): Error: semicolon expected, not `main`\n/tmp/tmpzw8evudd.d(20): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzw8evudd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp03p6wp10.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp03p6wp10.d(16): Error: no property `find` for type `string`\n/tmp/tmp03p6wp10.d(18): Error: slice `result` is not mutable\n/tmp/tmp03p6wp10.d(21): Error: no property `find` for type `string`\n/tmp/tmp03p6wp10.d(23): Error: slice `result` is not mutable\n/tmp/tmp03p6wp10.d(28): Error: slice `result` is not mutable\n/tmp/tmp03p6wp10.d(34): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp03p6wp10.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsxsdeehw.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsxsdeehw.d(16): Error: no property `find` for type `string`\n/tmp/tmpsxsdeehw.d(18): Error: slice `result` is not mutable\n/tmp/tmpsxsdeehw.d(21): Error: no property `find` for type `string`\n/tmp/tmpsxsdeehw.d(23): Error: slice `result` is not mutable\n/tmp/tmpsxsdeehw.d(28): Error: slice `result` is not mutable\n/tmp/tmpsxsdeehw.d(34): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsxsdeehw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring vowels = \"aeiouAEIOU\";\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\tstr1[j] = str1[i] ^ str1[j];\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp2kgzg4zs.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2kgzg4zs.d(15): Error: no property `find` for type `string`\n/tmp/tmp2kgzg4zs.d(19): Error: no property `find` for type `string`\n/tmp/tmp2kgzg4zs.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp2kgzg4zs.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp2kgzg4zs.d(27): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2kgzg4zs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpvw5zfmpg.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvw5zfmpg.d(16): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(18): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(21): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(23): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(28): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw5zfmpg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp72_2n5ug.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp72_2n5ug.d(16): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(18): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(21): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(23): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(28): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72_2n5ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpgz00v6tw.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpgz00v6tw.d(16): Error: no property `find` for type `string`\n/tmp/tmpgz00v6tw.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz00v6tw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpfq48kaa3.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfq48kaa3.d(16): Error: no property `find` for type `string`\n/tmp/tmpfq48kaa3.d(18): Error: slice `str2` is not mutable\n/tmp/tmpfq48kaa3.d(21): Error: no property `find` for type `string`\n/tmp/tmpfq48kaa3.d(23): Error: slice `str2` is not mutable\n/tmp/tmpfq48kaa3.d(28): Error: slice `str2` is not mutable\n/tmp/tmpfq48kaa3.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq48kaa3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp2ijtvf2s.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2ijtvf2s.d(16): Error: no property `find` for type `string`\n/tmp/tmp2ijtvf2s.d(16): Error: no property `find` for type `string`\n/tmp/tmp2ijtvf2s.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp2ijtvf2s.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp2ijtvf2s.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp2ijtvf2s.d(24): Error: no property `find` for type `string`\n/tmp/tmp2ijtvf2s.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ijtvf2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp74sqr4ix.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp74sqr4ix.d(16): Error: no property `find` for type `string`\n/tmp/tmp74sqr4ix.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74sqr4ix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} else if (vowels.find(str1[j]) == -1) {\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} else {\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) {\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpv_8dsye3.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpv_8dsye3.d(15): Error: no property `find` for type `string`\n/tmp/tmpv_8dsye3.d(16): Error: slice `result` is not mutable\n/tmp/tmpv_8dsye3.d(18): Error: no property `find` for type `string`\n/tmp/tmpv_8dsye3.d(19): Error: slice `result` is not mutable\n/tmp/tmpv_8dsye3.d(22): Error: slice `result` is not mutable\n/tmp/tmpv_8dsye3.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_8dsye3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr2[i] = str1[j];\n\t\tstr2[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp3bhrhgnh.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp3bhrhgnh.d(16): Error: no property `find` for type `string`\n/tmp/tmp3bhrhgnh.d(21): Error: no property `find` for type `string`\n/tmp/tmp3bhrhgnh.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp3bhrhgnh.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3bhrhgnh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpeizg55uz.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpeizg55uz.d(16): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(18): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(21): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(23): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeizg55uz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1 && vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbxjnx6f0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbxjnx6f0.d(16): Error: no property `find` for type `string`\n/tmp/tmpbxjnx6f0.d(16): Error: no property `find` for type `string`\n/tmp/tmpbxjnx6f0.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpbxjnx6f0.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpbxjnx6f0.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpbxjnx6f0.d(24): Error: no property `find` for type `string`\n/tmp/tmpbxjnx6f0.d(24): Error: no property `find` for type `string`\n/tmp/tmpbxjnx6f0.d(28): Error: no property `find` for type `string`\n/tmp/tmpbxjnx6f0.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxjnx6f0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp2803dbe2.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2803dbe2.d(16): Error: no property `find` for type `string`\n/tmp/tmp2803dbe2.d(18): Error: slice `result` is not mutable\n/tmp/tmp2803dbe2.d(21): Error: no property `find` for type `string`\n/tmp/tmp2803dbe2.d(23): Error: slice `result` is not mutable\n/tmp/tmp2803dbe2.d(28): Error: slice `result` is not mutable\n/tmp/tmp2803dbe2.d(34): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2803dbe2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiouAEIOU\";\n\tforeach(c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr1[i] = str2[0];\n\t\t\tstr2 = str2[1..$];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpo7iuhtoc.d(14): Error: no property `canFind` for type `string`\n/tmp/tmpo7iuhtoc.d(19): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpo7iuhtoc.d(23): Error: no property `canFind` for type `string`\n/tmp/tmpo7iuhtoc.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo7iuhtoc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint j = 0;\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tresult ~= str1[$-i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp9rleb_87.d(15): Error: no property `canFind` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rleb_87.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpimf_yx2t.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpimf_yx2t.d(16): Error: no property `find` for type `string`\n/tmp/tmpimf_yx2t.d(18): Error: slice `result` is not mutable\n/tmp/tmpimf_yx2t.d(21): Error: no property `find` for type `string`\n/tmp/tmpimf_yx2t.d(23): Error: slice `result` is not mutable\n/tmp/tmpimf_yx2t.d(28): Error: slice `result` is not mutable\n/tmp/tmpimf_yx2t.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimf_yx2t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if(vowels.find(str1[i]) != -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if(vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpm_7wdb4i.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpm_7wdb4i.d(16): Error: no property `find` for type `string`\n/tmp/tmpm_7wdb4i.d(16): Error: no property `find` for type `string`\n/tmp/tmpm_7wdb4i.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpm_7wdb4i.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmpm_7wdb4i.d(23): Error: no property `find` for type `string`\n/tmp/tmpm_7wdb4i.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_7wdb4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring str3 = \"\";\n\tstring str4 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr3 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint i = 0;\n\tforeach(char c; str1)\n\t{\n\t\tif(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n\t\t{\n\t\t\tstr4 ~= str2[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr4 ~= c;\n\t\t}\n\t}\n\treturn str4;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpde784fp8.d(24): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpde784fp8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpda0md3y9.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpda0md3y9.d(16): Error: no property `find` for type `string`\n/tmp/tmpda0md3y9.d(16): Error: no property `find` for type `string`\n/tmp/tmpda0md3y9.d(18): Error: slice `result` is not mutable\n/tmp/tmpda0md3y9.d(21): Error: no property `find` for type `string`\n/tmp/tmpda0md3y9.d(23): Error: slice `result` is not mutable\n/tmp/tmpda0md3y9.d(25): Error: no property `find` for type `string`\n/tmp/tmpda0md3y9.d(27): Error: slice `result` is not mutable\n/tmp/tmpda0md3y9.d(32): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpda0md3y9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpaucy5xp4.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpaucy5xp4.d(16): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(16): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(18): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(21): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(23): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(26): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(28): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaucy5xp4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tchar[] str2 = str1.dup;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str2[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str2[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str2[i], str2[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2.idup;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpykyu_eg4.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpykyu_eg4.d(16): Error: no property `find` for type `string`\n/tmp/tmpykyu_eg4.d(21): Error: no property `find` for type `string`\n/tmp/tmpykyu_eg4.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpykyu_eg4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpgz00v6tw.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpgz00v6tw.d(16): Error: no property `find` for type `string`\n/tmp/tmpgz00v6tw.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz00v6tw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpjq00eyc9.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpjq00eyc9.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpjq00eyc9.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjq00eyc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpfvfgsjw7.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfvfgsjw7.d(16): Error: no property `find` for type `string`\n/tmp/tmpfvfgsjw7.d(18): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(21): Error: no property `find` for type `string`\n/tmp/tmpfvfgsjw7.d(23): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(28): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvfgsjw7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp72_2n5ug.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp72_2n5ug.d(16): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(18): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(21): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(23): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(28): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72_2n5ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\tstr1[j] = str1[i] ^ str1[j];\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmppjyg_81_.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmppjyg_81_.d(15): Error: no property `find` for type `string`\n/tmp/tmppjyg_81_.d(19): Error: no property `find` for type `string`\n/tmp/tmppjyg_81_.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmppjyg_81_.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmppjyg_81_.d(27): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppjyg_81_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpmxu_3zkt.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpmxu_3zkt.d(16): Error: no property `find` for type `string`\n/tmp/tmpmxu_3zkt.d(18): Error: slice `result` is not mutable\n/tmp/tmpmxu_3zkt.d(21): Error: no property `find` for type `string`\n/tmp/tmpmxu_3zkt.d(23): Error: slice `result` is not mutable\n/tmp/tmpmxu_3zkt.d(28): Error: slice `result` is not mutable\n/tmp/tmpmxu_3zkt.d(29): Error: slice `result` is not mutable\n/tmp/tmpmxu_3zkt.d(36): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmxu_3zkt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpkg9rslm_.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpkg9rslm_.d(15): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(19): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpkg9rslm_.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkg9rslm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring vowels = \"aeiouAEIOU\";\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(str1[i], str1[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbdn17bdk.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbdn17bdk.d(15): Error: no property `find` for type `string`\n/tmp/tmpbdn17bdk.d(19): Error: no property `find` for type `string`\n/tmp/tmpbdn17bdk.d(25): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbdn17bdk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr1 = str1[0..i] ~ str1[j] ~ str1[i + 1..j - 1] ~ str1[i] ~ str1[j + 1..$];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp4g9506ph.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp4g9506ph.d(15): Error: no property `find` for type `string`\n/tmp/tmp4g9506ph.d(20): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4g9506ph.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpwy8pe0zf.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpwy8pe0zf.d(16): Error: no property `find` for type `string`\n/tmp/tmpwy8pe0zf.d(16): Error: no property `find` for type `string`\n/tmp/tmpwy8pe0zf.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpwy8pe0zf.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpwy8pe0zf.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpwy8pe0zf.d(24): Error: no property `find` for type `string`\n/tmp/tmpwy8pe0zf.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwy8pe0zf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp1xw9wigx.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp1xw9wigx.d(16): Error: no property `find` for type `string`\n/tmp/tmp1xw9wigx.d(21): Error: no property `find` for type `string`\n/tmp/tmp1xw9wigx.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmp1xw9wigx.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1xw9wigx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr2[i] = str1[j];\n\t\tstr2[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmptudommuq.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmptudommuq.d(16): Error: no property `find` for type `string`\n/tmp/tmptudommuq.d(21): Error: no property `find` for type `string`\n/tmp/tmptudommuq.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmptudommuq.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptudommuq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiouAEIOU\";\n\tforeach(char c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint i = 0;\n\tforeach(char c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tstr1[i] = str2[0];\n\t\t\tstr2 = str2[1..$];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp569flnat.d(14): Error: no property `find` for type `string`\n/tmp/tmp569flnat.d(19): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp569flnat.d(23): Error: no property `find` for type `string`\n/tmp/tmp569flnat.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp569flnat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) {\n\t\t\tswap(str1[i], str1[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t} else if (vowels.find(str1[i]) != -1) {\n\t\t\tj--;\n\t\t} else if (vowels.find(str1[j]) != -1) {\n\t\t\ti++;\n\t\t} else {\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpq46cxzsa.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpq46cxzsa.d(15): Error: no property `find` for type `string`\n/tmp/tmpq46cxzsa.d(15): Error: no property `find` for type `string`\n/tmp/tmpq46cxzsa.d(16): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpq46cxzsa.d(19): Error: no property `find` for type `string`\n/tmp/tmpq46cxzsa.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq46cxzsa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint left = 0;\n\tint right = str1.length - 1;\n\twhile (left < right) \n\t{\n\t\tif (vowels.find(str1[left]) == -1) \n\t\t{\n\t\t\tleft++;\n\t\t} \n\t\telse if (vowels.find(str1[right]) == -1) \n\t\t{\n\t\t\tright--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[left] = str1[right];\n\t\t\tresult[right] = str1[left];\n\t\t\tleft++;\n\t\t\tright--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpmw6sha3c.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpmw6sha3c.d(16): Error: no property `find` for type `string`\n/tmp/tmpmw6sha3c.d(20): Error: no property `find` for type `string`\n/tmp/tmpmw6sha3c.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)left]`\n/tmp/tmpmw6sha3c.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)right]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmw6sha3c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsdblqkaa.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsdblqkaa.d(16): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(21): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpsdblqkaa.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdblqkaa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2 = str1[i];\n\t\t\t\tstr1[i] = str1[j];\n\t\t\t\tstr1[j] = str2;\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpeyeladil.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpeyeladil.d(19): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpeyeladil.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpeyeladil.d(21): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeyeladil.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbre7piv_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbre7piv_.d(16): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(21): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbre7piv_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i, j;\n\tstring str2;\n\tstr2 = str1;\n\t\n\tforeach(c; str1)\n\t{\n\t\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n\t\t{\n\t\t\tstr2[i] = c;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tforeach(c; str1)\n\t{\n\t\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n\t\t{\n\t\t\tstr2[j] = str2[i];\n\t\t\ti--;\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2[j] = c;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpp47oacvd.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpp47oacvd.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmpp47oacvd.d(33): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp47oacvd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[i] = str1[j];\n\t\t\tresult[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpsbg66r10.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsbg66r10.d(16): Error: no property `find` for type `string`\n/tmp/tmpsbg66r10.d(20): Error: no property `find` for type `string`\n/tmp/tmpsbg66r10.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpsbg66r10.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsbg66r10.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tint[] vowels = [97, 101, 105, 111, 117, 121];\n\tint[] vowels_index = [];\n\tforeach(int i; 0..str1.length)\n\t{\n\t\tforeach(int j; vowels)\n\t\t{\n\t\t\tif(str1[i] == j)\n\t\t\t{\n\t\t\t\tvowels_index ~= i;\n\t\t\t}\n\t\t}\n\t}\n\tforeach(int i; 0..str1.length)\n\t{\n\t\tif(vowels_index.length == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(i == vowels_index[0])\n\t\t\t{\n\t\t\t\tstr2 ~= str1[vowels_index[vowels_index.length - 1]];\n\t\t\t\tvowels_index.popFront();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr2 ~= str1[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp6a4bxsfv.d(13): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmp6a4bxsfv.d(23): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6a4bxsfv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tresult += str1[start];\n\t\t\tstart++;\n\t\t}\n\t\telse if (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[end];\n\t\t\tend--;\n\t\t\tstart++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp2rhvxlfp.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2rhvxlfp.d(16): Error: no property `find` for type `string`\n/tmp/tmp2rhvxlfp.d(18): Error: slice `result` is not mutable\n/tmp/tmp2rhvxlfp.d(21): Error: no property `find` for type `string`\n/tmp/tmp2rhvxlfp.d(23): Error: slice `result` is not mutable\n/tmp/tmp2rhvxlfp.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rhvxlfp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring vowels = \"aeiouAEIOU\";\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpgmhek_3v.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpgmhek_3v.d(15): Error: no property `find` for type `string`\n/tmp/tmpgmhek_3v.d(19): Error: no property `find` for type `string`\n/tmp/tmpgmhek_3v.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpgmhek_3v.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmhek_3v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.canFind(str1[i]) && vowels.canFind(str1[j])) \n\t\t{\n\t\t\tresult[i] = str1[j];\n\t\t\tresult[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.canFind(str1[i])) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.canFind(str1[j])) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpdyeqivrq.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpdyeqivrq.d(16): Error: no property `canFind` for type `string`\n/tmp/tmpdyeqivrq.d(16): Error: no property `canFind` for type `string`\n/tmp/tmpdyeqivrq.d(18): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpdyeqivrq.d(19): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\n/tmp/tmpdyeqivrq.d(23): Error: no property `canFind` for type `string`\n/tmp/tmpdyeqivrq.d(27): Error: no property `canFind` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdyeqivrq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\tstring result = str1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tstart++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tend--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[start] = str1[end];\n\t\tresult[end] = str1[start];\n\t\tstart++;\n\t\tend--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpx7drw2_e.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpx7drw2_e.d(16): Error: no property `find` for type `string`\n/tmp/tmpx7drw2_e.d(21): Error: no property `find` for type `string`\n/tmp/tmpx7drw2_e.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)start]`\n/tmp/tmpx7drw2_e.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)end]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx7drw2_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbre7piv_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbre7piv_.d(16): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(21): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbre7piv_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring ret = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tret[i] = str1[j];\n\t\tret[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmptvxjc3vd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmptvxjc3vd.d(16): Error: no property `find` for type `string`\n/tmp/tmptvxjc3vd.d(21): Error: no property `find` for type `string`\n/tmp/tmptvxjc3vd.d(26): Error: cannot modify `immutable` expression `ret[cast(ulong)i]`\n/tmp/tmptvxjc3vd.d(27): Error: cannot modify `immutable` expression `ret[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvxjc3vd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t\ti++;\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t\tj--;\n\t\telse\n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpel_edowl.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpel_edowl.d(16): Error: no property `find` for type `string`\n/tmp/tmpel_edowl.d(18): Error: no property `find` for type `string`\n/tmp/tmpel_edowl.d(22): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpel_edowl.d(23): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpel_edowl.d(24): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpel_edowl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tstring str3 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint j = 0;\n\tforeach(char c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tstr3 ~= str2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr3 ~= c;\n\t\t}\n\t}\n\treturn str3;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp2zedpf2z.d(15): Error: no property `find` for type `string`\n/tmp/tmp2zedpf2z.d(20): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp2zedpf2z.d(24): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2zedpf2z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiou\";\n\tint[] vowel_index = new int[str1.length];\n\tint j = 0;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (vowels.find(str1[i]) != -1)\n\t\t{\n\t\t\tvowel_index[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (vowels.find(str1[i]) != -1)\n\t\t{\n\t\t\tstr2 ~= str1[vowel_index[j-1]];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpo2xr8jiw.d(16): Error: no property `find` for type `string`\n/tmp/tmpo2xr8jiw.d(24): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2xr8jiw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpvw5zfmpg.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpvw5zfmpg.d(16): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(18): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(21): Error: no property `find` for type `string`\n/tmp/tmpvw5zfmpg.d(23): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(28): Error: slice `str2` is not mutable\n/tmp/tmpvw5zfmpg.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw5zfmpg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp16m9ofel.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp16m9ofel.d(16): Error: no property `find` for type `string`\n/tmp/tmp16m9ofel.d(18): Error: slice `result` is not mutable\n/tmp/tmp16m9ofel.d(21): Error: no property `find` for type `string`\n/tmp/tmp16m9ofel.d(23): Error: slice `result` is not mutable\n/tmp/tmp16m9ofel.d(28): Error: slice `result` is not mutable\n/tmp/tmp16m9ofel.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16m9ofel.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpgz00v6tw.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpgz00v6tw.d(16): Error: no property `find` for type `string`\n/tmp/tmpgz00v6tw.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz00v6tw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tint[] vowels = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsam21kkm.d(12): Error: expression expected, not `unittest`\n/tmp/tmpsam21kkm.d(13): Error: comma expected separating array initializers, not `{`\n/tmp/tmpsam21kkm.d(20): Error: comma expected separating array initializers, not `void`\n/tmp/tmpsam21kkm.d(20): Error: semicolon expected, not `main`\n/tmp/tmpsam21kkm.d(20): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsam21kkm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tif (vowels.find(str1[j]) != -1) \n\t\t\t{\n\t\t\t\tswap(str1[i], str1[j]);\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmptvzo1xu0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmptvzo1xu0.d(16): Error: no property `find` for type `string`\n/tmp/tmptvzo1xu0.d(18): Error: no property `find` for type `string`\n/tmp/tmptvzo1xu0.d(20): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvzo1xu0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr2[i] = str1[j];\n\t\tstr2[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpn8p8jnh0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpn8p8jnh0.d(16): Error: no property `find` for type `string`\n/tmp/tmpn8p8jnh0.d(21): Error: no property `find` for type `string`\n/tmp/tmpn8p8jnh0.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpn8p8jnh0.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn8p8jnh0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tchar[] str = str1.dup;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str[i], str[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpjdjbm8ky.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpjdjbm8ky.d(16): Error: no property `find` for type `string`\n/tmp/tmpjdjbm8ky.d(21): Error: no property `find` for type `string`\n/tmp/tmpjdjbm8ky.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpjdjbm8ky.d(30): Error: cannot implicitly convert expression `str` of type `char[]` to `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjdjbm8ky.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2[i] = str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2[j] = str1[j];\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp6aap38v2.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp6aap38v2.d(16): Error: no property `find` for type `string`\n/tmp/tmp6aap38v2.d(16): Error: no property `find` for type `string`\n/tmp/tmp6aap38v2.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp6aap38v2.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmp6aap38v2.d(23): Error: no property `find` for type `string`\n/tmp/tmp6aap38v2.d(25): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp6aap38v2.d(28): Error: no property `find` for type `string`\n/tmp/tmp6aap38v2.d(30): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6aap38v2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint left = 0;\n\tint right = str1.length - 1;\n\twhile (left < right) \n\t{\n\t\tif (vowels.find(str1[left]) == -1) \n\t\t{\n\t\t\tresult += str1[left];\n\t\t\tleft++;\n\t\t}\n\t\telse if (vowels.find(str1[right]) == -1) \n\t\t{\n\t\t\tresult += str1[right];\n\t\t\tright--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[right];\n\t\t\tright--;\n\t\t\tleft++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpx_vjw997.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpx_vjw997.d(16): Error: no property `find` for type `string`\n/tmp/tmpx_vjw997.d(18): Error: slice `result` is not mutable\n/tmp/tmpx_vjw997.d(21): Error: no property `find` for type `string`\n/tmp/tmpx_vjw997.d(23): Error: slice `result` is not mutable\n/tmp/tmpx_vjw997.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_vjw997.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpz00a5dqk.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpz00a5dqk.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpz00a5dqk.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz00a5dqk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(vowels.canFind(ch))\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\t\n\tresult = result.dup.reverse;\n\t\n\tint j = 0;\n\tforeach(i, ch; str1)\n\t{\n\t\tif(vowels.canFind(ch))\n\t\t{\n\t\t\tstr1[i] = result[j];\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp1pc54ddg.d(14): Error: no property `canFind` for type `string`\n/tmp/tmp1pc54ddg.d(20): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp1pc54ddg.d(25): Error: no property `canFind` for type `string`\n/tmp/tmp1pc54ddg.d(27): Error: cannot modify `immutable` expression `str1[i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pc54ddg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp8vrsdsd7.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8vrsdsd7.d(16): Error: no property `find` for type `string`\n/tmp/tmp8vrsdsd7.d(16): Error: no property `find` for type `string`\n/tmp/tmp8vrsdsd7.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp8vrsdsd7.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp8vrsdsd7.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp8vrsdsd7.d(24): Error: no property `find` for type `string`\n/tmp/tmp8vrsdsd7.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8vrsdsd7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr1[i] = str1[j];\n\t\tstr1[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp3jx2_hu3.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp3jx2_hu3.d(15): Error: no property `find` for type `string`\n/tmp/tmp3jx2_hu3.d(20): Error: no property `find` for type `string`\n/tmp/tmp3jx2_hu3.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp3jx2_hu3.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jx2_hu3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if(vowels.find(str1[i]) != -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if(vowels.find(str1[j]) != -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp4c2a2bjy.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp4c2a2bjy.d(16): Error: no property `find` for type `string`\n/tmp/tmp4c2a2bjy.d(16): Error: no property `find` for type `string`\n/tmp/tmp4c2a2bjy.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp4c2a2bjy.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp4c2a2bjy.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp4c2a2bjy.d(24): Error: no property `find` for type `string`\n/tmp/tmp4c2a2bjy.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4c2a2bjy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpwogst9t5.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpwogst9t5.d(16): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(16): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(18): Error: slice `result` is not mutable\n/tmp/tmpwogst9t5.d(21): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(21): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(23): Error: slice `result` is not mutable\n/tmp/tmpwogst9t5.d(26): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(26): Error: no property `find` for type `string`\n/tmp/tmpwogst9t5.d(28): Error: slice `result` is not mutable\n/tmp/tmpwogst9t5.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwogst9t5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiouAEIOU\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint j = 0;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr1[j] = str2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmplc13yz0_.d(14): Error: no property `canFind` for type `string`\n/tmp/tmplc13yz0_.d(19): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmplc13yz0_.d(23): Error: no property `canFind` for type `string`\n/tmp/tmplc13yz0_.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc13yz0_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiouAEIOU\";\n\tforeach(char c; str1)\n\t{\n\t\tif (vowels.find(c) != -1)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint j = 0;\n\tforeach(i, char c; str1)\n\t{\n\t\tif (vowels.find(c) != -1)\n\t\t{\n\t\t\tstr1[i] = str2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpkoz5feud.d(14): Error: no property `find` for type `string`\n/tmp/tmpkoz5feud.d(19): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpkoz5feud.d(23): Error: no property `find` for type `string`\n/tmp/tmpkoz5feud.d(25): Error: cannot modify `immutable` expression `str1[i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkoz5feud.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = result ~ str1[j] ~ str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult = result ~ str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult = result ~ str1[j];\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmph76xogf2.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmph76xogf2.d(16): Error: no property `find` for type `string`\n/tmp/tmph76xogf2.d(16): Error: no property `find` for type `string`\n/tmp/tmph76xogf2.d(22): Error: no property `find` for type `string`\n/tmp/tmph76xogf2.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph76xogf2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = result ~ str1[j] ~ str1[i];\n\t\t\ti += 1;\n\t\t\tj -= 1;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult = result ~ str1[i] ~ str1[j];\n\t\t\ti += 1;\n\t\t\tj -= 1;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = result ~ str1[j] ~ str1[i];\n\t\t\ti += 1;\n\t\t\tj -= 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = result ~ str1[i] ~ str1[j];\n\t\t\ti += 1;\n\t\t\tj -= 1;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult = result ~ str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp7ea54ckf.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp7ea54ckf.d(16): Error: no property `find` for type `string`\n/tmp/tmp7ea54ckf.d(16): Error: no property `find` for type `string`\n/tmp/tmp7ea54ckf.d(22): Error: no property `find` for type `string`\n/tmp/tmp7ea54ckf.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ea54ckf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpqhof3ia_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpqhof3ia_.d(16): Error: no property `find` for type `string`\n/tmp/tmpqhof3ia_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(21): Error: no property `find` for type `string`\n/tmp/tmpqhof3ia_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhof3ia_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp_o3pq66_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp_o3pq66_.d(16): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(16): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp_o3pq66_.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp_o3pq66_.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp_o3pq66_.d(24): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_o3pq66_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpdoaqp0jb.d(11): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpdoaqp0jb.d(17): Error: no property `find` for type `string`\n/tmp/tmpdoaqp0jb.d(21): Error: no property `find` for type `string`\n/tmp/tmpdoaqp0jb.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpdoaqp0jb.d(28): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdoaqp0jb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[j] ~ result;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult = str1[j] ~ result;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i] ~ result;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = str1[i] ~ result;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp__rxovsn.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp__rxovsn.d(16): Error: no property `find` for type `string`\n/tmp/tmp__rxovsn.d(16): Error: no property `find` for type `string`\n/tmp/tmp__rxovsn.d(21): Error: no property `find` for type `string`\n/tmp/tmp__rxovsn.d(26): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp__rxovsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) {\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) {\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpx6hr36l0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpx6hr36l0.d(15): Error: no property `find` for type `string`\n/tmp/tmpx6hr36l0.d(16): Error: slice `str2` is not mutable\n/tmp/tmpx6hr36l0.d(19): Error: no property `find` for type `string`\n/tmp/tmpx6hr36l0.d(20): Error: slice `str2` is not mutable\n/tmp/tmpx6hr36l0.d(24): Error: slice `str2` is not mutable\n/tmp/tmpx6hr36l0.d(30): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx6hr36l0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint j = 0;\n\tint[] vowel_pos = new int[str1.length];\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.indexOf(c) != -1)\n\t\t{\n\t\t\tvowel_pos[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\tint[] vowel_pos_reversed = vowel_pos[$-1..0];\n\tint k = 0;\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.indexOf(c) != -1)\n\t\t{\n\t\t\tresult ~= str1[vowel_pos_reversed[k]];\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpmzny1mp2.d(16): Error: no property `indexOf` for type `string`\n/tmp/tmpmzny1mp2.d(18): Error: cannot implicitly convert expression `i` of type `ulong` to `int`\n/tmp/tmpmzny1mp2.d(26): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzny1mp2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr1[i] = str1[j];\n\t\tstr1[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp3jx2_hu3.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp3jx2_hu3.d(15): Error: no property `find` for type `string`\n/tmp/tmp3jx2_hu3.d(20): Error: no property `find` for type `string`\n/tmp/tmp3jx2_hu3.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp3jx2_hu3.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jx2_hu3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint j = 0;\n\tint[] vowel_indexes = new int[str1.length];\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tvowel_indexes[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tresult ~= str1[vowel_indexes[j-1]];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpzg7qrq9m.d(16): Error: no property `find` for type `string`\n/tmp/tmpzg7qrq9m.d(18): Error: cannot implicitly convert expression `i` of type `ulong` to `int`\n/tmp/tmpzg7qrq9m.d(25): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzg7qrq9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpaucy5xp4.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpaucy5xp4.d(16): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(16): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(18): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(21): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(23): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(26): Error: no property `find` for type `string`\n/tmp/tmpaucy5xp4.d(28): Error: slice `result` is not mutable\n/tmp/tmpaucy5xp4.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaucy5xp4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpz00a5dqk.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpz00a5dqk.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpz00a5dqk.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz00a5dqk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\tstr1[j] = str1[i] ^ str1[j];\n\t\t\tstr1[i] = str1[i] ^ str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp5y97myfn.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp5y97myfn.d(15): Error: no property `find` for type `string`\n/tmp/tmp5y97myfn.d(19): Error: no property `find` for type `string`\n/tmp/tmp5y97myfn.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp5y97myfn.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp5y97myfn.d(27): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5y97myfn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpiaruvrgb.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpiaruvrgb.d(16): Error: no property `find` for type `string`\n/tmp/tmpiaruvrgb.d(16): Error: no property `find` for type `string`\n/tmp/tmpiaruvrgb.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpiaruvrgb.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmpiaruvrgb.d(23): Error: no property `find` for type `string`\n/tmp/tmpiaruvrgb.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiaruvrgb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile(i < j) \n\t{\n\t\tif(vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr2[i] = str1[j];\n\t\tstr2[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpnsfvejxt.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpnsfvejxt.d(16): Error: no property `find` for type `string`\n/tmp/tmpnsfvejxt.d(21): Error: no property `find` for type `string`\n/tmp/tmpnsfvejxt.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpnsfvejxt.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsfvejxt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tchar[] str = str1.dup;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str[i], str[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpjdjbm8ky.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpjdjbm8ky.d(16): Error: no property `find` for type `string`\n/tmp/tmpjdjbm8ky.d(21): Error: no property `find` for type `string`\n/tmp/tmpjdjbm8ky.d(26): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\n/tmp/tmpjdjbm8ky.d(30): Error: cannot implicitly convert expression `str` of type `char[]` to `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjdjbm8ky.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpw23ybnto.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpw23ybnto.d(16): Error: no property `find` for type `string`\n/tmp/tmpw23ybnto.d(16): Error: no property `find` for type `string`\n/tmp/tmpw23ybnto.d(18): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpw23ybnto.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmpw23ybnto.d(23): Error: no property `find` for type `string`\n/tmp/tmpw23ybnto.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw23ybnto.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i <= j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp2x_77kco.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2x_77kco.d(16): Error: no property `find` for type `string`\n/tmp/tmp2x_77kco.d(18): Error: slice `result` is not mutable\n/tmp/tmp2x_77kco.d(21): Error: no property `find` for type `string`\n/tmp/tmp2x_77kco.d(23): Error: slice `result` is not mutable\n/tmp/tmp2x_77kco.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2x_77kco.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp_o3pq66_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp_o3pq66_.d(16): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(16): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmp_o3pq66_.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp_o3pq66_.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmp_o3pq66_.d(24): Error: no property `find` for type `string`\n/tmp/tmp_o3pq66_.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_o3pq66_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpkg9rslm_.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpkg9rslm_.d(15): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(19): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpkg9rslm_.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkg9rslm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint j = 0;\n\tint[] vowel_index = new int[str1.length];\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tvowel_index[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tresult ~= str1[vowel_index[j-1]];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpg9w_48ol.d(16): Error: no property `canFind` for type `string`\n/tmp/tmpg9w_48ol.d(18): Error: cannot implicitly convert expression `i` of type `ulong` to `int`\n/tmp/tmpg9w_48ol.d(25): Error: no property `canFind` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg9w_48ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\t\n\twhile(i < j) \n\t{\n\t\tif(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tchar temp = str1[i];\n\t\t\t\tstr1[i] = str1[j];\n\t\t\t\tstr1[j] = temp;\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp_30169db.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp_30169db.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp_30169db.d(21): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_30169db.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpslh6rg73.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpslh6rg73.d(16): Error: no property `find` for type `string`\n/tmp/tmpslh6rg73.d(18): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(21): Error: no property `find` for type `string`\n/tmp/tmpslh6rg73.d(23): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(28): Error: slice `result` is not mutable\n/tmp/tmpslh6rg73.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpslh6rg73.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp72_2n5ug.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp72_2n5ug.d(16): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(18): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(21): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(23): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(28): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72_2n5ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring result = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp72ml6j26.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp72ml6j26.d(16): Error: no property `find` for type `string`\n/tmp/tmp72ml6j26.d(21): Error: no property `find` for type `string`\n/tmp/tmp72ml6j26.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmp72ml6j26.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72ml6j26.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.find(c) != -1)\n\t\t{\n\t\t\tresult = c ~ result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp5kwlov7j.d(14): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5kwlov7j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpzita1_jx.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpzita1_jx.d(16): Error: no property `find` for type `string`\n/tmp/tmpzita1_jx.d(18): Error: slice `result` is not mutable\n/tmp/tmpzita1_jx.d(21): Error: no property `find` for type `string`\n/tmp/tmpzita1_jx.d(23): Error: slice `result` is not mutable\n/tmp/tmpzita1_jx.d(28): Error: slice `result` is not mutable\n/tmp/tmpzita1_jx.d(34): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzita1_jx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsdblqkaa.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsdblqkaa.d(16): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(21): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpsdblqkaa.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdblqkaa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmp72_2n5ug.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp72_2n5ug.d(16): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(18): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(21): Error: no property `find` for type `string`\n/tmp/tmp72_2n5ug.d(23): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(28): Error: slice `result` is not mutable\n/tmp/tmp72_2n5ug.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72_2n5ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i <= j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpd22s4f45.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpd22s4f45.d(16): Error: no property `find` for type `string`\n/tmp/tmpd22s4f45.d(16): Error: no property `find` for type `string`\n/tmp/tmpd22s4f45.d(21): Error: no property `find` for type `string`\n/tmp/tmpd22s4f45.d(26): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd22s4f45.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint[] vowels = [ 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ];\n\tint[] str1_arr = str1.dup;\n\tint[] str2_arr = str1.dup;\n\tint[] str2_arr_vowels = [];\n\tint[] str2_arr_consonants = [];\n\tint[] str2_arr_vowels_reversed = [];\n\tint[] str2_arr_consonants_reversed = [];\n\tint[] str2_arr_reversed = [];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee =\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpyvtvbrqb.d(67): Error: expression expected, not `unittest`\n/tmp/tmpyvtvbrqb.d(68): Error: semicolon expected, not `{`\n/tmp/tmpyvtvbrqb.d(75): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvtvbrqb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k0h22kd.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp8k0h22kd.d(16): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(18): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(21): Error: no property `find` for type `string`\n/tmp/tmp8k0h22kd.d(23): Error: slice `result` is not mutable\n/tmp/tmp8k0h22kd.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k0h22kd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tswap(str1[i], str1[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp29b3kkxa.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp29b3kkxa.d(15): Error: no property `find` for type `string`\n/tmp/tmp29b3kkxa.d(19): Error: no property `find` for type `string`\n/tmp/tmp29b3kkxa.d(25): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29b3kkxa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.canFind(str1[i]) && vowels.canFind(str1[j])) \n\t\t{\n\t\t\tresult[i] = str1[j];\n\t\t\tresult[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.canFind(str1[i])) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.canFind(str1[j])) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpnotn9bn_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpnotn9bn_.d(16): Error: no property `canFind` for type `string`\n/tmp/tmpnotn9bn_.d(16): Error: no property `canFind` for type `string`\n/tmp/tmpnotn9bn_.d(18): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpnotn9bn_.d(19): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\n/tmp/tmpnotn9bn_.d(23): Error: no property `canFind` for type `string`\n/tmp/tmpnotn9bn_.d(27): Error: no property `canFind` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnotn9bn_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpl6jb11vw.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpl6jb11vw.d(16): Error: no property `find` for type `string`\n/tmp/tmpl6jb11vw.d(20): Error: no property `find` for type `string`\n/tmp/tmpl6jb11vw.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpl6jb11vw.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6jb11vw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpbre7piv_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbre7piv_.d(16): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(21): Error: no property `find` for type `string`\n/tmp/tmpbre7piv_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpbre7piv_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbre7piv_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult += str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpc3hgyq77.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpc3hgyq77.d(16): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(18): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(21): Error: no property `find` for type `string`\n/tmp/tmpc3hgyq77.d(23): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(28): Error: slice `result` is not mutable\n/tmp/tmpc3hgyq77.d(35): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3hgyq77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiou\";\n\tint[] vowels_index = [];\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tvowels_index ~= i;\n\t\t}\n\t}\n\tforeach(i, c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= str1[vowels_index[$ - 1]];\n\t\t\tvowels_index.popBack();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpt2xtryo7.d(15): Error: no property `canFind` for type `string`\n/tmp/tmpt2xtryo7.d(17): Error: cannot append type `ulong` to type `int[]`\n/tmp/tmpt2xtryo7.d(22): Error: no property `canFind` for type `string`\n/tmp/tmpt2xtryo7.d(25): Error: no property `popBack` for type `int[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2xtryo7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsdblqkaa.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsdblqkaa.d(16): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(21): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpsdblqkaa.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdblqkaa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tstr2[i] = str1[j];\n\t\tstr2[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpn8p8jnh0.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpn8p8jnh0.d(16): Error: no property `find` for type `string`\n/tmp/tmpn8p8jnh0.d(21): Error: no property `find` for type `string`\n/tmp/tmpn8p8jnh0.d(26): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpn8p8jnh0.d(27): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn8p8jnh0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpwp6djy8m.d(12): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpwp6djy8m.d(17): Error: no property `find` for type `string`\n/tmp/tmpwp6djy8m.d(17): Error: no property `find` for type `string`\n/tmp/tmpwp6djy8m.d(19): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpwp6djy8m.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpwp6djy8m.d(21): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpwp6djy8m.d(25): Error: no property `find` for type `string`\n/tmp/tmpwp6djy8m.d(29): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwp6djy8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str1[i], str1[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpbi0b4823.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbi0b4823.d(15): Error: no property `find` for type `string`\n/tmp/tmpbi0b4823.d(20): Error: no property `find` for type `string`\n/tmp/tmpbi0b4823.d(25): Error: undefined identifier `swap`, did you mean template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbi0b4823.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring str2 = \"\";\n\tstring vowels = \"aeiouAEIOU\";\n\tint[] vowel_index = [];\n\tint[] vowel_index_reverse = [];\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tvowel_index ~= i;\n\t\t}\n\t\ti++;\n\t}\n\tvowel_index_reverse = vowel_index.dup;\n\tvowel_index_reverse.reverse;\n\ti = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= str1[vowel_index_reverse[i]];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpztqv9ncm.d(17): Error: no property `canFind` for type `string`\n/tmp/tmpztqv9ncm.d(24): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(int[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpztqv9ncm.d(28): Error: no property `canFind` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpztqv9ncm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp9ydc6im4.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp9ydc6im4.d(16): Error: no property `find` for type `string`\n/tmp/tmp9ydc6im4.d(18): Error: slice `result` is not mutable\n/tmp/tmp9ydc6im4.d(21): Error: no property `find` for type `string`\n/tmp/tmp9ydc6im4.d(23): Error: slice `result` is not mutable\n/tmp/tmp9ydc6im4.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ydc6im4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint left = 0;\n\tint right = str1.length - 1;\n\twhile (left < right) \n\t{\n\t\tif (vowels.find(str1[left]) == -1) \n\t\t{\n\t\t\tresult += str1[left];\n\t\t\tleft++;\n\t\t} \n\t\telse if (vowels.find(str1[right]) == -1) \n\t\t{\n\t\t\tresult += str1[right];\n\t\t\tright--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[right];\n\t\t\tright--;\n\t\t\tleft++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp_4_upxre.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp_4_upxre.d(16): Error: no property `find` for type `string`\n/tmp/tmp_4_upxre.d(18): Error: slice `result` is not mutable\n/tmp/tmp_4_upxre.d(21): Error: no property `find` for type `string`\n/tmp/tmp_4_upxre.d(23): Error: slice `result` is not mutable\n/tmp/tmp_4_upxre.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_4_upxre.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpqhof3ia_.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpqhof3ia_.d(16): Error: no property `find` for type `string`\n/tmp/tmpqhof3ia_.d(18): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(21): Error: no property `find` for type `string`\n/tmp/tmpqhof3ia_.d(23): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(28): Error: slice `str2` is not mutable\n/tmp/tmpqhof3ia_.d(35): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhof3ia_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\tchar[] str = str1.dup;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str[i]) != -1 && vowels.find(str[j]) != -1) \n\t\t{\n\t\t\tstr[i] = str[j];\n\t\t\tstr[j] = str[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.find(str[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str.idup;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpp9wkxbsm.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpp9wkxbsm.d(16): Error: no property `find` for type `string`\n/tmp/tmpp9wkxbsm.d(16): Error: no property `find` for type `string`\n/tmp/tmpp9wkxbsm.d(23): Error: no property `find` for type `string`\n/tmp/tmpp9wkxbsm.d(27): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9wkxbsm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpeizg55uz.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpeizg55uz.d(16): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(18): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(21): Error: no property `find` for type `string`\n/tmp/tmpeizg55uz.d(23): Error: slice `result` is not mutable\n/tmp/tmpeizg55uz.d(28): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeizg55uz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') \n\t\t{\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpzwjru4kk.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpzwjru4kk.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpzwjru4kk.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwjru4kk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tstr2 ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp2ra5k_0e.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp2ra5k_0e.d(16): Error: no property `find` for type `string`\n/tmp/tmp2ra5k_0e.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ra5k_0e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpkg9rslm_.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpkg9rslm_.d(15): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(19): Error: no property `find` for type `string`\n/tmp/tmpkg9rslm_.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpkg9rslm_.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkg9rslm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tresult += str1[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpfvfgsjw7.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfvfgsjw7.d(16): Error: no property `find` for type `string`\n/tmp/tmpfvfgsjw7.d(18): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(21): Error: no property `find` for type `string`\n/tmp/tmpfvfgsjw7.d(23): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(28): Error: slice `result` is not mutable\n/tmp/tmpfvfgsjw7.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvfgsjw7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiou\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpfzoudkxg.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfzoudkxg.d(16): Error: no property `find` for type `string`\n/tmp/tmpfzoudkxg.d(21): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfzoudkxg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp6zudwt8d.d(12): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp6zudwt8d.d(15): Error: no property `find` for type `string`\n/tmp/tmp6zudwt8d.d(19): Error: no property `find` for type `string`\n/tmp/tmp6zudwt8d.d(25): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmp6zudwt8d.d(26): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6zudwt8d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\twhile (str1[j] != 'a' && str1[j] != 'e' && str1[j] != 'i' && str1[j] != 'o' && str1[j] != 'u') \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\tj--;\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp19perz1k.d(11): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp19perz1k.d(21): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmp19perz1k.d(22): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp19perz1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t} else if (vowels.find(str1[j]) == -1) {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t} else {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) {\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp9gsjttvw.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp9gsjttvw.d(15): Error: no property `find` for type `string`\n/tmp/tmp9gsjttvw.d(18): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9gsjttvw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.indexOf(str1[i]) != -1 && vowels.indexOf(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse if (vowels.indexOf(str1[i]) != -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.indexOf(str1[j]) != -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmp5vq549m5.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmp5vq549m5.d(16): Error: no property `indexOf` for type `string`\n/tmp/tmp5vq549m5.d(16): Error: no property `indexOf` for type `string`\n/tmp/tmp5vq549m5.d(18): Error: slice `result` is not mutable\n/tmp/tmp5vq549m5.d(21): Error: no property `indexOf` for type `string`\n/tmp/tmp5vq549m5.d(23): Error: slice `result` is not mutable\n/tmp/tmp5vq549m5.d(26): Error: no property `indexOf` for type `string`\n/tmp/tmp5vq549m5.d(28): Error: slice `result` is not mutable\n/tmp/tmp5vq549m5.d(33): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5vq549m5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = result;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpemqafe4l.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(16): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(18): Error: cannot implicitly convert expression `str1[cast(ulong)i]` of type `immutable(char)` to `string`\n/tmp/tmpemqafe4l.d(19): Error: cannot modify `immutable` expression `str1[cast(ulong)i]`\n/tmp/tmpemqafe4l.d(20): Error: cannot modify `immutable` expression `str1[cast(ulong)j]`\n/tmp/tmpemqafe4l.d(24): Error: no property `find` for type `string`\n/tmp/tmpemqafe4l.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemqafe4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult[i] = str1[j];\n\t\tresult[j] = str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "/tmp/tmpsdblqkaa.d(13): Error: cannot implicitly convert expression `str1.length - 1LU` of type `ulong` to `int`\n/tmp/tmpsdblqkaa.d(16): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(21): Error: no property `find` for type `string`\n/tmp/tmpsdblqkaa.d(26): Error: cannot modify `immutable` expression `result[cast(ulong)i]`\n/tmp/tmpsdblqkaa.d(27): Error: cannot modify `immutable` expression `result[cast(ulong)j]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdblqkaa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n{\n\tstring vowels = \"aeiouAEIOU\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\tstring str2 = str1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2[i] = str1[j];\n\t\t\tstr2[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "/tmp/tmpqsc8irth.d(11): Error: cannot implicitly convert expression `str1.length` of type `ulong` to `int`\n/tmp/tmpqsc8irth.d(17): Error: no property `find` for type `string`\n/tmp/tmpqsc8irth.d(17): Error: no property `find` for type `string`\n/tmp/tmpqsc8irth.d(19): Error: cannot modify `immutable` expression `str2[cast(ulong)i]`\n/tmp/tmpqsc8irth.d(20): Error: cannot modify `immutable` expression `str2[cast(ulong)j]`\n/tmp/tmpqsc8irth.d(24): Error: no property `find` for type `string`\n/tmp/tmpqsc8irth.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqsc8irth.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_555_difference",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n\t\n*/\nlong difference(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = difference;\n\n    assert(candidate(3L) == 30L);\n    assert(candidate(5L) == 210L);\n    assert(candidate(2L) == 6L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (sum * sum - n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n    long sum = 0;\n    for (int i = 1; i <= n; i++) \n    {\n        sum += i;\n    }\n    return (sum * sum) - (sum * sum * sum) / n;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += pow(i, 3);\n\t}\n\treturn sum - (n * (n + 1) / 2);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n        sum_of_cubes += i * i * i; \n    return sum_of_squares - sum_of_cubes; \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6; \n} ",
    "{\n\treturn (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += pow(i, 3);\n\t}\n\treturn sum - (n * (n + 1) / 2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\t\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn pow(sum, 2) - sum_of_cubes;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i,3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2,2) - sum1;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn abs(sum - sum_of_cubes);\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + (i * i * i); \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n        sum_of_cubes += i * i * i; \n    return abs(sum_of_squares - sum_of_cubes); \n} \n  \n// Driver code ",
    "{ \n    long sum_of_n = (n * (n + 1)) / 2; \n    long sum_of_n_cubes = (n * (n + 1) / 2) * (2 * n + 1) / 3; \n    return sum_of_n_cubes - sum_of_n; \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{ \n    long sum = 0; \n    for (int i = 1; i <= n; i++) \n        sum += pow(i, 3); \n    return sum; \n} \n  \nlong sum(long n) \n{ \n    return (n * (n + 1)) / 2; \n} \n  \nlong differenceOfSum(long n) \n{ \n    return difference(n) - sum(n); \n} \n  \n// Driver code ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return (sum1 - sum2 * sum2); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{\n\tlong sum = 0;\n\tlong sum1 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i * i * i;\n\t\tsum1 += i;\n\t}\n\treturn sum - sum1 * sum1;\n}",
    "{ \n    long sum = 0, sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_cubes = sum_of_cubes + i * i * i; \n    } \n    return (sum * sum - sum_of_cubes); \n} \n  \n// Driver code ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    long sum_of_squares = sum * sum; \n    long square_of_sum = 0; \n    for (long i = 1; i <= n; i++) \n        square_of_sum += i * i; \n    return abs(sum_of_squares - square_of_sum); \n} ",
    "{ \n    long sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6; \n    long square_of_sum = (n * (n + 1) / 2); \n    square_of_sum = square_of_sum * square_of_sum; \n    return abs(sum_of_squares - square_of_sum); \n} ",
    "{\n\tlong sum = 0;\n\tfor(long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t}\n\t\n\tlong sumOfCubes = 0;\n\tfor(long i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t}\n\t\n\treturn abs(sum - sumOfCubes);\n}",
    "{ \n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t\tsum += i;\n\treturn (sum * sum) - (sum * sum * sum) / n;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn pow(sum, 2) - sum_of_cubes;\n}",
    "{\n\treturn (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{\n\tlong sum1 = 0, sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i * i * i; \n    return sum; \n} \n  \nlong sum(long n) \n{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2); \n} \n  \nlong differenceOfSum(long n) \n{ \n    return abs(difference(n) - sum(n)); \n} \n  ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{\n\treturn (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{\n\treturn (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);\n}",
    "{\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += pow(i, 3);\n\t}\n\treturn sum - (n * (n + 1) / 2);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += i * i * i;\n\t}\n\treturn abs(sum1 * sum1 - sum2);\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + (i * i * i); \n    } \n    return sum * sum - sum_of_squares; \n} ",
    "{\n    long sum1 = 0;\n    long sum2 = 0;\n    for (int i = 1; i <= n; i++) \n    {\n        sum1 += pow(i, 3);\n        sum2 += i;\n    }\n    return pow(sum2, 2) - sum1;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6; \n} ",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += pow(i, 3);\n\t}\n\treturn sum2 - sum1;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\treturn (pow(n,2)*(pow(n+1,2))/4) - (n*(n+1)*(2*n+1)/6);\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) { \n        sum += i; \n        sum_of_squares += i * i * i; \n    } \n    return abs(sum * sum - sum_of_squares); \n} \n  ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return (sum1 - sum2 * sum2); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn abs(sum_of_cubes - pow(sum, 2));\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum += i; \n        sum_of_squares += i * i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\treturn (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\t\n\treturn abs(sum_of_cubes - pow(sum, 2));\n}",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - ((n * (n + 1) * (2 * n + 1)) / 6); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return abs(sum1 - sum2 * sum2); \n} ",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n  \n    for (long i = 1; i <= n; i++) \n        sum1 = sum1 + i * i * i; \n  \n    for (long i = 1; i <= n; i++) \n        sum2 = sum2 + i; \n  \n    sum2 = sum2 * sum2; \n  \n    return abs(sum1 - sum2); \n} ",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += i*i*i;\n\t}\n\treturn abs(sum1 - sum2);\n}",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 += pow(i, 3); \n        sum2 += i; \n    } \n    return pow(sum2, 3) - sum1; \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\t\n\tfor(long i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\t\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\treturn pow(n,2)*(n+1)*(3*n+2)/12;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum += i; \n        sum_of_squares += i * i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + (i * i * i); \n  \n    return (abs((n * (n + 1) / 2) * (n * (n + 1) / 2) - sum)); \n} \n  \n// Driver code ",
    "{\n\treturn pow(n, 2) - (n * (n + 1) * (2 * n + 1)) / 6;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i * i * i;\n\t}\n\treturn abs(sum - (n * (n + 1) / 2) * (n * (n + 1) / 2));\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn abs(sum_of_cubes - pow(sum, 2));\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - pow(sum, 2);\n}",
    "{ \n    long sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6; \n    long square_of_sum = (n * (n + 1)) / 2; \n    square_of_sum = square_of_sum * square_of_sum; \n    return abs(sum_of_squares - square_of_sum); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6; \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i * i * i; \n    return sum; \n} \nlong sum(long n) \n{ \n    return (n * (n + 1)) / 2; \n} \nlong differenceOfSum(long n) \n{ \n    return difference(n) - sum(n) * sum(n); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\treturn (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n    long sum1 = 0;\n    long sum2 = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        sum1 += pow(i, 3);\n        sum2 += i;\n    }\n    return pow(sum2, 2) - sum1;\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + (i * i * i); \n  \n    long sum1 = (n * (n + 1)) / 2; \n    sum1 = sum1 * sum1; \n    return abs(sum - sum1); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i*i*i;\n\t}\n\treturn abs(sum_of_cubes - sum*sum);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i * i * i; \n    return sum; \n} \n  \nlong sum(long n) \n{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2); \n} \n  \nlong diff(long n) \n{ \n    return abs(difference(n) - sum(n)); \n} \n  \n// Driver code ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + i; \n    return (sum * sum - sum * sum * sum / n / n / n); \n} \n  \n// Driver code ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\treturn (n*(n+1)/2)**2 - n*(n+1)*(2*n+1)/6;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += i * i * i;\n\t}\n\treturn abs(sum1 * sum1 - sum2);\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum += i; \n        sum_of_squares += i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum1 = 0;\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tsum += pow(i, 3);\n\t\tsum1 += i;\n\t}\n\treturn pow(sum1, 2) - sum;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += i * i * i;\n\t}\n\treturn abs(sum1 * sum1 - sum2);\n}",
    "{ \n    long sum = 0; \n    long sq_sum = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sq_sum = sq_sum + i * i * i; \n    } \n  \n    return (sum * sum - sq_sum); \n} ",
    "{\n\treturn (pow(n,2)*(n+1)*(3*n+2))/12;\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (sum * sum - n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + i*i; \n    } \n    return (sum*sum - sum_of_squares); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return (sum1 - sum2 * sum2); \n} ",
    "{\n\tlong sumOfCubes = 0;\n\tlong sumOfN = 0;\n\t\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t\tsumOfN += i;\n\t}\n\t\n\treturn pow(sumOfN, 2) - sumOfCubes;\n}",
    "{\n\treturn (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6;\n}",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6)); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    long sum = 0; \n    for (int i = 1; i <= n; i++) \n        sum += i; \n    return pow(sum, 2) - sum_of_cubes(n); \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\t\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    long sum = 0, sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum += i; \n        sum_of_squares += i * i * i; \n    } \n    return sum * sum - sum_of_squares; \n} ",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - ((n * (n + 1) * (2 * n + 1)) / 6); \n} ",
    "{\n\treturn pow(n, 2) * (n + 1) * (3 * n + 2) / 12;\n}",
    "{\n\tlong sum = 0;\n\tlong sumOfCubes = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tsum += i;\n\t\tsumOfCubes += pow(i, 3);\n\t}\n\treturn sumOfCubes - sum;\n}",
    "{\n    return (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - ((n * (n + 1) * (2 * n + 1)) / 6); \n} ",
    "{\n\treturn (pow(n,2)*(n+1)*(3*n+2))/12;\n}",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return (sum1 - sum2 * sum2); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + pow(i, 3); \n        sum2 = sum2 + i; \n    } \n    return pow(sum2, 3) - sum1; \n} ",
    "{\n\treturn (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);\n}",
    "{ \n    return ((n * (n + 1) / 2) * (3 * n * n - n - 2)) / 3; \n} ",
    "{ \n    long sumOfSquares = n * (n + 1) * (2 * n + 1) / 6; \n    long squareOfSum = (n * (n + 1) / 2) * (n * (n + 1) / 2); \n    return squareOfSum - sumOfSquares; \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6; \n} ",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn sum1 - pow(sum2, 2);\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\tlong sumOfCubes = 0;\n\tlong sumOfNaturals = 0;\n\t\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t\tsumOfNaturals += i;\n\t}\n\t\n\treturn pow(sumOfNaturals, 2) - sumOfCubes;\n}",
    "{ \n    long sum = 0; \n    long sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_cubes = sum_of_cubes + i * i * i; \n    } \n    return (sum * sum - sum_of_cubes); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (sum * sum - pow(n, 4) / 4 - pow(n, 3) / 6 - pow(n, 2) / 4 - n / 6); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum += i;\n\t\tsum2 += i*i*i;\n\t}\n\treturn abs(sum*sum - sum2);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (sum * sum) - (n * (n + 1) * (2 * n + 1)) / 6; \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    long sumOfSquares = sum * sum; \n    long sumOfCubes = 0; \n    for (long i = 1; i <= n; i++) \n        sumOfCubes += i * i * i; \n    return abs(sumOfSquares - sumOfCubes); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sumOfCubes = 0;\n\tlong sumOfNaturalNumbers = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t\tsumOfNaturalNumbers += i;\n\t}\n\t\n\treturn pow(sumOfNaturalNumbers, 2) - sumOfCubes;\n}",
    "{\n\treturn (pow(n, 2) * (n + 1) * (3 * n + 2)) / 12;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + (i * i * i); \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum += i;\n\t}\n\treturn pow(sum, 2) - sum_of_cubes;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (int i = 1; i <= n; i++) \n    { \n        sum += i; \n        sum_of_squares += i * i; \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{\n\treturn pow(n,2)*(n+1)*(3*n+2)/12;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return pow(sum, 2) - sumOfSeries(n); \n} \n  \nlong sumOfSeries(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += pow(i, 3); \n    return sum; \n} \n  \n// Driver code ",
    "{ \n    long sum = 0; \n    for (int i = 1; i <= n; i++) \n        sum += pow(i, 3); \n    return sum - pow(n, 2); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + (i * i * i); \n        sum2 = sum2 + i; \n    } \n    return (sum1 - sum2 * sum2); \n} ",
    "{\n\treturn pow(n, 2) * (n + 1) * (3 * n + 2) / 12;\n}",
    "{ \n    long sum = 0; \n    for (int i = 1; i <= n; i++) \n        sum += i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (int i = 1; i <= n; i++) \n        sum_of_cubes += i * i * i; \n    return abs(sum_of_squares - sum_of_cubes); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{ \n    long sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6; \n    long square_of_sum = ((n * (n + 1)) / 2) * ((n * (n + 1)) / 2); \n    return square_of_sum - sum_of_squares; \n} ",
    "{\n\treturn (n*(n+1)/2)*(n*(n+1)/2)-(n*(n+1)*(2*n+1)/6);\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t}\n\tlong sumOfCubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t}\n\treturn abs(sumOfCubes - pow(sum, 2));\n}",
    "{ \n    long sum = 0; \n    for (int i = 1; i <= n; i++) \n        sum += i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (int i = 1; i <= n; i++) \n        sum_of_cubes += i * i * i; \n    return abs(sum_of_squares - sum_of_cubes); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += (i * i * i);\n\t}\n\treturn sum - (n * n);\n}",
    "{ \n    long sum_of_squares = (n * (n + 1) * (2 * n + 1)) / 6; \n    long square_of_sum = (n * (n + 1) / 2) * (n * (n + 1) / 2); \n    return square_of_sum - sum_of_squares; \n} ",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum += i;\n\t}\n\treturn pow(sum, 2) - sum_of_cubes;\n}",
    "{\n\treturn (pow(n,2)*(n+1)*(3*n+2))/12;\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n        sum_of_cubes = sum_of_cubes + (i * i * i); \n    return abs(sum_of_squares - sum_of_cubes); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum2 = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum2 += i * i * i;\n\t}\n\treturn sum2 - sum * sum;\n}",
    "{\n\treturn (n * (n + 1) / 2) * (n * (n + 1) / 2) - n * (n + 1) * (2 * n + 1) / 6;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - pow(sum, 2);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + i; \n    long sum_of_squares = sum * sum; \n    long sum_of_cubes = 0; \n    for (long i = 1; i <= n; i++) \n        sum_of_cubes = sum_of_cubes + i * i * i; \n    return sum_of_squares - sum_of_cubes; \n} ",
    "{ \n\treturn (n*(n+1)/2)*(n*(n+1)/2) - n*(n+1)*(2*n+1)/6; \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum = sum + (i * i * i); \n    return (abs((n * (n + 1) / 2) * (n * (n + 1) / 2) - sum)); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{\n\tlong sum = 0;\n\tlong sumOfCubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsumOfCubes += pow(i, 3);\n\t}\n\treturn abs(sum - sumOfCubes);\n}",
    "{\n\tlong sum = 0;\n\tlong sum_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_cubes += pow(i, 3);\n\t}\n\treturn abs(sum_cubes - pow(sum, 2));\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn sum_of_cubes - sum;\n}",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\tlong sum1 = 0, sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum_of_numbers = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum_of_numbers += i;\n\t}\n\treturn pow(sum_of_numbers, 2) - sum_of_cubes;\n}",
    "{\n\tlong sum1 = 0, sum2 = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += i * i * i;\n\t}\n\treturn abs(sum_of_cubes - sum * sum);\n}",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (sum * sum - n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum1 += i;\n\t\tsum2 += pow(i, 3);\n\t}\n\treturn abs(sum1 - sum2);\n}",
    "{\n\tlong sum_of_cubes = 0;\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum_of_cubes += pow(i, 3);\n\t\tsum += i;\n\t}\n\treturn pow(sum, 2) - sum_of_cubes;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + (i * i * i); \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += pow(i, 3); \n    return sum; \n} ",
    "{\n\tlong sum = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum2 += i * i * i;\n\t}\n\treturn abs(sum2 - sum * sum);\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i * i * i;\n\t}\n\treturn sum - (n * (n + 1) / 2);\n}",
    "{\n\tlong sumOfCubes = 0;\n\tlong sumOfNaturals = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsumOfCubes += pow(i, 3);\n\t\tsumOfNaturals += i;\n\t}\n\t\n\treturn pow(sumOfNaturals, 2) - sumOfCubes;\n}",
    "{\n\tlong sum = 0;\n\tlong sumOfCubes = 0;\n\t\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsumOfCubes += pow(i, 3);\n\t}\n\t\n\treturn sumOfCubes - sum;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n\tlong sum1 = 0, sum2 = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{ \n    long sum = 0; \n    long sum_of_squares = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum = sum + i; \n        sum_of_squares = sum_of_squares + (i * i * i); \n    } \n    return (sum * sum - sum_of_squares); \n} ",
    "{ \n    long sum1 = 0, sum2 = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sum1 = sum1 + pow(i, 3); \n        sum2 = sum2 + i; \n    } \n    return pow(sum2, 3) - sum1; \n} ",
    "{ \n    return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{\n    return pow(n, 2) * (n + 1) * (3 * n + 2) / 12;\n}",
    "{ \n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6); \n} ",
    "{ \n    long sum = 0; \n    for (long i = 1; i <= n; i++) \n        sum += i; \n    return (long)pow(sum, 2) - (n * (n + 1) * (2 * n + 1)) / 6; \n} ",
    "{ \n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += pow(i, 3);\n\t}\n\treturn pow(n, 2) - sum;\n}",
    "{\n\tlong sum1 = 0;\n\tlong sum2 = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum1 += pow(i, 3);\n\t\tsum2 += i;\n\t}\n\treturn pow(sum2, 2) - sum1;\n}",
    "{ \n    long sum_of_squares = n * (n + 1) * (2 * n + 1) / 6; \n    long square_of_sum = (n * (n + 1) / 2) * (n * (n + 1) / 2); \n  \n    return square_of_sum - sum_of_squares; \n} \n  \n// Driver code ",
    "{\n\tlong sum = 0;\n\tlong sum_of_cubes = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t\tsum_of_cubes += pow(i, 3);\n\t}\n\treturn abs(sum_of_cubes - pow(sum, 2));\n}",
    "{ \n    long sumOfSquares = 0; \n    long sumOfCubes = 0; \n    for (long i = 1; i <= n; i++) \n    { \n        sumOfSquares += i * i; \n        sumOfCubes += i * i * i; \n    } \n    return abs(sumOfSquares - sumOfCubes); \n} "
  ]
}
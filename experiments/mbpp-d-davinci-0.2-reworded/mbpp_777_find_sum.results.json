{
  "name": "mbpp_777_find_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] unique_arr = [];\n\tforeach(long i; arr)\n\t{\n\t\tif(!unique_arr.contains(i))\n\t\t{\n\t\t\tunique_arr ~= i;\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmph35863x4.d(13): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph35863x4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = 0;\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\ttemp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmwk4q91n.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpmwk4q91n.__unittest_L16_C1() [0x427de9]\n??:? void tmpmwk4q91n.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    foreach(item; arr)\n    {\n        if(count(arr, item) == 1)\n        {\n            sum += item;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0e3t5vph.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0e3t5vph.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqjr19ixi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpqjr19ixi.__unittest_L28_C1() [0x427e89]\n??:? void tmpqjr19ixi.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(element; arr)\n\t{\n\t\tif(element != 0)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd2w996e_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpd2w996e_.__unittest_L19_C1() [0x427df5]\n??:? void tmpd2w996e_.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint count = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (temp.indexOf(arr[i]) == -1) \n\t\t{\n\t\t\ttemp[count] = arr[i];\n\t\t\tcount++;\n\t\t}\n\t}\n\tfor (int i = 0; i < count; i++) \n\t{\n\t\tsum += temp[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpdl52xb3q.d(14): Error: no property `indexOf` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdl52xb3q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqjr19ixi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpqjr19ixi.__unittest_L28_C1() [0x427e89]\n??:? void tmpqjr19ixi.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqjr19ixi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpqjr19ixi.__unittest_L28_C1() [0x427e89]\n??:? void tmpqjr19ixi.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvu8svl27.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpvu8svl27.__unittest_L27_C1() [0x427e65]\n??:? void tmpvu8svl27.__modtest() [0x427f8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a == arr[0])\n\t\t\tcontinue;\n\t\telse\n\t\t{\n\t\t\tif(a == arr[1])\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(a == arr[2])\n\t\t\t\t\tcontinue;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(a == arr[3])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a == arr[4])\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(a == arr[5])\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(a == arr[6])\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(a == arr[7])\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(a == arr[8])\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(a == arr[9])\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif(a == arr[10])\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpz3wyww9o.d(56): Error: found `unittest` instead of statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpz3wyww9o.d(64): Error: found `End of File` when expectin",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0ovf2ukd.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmp0ovf2ukd.__unittest_L16_C1() [0x427de9]\n??:? void tmp0ovf2ukd.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = 0;\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\ttemp[i] = 1;\n\t\t\t\t\ttemp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9cyk9455.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x42831d]\n??:? void tmp9cyk9455.__unittest_L41_C1() [0x427f79]\n??:? void tmp9cyk9455.__modtest() [0x4280a0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3fb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b28e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430519]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4309c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4304a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b265]\n??:? runModuleUnitTests [0x42c1d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach (i; 0 .. arr.length) \n\t{\n\t\tbool is_repeated = false;\n\t\tforeach (j; 0 .. arr.length) \n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j]) \n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!is_repeated) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphf34fqi2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmphf34fqi2.__unittest_L28_C1() [0x427e89]\n??:? void tmphf34fqi2.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t\tcontinue;\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwmblxf1l.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281fd]\n??:? void tmpwmblxf1l.__unittest_L28_C1() [0x427e55]\n??:? void tmpwmblxf1l.__modtest() [0x427f7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c20b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430231]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301bd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b075]\n??:? runModuleUnitTests [0x42bfe1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42864c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp0_u16pt_.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_u16pt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj2qv2ws3.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpj2qv2ws3.__unittest_L28_C1() [0x427e89]\n??:? void tmpj2qv2ws3.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvu8svl27.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpvu8svl27.__unittest_L27_C1() [0x427e65]\n??:? void tmpvu8svl27.__modtest() [0x427f8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach (i; arr)\n\t{\n\t\tif (count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpe8nzb76a.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8nzb76a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] == arr[i+1])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7dwd4tys.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x42829e]\n??:? long tmp7dwd4tys.find_sum(long[]) [0x427d84]\n??:? void tmp7dwd4tys.__unittest_L23_C1() [0x427e2e]\n??:? void tmp7dwd4tys.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c26f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b102]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430295]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430744]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430221]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0d9]\n??:? runModuleUnitTests [0x42c045]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach (i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach (j; 0 .. arr.length)\n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo_byfi1r.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpo_byfi1r.__unittest_L28_C1() [0x427e89]\n??:? void tmpo_byfi1r.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tbool found = false;\n\t\tfor (int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptibtjpx2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmptibtjpx2.__unittest_L28_C1() [0x427e6d]\n??:? void tmptibtjpx2.__modtest() [0x427f94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c297]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b12a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302bd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43076c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430249]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b101]\n??:? runModuleUnitTests [0x42c06d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuczjhiwn.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpuczjhiwn.__unittest_L19_C1() [0x427df5]\n??:? void tmpuczjhiwn.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpfc4h4_sr.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfc4h4_sr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3ly0ib4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpo3ly0ib4.__unittest_L16_C1() [0x427de9]\n??:? void tmpo3ly0ib4.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr,i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpn04ac0vo.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn04ac0vo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tfor (int i = 0; i < temp.length; i++) \n\t{\n\t\tif (i == 0) \n\t\t{\n\t\t\tif (temp[i] != temp[i + 1]) \n\t\t\t{\n\t\t\t\tsum += temp[i];\n\t\t\t}\n\t\t} \n\t\telse if (i == temp.length - 1) \n\t\t{\n\t\t\tif (temp[i] != temp[i - 1]) \n\t\t\t{\n\t\t\t\tsum += temp[i];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (temp[i] != temp[i - 1] && temp[i] != temp[i + 1]) \n\t\t\t{\n\t\t\t\tsum += temp[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpnvbtz6fy.d(15): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvbtz6fy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp2eaa7ler.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eaa7ler.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp2eaa7ler.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eaa7ler.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpnjheul43.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnjheul43.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tis_repeated = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3k7gad7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428235]\n??:? void tmpd3k7gad7.__unittest_L31_C1() [0x427e91]\n??:? void tmpd3k7gad7.__modtest() [0x427fb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b14a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43078c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430269]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b121]\n??:? runModuleUnitTests [0x42c08d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr) \n\t{\n\t\tif(count(arr, a) == 1) \n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpwwqw6kta.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwqw6kta.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnpu5p963.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428205]\n??:? void tmpnpu5p963.__unittest_L28_C1() [0x427e61]\n??:? void tmpnpu5p963.__modtest() [0x427f88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c287]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b11a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43075c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f1]\n??:? runModuleUnitTests [0x42c05d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != 0) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tint j;\n\t\tfor (j = 0; j < i; j++)\n\t\t\tif (arr[i] == arr[j])\n\t\t\t\tbreak;\n\t\tif (i == j)\n\t\t\tsum += arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j; 0..arr.length)\n\t\t{\n\t\t\tif(arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp8x4xfre.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpp8x4xfre.__unittest_L27_C1() [0x427e85]\n??:? void tmpp8x4xfre.__modtest() [0x427fac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (i == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (arr[i] != arr[i - 1])\n\t\t\t{\n\t\t\t\tsum += arr[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb642gcaf.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428225]\n??:? void tmpb642gcaf.__unittest_L26_C1() [0x427e7d]\n??:? void tmpb642gcaf.__modtest() [0x427fa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b13a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43077c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430259]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]\n??:? runModuleUnitTests [0x42c07d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp0_u16pt_.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_u16pt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tis_repeated = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3k7gad7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428235]\n??:? void tmpd3k7gad7.__unittest_L31_C1() [0x427e91]\n??:? void tmpd3k7gad7.__modtest() [0x427fb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b14a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43078c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430269]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b121]\n??:? runModuleUnitTests [0x42c08d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpzvj33tab.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpzvj33tab.find_sum(long[]) [0x427d7e]\n??:? void tmpzvj33tab.__unittest_L19_C1() [0x427e36]\n??:? void tmpzvj33tab.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    foreach(i; arr)\n    {\n        if(count(arr, i) == 1)\n            sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpbwc2izpr.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbwc2izpr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0..arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdvspw0o1.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpdvspw0o1.__unittest_L28_C1() [0x427e89]\n??:? void tmpdvspw0o1.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuczjhiwn.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpuczjhiwn.__unittest_L19_C1() [0x427df5]\n??:? void tmpuczjhiwn.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr) \n\t{\n\t\tif(count(arr, i) == 1) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp5ft0jxyp.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ft0jxyp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr[i] != 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] arr2 = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr2[i] == 0)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr2[i] = 1;\n\t\t\t\t\tarr2[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr2[i] == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9kqcb5v4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x4282dd]\n??:? void tmp9kqcb5v4.__unittest_L34_C1() [0x427f35]\n??:? void tmp9kqcb5v4.__modtest() [0x42805c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b24e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304d9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430988]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430465]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b225]\n??:? runModuleUnitTests [0x42c191]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_j61nx8.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4281fd]\n??:? void tmpz_j61nx8.__unittest_L32_C1() [0x427e55]\n??:? void tmpz_j61nx8.__modtest() [0x427f7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c20b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430231]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301bd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b075]\n??:? runModuleUnitTests [0x42bfe1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42864c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (arr[i] != -1)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj2qv2ws3.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpj2qv2ws3.__unittest_L28_C1() [0x427e89]\n??:? void tmpj2qv2ws3.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj2qv2ws3.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpj2qv2ws3.__unittest_L28_C1() [0x427e89]\n??:? void tmpj2qv2ws3.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpzvj33tab.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpzvj33tab.find_sum(long[]) [0x427d7e]\n??:? void tmpzvj33tab.__unittest_L19_C1() [0x427e36]\n??:? void tmpzvj33tab.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp0_u16pt_.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_u16pt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tbool is_repeated = false;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptlmflkt6.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmptlmflkt6.__unittest_L28_C1() [0x427e75]\n??:? void tmptlmflkt6.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c29f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b132]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430774]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430251]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b109]\n??:? runModuleUnitTests [0x42c075]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3ly0ib4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpo3ly0ib4.__unittest_L16_C1() [0x427de9]\n??:? void tmpo3ly0ib4.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(count(arr, elem) == 1)\n\t\t\tsum += elem;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpfc4h4_sr.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfc4h4_sr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] arr_copy = arr.dup;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr_copy.count(arr[i]) == 1) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp8_cssbdu.d(13): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8_cssbdu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (arr[i] != -1) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tfor (int j = i + 1; j < arr.length; j++) \n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j]) \n\t\t\t\t{\n\t\t\t\t\tarr[j] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(arr[i] != arr[i-1])\n\t\t\t{\n\t\t\t\tsum += arr[i];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8om_0t_n.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428245]\n??:? void tmp8om_0t_n.__unittest_L26_C1() [0x427ea1]\n??:? void tmp8om_0t_n.__modtest() [0x427fc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b15a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43079c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430279]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b131]\n??:? runModuleUnitTests [0x42c09d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428708]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(item; arr)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(item2; arr)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is_repeated)\n\t\t{\n\t\t\tsum += item;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr46mercv.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpr46mercv.__unittest_L28_C1() [0x427e4d]\n??:? void tmpr46mercv.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr) \n\t{\n\t\tif(count(arr, i) == 1) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp5ft0jxyp.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ft0jxyp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvu8svl27.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpvu8svl27.__unittest_L27_C1() [0x427e65]\n??:? void tmpvu8svl27.__modtest() [0x427f8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] unique_arr = [];\n\tforeach(long i; arr)\n\t{\n\t\tif(!unique_arr.contains(i))\n\t\t{\n\t\t\tunique_arr ~= i;\n\t\t}\n\t}\n\tforeach(long i; unique_arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp81g9onyo.d(13): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81g9onyo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < arr.length; j++) \n\t\t{\n\t\t\tif (arr[i] == arr[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1) \n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxjwn60lh.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428205]\n??:? void tmpxjwn60lh.__unittest_L27_C1() [0x427e61]\n??:? void tmpxjwn60lh.__modtest() [0x427f88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c287]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b11a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43075c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f1]\n??:? runModuleUnitTests [0x42c05d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t\tarr[i] = 0;\n\t\t\tfor(long j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif(arr[j] == arr[i])\n\t\t\t\t{\n\t\t\t\t\tarr[j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwgf7dn91.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmpwgf7dn91.__unittest_L27_C1() [0x427eed]\n??:? void tmpwgf7dn91.__modtest() [0x428014]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c317]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43033d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]\n??:? runModuleUnitTests [0x42c0ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] == arr[i+1])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7dwd4tys.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x42829e]\n??:? long tmp7dwd4tys.find_sum(long[]) [0x427d84]\n??:? void tmp7dwd4tys.__unittest_L23_C1() [0x427e2e]\n??:? void tmp7dwd4tys.__modtest() [0x427f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c26f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b102]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430295]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430744]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430221]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0d9]\n??:? runModuleUnitTests [0x42c045]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i + 1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpncsva28z.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpncsva28z.find_sum(long[]) [0x427d7e]\n??:? void tmpncsva28z.__unittest_L19_C1() [0x427e36]\n??:? void tmpncsva28z.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n        int j;\n        for (j = 0; j < i; j++)\n            if (arr[i] == arr[j])\n                break;\n        if (i == j)\n            sum += arr[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3mrqls3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpd3mrqls3.__unittest_L22_C1() [0x427e0d]\n??:? void tmpd3mrqls3.__modtest() [0x427f34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b056]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301e9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430698]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430175]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b02d]\n??:? runModuleUnitTests [0x42bf99]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428604]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5esd87f3.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmp5esd87f3.__unittest_L28_C1() [0x427e89]\n??:? void tmp5esd87f3.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpzvj33tab.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpzvj33tab.find_sum(long[]) [0x427d7e]\n??:? void tmpzvj33tab.__unittest_L19_C1() [0x427e36]\n??:? void tmpzvj33tab.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(!(i in arr[0..$-1]))\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp56dy00mi.d(12): Error: incompatible types for `(i) in (arr[0..__dollar - 1LU])`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56dy00mi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp2eaa7ler.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eaa7ler.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint count = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\tfor(i = 0; i < arr.length; i++)\n\t{\n\t\tfor(j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif(arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1)\n\t\t{\n\t\t\ttemp[i] = arr[i];\n\t\t}\n\t\tcount = 0;\n\t}\n\t\n\tfor(i = 0; i < temp.length; i++)\n\t{\n\t\tsum += temp[i];\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp01s35nzb.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x428295]\n??:? void tmp01s35nzb.__unittest_L38_C1() [0x427ef1]\n??:? void tmp01s35nzb.__modtest() [0x428018]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c373]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b206]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430491]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430940]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43041d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1dd]\n??:? runModuleUnitTests [0x42c149]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428758]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3ly0ib4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x42818d]\n??:? void tmpo3ly0ib4.__unittest_L16_C1() [0x427de9]\n??:? void tmpo3ly0ib4.__modtest() [0x427f10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c19b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b02e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301c1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430670]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43014d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b005]\n??:? runModuleUnitTests [0x42bf71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp2eaa7ler.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eaa7ler.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tforeach(long i; 0 .. arr.length)\n\t{\n\t\tforeach(long j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] == arr[j] && i != j)\n\t\t\t{\n\t\t\t\tarr_copy[i] = 0;\n\t\t\t\tarr_copy[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(long i; 0 .. arr.length)\n\t{\n\t\tsum += arr_copy[i];\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkq1urx36.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x429429]\n??:? void tmpkq1urx36.__unittest_L31_C1() [0x428101]\n??:? void tmpkq1urx36.__modtest() [0x42839c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e00b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4290b2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae24]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x429089]\n??:? runModuleUnitTests [0x42dde1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429940]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n    long sum = 0;\n    long[] arr2 = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) \n    {\n        arr2[i] = 0;\n    }\n    for (int i = 0; i < arr.length; i++) \n    {\n        for (int j = i + 1; j < arr.length; j++) \n        {\n            if (arr[i] == arr[j]) \n            {\n                arr2[i] = 1;\n                arr2[j] = 1;\n            }\n        }\n    }\n    for (int i = 0; i < arr.length; i++) \n    {\n        if (arr2[i] == 0) \n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp21hyniy0.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x4282ed]\n??:? void tmp21hyniy0.__unittest_L35_C1() [0x427f49]\n??:? void tmp21hyniy0.__modtest() [0x428070]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c3cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b25e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4304e9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430998]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430475]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b235]\n??:? runModuleUnitTests [0x42c1a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tlong[] new_arr = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tnew_arr[i] += 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (new_arr[i] == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp19q5w3mr.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x428285]\n??:? void tmp19q5w3mr.__unittest_L30_C1() [0x427ee1]\n??:? void tmp19q5w3mr.__modtest() [0x428008]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c363]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b1f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430481]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430930]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43040d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1cd]\n??:? runModuleUnitTests [0x42c139]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428748]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t\tcount++;\n\t\t}\n\t\tif (count == 1)\n\t\t\tsum += arr[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3pzwkamc.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428205]\n??:? void tmp3pzwkamc.__unittest_L23_C1() [0x427e61]\n??:? void tmp3pzwkamc.__modtest() [0x427f88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c287]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b11a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43075c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f1]\n??:? runModuleUnitTests [0x42c05d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpc3h9yann.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3h9yann.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a != 0)\n\t\t{\n\t\t\tsum += a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu_52srcd.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x42819d]\n??:? void tmpu_52srcd.__unittest_L19_C1() [0x427df5]\n??:? void tmpu_52srcd.__modtest() [0x427f1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach (i; 0 .. arr.length)\n\t{\n\t\tbool is_repeated = false;\n\t\tforeach (j; 0 .. arr.length)\n\t\t{\n\t\t\tif (i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tis_repeated = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!is_repeated)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1ryvvnjf.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmp1ryvvnjf.__unittest_L28_C1() [0x427e89]\n??:? void tmp1ryvvnjf.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpxalz_7zl.d(12): Range violation\n----------------\n??:? _d_arrayboundsp [0x4282a6]\n??:? long tmpxalz_7zl.find_sum(long[]) [0x427d7e]\n??:? void tmpxalz_7zl.__unittest_L19_C1() [0x427e36]\n??:? void tmpxalz_7zl.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c277]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b10a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43029d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43074c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0e1]\n??:? runModuleUnitTests [0x42c04d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmps7v1hrw8.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7v1hrw8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpldfw7xj3.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldfw7xj3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; arr)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprpzpmgut.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmprpzpmgut.__unittest_L28_C1() [0x427e4d]\n??:? void tmprpzpmgut.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c203]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b096]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430229]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b06d]\n??:? runModuleUnitTests [0x42bfd9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmpnjheul43.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnjheul43.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvu8svl27.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpvu8svl27.__unittest_L27_C1() [0x427e65]\n??:? void tmpvu8svl27.__modtest() [0x427f8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j; 0..arr.length)\n\t\t{\n\t\t\tif(arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp8x4xfre.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmpp8x4xfre.__unittest_L27_C1() [0x427e85]\n??:? void tmpp8x4xfre.__modtest() [0x427fac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b142]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430784]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430261]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b119]\n??:? runModuleUnitTests [0x42c085]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpu_senu0b.d(12): Error: undefined identifier `count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_senu0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp0_u16pt_.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_u16pt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(arr.count(i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "/tmp/tmp0_u16pt_.d(12): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_u16pt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
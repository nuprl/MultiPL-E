{
  "name": "mbpp_762_check_monthnumber_number",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_762_check_monthnumber_number.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12) \n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfxx47mr6.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpfxx47mr6.__unittest_L17_C1() [0x427a62]\n??:? void tmpfxx47mr6.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyb8ek1wr.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpyb8ek1wr.__unittest_L15_C1() [0x427a5a]\n??:? void tmpyb8ek1wr.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp80py9w02.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp80py9w02.__unittest_L23_C1() [0x427a62]\n??:? void tmp80py9w02.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 2 || monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp515m4rx2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp515m4rx2.__unittest_L12_C1() [0x427a71]\n??:? void tmp515m4rx2.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 2 || monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp515m4rx2.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp515m4rx2.__unittest_L12_C1() [0x427a71]\n??:? void tmp515m4rx2.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyno9rraw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpyno9rraw.__unittest_L23_C1() [0x427a76]\n??:? void tmpyno9rraw.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2) \n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuccwq__c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpuccwq__c.__unittest_L21_C1() [0x427a6a]\n??:? void tmpuccwq__c.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tswitch(monthnum3)\n\t{\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaxld34t1.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpaxld34t1.__unittest_L37_C1() [0x427aa0]\n??:? void tmpaxld34t1.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2) \n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaun5qnk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpkaun5qnk.__unittest_L23_C1() [0x427a52]\n??:? void tmpkaun5qnk.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2) \n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaun5qnk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpkaun5qnk.__unittest_L23_C1() [0x427a52]\n??:? void tmpkaun5qnk.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuccwq__c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpuccwq__c.__unittest_L21_C1() [0x427a6a]\n??:? void tmpuccwq__c.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 2 ? false : monthnum3 % 2 == 0 ? monthnum3 < 8 : monthnum3 > 7;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuccwq__c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpuccwq__c.__unittest_L21_C1() [0x427a6a]\n??:? void tmpuccwq__c.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3==1 || monthnum3==3 || monthnum3==5 || monthnum3==7 || monthnum3==8 || monthnum3==10 || monthnum3==12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7t8wuvh_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp7t8wuvh_.__unittest_L19_C1() [0x427a5a]\n??:? void tmp7t8wuvh_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tswitch(monthnum3)\n\t{\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tcase 2:\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdauwa8f2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpdauwa8f2.__unittest_L35_C1() [0x427a5e]\n??:? void tmpdauwa8f2.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuccwq__c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpuccwq__c.__unittest_L21_C1() [0x427a6a]\n??:? void tmpuccwq__c.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool month_30days = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tmonth_30days = true;\n\t}\n\treturn month_30days;\n}\n/*\n\tWrite a function to check whether the given month number contains 31 days or not. Months are given as number from 1 to 12.\n*/\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprjymcvr4.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmprjymcvr4.__unittest_L17_C1() [0x427a62]\n??:? void tmprjymcvr4.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool ret = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\tret = true;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\t\n\tif(monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t\treturn false;\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3_e7w5sa.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp3_e7w5sa.__unittest_L17_C1() [0x427a52]\n??:? void tmp3_e7w5sa.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2) \n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaun5qnk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpkaun5qnk.__unittest_L23_C1() [0x427a52]\n??:? void tmpkaun5qnk.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12) \n\t{\n\t\treturn true;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvmzj7sh6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpvmzj7sh6.__unittest_L23_C1() [0x427a76]\n??:? void tmpvmzj7sh6.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\t\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse if (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxphpoveu.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpxphpoveu.__unittest_L23_C1() [0x427aa0]\n??:? void tmpxphpoveu.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif (monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqelvgxi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphqelvgxi.__unittest_L17_C1() [0x427a62]\n??:? void tmphqelvgxi.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\t\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12) \n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfxx47mr6.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpfxx47mr6.__unittest_L17_C1() [0x427a62]\n??:? void tmpfxx47mr6.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool ret = false;\n\t\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tret = true;\n\t}\n\t\n\treturn ret;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2) \n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkaun5qnk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpkaun5qnk.__unittest_L23_C1() [0x427a52]\n??:? void tmpkaun5qnk.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) \n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp28sjmgg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpp28sjmgg.__unittest_L23_C1() [0x427a52]\n??:? void tmpp28sjmgg.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tif(monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tswitch(monthnum3)\n\t{\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tcase 2:\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwnna3245.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpwnna3245.__unittest_L35_C1() [0x427a5e]\n??:? void tmpwnna3245.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 2)\n\t{\n\t\tresult = false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tswitch(monthnum3)\n\t{\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\treturn true;\n\t\tcase 2:\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmppj9rwxxf.d(10): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppj9rwxxf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtiu0lm_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtiu0lm_.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtiu0lm_.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result;\n\tswitch(monthnum3)\n\t{\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tresult = false;\n\t\t\tbreak;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaxld34t1.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpaxld34t1.__unittest_L37_C1() [0x427aa0]\n??:? void tmpaxld34t1.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool result = false;\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprjymcvr4.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmprjymcvr4.__unittest_L17_C1() [0x427a62]\n??:? void tmprjymcvr4.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tbool check_monthnumber_number = false;\n\tif (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\tcheck_monthnumber_number = true;\n\t}\n\telse\n\t{\n\t\tcheck_monthnumber_number = false;\n\t}\n\treturn check_monthnumber_number;\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphfn_xojp.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmphfn_xojp.__unittest_L21_C1() [0x427a6a]\n??:? void tmphfn_xojp.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\treturn (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11);\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif(monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtnz5vtq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpqtnz5vtq.__unittest_L19_C1() [0x427a5a]\n??:? void tmpqtnz5vtq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n\t\n*/\nbool check_monthnumber_number(long monthnum3) \n{\n\tif (monthnum3 == 2)\n\t{\n\t\treturn false;\n\t}\n\telse if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = check_monthnumber_number;\n\n    assert(candidate(6L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(12L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517344,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8uh0eza0.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8uh0eza0.__unittest_L23_C1() [0x427a52]\n??:? void tmp8uh0eza0.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
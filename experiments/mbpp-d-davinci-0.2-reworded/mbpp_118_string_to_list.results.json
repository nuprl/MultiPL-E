{
  "name": "mbpp_118_string_to_list",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint len = string.length;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\tlist.length = len;\n\t\n\twhile (i < len) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tlist[k] = string[j .. i];\n\t\t\tk++;\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist[k] = string[j .. i];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp0ejpdw9d.d(10): Error: `string` is used as a type\n/tmp/tmp0ejpdw9d.d(11): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ejpdw9d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu = 0;\n\tint bv = 0;\n\tint bw = 0;\n\tint bx = 0;\n\tint by = 0\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124158,
      "stdout": "",
      "stderr": "/tmp/tmpco3_a6x0.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpco3_a6x0.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpco3_a6x0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\twhile(i < length)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i+1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist ~= string[j..$];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp9k9h12f3.d(10): Error: `string` is used as a type\n/tmp/tmp9k9h12f3.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k9h12f3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpm4tldk2n.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4tldk2n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, ' ');\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp0qvdiwmr.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qvdiwmr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\n/*\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124158,
      "stdout": "",
      "stderr": "/tmp/tmpvh8xcide.d(12): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvh8xcide.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint index = 0;\n\tint start = 0;\n\tint end = 0;\n\t\n\twhile(index < string.length)\n\t{\n\t\tif(string[index] == ' ')\n\t\t{\n\t\t\tend = index;\n\t\t\tlist ~= string[start..end];\n\t\t\tstart = index + 1;\n\t\t}\n\t\tindex++;\n\t}\n\t\n\tlist ~= string[start..string.length];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpr2ak20_3.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ak20_3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = string.length;\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tlist ~= string[i..j];\n\t\t\ti = j + 1;\n\t\t}\n\t\tj++;\n\t}\n\tlist ~= string[i..j];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp035k319j.d(10): Error: `string` is used as a type\n/tmp/tmp035k319j.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp035k319j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\twhile(i < length)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i+1;\n\t\t}\n\t\ti++;\n\t}\n\tlist ~= string[j..i];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp1r22n4a2.d(10): Error: `string` is used as a type\n/tmp/tmp1r22n4a2.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1r22n4a2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\twhile (i < length)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist ~= string[j..i];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp1j84c2_f.d(10): Error: `string` is used as a type\n/tmp/tmp1j84c2_f.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1j84c2_f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu = 0;\n\tint bv = 0;\n\tint bw = 0;\n\tint bx = 0;\n\tint by = 0\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124158,
      "stdout": "",
      "stderr": "/tmp/tmpco3_a6x0.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpco3_a6x0.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpco3_a6x0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tlist ~= string[i..j];\n\t\t\ti = j + 1;\n\t\t}\n\t\tj++;\n\t}\n\tlist ~= string[i..j];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp85komof2.d(10): Error: `string` is used as a type\n/tmp/tmp85komof2.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp85komof2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpm4tldk2n.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4tldk2n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, ' ');\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp0qvdiwmr.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qvdiwmr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = string.length;\n\t\n\twhile(i < len)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\tlist ~= string[j..i];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpip5fs4p9.d(10): Error: `string` is used as a type\n/tmp/tmpip5fs4p9.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip5fs4p9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint index = 0;\n\tint start = 0;\n\tint end = 0;\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tend = index;\n\t\t\tlist ~= string[start..end];\n\t\t\tstart = index + 1;\n\t\t}\n\t\tindex++;\n\t}\n\t\n\tlist ~= string[start..$];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpqcy3c_tm.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcy3c_tm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpm4tldk2n.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4tldk2n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint index = 0;\n\tint start = 0;\n\tint end = 0;\n\t\n\twhile (index < string.length)\n\t{\n\t\tif (string[index] == ' ')\n\t\t{\n\t\t\tend = index;\n\t\t\tlist ~= string[start..end];\n\t\t\tstart = index + 1;\n\t\t}\n\t\tindex++;\n\t}\n\t\n\tlist ~= string[start..$];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpjcnvcy83.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjcnvcy83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint index = 0;\n\tint start = 0;\n\tint length = string.length;\n\twhile(index < length)\n\t{\n\t\tif(string[index] == ' ')\n\t\t{\n\t\t\tlist ~= string[start..index];\n\t\t\tstart = index + 1;\n\t\t}\n\t\tindex++;\n\t}\n\tlist ~= string[start..index];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpgxnyvtz_.d(10): Error: `string` is used as a type\n/tmp/tmpgxnyvtz_.d(13): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgxnyvtz_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint len = string.length;\n\t\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t}\n\t\n\tlist ~= string[j..$];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp7uf85ymh.d(10): Error: `string` is used as a type\n/tmp/tmp7uf85ymh.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7uf85ymh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint len = string.length;\n\t\n\twhile(i < len)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\tlist ~= string[j..i];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp_z1luvup.d(10): Error: `string` is used as a type\n/tmp/tmp_z1luvup.d(13): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_z1luvup.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpm4tldk2n.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4tldk2n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\twhile (i < length)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist ~= string[j..$];\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmp_x6ep3ys.d(10): Error: `string` is used as a type\n/tmp/tmp_x6ep3ys.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_x6ep3ys.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string, \" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmp_9c2pfc2.d(10): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9c2pfc2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn string.split(\" \");\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "/tmp/tmpx37tmes1.d(10): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx37tmes1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert a string to an array of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\tstring[] list;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint length = string.length;\n\t\n\twhile(i < length)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tlist ~= string[j..i];\n\t\t\tj = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist ~= string[j..i];\n\t\n\treturn list;\n}\nunittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
      "timestamp": 1666124159,
      "stdout": "",
      "stderr": "/tmp/tmpb9kdrt1k.d(10): Error: `string` is used as a type\n/tmp/tmpb9kdrt1k.d(14): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb9kdrt1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_96_divisor",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the number of divisors of a given integer.\n\t\n*/\nlong divisor(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = divisor;\n\n    assert(candidate(15L) == 4L);\n    assert(candidate(12L) == 6L);\n    assert(candidate(9L) == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1 .. n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n    long divisor = 0;\n    long i = 1;\n    while (i <= n) {\n        if (n % i == 0) {\n            divisor += 1;\n        }\n        i += 1;\n    }\n    return divisor;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long cnt = 0; \n    for (long i = 1; i <= sqrt(n); i++) { \n        if (n % i == 0) { \n            // If divisors are equal, \n            // count only one \n            if (n / i == i) \n                cnt++; \n  \n            else // Otherwise count both \n                cnt = cnt + 2; \n        } \n    } \n    return cnt; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}"
  ]
}
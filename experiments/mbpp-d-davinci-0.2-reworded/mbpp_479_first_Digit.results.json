{
  "name": "mbpp_479_first_Digit",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\n/*\n\tWrite a dthon function to find the last digit of a given number.\n*/\nlong last_Digit(long n) \n{\n\treturn abs(n % 10);\n}\n/*\n\tWrite a dthon function to find the sum of all digits of a given number.\n*/\nlong sum_Digits(long n) \n{\n\tlong sum = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a dthon function to find the sum of all digits of a given number.\n*/\nlong sum_Digits(long n) \n{\n\tlong sum = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a dthon function to find the sum of all digits of a given number.\n*/\nlong sum_Digits(long n) \n{\n\tlong sum = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a dthon function to find the sum of all digits of a given number.\n*/\nlong sum_Digits(long n) \n{\n\tlong sum = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a dthon function to find the sum of all digits of a given number.\n*/\nlong sum_Digits(long n) \n{\n\tlong sum = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a dthon function\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517713,
      "stdout": "",
      "stderr": "/tmp/tmp5z5g5gh5.d(88): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5z5g5gh5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n.abs.to!string[0].to!long;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517713,
      "stdout": "",
      "stderr": "/tmp/tmpjs0o_1wo.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs0o_1wo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn *= -1;\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -n : n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2izt1cm4.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp2izt1cm4.__unittest_L12_C1() [0x427a40]\n??:? void tmp2izt1cm4.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile(n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10) \n\t\tn /= 10; \n\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong first = 0;\n\twhile(n > 0)\n\t{\n\t\tfirst = n % 10;\n\t\tn /= 10;\n\t}\n\treturn first;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile(n>=10) \n\t{\n\t\tn/=10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile(n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n    while (n >= 10) \n\t{\n        n /= 10;\n    }\n    return n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10) \n\t\tn /= 10; \n\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10) \n\t\tn /= 10; \n\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n == 0 ? 0 : abs(n) % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsw8cx3nr.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpsw8cx3nr.__unittest_L12_C1() [0x427a88]\n??:? void tmpsw8cx3nr.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong first;\n\tif (n < 0)\n\t{\n\t\tn = -n;\n\t}\n\twhile (n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n - ((n / 10) * 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplem1vm9p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmplem1vm9p.__unittest_L12_C1() [0x427a54]\n??:? void tmplem1vm9p.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn *= -1;\n\t\n\twhile(n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10) \n\t\tn /= 10; \n\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong first_digit;\n\t\n\twhile(n > 0)\n\t{\n\t\tfirst_digit = n % 10;\n\t\tn = n / 10;\n\t}\n\treturn first_digit;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -1 : n / pow(10, floor(log10(abs(n))));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmp9qbqj8lm.d(10): Error: cannot implicitly convert expression `n < 0L ? -1L : cast(real)n / pow(10, floor(log10(cast(real)abs(n))))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9qbqj8lm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n    return n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn *= -1;\n\t}\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10)  \n\t\tn /= 10; \n\t\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n.abs.to!string[0].to!long;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517713,
      "stdout": "",
      "stderr": "/tmp/tmpjs0o_1wo.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs0o_1wo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t{\n\t\tn = -n;\n\t}\n\t\n\tif(n < 10)\n\t{\n\t\treturn n;\n\t}\n\t\n\twhile(n >= 10)\n\t{\n\t\tn = n / 10;\n\t}\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n > 9)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn abs(n) / pow(10, floor(log10(abs(n))));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "/tmp/tmpmwarahwb.d(10): Error: cannot implicitly convert expression `cast(real)abs(n) / pow(10, floor(log10(cast(real)abs(n))))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwarahwb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n - ((n / 10) * 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplem1vm9p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmplem1vm9p.__unittest_L12_C1() [0x427a54]\n??:? void tmplem1vm9p.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \n  \n// Driver program to test above function \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile(n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\t//return n.to!string[0].to!long;\n\treturn n.to!string[0].to!long;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "/tmp/tmp5ak35i_q.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ak35i_q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\t// Remove last digit from number \n\t// till only one digit is left \n\twhile (n >= 10)  \n\t\tn /= 10; \n\t\n\t// return the first digit \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong first_digit;\n\twhile (n > 0) \n\t{\n\t\tfirst_digit = n % 10;\n\t\tn = n / 10;\n\t}\n\treturn first_digit;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile (n >= 10) {\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n > 9)\n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\twhile (n >= 10) \n\t\tn /= 10; \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n.abs / pow(10, (n.abs.stringof.length - 1));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4fetur_h.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp4fetur_h.__unittest_L12_C1() [0x427ad8]\n??:? void tmp4fetur_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile (n >= 10) \n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n - ((n / 10) * 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplem1vm9p.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmplem1vm9p.__unittest_L12_C1() [0x427a54]\n??:? void tmplem1vm9p.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n.abs.to!string[0].to!long;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517713,
      "stdout": "",
      "stderr": "/tmp/tmpjs0o_1wo.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs0o_1wo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n    return n < 0 ? -1 * first_Digit(-1 * n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / (long)pow(10, (long)log10(n));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpw7xpe9tn.d(10): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpw7xpe9tn.d(10): Error: C style cast illegal, use `cast(long)pow(10, cast(long)log10(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw7xpe9tn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn *= -1;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\twhile (n >= 10)\n\t\tn /= 10;\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong digit = 0;\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n) \n\t{\n\t\tdigit = n % 10;\n\t\tn /= 10;\n\t}\n\treturn digit;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -(n % 10) : n % 10;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp57gaiw5e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp57gaiw5e.__unittest_L12_C1() [0x427a5c]\n??:? void tmp57gaiw5e.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? first_Digit(-n) : n < 10 ? n : first_Digit(n / 10);\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tlong digit = n;\n\twhile (digit >= 10) \n\t{\n\t\tdigit /= 10;\n\t}\n\treturn digit;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    while (n >= 10)  \n        n /= 10; \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t{\n\t\tn = -n;\n\t}\n\t\n\twhile (n >= 10)\n\t{\n\t\tn /= 10;\n\t}\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif(n < 0)\n\t\tn = -n;\n\twhile(n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n    // Remove last digit from number \n    // till only one digit is left \n    while (n >= 10)  \n        n /= 10; \n  \n    // return the first digit \n    return n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\twhile (n >= 10) \n\t{\n\t\tn /= 10;\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n / pow(10, floor(log10(n)));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmpakyykmqe.d(10): Error: cannot implicitly convert expression `cast(real)n / pow(10, floor(log10(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpakyykmqe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\treturn n < 0 ? -1 : n / pow(10, floor(log10(abs(n))));\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "/tmp/tmp9qbqj8lm.d(10): Error: cannot implicitly convert expression `n < 0L ? -1L : cast(real)n / pow(10, floor(log10(cast(real)abs(n))))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9qbqj8lm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{ \n\twhile (n >= 10) \n\t\tn /= 10; \n\treturn n; \n} \nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666124236,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the first digit of a given number.\n\t\n*/\nlong first_Digit(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n >= 10)\n\t\tn /= 10;\n\treturn n;\n}\nunittest\n{\n    alias candidate = first_Digit;\n\n    assert(candidate(123L) == 1L);\n    assert(candidate(456L) == 4L);\n    assert(candidate(12L) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_56_checks",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\tauto rev_num = rev.to!long;\n\treturn (n == 2 * rev_num - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "/tmp/tmp_v84z4wb.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_v84z4wb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n\tlong rev = 0, temp = n; \n\twhile (temp != 0) \n\t{ \n\t\trev = rev * 10 + temp % 10; \n\t\ttemp /= 10; \n\t} \n\treturn (n == rev + 1 || n == rev - 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdpg9cb61.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpdpg9cb61.__unittest_L18_C1() [0x427acc]\n??:? void tmpdpg9cb61.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "/tmp/tmpo4jxtn0m.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4jxtn0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplai9o10v.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmplai9o10v.__unittest_L19_C1() [0x427ab8]\n??:? void tmplai9o10v.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn rev == n - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "/tmp/tmpnsg3kv3w.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsg3kv3w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.reverse;\n\treturn (n == (2 * r) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "/tmp/tmp3cby3vit.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3cby3vit.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num != 0)\n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1 || n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdcu19_jj.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpdcu19_jj.__unittest_L19_C1() [0x427acc]\n??:? void tmpdcu19_jj.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1 || n == rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphqo7lpcz.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmphqo7lpcz.__unittest_L19_C1() [0x427acc]\n??:? void tmphqo7lpcz.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == rev - 1) || (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqs5t5i5n.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpqs5t5i5n.__unittest_L19_C1() [0x427acc]\n??:? void tmpqs5t5i5n.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n + 1 == 2 * r);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0, t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long rev = 0; \n    long num = n; \n    while (n > 0) \n    { \n        rev = rev * 10 + n % 10; \n        n = n / 10; \n    } \n    return (num == (rev + 1) / 2); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfvoncgwg.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpfvoncgwg.__unittest_L19_C1() [0x427ac4]\n??:? void tmpfvoncgwg.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplai9o10v.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmplai9o10v.__unittest_L19_C1() [0x427ab8]\n??:? void tmplai9o10v.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpmnsizxfd.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmnsizxfd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long rev = 0; \n    long num = n; \n    while (num > 0) \n    { \n        rev = rev * 10 + num % 10; \n        num /= 10; \n    } \n    return (n == 2 * rev - 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt = t / 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == (2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == (r * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppw2akt1p.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmppw2akt1p.__unittest_L19_C1() [0x427ab8]\n??:? void tmppw2akt1p.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint r = 0;\n\tint nn = n;\n\twhile (nn != 0) \n\t{\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpe92swedb.d(11): Error: cannot implicitly convert expression `n` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe92swedb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (reverse * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprdyobco2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmprdyobco2.__unittest_L18_C1() [0x427ab8]\n??:? void tmprdyobco2.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpq5mx4f5f.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5mx4f5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2tt291q7.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp2tt291q7.__unittest_L18_C1() [0x427ab8]\n??:? void tmp2tt291q7.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n\tlong rev = 0; \n\tlong temp = n; \n\twhile (temp != 0) \n\t{ \n\t\trev = rev * 10 + temp % 10; \n\t\ttemp /= 10; \n\t} \n\treturn (n == (rev * 2 - 1)); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num != 0)\n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt = t / 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse + 1 || n == reverse - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuyb4613n.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpuyb4613n.__unittest_L19_C1() [0x427acc]\n??:? void tmpuyb4613n.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num != 0)\n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long reverse = 0; \n    long temp = n; \n    while (temp != 0) { \n        reverse = reverse * 10 + temp % 10; \n        temp /= 10; \n    } \n    return (n == reverse + 1 || n == reverse - 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1u1pk9m5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp1u1pk9m5.__unittest_L18_C1() [0x427acc]\n??:? void tmp1u1pk9m5.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0, t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "/tmp/tmpl7a5s53y.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7a5s53y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long reverse = 0; \n    long temp = n; \n    while (temp != 0) { \n        reverse = reverse * 10 + temp % 10; \n        temp = temp / 10; \n    } \n    return (n == reverse + 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp73_dr93f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp73_dr93f.__unittest_L18_C1() [0x427ab8]\n??:? void tmp73_dr93f.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1) || (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n - r == r / 10);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp40cyza4c.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp40cyza4c.__unittest_L19_C1() [0x427ac4]\n??:? void tmp40cyza4c.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (n > 0) \n\t{\n\t\tr = r * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn t == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpowz6d3fl.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpowz6d3fl.__unittest_L19_C1() [0x427ab8]\n??:? void tmpowz6d3fl.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (2 * rev) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (n > 0) \n\t{\n\t\trev = rev * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn (num == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpq5mx4f5f.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5mx4f5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string.reverse;\n\treturn n + 1 == 2 * r.to!long;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "/tmp/tmp_azgsp65.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_azgsp65.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "/tmp/tmpg3ai4suz.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3ai4suz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (abs(n - 2 * rev) == 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint r = 0;\n\tint temp = n;\n\twhile (temp > 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "/tmp/tmp7wjxkczm.d(11): Error: cannot implicitly convert expression `n` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wjxkczm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp)\n\t{\n\t\trev = rev*10 + temp%10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2*rev-1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpowz6d3fl.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpowz6d3fl.__unittest_L19_C1() [0x427ab8]\n??:? void tmpowz6d3fl.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m != 0)\n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10;\n\t\treverse = reverse + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn (n == reverse - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp2eufm65.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpp2eufm65.__unittest_L20_C1() [0x427abc]\n??:? void tmpp2eufm65.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcl_poawo.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpcl_poawo.__unittest_L19_C1() [0x427ab8]\n??:? void tmpcl_poawo.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse + 1) || (n == 2 * reverse - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile (n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10;\n\t\treverse = reverse + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn (n == reverse - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp2eufm65.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpp2eufm65.__unittest_L20_C1() [0x427abc]\n??:? void tmpp2eufm65.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0)\n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdeguh3ap.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpdeguh3ap.__unittest_L19_C1() [0x427ab8]\n??:? void tmpdeguh3ap.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint[] a = to!(int[])(n);\n\tint[] b = a.dup;\n\tb.reverse;\n\treturn (n == (2*b[0] - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "/tmp/tmp3ng0ks0p.d(10): Error: template instance `to!(int[])` template `to` is not defined, did you mean No?\n/tmp/tmp3ng0ks0p.d(12): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(int[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ng0ks0p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpq5mx4f5f.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5mx4f5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (n > 0) \n\t{\n\t\tr = r * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn (t == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r + r + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp8zl4a3z.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpp8zl4a3z.__unittest_L19_C1() [0x427abc]\n??:? void tmpp8zl4a3z.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (n > 0) \n\t{\n\t\tr = r * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn t == r + r + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprl1zxsac.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmprl1zxsac.__unittest_L19_C1() [0x427abc]\n??:? void tmprl1zxsac.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == (2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpowz6d3fl.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpowz6d3fl.__unittest_L19_C1() [0x427ab8]\n??:? void tmpowz6d3fl.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n\tlong r = 0; \n\tlong m = n; \n\twhile (n > 0) \n\t{ \n\t\tr = r * 10 + n % 10; \n\t\tn = n / 10; \n\t} \n\treturn (2 * r == m + 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (n > 0) \n\t{\n\t\trev = rev * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn num == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse + 1 || n == reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1_qkhe_q.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp1_qkhe_q.__unittest_L19_C1() [0x427acc]\n??:? void tmp1_qkhe_q.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string;\n\tauto s = r.dup;\n\ts.reverse;\n\treturn (n == 2*s.to!long - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "/tmp/tmpijvn594o.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpijvn594o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6gtmizzf.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp6gtmizzf.__unittest_L19_C1() [0x427ab8]\n??:? void tmp6gtmizzf.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6_h0if5a.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp6_h0if5a.__unittest_L18_C1() [0x427abc]\n??:? void tmp6_h0if5a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0, t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong num = n;\n\twhile (num != 0) \n\t{\n\t\treverse = reverse * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "/tmp/tmpo4jxtn0m.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4jxtn0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long rev = 0; \n    long temp = n; \n    while (temp != 0) \n    { \n        rev = rev * 10 + temp % 10; \n        temp = temp / 10; \n    } \n    return (n == 2 * rev - 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse + 1 || n == reverse - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptwk0n3d5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmptwk0n3d5.__unittest_L19_C1() [0x427acc]\n??:? void tmptwk0n3d5.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "/tmp/tmpg_ykr5or.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_ykr5or.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.reverse;\n\treturn (n + 1) == (2 * r);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "/tmp/tmpcnhj7w_9.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnhj7w_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt = t / 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplj5cozol.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmplj5cozol.__unittest_L19_C1() [0x427ab8]\n??:? void tmplj5cozol.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n\tlong rev = 0, temp = n; \n\twhile (temp > 0) \n\t{ \n\t\trev = rev * 10 + temp % 10; \n\t\ttemp /= 10; \n\t} \n\treturn (n == rev - 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5z3antsn.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp5z3antsn.__unittest_L18_C1() [0x427ab8]\n??:? void tmp5z3antsn.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tif (n < 10)\n\t\treturn false;\n\t\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn n == 2 * reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint x = n;\n\tint y = 0;\n\twhile (x > 0) \n\t{\n\t\ty = y * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == y * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "/tmp/tmp9sho4a9k.d(10): Error: cannot implicitly convert expression `n` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9sho4a9k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{ \n    long rev = 0; \n    long original = n; \n    while (n != 0) \n    { \n        rev = rev * 10 + n % 10; \n        n /= 10; \n    } \n    return (original - rev == 1); \n} \nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphy_r928e.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmphy_r928e.__unittest_L19_C1() [0x427ab8]\n??:? void tmphy_r928e.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1 || n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdcu19_jj.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpdcu19_jj.__unittest_L19_C1() [0x427acc]\n??:? void tmpdcu19_jj.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint rev = 0;\n\tint temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "/tmp/tmpxdgpca1e.d(11): Error: cannot implicitly convert expression `n` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxdgpca1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy74r2eug.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpy74r2eug.__unittest_L19_C1() [0x427ab8]\n??:? void tmpy74r2eug.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m != 0) {\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (reverse * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpowz6d3fl.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpowz6d3fl.__unittest_L19_C1() [0x427ab8]\n??:? void tmpowz6d3fl.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num != 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0)\n\t{\n\t\tr = r*10 + t%10;\n\t\tt /= 10;\n\t}\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "/tmp/tmpmnsizxfd.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmnsizxfd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0, t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
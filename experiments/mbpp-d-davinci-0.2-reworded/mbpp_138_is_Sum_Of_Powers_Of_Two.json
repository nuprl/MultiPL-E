{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\n*/\nbool is_Sum_Of_Powers_Of_Two(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_Sum_Of_Powers_Of_Two;\n\n    assert(candidate(10L) == true);\n    assert(candidate(7L) == false);\n    assert(candidate(14L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (sum < n) \n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{\n\tlong temp = n;\n\tlong sum = 0;\n\twhile (temp != 0) \n\t{\n\t\tlong rem = temp % 2;\n\t\tif (rem == 1) \n\t\t{\n\t\t\tsum += rem;\n\t\t}\n\t\ttemp = temp / 2;\n\t}\n\treturn sum == 1;\n}",
    "{ \n\tif (n == 0) \n\t\treturn false; \n\twhile (n != 1) \n\t{ \n\t\tif (n % 2 != 0) \n\t\t\treturn false; \n\t\tn = n / 2; \n\t} \n\treturn true; \n} ",
    "{\n\tif (n <= 0) \n\t\treturn false;\n\twhile (n > 1) \n\t{\n\t\tif (n % 2 != 0) \n\t\t\treturn false;\n\t\tn /= 2;\n\t}\n\treturn true;\n}",
    "{\n\tlong temp = n;\n\tlong sum = 0;\n\twhile (temp > 0) \n\t{\n\t\tlong rem = temp % 2;\n\t\tif (rem == 1) \n\t\t{\n\t\t\tsum += rem;\n\t\t\ttemp = temp / 2;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp = temp / 2;\n\t\t}\n\t}\n\tif (sum == 1) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}",
    "{\n\tlong i = 0;\n\tlong sum = 0;\n\twhile(sum < n) \n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (sum < n) \n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{\n\tif (n == 0) \n\t\treturn false;\n\t\n\twhile (n != 1) \n\t{\n\t\tif (n % 2 != 0) \n\t\t\treturn false;\n\t\tn = n / 2;\n\t}\n\treturn true;\n}",
    "{\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 1) \n\t\t{\n\t\t\tif (n == 1) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tn = n / 2;\n\t}\n\treturn false;\n}",
    "{\n\tlong temp = n;\n\tlong sum = 0;\n\twhile(temp > 0)\n\t{\n\t\tlong rem = temp % 2;\n\t\tif(rem == 1)\n\t\t{\n\t\t\tsum += rem;\n\t\t}\n\t\ttemp /= 2;\n\t}\n\treturn sum == 1;\n}",
    "{\n\tlong sum = 0;\n\tlong k = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n & 1) \n\t\t{\n\t\t\tsum += pow(2, k);\n\t\t}\n\t\tk++;\n\t\tn = n >> 1;\n\t}\n\treturn sum == n;\n}",
    "{\n\tlong sum = 0;\n\tlong p = 1;\n\twhile (n != 0) \n\t{\n\t\tif (n & 1) \n\t\t{\n\t\t\tsum += p;\n\t\t}\n\t\tp *= 2;\n\t\tn >>= 1;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (sum < n) \n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{\n\tint i = 0;\n\tint sum = 0;\n\twhile (sum < n) \n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{ \n    if (n == 0) \n        return false; \n  \n    while (n != 1) \n    { \n        if (n % 2 != 0) \n            return false; \n        n = n / 2; \n    } \n    return true; \n} ",
    "{\n\tif (n == 0) \n\t\treturn false;\n\t\t\n\twhile (n != 1) \n\t{\n\t\tif (n % 2 != 0) \n\t\t\treturn false;\n\t\tn = n / 2;\n\t}\n\treturn true;\n}",
    "{\n\tif (n == 0)\n\t\treturn false;\n\twhile (n != 1)\n\t{\n\t\tif (n % 2 != 0)\n\t\t\treturn false;\n\t\tn = n / 2;\n\t}\n\treturn true;\n}",
    "{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (sum < n)\n\t{\n\t\tsum += pow(2, i);\n\t\ti++;\n\t}\n\treturn sum == n;\n}",
    "{ \n    if (n == 0) \n        return false; \n    while (n != 1) \n    { \n        if (n % 2 != 0) \n            return false; \n        n = n / 2; \n    } \n    return true; \n} ",
    "{\n\tif (n == 0)\n\t\treturn false;\n\twhile (n != 1) \n\t{\n\t\tif (n % 2 != 0)\n\t\t\treturn false;\n\t\tn /= 2;\n\t}\n\treturn true;\n}"
  ]
}
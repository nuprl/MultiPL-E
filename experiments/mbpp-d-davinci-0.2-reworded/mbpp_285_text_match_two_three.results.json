{
  "name": "mbpp_285_text_match_two_three",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_285_text_match_two_three.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b' || text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpre88blnd.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpre88blnd.__unittest_L36_C1() [0x427b72]\n??:? void tmpre88blnd.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa32]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430074]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa09]\n??:? runModuleUnitTests [0x42b975]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif(count == 2 || count == 3)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tif (count == 2 || count == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tint count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (count == 2 || count == 3) return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmkpatf1_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpmkpatf1_.__unittest_L31_C1() [0x427b3a]\n??:? void tmpmkpatf1_.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp0nbxa04.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpp0nbxa04.__unittest_L33_C1() [0x427b46]\n??:? void tmpp0nbxa04.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3) return false;\n\t\n\tif(text[0] != 'a') return false;\n\t\n\tif(text[1] != 'b') return false;\n\t\n\tif(text[2] != 'b') return false;\n\t\n\tif(text.length == 3) return true;\n\t\n\tif(text[3] != 'b') return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvxtnqev9.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpvxtnqev9.__unittest_L23_C1() [0x427b7e]\n??:? void tmpvxtnqev9.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] == 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmp_pwsxrzz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pwsxrzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] == 'b') return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t\ta_count++;\n\t\telse if(c == 'b')\n\t\t\tb_count++;\n\t\t\n\t\tif(a_count == 1 && b_count >= 2 && b_count <= 3)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe6pxm5yw.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpe6pxm5yw.__unittest_L29_C1() [0x427b7e]\n??:? void tmpe6pxm5yw.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\tif (text[0] != 'a')\n\t\treturn false;\n\tif (text[1] != 'b')\n\t\treturn false;\n\tif (text[2] != 'b')\n\t\treturn false;\n\tif (text.length == 4)\n\t\treturn true;\n\tif (text[3] != 'b')\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6y6pjv6a.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp6y6pjv6a.__unittest_L28_C1() [0x427b3a]\n??:? void tmp6y6pjv6a.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\tif (text.length > 3)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tif (text[1] == 'b' && text[2] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t\telse if (text[1] == 'b' && text[2] == 'b' && text[3] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tint count3 = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount3++;\n\t\t}\n\t}\n\tif (count == 1 && count2 == 2 && count3 == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfvtx72v1.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpfvtx72v1.__unittest_L36_C1() [0x427b62]\n??:? void tmpfvtx72v1.__modtest() [0x427b78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430064]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f9]\n??:? runModuleUnitTests [0x42b965]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpandtfnj2.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpandtfnj2.__unittest_L29_C1() [0x427b7e]\n??:? void tmpandtfnj2.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9_vjayes.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp9_vjayes.__unittest_L33_C1() [0x427b2e]\n??:? void tmp9_vjayes.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.find(\"abb\") != -1 || text.find(\"abbb\") != -1;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_w9d4aq7.d(9): Error: no property `find` for type `string`\n/tmp/tmp_w9d4aq7.d(9): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_w9d4aq7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipfs4bkj.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpipfs4bkj.__unittest_L36_C1() [0x427b3a]\n??:? void tmpipfs4bkj.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1xmzyol7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp1xmzyol7.__unittest_L26_C1() [0x427b0e]\n??:? void tmp1xmzyol7.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptkumd2jc.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmptkumd2jc.__unittest_L33_C1() [0x427b2e]\n??:? void tmptkumd2jc.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tif (text.length < 4) return false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tif (text[i+1] == 'b' && text[i+2] == 'b')\n\t\t\t{\n\t\t\t\tif (text[i+3] == 'b')\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\t\n\tif (text.length >= 4)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tif (text[1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmp_pwsxrzz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pwsxrzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr94rmdi7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpr94rmdi7.__unittest_L29_C1() [0x427b7e]\n??:? void tmpr94rmdi7.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\tif(text[0] != 'a')\n\t\treturn false;\n\tif(text[1] != 'b')\n\t\treturn false;\n\tif(text[2] != 'b')\n\t\treturn false;\n\tif(text.length == 3)\n\t\treturn true;\n\tif(text[3] != 'b')\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9zd6wtm1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp9zd6wtm1.__unittest_L23_C1() [0x427b7e]\n??:? void tmp9zd6wtm1.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\tif (text[0] != 'a')\n\t\treturn false;\n\tif (text[1] != 'b')\n\t\treturn false;\n\tif (text[2] != 'b')\n\t\treturn false;\n\tif (text.length == 3)\n\t\treturn true;\n\tif (text[3] != 'b')\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0lwwqne.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpy0lwwqne.__unittest_L23_C1() [0x427b7e]\n??:? void tmpy0lwwqne.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\tint j = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tj = i;\n\t\t\twhile(text[j] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbcaba3z4.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpbcaba3z4.__unittest_L33_C1() [0x427b3e]\n??:? void tmpbcaba3z4.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] != 'b') return true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2qpomrce.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp2qpomrce.__unittest_L23_C1() [0x427b82]\n??:? void tmp2qpomrce.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwi6tr57a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpwi6tr57a.__unittest_L32_C1() [0x427b3e]\n??:? void tmpwi6tr57a.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp45f3doa6.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp45f3doa6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptmry6xb.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpptmry6xb.__unittest_L35_C1() [0x427b2e]\n??:? void tmpptmry6xb.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3) return false;\n\t\n\tif(text[0] != 'a') return false;\n\t\n\tint count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b') count++;\n\t}\n\t\n\tif(count == 2 || count == 3) return true;\n\telse return false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0xa4ppy6.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp0xa4ppy6.__unittest_L22_C1() [0x427b3a]\n??:? void tmp0xa4ppy6.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\t// your code here\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8qa8bidi.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d1d]\n??:? void tmp8qa8bidi.__unittest_L12_C1() [0x427a86]\n??:? void tmp8qa8bidi.__modtest() [0x427a9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff18]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ad]\n??:? runModuleUnitTests [0x42b819]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42816c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprnnxauwy.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprnnxauwy.__unittest_L17_C1() [0x427b7e]\n??:? void tmprnnxauwy.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxhfhtj8w.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpxhfhtj8w.__unittest_L26_C1() [0x427b42]\n??:? void tmpxhfhtj8w.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t}\n\t\telse if(text[i] == 'b' && found)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t\t\n\t\tif(count == 2 || count == 3)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsh0vq8gv.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpsh0vq8gv.__unittest_L32_C1() [0x427b2e]\n??:? void tmpsh0vq8gv.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t}\n\t\t\n\t\tif(found)\n\t\t{\n\t\t\tif(c == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfound = false;\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw7sq0dy5.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw7sq0dy5.__unittest_L35_C1() [0x427b1e]\n??:? void tmpw7sq0dy5.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 4)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text.length == 5)\n\t{\n\t\tif(text[3] == 'b')\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphs3udq22.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmphs3udq22.__unittest_L48_C1() [0x427b8e]\n??:? void tmphs3udq22.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp51f2h36p.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp51f2h36p.__unittest_L32_C1() [0x427b0e]\n??:? void tmp51f2h36p.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1xmzyol7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp1xmzyol7.__unittest_L26_C1() [0x427b0e]\n??:? void tmp1xmzyol7.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] == 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsh0vq8gv.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpsh0vq8gv.__unittest_L32_C1() [0x427b2e]\n??:? void tmpsh0vq8gv.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvxftxya.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpuvxftxya.__unittest_L29_C1() [0x427b7e]\n??:? void tmpuvxftxya.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmp_pwsxrzz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pwsxrzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2u9sy6da.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp2u9sy6da.__unittest_L32_C1() [0x427b2e]\n??:? void tmp2u9sy6da.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5yzoai4.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpw5yzoai4.__unittest_L41_C1() [0x427b7e]\n??:? void tmpw5yzoai4.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\tfor(i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_zs2cl6x.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_zs2cl6x.__unittest_L34_C1() [0x427b32]\n??:? void tmp_zs2cl6x.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] == 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1) \n\t\t\t{\n\t\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b') \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if (text[i + 1] == 'b' && text[i + 2] == 'b' && text[i + 3] == 'b') \n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool found_a = false;\n\tbool found_b = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tfound_a = true;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t\tfound_b = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound_a = false;\n\t\t\tfound_b = false;\n\t\t\ta_count = 0;\n\t\t\tb_count = 0;\n\t\t}\n\t\t\n\t\tif(found_a && found_b)\n\t\t{\n\t\t\tif(a_count == 1 && b_count >= 2 && b_count <= 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a = 0;\n\tint b = 0;\n\t\n\tfor(int i = 0; i < text.length(); i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb++;\n\t\t}\n\t}\n\t\n\tif(a == 1 && (b == 2 || b == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmptun3by8t.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptun3by8t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptkumd2jc.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmptkumd2jc.__unittest_L33_C1() [0x427b2e]\n??:? void tmptkumd2jc.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\tif (text[0] != 'a')\n\t\treturn false;\n\tif (text[1] != 'b')\n\t\treturn false;\n\tif (text[2] != 'b')\n\t\treturn false;\n\tif (text.length == 3)\n\t\treturn true;\n\tif (text[3] != 'b')\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0lwwqne.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpy0lwwqne.__unittest_L23_C1() [0x427b7e]\n??:? void tmpy0lwwqne.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\tif (count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiizivtoo.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpiizivtoo.__unittest_L31_C1() [0x427b2e]\n??:? void tmpiizivtoo.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++) \n\t\t\t{\n\t\t\t\tif (text[j] == 'b') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqvy1lhkj.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpqvy1lhkj.__unittest_L32_C1() [0x427b3e]\n??:? void tmpqvy1lhkj.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(text[3] == 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length >= 3)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tif (text[1] == 'b')\n\t\t\t{\n\t\t\t\tif (text[2] == 'b')\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if (text[2] == 'b' && text[3] == 'b')\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\tbool check = false;\n\tif (text.length > 0)\n\t{\n\t\tif (text[0] == 'a')\n\t\t{\n\t\t\tfor (i = 1; i < text.length; i++)\n\t\t\t{\n\t\t\t\tif (text[i] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tcheck = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn check;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp67rsoys8.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp67rsoys8.__unittest_L31_C1() [0x427b2e]\n??:? void tmp67rsoys8.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t}\n\t\telse if(found && c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t}\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw4emwoy2.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw4emwoy2.__unittest_L29_C1() [0x427b1e]\n??:? void tmpw4emwoy2.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ti++;\n\t\t\twhile (i < text.length && text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt3xgt26d.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpt3xgt26d.__unittest_L37_C1() [0x427b3e]\n??:? void tmpt3xgt26d.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptqev_5i0.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmptqev_5i0.__unittest_L30_C1() [0x427b3a]\n??:? void tmptqev_5i0.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn (a_count == 1 && (b_count == 2 || b_count == 3));\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvfeu440i.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpvfeu440i.__unittest_L26_C1() [0x427b2e]\n??:? void tmpvfeu440i.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplkzzvrv2.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmplkzzvrv2.__unittest_L29_C1() [0x427b3e]\n??:? void tmplkzzvrv2.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b') b_count++;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3) return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq1hbt2d_.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpq1hbt2d_.__unittest_L24_C1() [0x427b3a]\n??:? void tmpq1hbt2d_.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (found && text[i] == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbflq9xkb.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpbflq9xkb.__unittest_L37_C1() [0x427b46]\n??:? void tmpbflq9xkb.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (found && text[i] == 'b') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfound = false;\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count == 2 || count == 3) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif (count == 1)\n\t\t\t{\n\t\t\t\tif (text[i + 1] == 'b' && text[i + 2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif (text[i + 3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count_b = 0;\n\t\n\tfor(int i = 0; i < text.length(); i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\tif(count == 1)\n\t\t\t{\n\t\t\t\tfor(int j = i + 1; j < text.length(); j++)\n\t\t\t\t{\n\t\t\t\t\tif(text[j] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount_b++;\n\t\t\t\t\t\tif(count_b == 2 || count_b == 3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp9xqfps71.d(12): Error: no property `length` for type `string`\n/tmp/tmp9xqfps71.d(19): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xqfps71.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length(); i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tif(a_count == 1)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t\tif(b_count == 2 || b_count == 3)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpym46b3gn.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpym46b3gn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdpzrg_0n.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpdpzrg_0n.__unittest_L26_C1() [0x427b36]\n??:? void tmpdpzrg_0n.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t\ta_count++;\n\t\telse if (text[i] == 'b')\n\t\t\tb_count++;\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa12_g1s5.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpa12_g1s5.__unittest_L28_C1() [0x427b3e]\n??:? void tmpa12_g1s5.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9b4k63p2.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp9b4k63p2.__unittest_L32_C1() [0x427b2e]\n??:? void tmp9b4k63p2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd8io8gug.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpd8io8gug.__unittest_L35_C1() [0x427b2e]\n??:? void tmpd8io8gug.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9gg1be9y.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp9gg1be9y.__unittest_L26_C1() [0x427b0e]\n??:? void tmp9gg1be9y.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\tfor(int i = 0; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tfor(int j = i+1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif(text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0ha1jc9.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpy0ha1jc9.__unittest_L30_C1() [0x427b3e]\n??:? void tmpy0ha1jc9.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] == 'a')\n\t{\n\t\tif (text[1] == 'b' && text[2] == 'b') return true;\n\t\tif (text.length > 3 && text[1] == 'b' && text[2] == 'b' && text[3] == 'b') return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 4)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] == 'a')\n\t{\n\t\tif (text[1] == 'b' && text[2] == 'b') return true;\n\t\tif (text.length > 3 && text[1] == 'b' && text[2] == 'b' && text[3] == 'b') return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp45f3doa6.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp45f3doa6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpls4fne6x.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpls4fne6x.__unittest_L32_C1() [0x427b0e]\n??:? void tmpls4fne6x.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprnnxauwy.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprnnxauwy.__unittest_L17_C1() [0x427b7e]\n??:? void tmprnnxauwy.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\t\n\tfor(int i = 0; i < text.length(); i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\t\n\tif(count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpiuumzqb8.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiuumzqb8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\tif(text[i+1] == 'b')\n\t\t\t{\n\t\t\t\tif(text[i+2] == 'b')\n\t\t\t\t{\n\t\t\t\t\tif(text[i+3] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (found)\n\t\t{\n\t\t\tif (text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfound = false;\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1h5qcu_c.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp1h5qcu_c.__unittest_L33_C1() [0x427b42]\n??:? void tmp1h5qcu_c.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount = 0;\n\t\t}\n\t\tif(count == 4)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif (text[i] == 'b') \n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\tif (a_count == 1 && b_count == 2 || b_count == 3) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqmg76w82.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpqmg76w82.__unittest_L28_C1() [0x427b2a]\n??:? void tmpqmg76w82.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb57]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb7d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43002c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c1]\n??:? runModuleUnitTests [0x42b92d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428280]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] != 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe6pxm5yw.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpe6pxm5yw.__unittest_L29_C1() [0x427b7e]\n??:? void tmpe6pxm5yw.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.find(\"abb\") != -1 || text.find(\"abbb\") != -1;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_w9d4aq7.d(9): Error: no property `find` for type `string`\n/tmp/tmp_w9d4aq7.d(9): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_w9d4aq7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp51f2h36p.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp51f2h36p.__unittest_L32_C1() [0x427b0e]\n??:? void tmp51f2h36p.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length(); i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmp_pwsxrzz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pwsxrzz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn (a_count == 1) && (b_count == 2 || b_count == 3);\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8cmpq3bo.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp8cmpq3bo.__unittest_L26_C1() [0x427b0e]\n??:? void tmp8cmpq3bo.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnhm20yb4.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpnhm20yb4.__unittest_L27_C1() [0x427b36]\n??:? void tmpnhm20yb4.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tif(text[1] != 'b')\n\t\treturn false;\n\t\n\tif(text[2] != 'b')\n\t\treturn false;\n\t\n\tif(text.length == 3)\n\t\treturn true;\n\t\n\tif(text[3] == 'b')\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a = 0;\n\tint b = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb++;\n\t\t}\n\t}\n\t\n\tif (a == 1 && (b == 2 || b == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9xajte6j.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp9xajte6j.__unittest_L32_C1() [0x427b2e]\n??:? void tmp9xajte6j.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] == 'b') return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (found)\n\t\t{\n\t\t\tif (text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tif (count == 2 || count == 3)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tif (a_count == 1)\n\t\t\t{\n\t\t\t\tb_count = 0;\n\t\t\t}\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t\tif (b_count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta_count = 0;\n\t\t\tb_count = 0;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 4)\n\t{\n\t\tif (text[3] != 'b')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count_b = 0;\n\tbool result = false;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount_b++;\n\t\t}\n\t}\n\t\n\tif (count == 1 && (count_b == 2 || count_b == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx5thi23d.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpx5thi23d.__unittest_L33_C1() [0x427b2e]\n??:? void tmpx5thi23d.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\tbool result = false;\n\t\n\tif(text.length > 0)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ti++;\n\t\t\twhile(i < text.length)\n\t\t\t{\n\t\t\t\tif(text[i] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9nbpob8w.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp9nbpob8w.__unittest_L38_C1() [0x427b2e]\n??:? void tmp9nbpob8w.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeh9o4jtv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpeh9o4jtv.__unittest_L30_C1() [0x427b42]\n??:? void tmpeh9o4jtv.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count2 = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tcount2++;\n\t\t}\n\t}\n\t\n\tif(count == 1 && (count2 == 2 || count2 == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvmqo31ct.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpvmqo31ct.__unittest_L32_C1() [0x427b0e]\n??:? void tmpvmqo31ct.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpegnpo3cu.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpegnpo3cu.__unittest_L29_C1() [0x427b3a]\n??:? void tmpegnpo3cu.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\tif (text[0] != 'a')\n\t\treturn false;\n\tif (text[1] != 'b')\n\t\treturn false;\n\tif (text[2] != 'b')\n\t\treturn false;\n\tif (text.length == 3)\n\t\treturn true;\n\tif (text[3] != 'b')\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0lwwqne.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpy0lwwqne.__unittest_L23_C1() [0x427b7e]\n??:? void tmpy0lwwqne.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprnnxauwy.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprnnxauwy.__unittest_L17_C1() [0x427b7e]\n??:? void tmprnnxauwy.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] == 'a')\n\t{\n\t\tif (text[1] == 'b' && text[2] == 'b')\n\t\t\treturn true;\n\t\t\n\t\tif (text.length > 3 && text[1] == 'b' && text[2] == 'b' && text[3] == 'b')\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor (int i = 1; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif (b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5hbhuaq_.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp5hbhuaq_.__unittest_L30_C1() [0x427b42]\n??:? void tmp5hbhuaq_.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && b_count == 2 || b_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd7oearv1.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpd7oearv1.__unittest_L36_C1() [0x427b3a]\n??:? void tmpd7oearv1.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text.length == 4)\n\t{\n\t\tif(text[3] != 'b')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\treturn b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbn47j93d.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpbn47j93d.__unittest_L26_C1() [0x427b36]\n??:? void tmpbn47j93d.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm9526vvg.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpm9526vvg.__unittest_L29_C1() [0x427b3a]\n??:? void tmpm9526vvg.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\tfor (int i = 0; i < text.length; i++) \n\t{\n\t\tif (text[i] == 'a') \n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if (text[i] == 'b' && found) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfound = false;\n\t\t}\n\t}\n\treturn count == 2 || count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn6b2f_6c.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpn6b2f_6c.__unittest_L29_C1() [0x427b42]\n??:? void tmpn6b2f_6c.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn a_count == 1 && b_count == 2 || b_count == 3;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtyf_8w7.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpqtyf_8w7.__unittest_L26_C1() [0x427b0e]\n??:? void tmpqtyf_8w7.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp525slogz.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp525slogz.__unittest_L33_C1() [0x427b0e]\n??:? void tmp525slogz.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b')\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu927xf99.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpu927xf99.__unittest_L41_C1() [0x427b7e]\n??:? void tmpu927xf99.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\t\n\tif (text[0] != 'a') return false;\n\t\n\tif (text[1] != 'b') return false;\n\t\n\tif (text[2] != 'b') return false;\n\t\n\tif (text.length == 3) return true;\n\t\n\tif (text[3] != 'b') return true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2qpomrce.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp2qpomrce.__unittest_L23_C1() [0x427b82]\n??:? void tmp2qpomrce.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw04uv82.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmptw04uv82.__unittest_L33_C1() [0x427b0e]\n??:? void tmptw04uv82.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[0] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[1] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[2] != 'b')\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(text[3] != 'b' && text[3] != 'a')\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\treturn text.length == 4;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_9si4tl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpz_9si4tl.__unittest_L29_C1() [0x427b82]\n??:? void tmpz_9si4tl.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\t\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9xs4dobs.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp9xs4dobs.__unittest_L32_C1() [0x427b2e]\n??:? void tmp9xs4dobs.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint count_b = 0;\n\tbool result = false;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tif (text[i] == 'b')\n\t\t{\n\t\t\tcount_b++;\n\t\t}\n\t}\n\tif (count == 1 && (count_b == 2 || count_b == 3))\n\t{\n\t\tresult = true;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxuzjkpbk.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpxuzjkpbk.__unittest_L29_C1() [0x427b2e]\n??:? void tmpxuzjkpbk.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 4) return false;\n\treturn text[0] == 'a' && text[1] == 'b' && text[2] == 'b' && (text[3] == 'b' || text[3] == '\\0');\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b' || text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 4 && text[3] != 'b')\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) return false;\n\tif (text[0] != 'a') return false;\n\tif (text[1] != 'b') return false;\n\tif (text[2] != 'b') return false;\n\tif (text.length == 3) return true;\n\tif (text[3] != 'b') return true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprnnxauwy.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmprnnxauwy.__unittest_L17_C1() [0x427b7e]\n??:? void tmprnnxauwy.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbaf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa42]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa19]\n??:? runModuleUnitTests [0x42b985]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 4)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzgr4548.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpuzgr4548.__unittest_L29_C1() [0x427b3a]\n??:? void tmpuzgr4548.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tint i = 0;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tif (a_count == 1)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\twhile (i < text.length)\n\t\t\t\t{\n\t\t\t\t\tif (text[i] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tb_count++;\n\t\t\t\t\t\tif (b_count == 2 || b_count == 3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(b{2,3})\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpobtwxy_9.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobtwxy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tbool result = false;\n\t\n\tif(text.length > 3)\n\t{\n\t\tif(text[0] == 'a')\n\t\t{\n\t\t\tif(text[1] == 'b' && text[2] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t\telse if(text[1] == 'b' && text[2] == 'b' && text[3] == 'b')\n\t\t\t{\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor(int i = 0; i < text.length(); i++)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\tif(text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpzd9eqm7_.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzd9eqm7_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\treturn (a_count == 1 && (b_count == 2 || b_count == 3));\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd_03j919.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpd_03j919.__unittest_L26_C1() [0x427b0e]\n??:? void tmpd_03j919.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[0] != 'a') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[1] != 'b') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text[2] != 'b') \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (text.length == 3) \n\t{\n\t\treturn true;\n\t}\n\t\n\tif (text[3] != 'b') \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif (text.length < 3)\n\t\treturn false;\n\t\n\tif (text[0] != 'a')\n\t\treturn false;\n\t\n\tif (text[1] != 'b')\n\t\treturn false;\n\t\n\tif (text[2] != 'b')\n\t\treturn false;\n\t\n\tif (text.length == 3)\n\t\treturn true;\n\t\n\tif (text[3] != 'b')\n\t\treturn true;\n\t\n\tif (text.length == 4)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplyilrlue.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplyilrlue.__unittest_L32_C1() [0x427b8e]\n??:? void tmplyilrlue.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa52]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa29]\n??:? runModuleUnitTests [0x42b995]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/ab{2,3}/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplc2uvvxu.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplc2uvvxu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwi6tr57a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpwi6tr57a.__unittest_L32_C1() [0x427b3e]\n??:? void tmpwi6tr57a.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1v3rdpt1.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp1v3rdpt1.__unittest_L29_C1() [0x427b3e]\n??:? void tmp1v3rdpt1.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tfor (int j = i + 1; j < text.length; j++)\n\t\t\t{\n\t\t\t\tif (text[j] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwi6tr57a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpwi6tr57a.__unittest_L32_C1() [0x427b3e]\n??:? void tmpwi6tr57a.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa02]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb95]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430044]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d9]\n??:? runModuleUnitTests [0x42b945]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428298]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint i = 0;\n\tint count = 0;\n\t\n\twhile(i < text.length)\n\t{\n\t\tif(text[i] == 'a')\n\t\t{\n\t\t\ti++;\n\t\t\tif(text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t\tif(text[i] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ti++;\n\t\t\t\t\tif(text[i] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tif(count == 2 || count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2ue6j_ju.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ee6]\n??:? bool tmp2ue6j_ju.text_match_two_three(immutable(char)[]) [0x427a76]\n??:? void tmp2ue6j_ju.__unittest_L48_C1() [0x427b8d]\n??:? void tmp2ue6j_ju.__modtest() [0x427bb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa62]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa39]\n??:? runModuleUnitTests [0x42b9a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tif(text.length < 3)\n\t\treturn false;\n\t\n\tif(text[0] != 'a')\n\t\treturn false;\n\t\n\tint b_count = 0;\n\t\n\tfor(int i = 1; i < text.length; i++)\n\t{\n\t\tif(text[i] == 'b')\n\t\t\tb_count++;\n\t\telse\n\t\t\tbreak;\n\t}\n\t\n\tif(b_count == 2 || b_count == 3)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm5t8wluv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpm5t8wluv.__unittest_L30_C1() [0x427b3a]\n??:? void tmpm5t8wluv.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb8d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43003c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d1]\n??:? runModuleUnitTests [0x42b93d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428290]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool result = false;\n\tforeach(char c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tcount = 1;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount = 0;\n\t\t}\n\t\tif(count == 3)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn match(text, \"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpok7ev4u7.d(9): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpok7ev4u7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tint i = 0;\n\tbool result = false;\n\t\n\twhile (i < text.length)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\tcount++;\n\t\t\ti++;\n\t\t\tif (text[i] == 'b')\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t\tif (text[i] == 'b')\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ti++;\n\t\t\t\t\tif (text[i] == 'b')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tif (count == 3 || count == 4)\n\t{\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpggut8gwd.d(19): Range violation\n----------------\n??:? _d_arrayboundsp [0x427ee6]\n??:? bool tmpggut8gwd.text_match_two_three(immutable(char)[]) [0x427a7c]\n??:? void tmpggut8gwd.__unittest_L48_C1() [0x427b8d]\n??:? void tmpggut8gwd.__modtest() [0x427bb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa62]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa39]\n??:? runModuleUnitTests [0x42b9a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"/a(b{2,3})/\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpx377dfvr.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx377dfvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\t\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (text[i] == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t}\n\t\telse if (text[i] == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t}\n\t\n\tif (a_count == 1 && (b_count == 2 || b_count == 3))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp82zr7kz2.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp82zr7kz2.__unittest_L33_C1() [0x427b2e]\n??:? void tmp82zr7kz2.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb85]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430034]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c9]\n??:? runModuleUnitTests [0x42b935]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428288]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint a_count = 0;\n\tint b_count = 0;\n\tbool result = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\ta_count++;\n\t\t\tb_count = 0;\n\t\t}\n\t\telse if(c == 'b')\n\t\t{\n\t\t\tb_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta_count = 0;\n\t\t\tb_count = 0;\n\t\t}\n\t\t\n\t\tif(a_count == 1 && (b_count == 2 || b_count == 3))\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\tint count = 0;\n\tbool found = false;\n\t\n\tforeach(c; text)\n\t{\n\t\tif(c == 'a')\n\t\t{\n\t\t\tfound = true;\n\t\t\tcount = 0;\n\t\t}\n\t\telse if(found && c == 'b')\n\t\t{\n\t\t\tcount++;\n\t\t\tif(count == 2 || count == 3)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfound = false;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\t\n*/\nbool text_match_two_three(string text) \n{\n\treturn text.match(\"a(bb|bbb)\");\n}\nunittest\n{\n    alias candidate = text_match_two_three;\n\n    assert(candidate(\"ac\") == false);\n    assert(candidate(\"dc\") == false);\n    assert(candidate(\"abbbba\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkl_l2jek.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkl_l2jek.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
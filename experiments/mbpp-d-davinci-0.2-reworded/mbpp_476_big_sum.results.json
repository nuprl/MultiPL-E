{
  "name": "mbpp_476_big_sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums) \n\t{\n\t\tmax = max(max, n);\n\t\tmin = min(min, n);\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517101,
      "stdout": "",
      "stderr": "/tmp/tmp1z0t7bqs.d(14): Error: function expected before `()`, not `max` of type `long`\n/tmp/tmp1z0t7bqs.d(15): Error: function expected before `()`, not `min` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1z0t7bqs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif (n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif (n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif (num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif (num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums) \n\t{\n\t\tif(n < min) \n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max) \n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif (num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif (num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong biggest = nums[0];\n\tlong smallest = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif(num > biggest) \n\t\t{\n\t\t\tbiggest = num;\n\t\t}\n\t\tif(num < smallest) \n\t\t{\n\t\t\tsmallest = num;\n\t\t}\n\t}\n\treturn biggest + smallest;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif (num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif (num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif(num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\t\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tauto min = minElement(nums);\n\tauto max = maxElement(nums);\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmptjkzzy3e.d(10): Error: undefined identifier `minElement`\n/tmp/tmptjkzzy3e.d(11): Error: undefined identifier `maxElement`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjkzzy3e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif(num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif (num < min)\n\t\t\tmin = num;\n\t\tif (num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tauto min = minElement(nums);\n\tauto max = maxElement(nums);\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmptjkzzy3e.d(10): Error: undefined identifier `minElement`\n/tmp/tmptjkzzy3e.d(11): Error: undefined identifier `maxElement`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjkzzy3e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums) \n\t{\n\t\tif(n < min) \n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max) \n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong[] sorted = nums.dup.sort;\n\treturn sorted[0] + sorted[$-1];\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmptv55zvnv.d(10): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptv55zvnv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\t\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums) {\n\t\tif (n < min) min = n;\n\t\tif (n > max) max = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong big = nums[0];\n\tlong small = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > big)\n\t\t\tbig = n;\n\t\tif(n < small)\n\t\t\tsmall = n;\n\t}\n\treturn big + small;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif(num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tauto max = nums[0];\n\tauto min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif (i < min)\n\t\t\tmin = i;\n\t\tif (i > max)\n\t\t\tmax = i;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong smallest = nums[0];\n\tlong largest = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < smallest)\n\t\t{\n\t\t\tsmallest = num;\n\t\t}\n\t\tif(num > largest)\n\t\t{\n\t\t\tlargest = num;\n\t\t}\n\t}\n\treturn smallest + largest;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\t\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums) \n\t{\n\t\tif(num > max) \n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min) \n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif (num > max)\n\t\t\tmax = num;\n\t\tif (num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tauto min = minElement(nums);\n\tauto max = maxElement(nums);\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmptjkzzy3e.d(10): Error: undefined identifier `minElement`\n/tmp/tmptjkzzy3e.d(11): Error: undefined identifier `maxElement`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjkzzy3e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\treturn max(nums) + min(nums);\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmp5h6z7del.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp5h6z7del.d(10): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5h6z7del.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong smallest = nums[0];\n\tlong largest = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < smallest)\n\t\t\tsmallest = num;\n\t\tif(num > largest)\n\t\t\tlargest = num;\n\t}\n\treturn smallest + largest;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums) \n\t{\n\t\tif (n > max) \n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif (n < min) \n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tauto min = minElement(nums);\n\tauto max = maxElement(nums);\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123985,
      "stdout": "",
      "stderr": "/tmp/tmptjkzzy3e.d(10): Error: undefined identifier `minElement`\n/tmp/tmptjkzzy3e.d(11): Error: undefined identifier `maxElement`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjkzzy3e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\t\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn min + max;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of the largest and smallest value in a given array.\n\t\n*/\nlong big_sum(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max + min;\n}\nunittest\n{\n    alias candidate = big_sum;\n\n    assert(candidate([1L, 2L, 3L]) == 4L);\n    assert(candidate([-1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([2L, 3L, 6L]) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517102,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_564_count_Pairs",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function which takes an array of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = count_Pairs;\n\n    assert(candidate([1L, 2L, 1L], 3L) == 2L);\n    assert(candidate([1L, 1L, 1L, 1L], 4L) == 0L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], 5L) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i + 1; j < n; j++) \n\t\t{\n\t\t\tif (arr[i] != arr[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n  \n    // Iterate through all possible pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a dthon function which takes an array of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a dthon function which takes an array of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a dthon function which takes an array of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a dthon function which takes an array of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0;",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n  \n    // Iterate through all possible pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i+1; j < n; j++) \n  \n            // If current pair is unequal, \n            // increment count \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    // Create an empty hash set \n    HashSet!(long) s = new HashSet!(long); \n  \n    // Traverse through array elements and \n    // count all distinct pairs \n    long res = 0; \n    for (long i = 0; i < n; i++) \n    { \n        // If not present, then put it in \n        // hashtable and increment result \n        if (!s.contains(arr[i])) \n        { \n            s.insert(arr[i]); \n            res += s.count(arr[i] - 1); \n            res += s.count(arr[i] + 1); \n        } \n    } \n    return res; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i+1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{\n\tlong count = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tfor (j = i + 1; j < n; j++) \n\t\t{\n\t\t\tif (arr[i] != arr[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i+1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} "
  ]
}
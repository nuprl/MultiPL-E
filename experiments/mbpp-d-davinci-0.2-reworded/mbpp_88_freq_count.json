{
  "name": "mbpp_88_freq_count",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to get the frequency of all the elements in an array, returned as an associative array.\n\t\n*/\nNullable!(long[long]) freq_count(long[] list1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_88_freq_count.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = freq_count;\n\n{\n        auto result = candidate([10L, 10L, 10L, 10L, 20L, 20L, 20L, 20L, 40L, 40L, 50L, 50L, 30L]);\n        assert(!result.isNull && result.get == [10L: 4L, 20L: 4L, 40L: 2L, 50L: 2L, 30L: 1L]);\n}\n\n{\n        auto result = candidate([1L, 2L, 3L, 4L, 3L, 2L, 4L, 1L, 3L, 1L, 4L]);\n        assert(!result.isNull && result.get == [1L: 3L, 2L: 2L, 3L: 3L, 4L: 3L]);\n}\n\n{\n        auto result = candidate([5L, 6L, 7L, 4L, 9L, 10L, 4L, 5L, 6L, 7L, 9L, 5L]);\n        assert(!result.isNull && result.get == [10L: 1L, 5L: 3L, 6L: 2L, 7L: 2L, 4L: 2L, 9L: 2L]);\n}\n\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(long i; 0 .. list1.length)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long j; 0 .. list2.length)\n\t\t{\n\t\t\tif(list1[i] == list2[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tlist2[j] = -1;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.set(long[long](element, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult.get[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(result[list1[i]] is null)\n\t\t{\n\t\t\tresult[list1[i]] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[list1[i]] += 1;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) freq_count = new Nullable!(long[long])();\n\tfreq_count.value = new long[long](list1.length);\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tfreq_count.value[i] = item;\n\t}\n\t\n\treturn freq_count;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tret = new long[long][long](list1.length);\n\t\t\n\t\tforeach(item; list1)\n\t\t{\n\t\t\tif (ret.get(item) is null)\n\t\t\t{\n\t\t\t\tret.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tret.set(item, ret.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i, item; list1)\n\t\t{\n\t\t\tif(result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1) \n\t{\n\t\tif(result[elem] is null) \n\t\t{\n\t\t\tresult[elem] = 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[elem]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0) \n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach (i, item; list1) \n\t\t{\n\t\t\tif (result.get(item) is null) \n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n\tlong[] list73;\n\tlong[] list74",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n",
    "{\n\tNullable!(long[long]) result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\t",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t\treturn result;\n\t}\n\t\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\t\n\tlong[] freq = new long[list2.length];\n\tlong[] num = new long[list2.length];\n\t\n\tlong count = 1;\n\tlong index = 0;\n\t\n\tfor(long i = 0; i < list2.length; i++)\n\t{\n\t\tif(i == list2.length - 1)\n\t\t{\n\t\t\tnum[index] = list2[i];\n\t\t\tfreq[index] = count;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(list2[i] == list2[i + 1])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum[index] = list2[i];\n\t\t\tfreq[index] = count;\n\t\t\tcount = 1;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\tresult = [num, freq];\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) ret;\n\tlong[] freq;\n\tlong i;\n\tlong j;\n\tlong count;\n\t\n\tret = null;\n\t\n\tif (list1.length > 0) \n\t{\n\t\tfreq = new long[list1.length];\n\t\t\n\t\tfor (i = 0; i < list1.length; i++) \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < list1.length; j++) \n\t\t\t{\n\t\t\t\tif (list1[i] == list1[j]) \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfreq[i] = count;\n\t\t}\n\t\t\n\t\tret = freq;\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) freq = Nullable!(long[long])();\n\tfreq.init();\n\tforeach(element; list1)\n\t{\n\t\tif(freq.isNull)\n\t\t{\n\t\t\tfreq.value[element] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(element in freq.value)\n\t\t\t{\n\t\t\t\tfreq.value[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq.value[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = Nullable!(long[long])([item : 1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item in result.get)\n\t\t\t{\n\t\t\t\tresult.get[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tforeach(i, v; list1)\n\t{\n\t\tif(list2.length == 0)\n\t\t{\n\t\t\tlist2 ~= v;\n\t\t\tfreq ~= 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tforeach(j, k; list2)\n\t\t\t{\n\t\t\t\tif(k == v)\n\t\t\t\t{\n\t\t\t\t\tfreq[j]++;\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found)\n\t\t\t{\n\t\t\t\tlist2 ~= v;\n\t\t\t\tfreq ~= 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn zip(list2, freq);\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(result.length == 0)\n\t\t{\n\t\t\tresult ~= element;\n\t\t\tresult ~= 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tfor(int i = 0; i < result.length; i+=2)\n\t\t\t{\n\t\t\t\tif(result[i] == element)\n\t\t\t\t{\n\t\t\t\t\tresult[i+1]++;\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found)\n\t\t\t{\n\t\t\t\tresult ~= element;\n\t\t\t\tresult ~= 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(item; list1)\n\t\t{\n\t\t\tif(result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.set(long[long](i, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(i) == 0)\n\t\t\t{\n\t\t\t\tresult.get[i] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(item; list1)\n\t{\n\t\tif(result.get(item) is null)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] freq;\n\tforeach(elem; list1)\n\t{\n\t\tif(freq.count(elem) == 0)\n\t\t\tfreq[elem] = 1;\n\t\telse\n\t\t\tfreq[elem]++;\n\t}\n\treturn freq;\n}",
    "{\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];\n\tlong[] list35 = new long[list1.length];",
    "{\n\tNullable!(long[long]) result;\n\tresult.init = false;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult.init = true;\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(result.value.count(element) == 0)\n\t\t{\n\t\t\tresult.value[element] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.value[element]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long];\n\tforeach(item; list1)\n\t{\n\t\tif(result.count(item) == 0)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i,e; list1)\n\t\t{\n\t\t\tif(result.get(e) is null)\n\t\t\t{\n\t\t\t\tresult.set(e,1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(e,result.get(e) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result.get(element))\n\t\t{\n\t\t\tresult.get(element)++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.get(element) = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.set(new long[long](1));\n\t\t\tresult.get[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = new long[long];\n\t\t}\n\t\tif(result.get.counts(item))\n\t\t{\n\t\t\tresult.get[item]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.get[item] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new Nullable!(long[long]);\n\tresult.set(new long[long]);\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.get().length == 0)\n\t\t{\n\t\t\tresult.get().length = 1;\n\t\t\tresult.get()[0] = item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tforeach(i, val; result.get())\n\t\t\t{\n\t\t\t\tif(val == item)\n\t\t\t\t{\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found)\n\t\t\t{\n\t\t\t\tresult.get().length++;\n\t\t\t\tresult.get()[result.get().length - 1] = item;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(item; list1)\n\t{\n\t\tif(result.get(item) is null)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(i; list1)\n\t{\n\t\tif(result.get(i) is null)\n\t\t{\n\t\t\tresult.set(i, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(i, result.get(i) + 1);\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tfreq[i] = 0;\n\t\tforeach(j, w; list2)\n\t\t{\n\t\t\tif(v == w)\n\t\t\t{\n\t\t\t\tfreq[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = Nullable!(long[long])([item:1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.keys.canFind(item))\n\t\t\t{\n\t\t\t\tresult.get[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result.get(element))\n\t\t{\n\t\t\tresult.get(element) += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.get(element) = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(element in result)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[element] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong n;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\tlong aa;\n\tlong ab;\n\tlong ac;\n\tlong ad;\n\tlong ae;\n\tlong af;\n\tlong ag;\n\tlong ah;\n\tlong ai;\n\tlong aj;\n\tlong ak;\n\tlong al;\n\tlong am;\n\tlong an;\n\tlong ao;\n\tlong ap;\n\tlong aq;\n\tlong ar;\n\tlong as;\n\tlong at;\n\tlong au;\n\tlong av;\n\tlong aw;\n\tlong ax;\n\tlong ay;\n\tlong az;\n\tlong ba;\n\tlong bb;\n\tlong bc;\n\tlong bd;\n\tlong be;\n\tlong bf;\n\tlong bg;\n\tlong bh;\n\tlong bi;\n\tlong bj;\n\tlong bk;\n\tlong bl;\n\tlong bm;\n\tlong bn;\n\tlong bo;\n\tlong bp;\n\tlong bq;\n\tlong br;\n\tlong bs;\n\tlong bt;\n\tlong bu;\n\tlong bv;\n\tlong bw;\n\tlong bx;\n\tlong by;\n\tlong bz;\n\tlong ca;\n\tlong cb;\n\tlong cc;\n\tlong cd;\n\tlong ce;\n\tlong cf;\n\tlong cg;\n\tlong ch;\n\tlong ci;\n\tlong cj;\n\tlong ck;\n\tlong cl;\n\tlong cm;\n\tlong cn;\n\tlong co;\n\tlong cp;\n\tlong cq;\n\tlong cr;\n\tlong cs;\n\tlong ct;\n\tlong",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(elem; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = Nullable!(long[long])([elem:1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.keys.canFind(elem))\n\t\t\t{\n\t\t\t\tresult.get[elem]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(item; list1)\n\t{\n\t\tif(result[item] is null)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tif (result[list1[i]] == 0)\n\t\t\t{\n\t\t\t\tresult[list1[i]] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[list1[i]] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\t\n\tforeach(item; list2)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [item:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.keys.canFind(item))\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tfreq[i] = list2.count(v);\n\t\tlist2.remove(v);\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) freq_count = new Nullable!(long[long]);\n\tfreq_count.set(new long[long]);\n\tforeach(element; list1)\n\t{\n\t\tif(freq_count.get().length == 0)\n\t\t{\n\t\t\tfreq_count.get()[element] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(freq_count.get().length > element)\n\t\t\t{\n\t\t\t\tfreq_count.get()[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq_count.get() ~= 0;\n\t\t\t\tfreq_count.get()[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq_count;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0) \n\t{\n\t\tresult = null;\n\t}\n\telse \n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i; 0..list1.length) \n\t\t{\n\t\t\tif(result.get(list1[i]) is null) \n\t\t\t{\n\t\t\t\tresult.set(list1[i], 1);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult.set(list1[i], result.get(list1[i]) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list2 = new long[0];\n\tlong[] list3 = new long[0];\n\tlong[] list4 = new long[0];\n\tlong[] list5 = new long[0];\n\tlong[] list6 = new long[0];\n\tlong[] list7 = new long[0];\n\tlong[] list8 = new long[0];\n\tlong[] list9 = new long[0];\n\tlong[] list10 = new long[0];\n\tlong[] list11 = new long[0];\n\tlong[] list12 = new long[0];\n\tlong[] list13 = new long[0];\n\tlong[] list14 = new long[0];\n\tlong[] list15 = new long[0];\n\tlong[] list16 = new long[0];\n\tlong[] list17 = new long[0];\n\tlong[] list18 = new long[0];\n\tlong[] list19 = new long[0];\n\tlong[] list20 = new long[0];\n\tlong[] list21 = new long[0];\n\tlong[] list22 = new long[0];\n\tlong[] list23 = new long[0];\n\tlong[] list24 = new long[0];\n\tlong[] list25 = new long[0];\n\tlong[] list26 = new long[0];\n\tlong[] list27 = new long[0];\n\tlong[] list28 = new long[0];\n\tlong[] list29 = new long[0];\n\tlong[] list30 = new long[0];\n\tlong[] list31 = new long[0];\n\tlong[] list32 = new long[0];\n\tlong[] list33 = new long[0];\n\tlong[] list34 = new long[0];\n\tlong[] list35 = new long[0];\n\tlong[] list36 = new long[0];\n\tlong[] list37 = new long[0];\n\tlong[] list38 = new long[0];\n\tlong[] list39 = new long[0];\n\tlong[] list40 = new long[0];\n\tlong[] list41 = new long[0];\n\tlong[] list42 = new long[0];\n\tlong[] list43 = new long[0];\n\tlong[] list44",
    "{\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong count;\n\tNullable!(long[long]) result;\n\t\n\tresult = null;\n\t\n\tif(list1.length > 0)\n\t{\n\t\tlist2 = list1[0 .. $];\n\t\tstd.algorithm.sort(list2);\n\t\t\n\t\tresult = new long[long](list2.length);\n\t\t\n\t\ti = 0;\n\t\twhile(i < list2.length)\n\t\t{\n\t\t\tcount = 1;\n\t\t\tj = i + 1;\n\t\t\twhile(j < list2.length)\n\t\t\t{\n\t\t\t\tif(list2[i] == list2[j])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\tlist2[j] = -1;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tresult[list2[i]] = count;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list1; item;\n\t\tif (result.isNull)\n\t\t{\n\t\t\tresult.set(long[long](item, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (result.get.find(item) == -1)\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item]++;\n\t\t\t}\n\t\t}\n\t);\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t\treturn result;\n\t}\n\t\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\t\n\tlong[] list3 = list2.dup;\n\t\n\tlong[] list4 = list2.dup;\n\t\n\tforeach(long i; 0..list2.length)\n\t{\n\t\tlist3[i] = list2[i];\n\t\tlist4[i] = list2[i];\n\t}\n\t\n\tforeach(long i; 0..list2.length)\n\t{\n\t\tforeach(long j; 0..list2.length)\n\t\t{\n\t\t\tif(list2[i] == list3[j])\n\t\t\t{\n\t\t\t\tlist4[i] = list4[i] + 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] list5 = list2.dup;\n\t\n\tforeach(long i; 0..list2.length)\n\t{\n\t\tforeach(long j; 0..list2.length)\n\t\t{\n\t\t\tif(list2[i] == list5[j])\n\t\t\t{\n\t\t\t\tlist5[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] list6 = list2.dup;\n\t\n\tforeach(long i; 0..list2.length)\n\t{\n\t\tforeach(long j; 0..list2.length)\n\t\t{\n\t\t\tif(list2[i] == list6[j])\n\t\t\t{\n\t\t\t\tlist6[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(long i; 0..list2.length)\n\t{\n\t\tforeach(long j; 0..list2.length)\n\t\t{\n\t\t\tif(list2[i] == list6[j])\n\t\t\t{\n\t\t\t",
    "{\n\tlong[] list2 = new long[list1.length];\n\tforeach(i, item; list1)\n\t{\n\t\tlist2[i] = item;\n\t}\n\t\n\tlist2.sort;\n\t\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\t\n\tforeach(i, item; list2)\n\t{\n\t\tlist3[i] = item;\n\t\tlist4[i] = item;\n\t}\n\t\n\tlist3.sort;\n\t\n\tlong[] list5 = new long[list1.length];\n\t\n\tforeach(i, item; list3)\n\t{\n\t\tlist5[i] = list4.count(item);\n\t}\n\t\n\treturn list5;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2 = list1.dup;\n\tlong[] list3 = list1.dup;\n\tlist2.sort;\n\tlist3.sort(std.algorithm.comparator!((a,b) => b < a));\n\tif (list2 == list3)\n\t{\n\t\tresult = new long[long];\n\t\tforeach(el; list1)\n\t\t{\n\t\t\tresult[el]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (item; list1)\n\t\t{\n\t\t\tif (result.get(item) == null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) freq_count = null;\n\tif(list1.length == 0)\n\t{\n\t\treturn freq_count;\n\t}\n\telse\n\t{\n\t\tfreq_count = new long[long](list1.length);\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tfreq_count[list1[i]] = 0;\n\t\t}\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tfreq_count[list1[i]]++;\n\t\t}\n\t\treturn freq_count;\n\t}\n}",
    "{\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];\n\tlong[] list35 = new long[list1.length];",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach (index, element; list1)\n\t\t{\n\t\t\tif (result.get(element) == null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = new long[long];\n\t\t}\n\t\t\n\t\tif(result.get(item) is null)\n\t\t{\n\t\t\tresult.set(item, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(item, result.get(item) + 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i, item; list1)\n\t\t{\n\t\t\tif(result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = [element: 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\tlong[] list3 = list2.dup;\n\tlist3.unique;\n\tlong[] list4 = new long[list3.length];\n\tforeach(i, e; list3)\n\t{\n\t\tlist4[i] = list2.count(e);\n\t}\n\treturn list3.zip(list4);\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach(item; list1)\n\t\t{\n\t\t\tif(result.get(item) == null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0) \n\t{\n\t\tresult = null;\n\t}\n\telse \n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach (i; 0 .. list1.length) \n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\tlong[] list3 = list2.dup;\n\tlist3.uniq;\n\tNullable!(long[long]) list4 = null;\n\tforeach(long i; list3)\n\t{\n\t\tlist4[i] = list2.count(i);\n\t}\n\treturn list4;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2;\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tlist2 = list1.dup;\n\t\tlist2.sort;\n\t\tlong[] list3;\n\t\tlist3.length = list2.length;\n\t\tforeach(i, item; list2)\n\t\t{\n\t\t\tlist3[i] = list2.count(item);\n\t\t}\n\t\treturn list3;\n\t}\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result.get(element) is null)\n\t\t\tresult[element] = 1;\n\t\telse\n\t\t\tresult[element]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(item; list1)\n\t{\n\t\tif(result[item] is null)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item] += 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = Nullable!(long[long])(null);\n\t\n\tif(list1.length > 0) \n\t{\n\t\tresult = Nullable!(long[long])(new long[long](0));\n\t\t\n\t\tforeach(num; list1) \n\t\t{\n\t\t\tif(result.get.length <= num) \n\t\t\t{\n\t\t\t\tresult.get ~= new long[long](0);\n\t\t\t}\n\t\t\t\n\t\t\tresult.get[num]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(i; list1)\n\t{\n\t\tif(result.get(i) is null)\n\t\t{\n\t\t\tresult.set(i, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(i, result.get(i) + 1);\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0) {\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(index, item; list1) {\n\t\t\tif(result[item] is null) {\n\t\t\t\tresult[item] = 1;\n\t\t\t} else {\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];\n\tlong[] list35 = new long[list1.length];",
    "{\n\tNullable!(long[long]) freq = new long[long][long](0);\n\tforeach(elem; list1)\n\t{\n\t\tif(freq.get(elem) is null)\n\t\t{\n\t\t\tfreq.set(elem, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfreq.set(elem, freq.get(elem) + 1);\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[] result;\n\tforeach(item; list1)\n\t{\n\t\tif(item in result)\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i, item; list1)\n\t\t{\n\t\t\tif (result.get(item))\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(element; list1)\n\t\t{\n\t\t\tif(result.get(element) == null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t\treturn result;\n\t\n\tresult.init = true;\n\t\n\tforeach(list1; item;\n\t\tif(result.value.length == 0)\n\t\t{\n\t\t\tresult.value.length = 1;\n\t\t\tresult.value[0] = item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tforeach(result.value; item2;\n\t\t\t\tif(item == item2)\n\t\t\t\t{\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tif(!found)\n\t\t\t{\n\t\t\t\tresult.value.length++;\n\t\t\t\tresult.value[result.value.length - 1] = item;\n\t\t\t}\n\t\t}\n\t);\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach (i; 0..list1.length)\n\t{\n\t\tresult[list1[i]]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) freq = null;\n\tforeach(elem; list1)\n\t{\n\t\tif(freq is null)\n\t\t{\n\t\t\tfreq = [elem : 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(elem in freq)\n\t\t\t{\n\t\t\t\tfreq[elem]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) ret;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tret = null;\n\t}\n\telse\n\t{\n\t\tret = new long[long][long](list1.length);\n\t\tforeach(long item; list1)\n\t\t{\n\t\t\tif(ret.get(item) is null)\n\t\t\t{\n\t\t\t\tret[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tret[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i,j;\n\t\n\tresult = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[list1.length];\n\t\tlist2 = list1.dup;\n\t\tlist2.sort;\n\t\t\n\t\tfor (i = 0; i < list2.length; i++)\n\t\t{\n\t\t\tif (result[list2[i]] is null)\n\t\t\t{\n\t\t\t\tresult[list2[i]] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[list2[i]]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = new long[long];\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.hasKey(item))\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(index, value; list1)\n\t{\n\t\tif(result.get(value) is null)\n\t\t{\n\t\t\tresult[value] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[value] += 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\t\n\tforeach(i; 0..list2.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tresult = [list2[i]:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(list2[i] == list2[i-1])\n\t\t\t{\n\t\t\t\tresult[list2[i]]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[list2[i]] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long];\n\t\t\n\t\tforeach (item; list1)\n\t\t{\n\t\t\tif (result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\tif (list1.length == 0) \n\t{\n\t\treturn ret;\n\t}\n\tret = new long[long][long](list1.length);\n\tforeach (i, item; list1) \n\t{\n\t\tif (ret.get(item) is null) \n\t\t{\n\t\t\tret[item] = 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tret[item] += 1;\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(index, value; list1)\n\t{\n\t\tif(result.get(value) is null)\n\t\t{\n\t\t\tresult[value] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[value]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i, elem; list1)\n\t\t{\n\t\t\tif (result[elem] is null)\n\t\t\t\tresult[elem] = 1;\n\t\t\telse\n\t\t\t\tresult[elem]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) freq_count;\n\tfreq_count = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tfreq_count = new long[long](list1.length);\n\t\t\n\t\tforeach (i, item; list1)\n\t\t{\n\t\t\tif (freq_count[item] is null)\n\t\t\t{\n\t\t\t\tfreq_count[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq_count[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn freq_count;\n}",
    "{\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n\tlong[] list73;\n\tlong[] list74",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(long i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\t\n\tforeach(elem; list1)\n\t{\n\t\tfreq[elem]++;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\t\n\tif (list1.length > 0) \n\t{\n\t\tret = new long[long][long](list1.length);\n\t\t\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tif (ret[list1[i]] is null)\n\t\t\t\tret[list1[i]] = 1;\n\t\t\telse\n\t\t\t\tret[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] result = null;\n\tforeach(item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [item:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult ~= [item:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = null;\n\tforeach(item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [item:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.count(item) > 0)\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= [item:1];\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(item; list1)\n\t{\n\t\tif (result.get(item))\n\t\t{\n\t\t\tresult.get(item)++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.get(item) = 1;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n\tlong[] list73;\n\tlong[] list74",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach(index, element; list1)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.set(long[long](item, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\tlong[] list3 = list2.dup;\n\tlist3.unique;\n\tlong[] list4 = new long[list3.length];\n\tlong[] list5 = new long[list3.length];\n\tforeach(long i, long j; list3)\n\t{\n\t\tlist4[i] = j;\n\t}\n\tforeach(long i, long j; list4)\n\t{\n\t\tlist5[i] = list2.count(j);\n\t}\n\treturn list5;\n}",
    "{\n\tNullable!(long[long]) freq_count;\n\tfreq_count = new long[long][];\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(freq_count.get(element) is null)\n\t\t{\n\t\t\tfreq_count.set(element, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfreq_count.set(element, freq_count.get(element) + 1);\n\t\t}\n\t}\n\t\n\treturn freq_count;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tresult[list1[i]]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\tlist2.uniq;\n\t\n\tlong[] list3 = new long[list2.length];\n\tforeach(i, val; list2)\n\t{\n\t\tlist3[i] = list1.count(val);\n\t}\n\t\n\treturn list2.zip(list3);\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.set(long[long](element, 1));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult.get[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[element]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach(item; list1)\n\t{\n\t\tif (result.get(item) == null)\n\t\t{\n\t\t\tresult.set(item, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(item, result.get(item) + 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n",
    "{\n\tlong[] count;\n\tforeach(element; list1)\n\t{\n\t\tif(element in count)\n\t\t{\n\t\t\tcount[element]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount[element] = 1;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\tif(list1.length == 0)\n\t\treturn ret;\n\t\n\tret = new long[long][long](list1.length);\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tif(ret.get(e) is null)\n\t\t\tret[e] = 1;\n\t\telse\n\t\t\tret[e]++;\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong count;\n\t\n\tresult = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tlist2 = [];\n\t\t\n\t\tfor (i = 0; i < list1.length; i++)\n\t\t{\n\t\t\tcount = 0;\n\t\t\t\n\t\t\tfor (j = 0; j < list1.length; j++)\n\t\t\t{\n\t\t\t\tif (list1[i] == list1[j])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (count > 0)\n\t\t\t{\n\t\t\t\tlist2 ~= count;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult = list2;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = null;\n\tforeach(long item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [item:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item in result)\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(long item; list1)\n\t{\n\t\tif (result.get(item) is null)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(elem; list1)\n\t{\n\t\tif(result.get(elem) is null)\n\t\t{\n\t\t\tresult.set(elem, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(elem, result.get(elem) + 1);\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0) {\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach (index, elem; list1) {\n\t\t\tif (result.get(elem)) {\n\t\t\t\tresult.get(elem)++;\n\t\t\t} else {\n\t\t\t\tresult.set(elem, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tif(result.get(item) is null)\n\t\t{\n\t\t\tresult.set(item, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(item, result.get(item) + 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(element; list1)\n\t\t{\n\t\t\tif (result.get(element))\n\t\t\t{\n\t\t\t\tresult.get(element)++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach(index, item; list1)\n\t{\n\t\tif(result[item] == 0)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach (index, item; list1)\n\t\t{\n\t\t\tif (result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) freq_count;\n\tfreq_count = new long[long][long](0);\n\tforeach(i; list1)\n\t{\n\t\tif(freq_count.get(i) is null)\n\t\t{\n\t\t\tfreq_count.set(i, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfreq_count.set(i, freq_count.get(i) + 1);\n\t\t}\n\t}\n\treturn freq_count;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(result[list1[i]] is null)\n\t\t{\n\t\t\tresult[list1[i]] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong count;\n\t\n\tresult = null;\n\t\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[list1.length];\n\t\tlist2 = list1.dup;\n\t\tlist2.sort;\n\t\t\n\t\ti = 0;\n\t\twhile (i < list2.length)\n\t\t{\n\t\t\tcount = 1;\n\t\t\tj = i + 1;\n\t\t\twhile (j < list2.length && list2[i] == list2[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tresult[list2[i]] = count;\n\t\t\ti = j;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach (i, e; list1)\n\t\t{\n\t\t\tresult[e]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];",
    "{\n\tlong[] freq = new long[list1.length];\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tfreq[i] = 0;\n\t\tforeach(j, f; list1)\n\t\t{\n\t\t\tif(e == f)\n\t\t\t{\n\t\t\t\tfreq[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach(i; 0..list1.length)\n\t\t{\n\t\t\tif(result.get(list1[i]) is null)\n\t\t\t{\n\t\t\t\tresult.set(list1[i], 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(list1[i], result.get(list1[i]) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\tif (list1.length == 0)\n\t{\n\t\treturn ret;\n\t}\n\t\n\tret = new long[long](list1.length);\n\t\n\tforeach (i, elem; list1)\n\t{\n\t\tif (ret[elem] is null)\n\t\t{\n\t\t\tret[elem] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[elem] += 1;\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[i] = new long[long](2);\n\t\t\tresult[i][0] = list1[i];\n\t\t\tresult[i][1] = 0;\n\t\t}\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tforeach(j; 0 .. list1.length)\n\t\t\t{\n\t\t\t\tif (list1[i] == result[j][0])\n\t\t\t\t{\n\t\t\t\t\tresult[j][1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) ret;\n\t\n\tif (list1.length == 0)\n\t\treturn ret;\n\t\n\tret = new long[long][long](list1.length);\n\t\n\tforeach (i, v; list1)\n\t{\n\t\tif (ret.get(v) is null)\n\t\t\tret[v] = 1;\n\t\telse\n\t\t\tret[v]++;\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tif (list1.length > 0) \n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach(item; list1) \n\t\t{\n\t\t\tif (result.get(item) is null) \n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = Nullable!(long[long])([item : 1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult.get[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto list2 = new long[list1.length];\n\tauto list3 = new long[list1.length];\n\t\n\tforeach(i, list1)\n\t{\n\t\tlist2[i] = list1[i];\n\t\tlist3[i] = list1[i];\n\t}\n\t\n\tlist2.sort();\n\t\n\tauto freq = new long[list2.length];\n\t\n\tforeach(i, list2)\n\t{\n\t\tfreq[i] = 0;\n\t\tforeach(j, list3)\n\t\t{\n\t\t\tif(list2[i] == list3[j])\n\t\t\t{\n\t\t\t\tfreq[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j, item2; list2)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tlist2[j] = -1;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong count;\n\t\n\tresult = null;\n\tlist2 = [];\n\t\n\tif (list1.length > 0) \n\t{\n\t\tresult = new long[long];\n\t\t\n\t\tfor (i = 0; i < list1.length; i++) \n\t\t{\n\t\t\tcount = 0;\n\t\t\t\n\t\t\tfor (j = 0; j < list1.length; j++) \n\t\t\t{\n\t\t\t\tif (list1[i] == list1[j]) \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (count > 0) \n\t\t\t{\n\t\t\t\tif (list2.length == 0) \n\t\t\t\t{\n\t\t\t\t\tlist2 ~= list1[i];\n\t\t\t\t\tresult[list1[i]] = count;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tif (list2.find(list1[i]) == -1) \n\t\t\t\t\t{\n\t\t\t\t\t\tlist2 ~= list1[i];\n\t\t\t\t\t\tresult[list1[i]] = count;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t\treturn result;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach(long i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t\treturn null;\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach (i; 0 .. list1.length)\n\t{\n\t\tif (result[list1[i]] is null)\n\t\t\tresult[list1[i]] = 1;\n\t\telse\n\t\t\tresult[list1[i]]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(i; list1)\n\t{\n\t\tif(result.get(i) is null)\n\t\t\tresult.set(i, 1);\n\t\telse\n\t\t\tresult.set(i, result.get(i) + 1);\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] temp;\n\tlong i;\n\t\n\tresult = new Nullable!(long[long]);\n\ttemp = new long[list1.length];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\ttemp[i] = list1[i];\n\t}\n\t\n\ttemp.sort;\n\t\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\tresult.set(temp[i], 1);\n\t\t}\n\t\telse if(temp[i] == temp[i - 1])\n\t\t{\n\t\t\tresult.set(temp[i], result.get(temp[i]) + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(temp[i], 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new Nullable!(long[long]);\n\tresult.set(new long[long]);\n\t\n\tforeach(element; list1)\n\t{\n\t\tif(result.get().length < element + 1)\n\t\t{\n\t\t\tresult.get().length = element + 1;\n\t\t}\n\t\tresult.get()[element]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong[] list3;\n\tlong[] list4;\n\tlong[] list5;\n\tlong[] list6;\n\tlong[] list7;\n\tlong[] list8;\n\tlong[] list9;\n\tlong[] list10;\n\tlong[] list11;\n\tlong[] list12;\n\tlong[] list13;\n\tlong[] list14;\n\tlong[] list15;\n\tlong[] list16;\n\tlong[] list17;\n\tlong[] list18;\n\tlong[] list19;\n\tlong[] list20;\n\tlong[] list21;\n\tlong[] list22;\n\tlong[] list23;\n\tlong[] list24;\n\tlong[] list25;\n\tlong[] list26;\n\tlong[] list27;\n\tlong[] list28;\n\tlong[] list29;\n\tlong[] list30;\n\tlong[] list31;\n\tlong[] list32;\n\tlong[] list33;\n\tlong[] list34;\n\tlong[] list35;\n\tlong[] list36;\n\tlong[] list37;\n\tlong[] list38;\n\tlong[] list39;\n\tlong[] list40;\n\tlong[] list41;\n\tlong[] list42;\n\tlong[] list43;\n\tlong[] list44;\n\tlong[] list45;\n\tlong[] list46;\n\tlong[] list47;\n\tlong[] list48;\n\tlong[] list49;\n\tlong[] list50;\n\tlong[] list51;\n\tlong[] list52;\n\tlong[] list53;\n\tlong[] list54;\n\tlong[] list55;\n\tlong[] list56;\n\tlong[] list57;\n\tlong[] list58;\n\tlong[] list59;\n\tlong[] list60;\n\tlong[] list61;\n\tlong[] list62;\n\tlong[] list63;\n\tlong[] list64;\n\tlong[] list65;\n\tlong[] list66;\n\tlong[] list67;\n\tlong[] list68;\n\tlong[] list69;\n\tlong[] list70;\n\tlong[] list71;\n\tlong[] list72;\n",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(element; list1)\n\t\t{\n\t\t\tif(result.get(element) == null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tfor (long i = 0; i < list1.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < list2.length; j++)\n\t\t{\n\t\t\tif (list1[i] == list2[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tlist2[j] = -1;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach(index, element; list1)\n\t\t{\n\t\t\tif(result[element] is null)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach (i, item; list1)\n\t\t{\n\t\t\tif (result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(item; list1)\n\t{\n\t\tif(result.count(item) == 0)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init = true;\n\tresult.value = new long[list1.length];\n\t\n\tforeach(long i; 0 .. list1.length)\n\t{\n\t\tresult.value[i] = 0;\n\t}\n\t\n\tforeach(long i; 0 .. list1.length)\n\t{\n\t\tresult.value[list1[i]]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong count;\n\t\n\tresult = null;\n\t\n\tif (list1.length > 0) \n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tlist2 = list1.dup;\n\t\tlist2.sort;\n\t\t\n\t\ti = 0;\n\t\twhile (i < list2.length) \n\t\t{\n\t\t\tj = i;\n\t\t\tcount = 0;\n\t\t\twhile (j < list2.length && list2[i] == list2[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t\n\t\t\tresult[list2[i]] = count;\n\t\t\ti = j;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq;\n\tforeach(i; list1)\n\t{\n\t\tif(freq[i] is null)\n\t\t{\n\t\t\tfreq[i] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfreq[i]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result[item] == 0)\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(el; list1)\n\t\t{\n\t\t\tif(result.get(el) is null)\n\t\t\t{\n\t\t\t\tresult.set(el, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(el, result.get(el) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] list2;\n\t\n\tresult = new long[list1.length];\n\tlist2 = new long[list1.length];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2.find(item) == -1)\n\t\t{\n\t\t\tlist2 ~= item;\n\t\t\tresult[list2.length - 1] = list1.count(item);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[list1.length];\n\t\t\n\t\tforeach(item; list1)\n\t\t{\n\t\t\tif(result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t\treturn result;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach(i; 0..list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t\treturn result;\n\t}\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i, element; list1)\n\t\t{\n\t\t\tif (result.get(element) is null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result[element] is null)\n\t\t{\n\t\t\tresult[element] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach(element; list1)\n\t\t{\n\t\t\tif (result.get(element) == null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result[element] is null)\n\t\t{\n\t\t\tresult[element] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[element] += 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long];\n\tforeach(i; list1)\n\t{\n\t\tif(result.count(i))\n\t\t{\n\t\t\tresult[i]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i, elem; list1)\n\t\t{\n\t\t\tif (result.get(elem) is null)\n\t\t\t{\n\t\t\t\tresult.set(elem, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(elem, result.get(elem) + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(item; list1)\n\t{\n\t\tfreq[item]++;\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.isValid = false;\n\t\n\tif (list1.length == 0)\n\t\treturn result;\n\t\n\tresult.value = new long[list1.length];\n\t\n\tforeach (i, elem; list1)\n\t{\n\t\tresult.value[elem]++;\n\t}\n\t\n\tresult.isValid = true;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in result)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[element] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [i:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get(i) is null)\n\t\t\t{\n\t\t\t\tresult[i] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2;\n\tlong i;\n\tlong j;\n\tlong count;\n\tlong temp;\n\tlong temp2;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tlist2 = list1;\n\t\tsort(list2);\n\t\t\n\t\tresult = new long[list2.length];\n\t\t\n\t\ti = 0;\n\t\twhile (i < list2.length)\n\t\t{\n\t\t\ttemp = list2[i];\n\t\t\tcount = 0;\n\t\t\tj = i;\n\t\t\twhile (j < list2.length)\n\t\t\t{\n\t\t\t\ttemp2 = list2[j];\n\t\t\t\tif (temp == temp2)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tresult[temp] = count;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tforeach(i, item; list1)\n\t{\n\t\tfreq[i] = 0;\n\t\tforeach(j, item2; list1)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t\tfreq[i]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j, item2; list2)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tlist2[j] = -1;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) ret = new long[long][];\n\tforeach(elem; list1)\n\t{\n\t\tif(ret[elem] is null)\n\t\t{\n\t\t\tret[elem] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[elem]++;\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\t\n\tif (list1.length > 0) \n\t{\n\t\tret = new long[long][long](list1.length);\n\t\t\n\t\tforeach (i, elem; list1) \n\t\t{\n\t\t\tif (ret.get(elem)) \n\t\t\t{\n\t\t\t\tret[elem]++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tret[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j, item2; list2)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tlist2[j] = -1;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\tlong[] list3 = new long[list1.length];\n\tlong[] list4 = new long[list1.length];\n\tlong[] list5 = new long[list1.length];\n\tlong[] list6 = new long[list1.length];\n\tlong[] list7 = new long[list1.length];\n\tlong[] list8 = new long[list1.length];\n\tlong[] list9 = new long[list1.length];\n\tlong[] list10 = new long[list1.length];\n\tlong[] list11 = new long[list1.length];\n\tlong[] list12 = new long[list1.length];\n\tlong[] list13 = new long[list1.length];\n\tlong[] list14 = new long[list1.length];\n\tlong[] list15 = new long[list1.length];\n\tlong[] list16 = new long[list1.length];\n\tlong[] list17 = new long[list1.length];\n\tlong[] list18 = new long[list1.length];\n\tlong[] list19 = new long[list1.length];\n\tlong[] list20 = new long[list1.length];\n\tlong[] list21 = new long[list1.length];\n\tlong[] list22 = new long[list1.length];\n\tlong[] list23 = new long[list1.length];\n\tlong[] list24 = new long[list1.length];\n\tlong[] list25 = new long[list1.length];\n\tlong[] list26 = new long[list1.length];\n\tlong[] list27 = new long[list1.length];\n\tlong[] list28 = new long[list1.length];\n\tlong[] list29 = new long[list1.length];\n\tlong[] list30 = new long[list1.length];\n\tlong[] list31 = new long[list1.length];\n\tlong[] list32 = new long[list1.length];\n\tlong[] list33 = new long[list1.length];\n\tlong[] list34 = new long[list1.length];",
    "{\n\tNullable!(long[long]) ret = new long[long][];\n\tforeach(elem; list1)\n\t{\n\t\tif(ret.get(elem) is null)\n\t\t{\n\t\t\tret.set(elem, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret.set(elem, ret.get(elem) + 1);\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tforeach(long item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = new long[long];\n\t\t}\n\t\tif(item in result)\n\t\t{\n\t\t\tresult[item]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[item] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result is null)\n\t\t{\n\t\t\tresult = [item: 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get(item) is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(long i; list1)\n\t{\n\t\tif(result[i] is null)\n\t\t{\n\t\t\tresult[i] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) res;\n\t\n\tforeach(elem; list1)\n\t{\n\t\tif(res.isNull)\n\t\t{\n\t\t\tres = Nullable!(long[long])([elem:1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(res.get.count(elem) == 0)\n\t\t\t{\n\t\t\t\tres.get[elem] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tres.get[elem] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tlong count = 0;\n\t\tforeach(j; 0 .. list1.length)\n\t\t{\n\t\t\tif(list1[i] == list1[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tfreq[i] = count;\n\t}\n\treturn freq;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = list1.dup;\n\t\n\tforeach(index, value; list1)\n\t{\n\t\tfreq[index] = list2.count(value);\n\t\tlist2 = list2.remove(value);\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\tforeach(i, e; list1)\n\t\t{\n\t\t\tif (result.get(e) is null)\n\t\t\t{\n\t\t\t\tresult[e] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[e] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) ret;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn ret;\n\t}\n\t\n\tret = new long[long](list1.length);\n\t\n\tforeach(i, v; list1)\n\t{\n\t\tif(ret.get(v) is null)\n\t\t{\n\t\t\tret.set(v, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret.set(v, ret.get(v) + 1);\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tauto freq = new long[long][long](0);\n\tforeach(item; list1)\n\t{\n\t\tfreq[item]++;\n\t}\n\treturn freq;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tresult[element]++;\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tif (list1.length > 0)\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i, item; list1)\n\t\t{\n\t\t\tif (result[item] is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(item; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult.value = [item:1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.value.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult.value[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.value[item]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(i; list1)\n\t{\n\t\tif(result.isNull)\n\t\t{\n\t\t\tresult = new long[long][];\n\t\t\tresult[i] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(result.get.count(i) == 0)\n\t\t\t{\n\t\t\t\tresult[i] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] list2 = list1.dup;\n\tlist2.sort;\n\tlong[] list3 = list2.dup;\n\tlist3.uniq;\n\tresult = new long[long];\n\tforeach(i; 0..list3.length)\n\t{\n\t\tresult[list3[i]] = list2.count(list3[i]);\n\t}\n\treturn result;\n}",
    "{\n\tauto list2 = list1.dup;\n\tlist2.sort;\n\tlist2.uniq;\n\t\n\tauto freq = new long[list2.length];\n\t\n\tforeach(i, e; list2)\n\t{\n\t\tfreq[i] = list1.count(e);\n\t}\n\t\n\treturn zip(list2, freq);\n}",
    "{\n\tNullable!(long[long]) result = new long[long][];\n\tforeach(element; list1)\n\t{\n\t\tif(result.get(element) is null)\n\t\t{\n\t\t\tresult.set(element, 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.set(element, result.get(element) + 1);\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) ret = null;\n\tif (list1.length == 0) return ret;\n\t\n\tret = new long[long][long](list1.length);\n\t\n\tforeach (i; 0 .. list1.length)\n\t{\n\t\tif (ret[list1[i]] is null)\n\t\t{\n\t\t\tret[list1[i]] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[list1[i]]++;\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] freq = new long[list1.length];\n\tlong[] list2 = new long[list1.length];\n\t\n\tforeach(long i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] in list2)\n\t\t{\n\t\t\tfreq[i]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist2[i] = list1[i];\n\t\t\tfreq[i] = 1;\n\t\t}\n\t}\n\t\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\t\n\t\tforeach(element; list1)\n\t\t{\n\t\t\tif(result.get(element) is null)\n\t\t\t{\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tresult = new long[long](list1.length);\n\t\tforeach (i; 0 .. list1.length)\n\t\t{\n\t\t\tresult[list1[i]]++;\n\t\t}\n\t}\n\treturn result;\n}"
  ]
}
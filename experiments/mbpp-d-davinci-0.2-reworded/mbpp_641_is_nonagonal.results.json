{
  "name": "mbpp_641_is_nonagonal",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(n);\n\treturn a*a == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpb8h8652k.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8h8652k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpbs8s1crj.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbs8s1crj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpm78_musk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm78_musk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long)sqrt(1 + 8 * n);\n\treturn x * x == 1 + 8 * n && (x - 1) % 2 == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpr6e4rmy4.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr6e4rmy4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2 == (long)(sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpwk4ltztz.d(10): Error: C style cast illegal, use `cast(long)(sqrt(1 + 8 * n) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk4ltztz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_term = 0;\n\tlong nth_term_count = 0;\n\tlong nth_term_count_prev = 0;\n\tlong nth_term_count_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpcy6w5ukr.d(30): Error: semicolon expected, not `unittest`\n/tmp/tmpcy6w5ukr.d(30): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcy6w5ukr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0hy39su7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hy39su7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\tlong n10 = n * 10;\n\tlong n11 = n * 11;\n\tlong n12 = n * 12;\n\tlong n13 = n * 13;\n\tlong n14 = n * 14;\n\tlong n15 = n * 15;\n\tlong n16 = n * 16;\n\tlong n17 = n * 17;\n\tlong n18 = n * 18;\n\tlong n19 = n * 19;\n\tlong n20 = n * 20;\n\tlong n21 = n * 21;\n\tlong n22 = n * 22;\n\tlong n23 = n * 23;\n\tlong n24 = n * 24;\n\tlong n25 = n * 25;\n\tlong n26 = n * 26;\n\tlong n27 = n * 27;\n\tlong n28 = n * 28;\n\tlong n29 = n * 29;\n\tlong n30 = n * 30;\n\tlong n31 = n * 31;\n\tlong n32 = n * 32;\n\tlong n33 = n * 33;\n\tlong n34 = n * 34;\n\tlong n35 = n * 35;\n\tlong n36 = n * 36;\n\tlong n37 = n * 37;\n\tlong n38 = n * 38;\n\tlong n39 = n * 39;\n\tlong n40 = n * 40;\n\tlong n41 = n * 41;\n\tlong n42 = n * 42;\n\tlong n43 = n * 43;\n\tlong n44 = n * 44;\n\tlong n45 = n * 45;\n\tlong n46 = n * 46;\n\tlong n47 = n * 47;\n\tlong n48 = n * 48;\n\tlong n49 = n * 49;\n\tlong n50 = n * 50;\n\tlong n51 = n * 51;\n\tlong n52 = n * 52;\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpsrnpr350.d(61): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsrnpr350.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong nth_prev_prev = 0;\n\tlong nth_prev_prev_prev = 0;\n\tlong nth_prev_prev_prev_prev = 0;\n\t\n\tif (n == 1) return 1;\n\t\n\tnth_prev = is_nonagonal(n - 1);\n\t\n\tif (n == 2) return nth_prev + 1;\n\t\n\tnth_prev_prev = is_nonagonal(n - 2);\n\t\n\tif (n == 3) return nth_prev + nth_prev_prev + 1;\n\t\n\tnth_prev_prev_prev = is_nonagonal(n - 3);\n\t\n\tif (n == 4) return nth_prev + nth_prev_prev + nth_prev_prev_prev + 1;\n\t\n\tnth_prev_prev_prev_prev = is_nonagonal(n - 4);\n\t\n\treturn nth_prev + nth_prev_prev + nth_prev_prev_prev + nth_prev_prev_prev_prev + 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphmv68682.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmphmv68682.__unittest_L34_C1() [0x427aee]\n??:? void tmphmv68682.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps0nlgpw6.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmps0nlgpw6.__unittest_L13_C1() [0x427a4a]\n??:? void tmps0nlgpw6.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\treturn (n_sqrt * n_sqrt == 1 + 8 * n) && (n_sqrt % 2 == 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpmdpzcu35.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdpzcu35.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(1 + 8*n);\n\treturn a*a == 1 + 8*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpx_a0pc03.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_a0pc03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(8*n+1)-1)/2;\n\treturn x*(x+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp9cooq_8x.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9cooq_8x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\t\n\tif (n == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tnth_nonagonal = is_nonagonal(n - 1);\n\tnth_nonagonal_plus_1 = nth_nonagonal + 1;\n\tnth_nonagonal_plus_2 = nth_nonagonal_plus_1 + 1;\n\tnth_nonagonal_plus_3 = nth_nonagonal_plus_2 + 1;\n\tnth_nonagonal_plus_4 = nth_nonagonal_plus_3 + 1;\n\tnth_nonagonal_plus_5 = nth_nonagonal_plus_4 + 1;\n\tnth_nonagonal_plus_6 = nth_nonagonal_plus_5 + 1;\n\tnth_nonagonal_plus_7 = nth_nonagonal_plus_6 + 1;\n\tnth_nonagonal_plus_8 = nth_nonagonal_plus_7 + 1;\n\tnth_nonagonal_plus_9 = nth_nonagonal_plus_8 + 1;\n\t\n\treturn nth_nonagonal_plus_9;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi7ghaa8_.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpi7ghaa8_.__unittest_L39_C1() [0x427a7e]\n??:? void tmpi7ghaa8_.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (1 + sqrt(1 + 8 * n)) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp7777c_p4.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7777c_p4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpurhhbymu.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpurhhbymu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_plus_fourteen = 0;\n\tlong nth_nonagonal_sqr_plus_fifteen = 0;\n\tlong nth_nonagonal_sqr_plus_sixteen = 0;\n\tlong nth_nonagonal_sqr_plus_seventeen = 0;\n\tlong nth_nonagonal_sqr_plus_eighteen = 0;\n\tlong nth_nonagonal_sqr_plus_nineteen = 0;\n\tlong nth_nonagonal_sqr_plus_twenty = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_one = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_two = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_three = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_four = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_five = 0;\n\tlong nth_nonagonal_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp2375j452.d(38): Error: semicolon expected, not `unittest`\n/tmp/tmp2375j452.d(38): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2375j452.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn (nth*(nth+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpd70ouoqi.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd70ouoqi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\tif(nth == n)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaao6crn5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpaao6crn5.__unittest_L22_C1() [0x427a72]\n??:? void tmpaao6crn5.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\tif(nth*(nth+1)/2 == n) return nth;\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpkubrohla.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkubrohla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpm78_musk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm78_musk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpbs8s1crj.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbs8s1crj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < n) {\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6t0xj5ur.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp6t0xj5ur.__unittest_L18_C1() [0x427a6e]\n??:? void tmp6t0xj5ur.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8*n) - 1) / 2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpv4hgmb4l.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4hgmb4l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\t\n\tnth_sqr = n * n;\n\tnth = nth_sqr + n;\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv1or95qk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d1d]\n??:? void tmpv1or95qk.__unittest_L18_C1() [0x427a46]\n??:? void tmpv1or95qk.__modtest() [0x427aa0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff18]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ad]\n??:? runModuleUnitTests [0x42b819]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42816c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong i = 0;\n\twhile (nth < n) {\n\t\tnth_prev = nth;\n\t\tnth = (i * (3 * i - 1)) / 2;\n\t\ti++;\n\t}\n\tif (nth == n) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfy06wwia.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpfy06wwia.__unittest_L23_C1() [0x427a96]\n??:? void tmpfy06wwia.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn (a * (a + 1)) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpi9020xmu.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi9020xmu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sq = n * n;\n\tlong n_sq_plus_n = n_sq + n;\n\tlong n_sq_plus_n_div_2 = n_sq_plus_n / 2;\n\treturn n_sq_plus_n_div_2 * (n_sq_plus_n_div_2 + 1) == n_sq_plus_n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcbj3on3m.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpcbj3on3m.__unittest_L15_C1() [0x427a66]\n??:? void tmpcbj3on3m.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n2 + 1;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 + 1;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 + 1;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 + 1;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 + 1;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 + 1;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 + 1;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 + 1;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 + 1;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 + 1;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 + 1;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 + 1;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 + 1;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 + 1;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 + 1;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 + 1;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 + 1;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 + 1;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 + 1;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 + 1;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 + 1;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 + 1;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 + 1;\n\tlong n48\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpt_r363_0.d(57): Error: semicolon expected, not `unittest`\n/tmp/tmpt_r363_0.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_r363_0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong i = 0;\n\twhile (n > 0)\n\t{\n\t\tn -= i;\n\t\ti++;\n\t}\n\treturn n == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2fqmtnbn.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp2fqmtnbn.__unittest_L18_C1() [0x427a5e]\n??:? void tmp2fqmtnbn.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpkhrnqgwf.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhrnqgwf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\tlong nth_nonagonal_plus_10 = 0;\n\tlong nth_nonagonal_plus_11 = 0;\n\tlong nth_nonagonal_plus_12 = 0;\n\tlong nth_nonagonal_plus_13 = 0;\n\tlong nth_nonagonal_plus_14 = 0;\n\tlong nth_nonagonal_plus_15 = 0;\n\tlong nth_nonagonal_plus_16 = 0;\n\tlong nth_nonagonal_plus_17 = 0;\n\tlong nth_nonagonal_plus_18 = 0;\n\tlong nth_nonagonal_plus_19 = 0;\n\tlong nth_nonagonal_plus_20 = 0;\n\tlong nth_nonagonal_plus_21 = 0;\n\tlong nth_nonagonal_plus_22 = 0;\n\tlong nth_nonagonal_plus_23 = 0;\n\tlong nth_nonagonal_plus_24 = 0;\n\tlong nth_nonagonal_plus_25 = 0;\n\tlong nth_nonagonal_plus_26 = 0;\n\tlong nth_nonagonal_plus_27 = 0;\n\tlong nth_nonagonal_plus_28 = 0;\n\tlong nth_nonagonal_plus_29 = 0;\n\tlong nth_nonagonal_plus_30 = 0;\n\tlong nth_nonagonal_plus_31 = 0;\n\tlong nth_nonagonal_plus_32 = 0;\n\tlong nth_nonagonal_plus_33 = 0;\n\tlong n\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp1pkl2tk0.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmp1pkl2tk0.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pkl2tk0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn x*(x+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpali6th2f.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpali6th2f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp16n9g4eh.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16n9g4eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sq = n * n;\n\tlong n_sq_plus_n = n_sq + n;\n\tlong n_sq_plus_n_div_2 = n_sq_plus_n / 2;\n\tlong n_sq_plus_n_div_2_plus_1 = n_sq_plus_n_div_2 + 1;\n\tlong n_sq_plus_n_div_2_plus_1_sq = n_sq_plus_n_div_2_plus_1 * n_sq_plus_n_div_2_plus_1;\n\treturn n_sq_plus_n_div_2_plus_1_sq == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprne88xyr.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmprne88xyr.__unittest_L17_C1() [0x427a62]\n??:? void tmprne88xyr.__modtest() [0x427abc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong i = 0;\n\twhile(n > 0) \n\t{\n\t\tn -= i;\n\t\ti++;\n\t}\n\treturn n == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfr_f_hhd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpfr_f_hhd.__unittest_L18_C1() [0x427a5e]\n??:? void tmpfr_f_hhd.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(8 * n + 1);\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpmpa4ve1h.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmpa4ve1h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tauto a = cast(long) (sqrt(8*n + 1) - 1) / 2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpl7ygkx4e.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7ygkx4e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0hy39su7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hy39su7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n+1)-1)/2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp9yis6d31.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9yis6d31.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpy_jom4t8.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_jom4t8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp9jft4t93.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9jft4t93.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jft4t93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\tlong n10 = n * 10;\n\tlong n11 = n * 11;\n\tlong n12 = n * 12;\n\tlong n13 = n * 13;\n\tlong n14 = n * 14;\n\tlong n15 = n * 15;\n\tlong n16 = n * 16;\n\tlong n17 = n * 17;\n\tlong n18 = n * 18;\n\tlong n19 = n * 19;\n\tlong n20 = n * 20;\n\tlong n21 = n * 21;\n\tlong n22 = n * 22;\n\tlong n23 = n * 23;\n\tlong n24 = n * 24;\n\tlong n25 = n * 25;\n\tlong n26 = n * 26;\n\tlong n27 = n * 27;\n\tlong n28 = n * 28;\n\tlong n29 = n * 29;\n\tlong n30 = n * 30;\n\tlong n31 = n * 31;\n\tlong n32 = n * 32;\n\tlong n33 = n * 33;\n\tlong n34 = n * 34;\n\tlong n35 = n * 35;\n\tlong n36 = n * 36;\n\tlong n37 = n * 37;\n\tlong n38 = n * 38;\n\tlong n39 = n * 39;\n\tlong n40 = n * 40;\n\tlong n41 = n * 41;\n\tlong n42 = n * 42;\n\tlong n43 = n * 43;\n\tlong n44 = n * 44;\n\tlong n45 = n * 45;\n\tlong n46 = n * 46;\n\tlong n47 = n * 47;\n\tlong n48 = n * 48;\n\tlong n49 = n * 49;\n\tlong n50 = n * 50;\n\tlong n51 = n * 51;\n\tlong n52 = n * 52;\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpsrnpr350.d(61): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsrnpr350.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long) (sqrt(8.0 * n + 1.0) - 1.0) / 2.0;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpljdgah8j.d(10): Error: C style cast illegal, use `cast(long)(sqrt(8.00000 * n + 1.00000) - 1.00000)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljdgah8j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(1.0 + 8.0 * n);\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpc0z3pg4v.d(10): Error: C style cast illegal, use `cast(long)sqrt(1.00000 + 8.00000 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0z3pg4v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (n * (n - 1)) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdet7vzpn.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d1d]\n??:? void tmpdet7vzpn.__unittest_L13_C1() [0x427a42]\n??:? void tmpdet7vzpn.__modtest() [0x427a9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff18]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ad]\n??:? runModuleUnitTests [0x42b819]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42816c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpbph64khi.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpbph64khi.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbph64khi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpia4o5i9h.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpia4o5i9h.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpia4o5i9h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong m = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn m * (m + 1) == 2 * n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpgj1xgtzk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgj1xgtzk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile (nth < n) \n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk708owf7.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpk708owf7.__unittest_L19_C1() [0x427a72]\n??:? void tmpk708owf7.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n2 + 1;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 + 1;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 + 1;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 + 1;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 + 1;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 + 1;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 + 1;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 + 1;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 + 1;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 + 1;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 + 1;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 + 1;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 + 1;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 + 1;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 + 1;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 + 1;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 + 1;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 + 1;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 + 1;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 + 1;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 + 1;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 + 1;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 + 1;\n\tlong n48\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpt_r363_0.d(57): Error: semicolon expected, not `unittest`\n/tmp/tmpt_r363_0.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_r363_0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong d = sqrt(1 + 8 * n);\n\tif (d * d == 1 + 8 * n) \n\t{\n\t\treturn d;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp8mps9mln.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8mps9mln.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmperbz4f8i.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperbz4f8i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(n);\n\treturn (a*a == n && a % 2 == 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp35xi0hyu.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35xi0hyu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(8*n + 1);\n\treturn (a*a == 8*n + 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpy43t1bc3.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy43t1bc3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\tif (n_sqrt * n_sqrt == 1 + 8 * n)\n\t{\n\t\treturn (n_sqrt - 1) / 2;\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmppka41_ef.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppka41_ef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_plus_fourteen = 0;\n\tlong nth_nonagonal_sqr_plus_fifteen = 0;\n\tlong nth_nonagonal_sqr_plus_sixteen = 0;\n\tlong nth_nonagonal_sqr_plus_seventeen = 0;\n\tlong nth_nonagonal_sqr_plus_eighteen = 0;\n\tlong nth_nonagonal_sqr_plus_nineteen = 0;\n\tlong nth_nonagonal_sqr_plus_twenty = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_one = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_two = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_three = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_four = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_five = 0;\n\tlong nth_nonagonal_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp2375j452.d(38): Error: semicolon expected, not `unittest`\n/tmp/tmp2375j452.d(38): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2375j452.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpkhrnqgwf.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhrnqgwf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(8*n + 1) - 1) / 2;\n\treturn x*(x+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp6a0d7nh9.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6a0d7nh9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_ = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n_ * (n_ + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmppu7sc5ct.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppu7sc5ct.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n*2;\n\tlong n3 = n2*3;\n\tlong n4 = n3*4;\n\tlong n5 = n4*5;\n\tlong n6 = n5*6;\n\tlong n7 = n6*7;\n\tlong n8 = n7*8;\n\tlong n9 = n8*9;\n\tlong n10 = n9*10;\n\t\n\tlong n11 = n10*11;\n\tlong n12 = n11*12;\n\tlong n13 = n12*13;\n\tlong n14 = n13*14;\n\tlong n15 = n14*15;\n\tlong n16 = n15*16;\n\tlong n17 = n16*17;\n\tlong n18 = n17*18;\n\tlong n19 = n18*19;\n\tlong n20 = n19*20;\n\t\n\tlong n21 = n20*21;\n\tlong n22 = n21*22;\n\tlong n23 = n22*23;\n\tlong n24 = n23*24;\n\tlong n25 = n24*25;\n\tlong n26 = n25*26;\n\tlong n27 = n26*27;\n\tlong n28 = n27*28;\n\tlong n29 = n28*29;\n\tlong n30 = n29*30;\n\t\n\tlong n31 = n30*31;\n\tlong n32 = n31*32;\n\tlong n33 = n32*33;\n\tlong n34 = n33*34;\n\tlong n35 = n34*35;\n\tlong n36 = n35*36;\n\tlong n37 = n36*37;\n\tlong n38 = n37*38;\n\tlong n39 = n38*39;\n\tlong n40 = n39*40;\n\t\n\tlong n41 = n40*41;\n\tlong n42 = n41*42;\n\tlong n43 = n42*43;\n\tlong n44 = n43*44;\n\tlong n45 = n44*45;\n\tlong n46 = n45*46;\n\tlong n47 = n46\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpu6f2ufyg.d(60): Error: semicolon expected, not `unittest`\n/tmp/tmpu6f2ufyg.d(60): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6f2ufyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n == (sqrt(8*n + 1) - 1)/2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpgtq4tsig.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgtq4tsig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpjcmsgklo.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjcmsgklo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqrt = 0;\n\t\n\tnth_nonagonal_sqrt = (sqrt(1 + 8 * n) - 1) / 2;\n\t\n\tif(nth_nonagonal_sqrt * (nth_nonagonal_sqrt + 1) / 2 == n)\n\t\treturn nth_nonagonal_sqrt;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp4burn2wk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4burn2wk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long)sqrt(n);\n\treturn nn*(3*nn-1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpv2hpn5ur.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2hpn5ur.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517161,
      "stdout": "",
      "stderr": "/tmp/tmpbs8s1crj.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbs8s1crj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpmdrue05r.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdrue05r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_1 = 0;\n\tlong nth_nonagonal_sqr_plus_2 = 0;\n\tlong nth_nonagonal_sqr_plus_3 = 0;\n\tlong nth_nonagonal_sqr_plus_4 = 0;\n\tlong nth_nonagonal_sqr_plus_5 = 0;\n\tlong nth_nonagonal_sqr_plus_6 = 0;\n\tlong nth_nonagonal_sqr_plus_7 = 0;\n\tlong nth_nonagonal_sqr_plus_8 = 0;\n\tlong nth_nonagonal_sqr_plus_9 = 0;\n\tlong nth_nonagonal_sqr_plus_10 = 0;\n\tlong nth_nonagonal_sqr_plus_11 = 0;\n\tlong nth_nonagonal_sqr_plus_12 = 0;\n\tlong nth_nonagonal_sqr_plus_13 = 0;\n\tlong nth_nonagonal_sqr_plus_14 = 0;\n\tlong nth_nonagonal_sqr_plus_15 = 0;\n\tlong nth_nonagonal_sqr_plus_16 = 0;\n\tlong nth_nonagonal_sqr_plus_17 = 0;\n\tlong nth_nonagonal_sqr_plus_18 = 0;\n\tlong nth_nonagonal_sqr_plus_19 = 0;\n\tlong nth_nonagonal_sqr_plus_20 = 0;\n\tlong nth_nonagonal_sqr_plus_21 = 0;\n\tlong nth_nonagonal_sqr_plus_22 = 0;\n\tlong nth_nonagonal_sqr_plus_23 = 0;\n\tlong nth_nonagonal_sqr_plus_24 = 0;\n\tlong nth_nonagonal_sqr_plus_25 = 0;\n\tlong nth_nonagonal_sqr_plus_26 = 0;\n\tlong nth_nonagonal_sqr_plus_27 = 0\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp_xo_e6lv.d(39): Error: semicolon expected, not `unittest`\n/tmp/tmp_xo_e6lv.d(39): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xo_e6lv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong t = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn t * (t + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpxvpcgpjh.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxvpcgpjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_minus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_minus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_minus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_minus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_minus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_minus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_minus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_minus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_minus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_minus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_minus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_minus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_minus_thirteen = 0;\n\tlong nth_nonagonal_sqr\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpo2gk2924.d(39): Error: semicolon expected, not `unittest`\n/tmp/tmpo2gk2924.d(39): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2gk2924.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(n);\n\treturn (n_sqrt * n_sqrt == n) && (n_sqrt % 2 == 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpgra4s7w0.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgra4s7w0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\t\n\tlong aa = 1;\n\tlong bb = 1;\n\tlong cc = 1;\n\tlong dd = 1;\n\tlong ee = 1;\n\tlong ff = 1;\n\tlong gg = 1;\n\tlong hh = 1;\n\tlong ii = 1;\n\tlong jj = 1;\n\tlong kk = 1;\n\tlong ll = 1;\n\tlong mm = 1;\n\tlong oo = 1;\n\tlong pp = 1;\n\tlong qq = 1;\n\tlong rr = 1;\n\tlong ss = 1;\n\tlong tt = 1;\n\tlong uu = 1;\n\tlong vv = 1;\n\tlong ww = 1;\n\tlong xx = 1;\n\tlong yy = 1;\n\tlong zz = 1;\n\t\n\tlong aaa = 1;\n\tlong bbb = 1;\n\tlong ccc = 1;\n\tlong ddd = 1;\n\tlong eee = 1;\n\tlong fff = 1;\n\tlong ggg = 1;\n\tlong hhh = 1;\n\tlong iii = 1;\n\tlong jjj = 1;\n\tlong kkk = 1;\n\tlong lll = 1;\n\tlong mmm = 1;\n\tlong ooo = 1;\n\tlong ppp = 1;\n\tlong qqq = 1;\n\tlong rrr = 1;\n\tlong sss\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpsj582hsn.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpsj582hsn.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsj582hsn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps0nlgpw6.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmps0nlgpw6.__unittest_L13_C1() [0x427a4a]\n??:? void tmps0nlgpw6.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp16n9g4eh.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16n9g4eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp7wwbvrgw.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wwbvrgw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\tlong nth_sq_plus_nth = 0;\n\t\n\tnth_sq = n * n;\n\tnth_sq_plus_nth = nth_sq + n;\n\t\n\tif (nth_sq_plus_nth % 2 == 0) {\n\t\tnth = nth_sq_plus_nth / 2;\n\t} else {\n\t\tnth = -1;\n\t}\n\t\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcd3yn6e8.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpcd3yn6e8.__unittest_L25_C1() [0x427a92]\n??:? void tmpcd3yn6e8.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long)sqrt(2*n);\n\treturn (nn*(nn+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpr8oe7msl.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr8oe7msl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpl31wd3r_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpl31wd3r_.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl31wd3r_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8*n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmphqfws_ws.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmphqfws_ws.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqfws_ws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sum = 0;\n\tlong nth_nonagonal_sum_sqrt = 0;\n\t\n\tnth_nonagonal_sum = (n * 2) - 1;\n\tnth_nonagonal_sum_sqrt = sqrt(nth_nonagonal_sum);\n\t\n\tif (nth_nonagonal_sum_sqrt * nth_nonagonal_sum_sqrt == nth_nonagonal_sum)\n\t{\n\t\tnth_nonagonal = nth_nonagonal_sum_sqrt;\n\t}\n\t\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpin27rzqu.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpin27rzqu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpia4o5i9h.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpia4o5i9h.d(11): Error: `std.math.floor` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4394):     `std.math.floor(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4487):     `std.math.floor(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpia4o5i9h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\tif (nth*(nth+1)/2 == n)\n\t\treturn nth;\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpvbaxgg96.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvbaxgg96.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long)sqrt(1 + 8 * n);\n\treturn x * x == 1 + 8 * n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp90b15hk1.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp90b15hk1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long) sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp07fh4e4d.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07fh4e4d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp_i135scs.d(10): Error: C style cast illegal, use `cast(long)(sqrt(8 * n + 1) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_i135scs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(8*n+1);\n\treturn a*a == 8*n+1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp4sbjfmlb.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4sbjfmlb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp16n9g4eh.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16n9g4eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\t\n\tif (n < 0)\n\t\treturn 0;\n\t\n\ta = (long)sqrt(n);\n\tb = a * (a + 1);\n\tc = n - b;\n\td = a + 1 - c;\n\t\n\tif (c == 0)\n\t\treturn a;\n\t\n\treturn d;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpjx091cvw.d(18): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjx091cvw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = n;\n\tlong i = 1;\n\twhile(nn > 0) {\n\t\tnn -= i;\n\t\ti++;\n\t}\n\treturn nn == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphcuaxip4.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphcuaxip4.__unittest_L18_C1() [0x427a5e]\n??:? void tmphcuaxip4.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\treturn n_sqrt * n_sqrt == 1 + 8 * n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpxz8931aj.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxz8931aj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(n);\n\treturn n_sqrt * (n_sqrt + 1) == 2 * n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpnhbl0ci4.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhbl0ci4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n == (sqrt(1+8*n)-1)/2);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpqq417es6.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq417es6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\tlong nth_nonagonal_plus_10 = 0;\n\tlong nth_nonagonal_plus_11 = 0;\n\tlong nth_nonagonal_plus_12 = 0;\n\tlong nth_nonagonal_plus_13 = 0;\n\tlong nth_nonagonal_plus_14 = 0;\n\tlong nth_nonagonal_plus_15 = 0;\n\tlong nth_nonagonal_plus_16 = 0;\n\tlong nth_nonagonal_plus_17 = 0;\n\tlong nth_nonagonal_plus_18 = 0;\n\tlong nth_nonagonal_plus_19 = 0;\n\tlong nth_nonagonal_plus_20 = 0;\n\tlong nth_nonagonal_plus_21 = 0;\n\tlong nth_nonagonal_plus_22 = 0;\n\tlong nth_nonagonal_plus_23 = 0;\n\tlong nth_nonagonal_plus_24 = 0;\n\tlong nth_nonagonal_plus_25 = 0;\n\tlong nth_nonagonal_plus_26 = 0;\n\tlong nth_nonagonal_plus_27 = 0;\n\tlong nth_nonagonal_plus_28 = 0;\n\tlong nth_nonagonal_plus_29 = 0;\n\tlong nth_nonagonal_plus_30 = 0;\n\tlong nth_nonagonal_plus_31 = 0;\n\tlong nth_nonagonal_plus_32 = 0;\n\tlong nth_nonagonal_plus_33 = 0;\n\tlong n\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp1pkl2tk0.d(45): Error: semicolon expected, not `unittest`\n/tmp/tmp1pkl2tk0.d(45): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pkl2tk0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = cast(long) sqrt(n);\n\tif (n_sqrt * n_sqrt == n) {\n\t\treturn n_sqrt;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp6puq138o.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6puq138o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp16n9g4eh.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16n9g4eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)floor(sqrt(8 * n + 1));\n\treturn a * a == 8 * n + 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp17y2am1r.d(10): Error: C style cast illegal, use `cast(long)floor(sqrt(8 * n + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp17y2am1r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp16n9g4eh.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16n9g4eh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong i = 0;\n\twhile(nth_nonagonal < n) \n\t{\n\t\ti++;\n\t\tnth_nonagonal += i;\n\t}\n\tif(nth_nonagonal == n) \n\t{\n\t\treturn i;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpchcnimcr.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpchcnimcr.__unittest_L23_C1() [0x427a76]\n??:? void tmpchcnimcr.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(8*n + 1);\n\treturn nth*(nth+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp04elozzr.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp04elozzr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\t\n\tnth = (long) ((sqrt(8*n + 1) - 1)/2);\n\tnth_sq = (nth * (nth + 1))/2;\n\t\n\tif (nth_sq == n)\n\t\treturn nth;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpi2cqxk29.d(13): Error: C style cast illegal, use `cast(long)((sqrt(8 * n + 1) - 1) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi2cqxk29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3a2jxf36.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d15]\n??:? void tmp3a2jxf36.__unittest_L13_C1() [0x427a3e]\n??:? void tmp3a2jxf36.__modtest() [0x427a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff10]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8a5]\n??:? runModuleUnitTests [0x42b811]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428164]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\t// n = (3*n^2 - n)/2\n\t// n^2 + n - 2*n = 0\n\t// n = (-1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpbzqzom_i.d(38): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbzqzom_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long) sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp07fh4e4d.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp07fh4e4d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0hy39su7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hy39su7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_prev = 0;\n\tlong nth_nonagonal_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpc6ddry7y.d(29): Error: semicolon expected, not `unittest`\n/tmp/tmpc6ddry7y.d(29): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc6ddry7y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpdydbc6v_.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdydbc6v_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\t// n = (3*n^2 - n)/2\n\t// n^2 + n - 2*n = 0\n\t// n = (-1 + sqrt(1 + 8*n))/2\n\treturn (n == (long)((-1 + sqrt(1 + 8*n))/2));\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp2oeb3azq.d(13): Error: C style cast illegal, use `cast(long)((-1 + sqrt(1 + 8 * n)) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2oeb3azq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(8*n+1) == floor(sqrt(8*n+1)));\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpopfdntot.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpopfdntot.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopfdntot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmperbz4f8i.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperbz4f8i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) sqrt(2 * n + 0.25) - 0.5;\n\treturn (nth * (nth + 1)) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpn5ib5_dm.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5ib5_dm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = cast(long)sqrt(n);\n\treturn n_sqrt * n_sqrt == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpzpvcfa80.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzpvcfa80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp9jft4t93.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9jft4t93.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jft4t93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long)sqrt(1 + 8*n);\n\treturn (x*x == 1 + 8*n);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpulvvfv7a.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpulvvfv7a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpdydbc6v_.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdydbc6v_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\tnth_sqr = nth * nth;\n\tnth_sqr_plus_nth = nth_sqr + nth;\n\t\n\tif (n == nth_sqr_plus_nth)\n\t\treturn nth;\n\telse\n\t\treturn -1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp77jfvf2p.d(14): Error: C style cast illegal, use `cast(long)((sqrt(1 + 8 * n) - 1) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp77jfvf2p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long)sqrt(1 + 8*n);\n\treturn nth*nth == 1 + 8*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpaqzolw1c.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqzolw1c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong m = (long)floor(sqrt(2*n));\n\treturn m*(m+1) == 2*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpp5fvooex.d(10): Error: C style cast illegal, use `cast(long)floor(sqrt(2 * n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp5fvooex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nn * (nn + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpew9tcdyf.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpew9tcdyf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\t\n\tnth_sq = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\t\n\tif (nth_sq * (nth_sq + 1) / 2 == n)\n\t\treturn nth_sq;\n\telse\n\t\treturn -1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp_2eozp0b.d(13): Error: C style cast illegal, use `cast(long)((sqrt(1 + 8 * n) - 1) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_2eozp0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(n);\n\treturn n_sqrt * (n_sqrt + 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpknoe03le.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpknoe03le.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong i = 0;\n\twhile (nth_nonagonal < n) \n\t{\n\t\tnth_nonagonal = (i * (i + 1)) / 2;\n\t\ti++;\n\t}\n\treturn nth_nonagonal == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz0anoeuk.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpz0anoeuk.__unittest_L19_C1() [0x427a82]\n??:? void tmpz0anoeuk.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) sqrt(2 * n + 0.25) - 0.5;\n\treturn nth * (nth + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpp8xsyzhw.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n + 0.25)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp8xsyzhw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpm1ltctwo.d(10): Error: C style cast illegal, use `cast(long)(sqrt(1 + 8 * n) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm1ltctwo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpgc61jv4b.d(11): Error: C style cast illegal, use `cast(long)nth`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgc61jv4b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1+8*n)-1)/2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpv04q8ilc.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv04q8ilc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpjsux8h03.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjsux8h03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_ = (long)sqrt(2*n);\n\treturn (n_*(n_+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpt2vgejp4.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2vgejp4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpsueylnbd.d(10): Error: C style cast illegal, use `cast(long)(sqrt(8 * n + 1) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsueylnbd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long) sqrt(2*n);\n\treturn (x*(x+1) == 2*n);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpy9ojzgzu.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9ojzgzu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpvmud1q29.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmud1q29.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpm78_musk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm78_musk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (1 + sqrt(1 + 8 * n)) / 2;\n\treturn x == (long)x;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpzird6gip.d(11): Error: C style cast illegal, use `cast(long)x`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzird6gip.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong root = (long) sqrt(1 + 8 * n);\n\treturn (root * root == 1 + 8 * n) && (root % 2 == 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp7kafg2oc.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7kafg2oc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = n;\n\tlong i = 1;\n\twhile (nn > 0) {\n\t\tnn -= i;\n\t\ti++;\n\t}\n\treturn nn == 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppg_qhuaf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmppg_qhuaf.__unittest_L18_C1() [0x427a5e]\n??:? void tmppg_qhuaf.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps0nlgpw6.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmps0nlgpw6.__unittest_L13_C1() [0x427a4a]\n??:? void tmps0nlgpw6.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (1 + sqrt(1 + 8 * n)) / 2;\n\treturn a == trunc(a);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpfcdgzqxn.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfcdgzqxn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (n * (3 * n - 1)) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8yu0inun.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmp8yu0inun.__unittest_L12_C1() [0x427a4a]\n??:? void tmp8yu0inun.__modtest() [0x427aa4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (long) floor(sqrt(8*n + 1));\n\treturn (nth*(nth+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp0qv65ptl.d(10): Error: C style cast illegal, use `cast(long)floor(sqrt(8 * n + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qv65ptl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = (long)sqrt(n);\n\treturn n_sqrt * n_sqrt == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp3mq4s_lq.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mq4s_lq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpdydbc6v_.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdydbc6v_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong m = (long)sqrt(2*n);\n\treturn (m*(m+1) == 2*n);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpjdolfei5.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjdolfei5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp9jft4t93.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9jft4t93.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jft4t93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(8*n + 1);\n\treturn a*a == 8*n + 1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpuvoiri_i.d(10): Error: C style cast illegal, use `cast(long)sqrt(8 * n + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuvoiri_i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nn = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nn * (3 * nn - 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpwas72q6q.d(10): Error: C style cast illegal, use `cast(long)(sqrt(8 * n + 1) - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwas72q6q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0hy39su7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hy39su7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\tif (n_sqrt * n_sqrt == 1 + 8 * n)\n\t{\n\t\treturn (n_sqrt - 1) / 2;\n\t}\n\treturn -1;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpwf92z_el.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwf92z_el.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (sqrt(1 + 8*n) - 1) / 2;\n\treturn x*(x+1)/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpjid186b6.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjid186b6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (sqrt(8*n + 1) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp_exf5inz.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_exf5inz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp9jft4t93.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9jft4t93.d(11): Error: cannot implicitly convert expression `nth` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jft4t93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong a = (long)sqrt(2*n);\n\treturn (a*(a+1))/2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpz2ejpgm9.d(10): Error: C style cast illegal, use `cast(long)sqrt(2 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz2ejpgm9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpdvmg2vwq.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdvmg2vwq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n_sqrt = cast(long) sqrt(n);\n\treturn (n_sqrt * n_sqrt == n) && (n_sqrt % 2 == 1);\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpmrsl347z.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmrsl347z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmpkmbrvdfr.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmbrvdfr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\tnth_sqr = nth * nth;\n\tnth_sqr_plus_nth = nth_sqr + nth;\n\t\n\tif (nth_sqr_plus_nth == n)\n\t\treturn nth;\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpctlt3m77.d(14): Error: C style cast illegal, use `cast(long)((sqrt(1 + 8 * n) - 1) / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpctlt3m77.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\t\n\tnth_nonagonal_sqr = n * n;\n\tnth_nonagonal_sqr_plus_one = nth_nonagonal_sqr + 1;\n\t\n\tnth_nonagonal = nth_nonagonal_sqr_plus_one * (nth_nonagonal_sqr_plus_one + 1) / 2;\n\t\n\treturn nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpssaf_e11.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d25]\n??:? void tmpssaf_e11.__unittest_L21_C1() [0x427a4e]\n??:? void tmpssaf_e11.__modtest() [0x427aa8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8b5]\n??:? runModuleUnitTests [0x42b821]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428174]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1665517162,
      "stdout": "",
      "stderr": "/tmp/tmp0hy39su7.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hy39su7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong nth_nonagonal = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth_nonagonal == cast(long)nth_nonagonal;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpv1rqrxrg.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv1rqrxrg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\t\n\tlong n2_1 = n2 + 1;\n\tlong n2_2 = n2 + 2;\n\tlong n2_3 = n2 + 3;\n\tlong n2_4 = n2 + 4;\n\tlong n2_5 = n2 + 5;\n\tlong n2_6 = n2 + 6;\n\tlong n2_7 = n2 + 7;\n\tlong n2_8 = n2 + 8;\n\tlong n2_9 = n2 + 9;\n\t\n\tlong n3_1 = n3 + 1;\n\tlong n3_2 = n3 + 2;\n\tlong n3_3 = n3 + 3;\n\tlong n3_4 = n3 + 4;\n\tlong n3_5 = n3 + 5;\n\tlong n3_6 = n3 + 6;\n\tlong n3_7 = n3 + 7;\n\tlong n3_8 = n3 + 8;\n\tlong n3_9 = n3 + 9;\n\t\n\tlong n4_1 = n4 + 1;\n\tlong n4_2 = n4 + 2;\n\tlong n4_3 = n4 + 3;\n\tlong n4_4 = n4 + 4;\n\tlong n4_5 = n4 + 5;\n\tlong n4_6 = n4 + 6;\n\tlong n4_7 = n4 + 7;\n\tlong n4_8 = n4 + 8;\n\tlong n4_9 = n4 + 9;\n\t\n\tlong n5_1 = n5 + 1;\n\tlong n5_2 = n5 + 2;\n\tlong n5_3 = n5 + 3;\n\tlong n5_4 = n5 + 4;\n\tlong n5_5 = n5 + 5;\n\tlong n5_\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp6brkrqrp.d(55): Error: semicolon expected, not `unittest`\n/tmp/tmp6brkrqrp.d(55): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6brkrqrp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n{\n\tlong x = (long)sqrt(1 + 8*n);\n\treturn x*x == 1 + 8*n;\n}\nunittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp3ahmm85w.d(10): Error: C style cast illegal, use `cast(long)sqrt(1 + 8 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ahmm85w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
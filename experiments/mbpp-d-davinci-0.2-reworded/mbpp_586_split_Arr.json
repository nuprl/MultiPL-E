{
  "name": "mbpp_586_split_Arr",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to split an array at the nth eelment and add the first part to the end.\n\t\n*/\nlong[] split_Arr(long[] l, long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_586_split_Arr.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = split_Arr;\n\n    assert(candidate([12L, 10L, 5L, 6L, 52L, 36L], 2L) == [5L, 6L, 52L, 36L, 12L, 10L]);\n    assert(candidate([1L, 2L, 3L, 4L], 1L) == [2L, 3L, 4L, 1L]);\n    assert(candidate([0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L], 3L) == [3L, 4L, 5L, 6L, 7L, 0L, 1L, 2L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] res = new long[l.length];\n\tlong i = 0;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tres[i] = l[i];\n\t}\n\tfor (long j = 0; j < l.length - n; j++)\n\t{\n\t\tres[i] = l[j];\n\t\ti++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tret[i] = l[i];\n\t\ti += 1;\n\t}\n\tlong j = 0;\n\twhile (i < l.length) \n\t{\n\t\tret[i] = l[n + j];\n\t\ti += 1;\n\t\tj += 1;\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result;\n\tlong[] first;\n\tlong[] second;\n\tlong i;\n\t\n\tresult = new long[l.length];\n\tfirst = new long[n];\n\tsecond = new long[l.length - n];\n\t\n\tfor (i = 0; i < n; i++) {\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (i = n; i < l.length; i++) {\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (i = 0; i < l.length; i++) {\n\t\tif (i < l.length - n) {\n\t\t\tresult[i] = second[i];\n\t\t} else {\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tres[i] = second[i];\n\t}\n\t\n\tfor (long i = second.length; i < res.length; i++)\n\t{\n\t\tres[i] = first[i - second.length];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tres[i] = second[i];\n\t}\n\t\n\tfor(long i = second.length; i < res.length; i++)\n\t{\n\t\tres[i] = first[i - second.length];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\tlong i = 0;\n\twhile (i < n) {\n\t\tfirst[i] = l[i];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < l.length - n) {\n\t\tsecond[i] = l[n + i];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < second.length) {\n\t\tres[i] = second[i];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < first.length) {\n\t\tres[second.length + i] = first[i];\n\t\ti++;\n\t}\n\treturn res;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < n) \n\t\t{\n\t\t\tret[i] = l[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tret[i] = l[i - n];\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (i = n; i < l.length; i++)\n\t{\n\t\tsecond[j] = l[i];\n\t\tj++;\n\t}\n\t\n\tfor (i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (i = 0; i < first.length; i++)\n\t{\n\t\tresult[i + second.length] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i < l.length)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tresult[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult = new long[l.length];\n\t\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = l[i - n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tres[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++)\n\t{\n\t\tres[i + second.length] = first[i];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\ta[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tb[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tc[i] = b[i];\n\t\tc[i + l.length - n] = a[i];\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i-l.length+n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] r = new long[l.length];\n\tlong[] a = new long[n];\n\tlong[] b = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\ta[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tb[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tr[i] = b[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr[i] = a[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn r;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (int i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor (int i = 0; i < l1.length; i++)\n\t{\n\t\tl3[l2.length + i] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\tlong[] l6 = new long[l.length];\n\tlong[] l7 = new long[l.length];\n\tlong[] l8 = new long[l.length];\n\tlong[] l9 = new long[l.length];\n\tlong[] l10 = new long[l.length];\n\tlong[] l11 = new long[l.length];\n\tlong[] l12 = new long[l.length];\n\tlong[] l13 = new long[l.length];\n\tlong[] l14 = new long[l.length];\n\tlong[] l15 = new long[l.length];\n\tlong[] l16 = new long[l.length];\n\tlong[] l17 = new long[l.length];\n\tlong[] l18 = new long[l.length];\n\tlong[] l19 = new long[l.length];\n\tlong[] l20 = new long[l.length];\n\tlong[] l21 = new long[l.length];\n\tlong[] l22 = new long[l.length];\n\tlong[] l23 = new long[l.length];\n\tlong[] l24 = new long[l.length];\n\tlong[] l25 = new long[l.length];\n\tlong[] l26 = new long[l.length];\n\tlong[] l27 = new long[l.length];\n\tlong[] l28 = new long[l.length];\n\tlong[] l29 = new long[l.length];\n\tlong[] l30 = new long[l.length];\n\tlong[] l31 = new long[l.length];\n\tlong[] l32 = new long[l.length];\n\tlong[] l33 = new long[l.length];\n\tlong[] l34 = new long[l.length];\n\tlong[] l35 = new long[l.length];\n\tlong[] l36 = new long[l.length];\n\tlong[] l37 = new long[l.length];\n\tlong[] l38",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < l.length - n; i++) \n\t{\n\t\tsecond[i] = l[i + n];\n\t}\n\t\n\tfor (int i = 0; i < l.length - n; i++) \n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tresult[i + l.length - n] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length - n; i++)\n\t{\n\t\tsecond[i] = l[i + n];\n\t}\n\t\n\tfor(long i = 0; i < l.length - n; i++)\n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tret[i + l.length - n] = first[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++) \n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < l.length - n) \n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t\tl3[i + n] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tsecond[i] = l[n + i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tresult[l.length - n + i] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tsecond[i] = l[n + i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tret[l.length - n + i] = first[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor(long i = second.length; i < l.length; i++)\n\t{\n\t\tresult[i] = first[i-second.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l2.length)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - l2.length];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (int i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (int i = second.length; i < result.length; i++)\n\t{\n\t\tresult[i] = first[i - second.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong i = 0;\n\t\n\twhile(i < n)\n\t{\n\t\tret[i] = l[i];\n\t\ti++;\n\t}\n\t\n\twhile(i < l.length)\n\t{\n\t\tret[i] = l[i - n];\n\t\ti++;\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tsecond[i] = l[i + n];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tresult[i + l.length - n] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnewArr[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewArr[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] new_arr = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length - n];\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < n) \n\t\t{\n\t\t\tfirst_part[i] = l[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsecond_part[i - n] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < l.length - n) \n\t\t{\n\t\t\tnew_arr[i] = second_part[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnew_arr[i] = first_part[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn new_arr;\n}",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] a;\n\tlong[] b;\n\tlong[] c;\n\tlong i;\n\t\n\ta = new long[n];\n\tb = new long[l.length - n];\n\tc = new long[l.length];\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\ta[i] = l[i];\n\t}\n\t\n\tfor (i = n; i < l.length; i++)\n\t{\n\t\tb[i - n] = l[i];\n\t}\n\t\n\tfor (i = 0; i < b.length; i++)\n\t{\n\t\tc[i] = b[i];\n\t}\n\t\n\tfor (i = 0; i < a.length; i++)\n\t{\n\t\tc[i + b.length] = a[i];\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\tlong[] e = new long[l.length];\n\tlong[] f = new long[l.length];\n\tlong[] g = new long[l.length];\n\tlong[] h = new long[l.length];\n\tlong[] i = new long[l.length];\n\tlong[] j = new long[l.length];\n\tlong[] k = new long[l.length];\n\tlong[] m = new long[l.length];\n\tlong[] o = new long[l.length];\n\tlong[] p = new long[l.length];\n\tlong[] q = new long[l.length];\n\tlong[] r = new long[l.length];\n\tlong[] s = new long[l.length];\n\tlong[] t = new long[l.length];\n\tlong[] u = new long[l.length];\n\tlong[] v = new long[l.length];\n\tlong[] w = new long[l.length];\n\tlong[] x = new long[l.length];\n\tlong[] y = new long[l.length];\n\tlong[] z = new long[l.length];\n\tlong[] aa = new long[l.length];\n\tlong[] ab = new long[l.length];\n\tlong[] ac = new long[l.length];\n\tlong[] ad = new long[l.length];\n\tlong[] ae = new long[l.length];\n\tlong[] af = new long[l.length];\n\tlong[] ag = new long[l.length];\n\tlong[] ah = new long[l.length];\n\tlong[] ai = new long[l.length];\n\tlong[] aj = new long[l.length];\n\tlong[] ak = new long[l.length];\n\tlong[] al = new long[l.length];\n\tlong[] am = new long[l.length];\n\tlong[] an = new long[l.length];\n\tlong[] ao = new long[l.",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor(long i = second.length; i < result.length; i++)\n\t{\n\t\tresult[i] = first[i-second.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tnewArr[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++)\n\t{\n\t\tnewArr[i + second.length] = first[i];\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\tlong[] e = new long[l.length];\n\tlong[] f = new long[l.length];\n\tlong[] g = new long[l.length];\n\tlong[] h = new long[l.length];\n\tlong[] i = new long[l.length];\n\tlong[] j = new long[l.length];\n\tlong[] k = new long[l.length];\n\tlong[] m = new long[l.length];\n\tlong[] o = new long[l.length];\n\tlong[] p = new long[l.length];\n\tlong[] q = new long[l.length];\n\tlong[] r = new long[l.length];\n\tlong[] s = new long[l.length];\n\tlong[] t = new long[l.length];\n\tlong[] u = new long[l.length];\n\tlong[] v = new long[l.length];\n\tlong[] w = new long[l.length];\n\tlong[] x = new long[l.length];\n\tlong[] y = new long[l.length];\n\tlong[] z = new long[l.length];\n\tlong[] aa = new long[l.length];\n\tlong[] ab = new long[l.length];\n\tlong[] ac = new long[l.length];\n\tlong[] ad = new long[l.length];\n\tlong[] ae = new long[l.length];\n\tlong[] af = new long[l.length];\n\tlong[] ag = new long[l.length];\n\tlong[] ah = new long[l.length];\n\tlong[] ai = new long[l.length];\n\tlong[] aj = new long[l.length];\n\tlong[] ak = new long[l.length];\n\tlong[] al = new long[l.length];\n\tlong[] am = new long[l.length];\n\tlong[] an = new long[l.length];\n\tlong[] ao = new long[l.",
    "{\n\tlong[] ret;\n\tlong i;\n\tret = new long[l.length];\n\tfor (i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tret[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[i] = l[i-n];\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i-l.length+n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[l.length];\n\t\n\tfor(i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = l[i-n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tret[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[i] = l[i - n];\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] temp = new long[l.length];\n\tlong[] temp2 = new long[l.length];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\ttemp[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[i - n] = l[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tl[i] = temp2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl[i] = temp[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn l;\n}",
    "{\n\tlong[] new_arr = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length-n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst_part[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond_part[i-n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length-n)\n\t\t{\n\t\t\tnew_arr[i] = second_part[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_arr[i] = first_part[i-l.length+n];\n\t\t}\n\t}\n\t\n\treturn new_arr;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < l.length)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tl1[i] = l[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl2[j] = l[i];\n\t\t\tj++;\n\t\t\ti++;\n\t\t}\n\t}\n\twhile(j < l.length)\n\t{\n\t\tl2[j] = 0;\n\t\tj++;\n\t}\n\twhile(k < l.length)\n\t{\n\t\tl3[k] = l2[k];\n\t\tk++;\n\t}\n\tk = 0;\n\twhile(k < l.length)\n\t{\n\t\tl3[k+n] = l1[k];\n\t\tk++;\n\t}\n\treturn l3;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tret[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[i] = l[i - n];\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tl2[i] = l[i + n];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] new_l = new long[l.length];\n\tlong i = 0;\n\twhile(i < n)\n\t{\n\t\tnew_l[i] = l[i];\n\t\ti++;\n\t}\n\tlong j = 0;\n\twhile(i < l.length)\n\t{\n\t\tnew_l[i] = l[j];\n\t\ti++;\n\t\tj++;\n\t}\n\treturn new_l;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor (long i = second.length; i < ret.length; i++)\n\t{\n\t\tret[i] = first[i - second.length];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tfirst[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsecond[i-n] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length-n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i-(l.length-n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor(long i = 0; i < first.length; i++)\n\t{\n\t\tresult[i+second.length] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\t\n\tlong i = 0;\n\twhile (i < n)\n\t{\n\t\tl2[i] = l[i];\n\t\ti = i + 1;\n\t}\n\t\n\tlong j = 0;\n\twhile (j < l.length - n)\n\t{\n\t\tl3[j] = l[n + j];\n\t\tj = j + 1;\n\t}\n\t\n\tlong k = 0;\n\twhile (k < l.length - n)\n\t{\n\t\tl4[k] = l3[k];\n\t\tk = k + 1;\n\t}\n\t\n\tlong m = 0;\n\twhile (m < n)\n\t{\n\t\tl4[l.length - n + m] = l2[m];\n\t\tm = m + 1;\n\t}\n\t\n\treturn l4;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong i = 0;\n\tfor (i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t\tret[i] = l[i];\n\t\telse\n\t\t\tret[i] = l[i - n];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] arr = new long[l.length];\n\tlong[] arr2 = new long[l.length];\n\tlong[] arr3 = new long[l.length];\n\tlong[] arr4 = new long[l.length];\n\tlong[] arr5 = new long[l.length];\n\tlong[] arr6 = new long[l.length];\n\tlong[] arr7 = new long[l.length];\n\tlong[] arr8 = new long[l.length];\n\tlong[] arr9 = new long[l.length];\n\tlong[] arr10 = new long[l.length];\n\tlong[] arr11 = new long[l.length];\n\tlong[] arr12 = new long[l.length];\n\tlong[] arr13 = new long[l.length];\n\tlong[] arr14 = new long[l.length];\n\tlong[] arr15 = new long[l.length];\n\tlong[] arr16 = new long[l.length];\n\tlong[] arr17 = new long[l.length];\n\tlong[] arr18 = new long[l.length];\n\tlong[] arr19 = new long[l.length];\n\tlong[] arr20 = new long[l.length];\n\tlong[] arr21 = new long[l.length];\n\tlong[] arr22 = new long[l.length];\n\tlong[] arr23 = new long[l.length];\n\tlong[] arr24 = new long[l.length];\n\tlong[] arr25 = new long[l.length];\n\tlong[] arr26 = new long[l.length];\n\tlong[] arr27 = new long[l.length];\n\tlong[] arr28 = new long[l.length];\n\tlong[] arr29 = new long[l.length];\n\tlong[] arr30 = new long[l.length];\n\tlong[] arr31 = new long[l.length];\n\tlong[] arr32 = new long[l.length];\n\tlong[] arr33 = new long[l.length];\n\tlong[] arr34 = new long[l.length];\n\tlong[] arr35 = new long[l.length];\n\tlong[] arr36 = new long[l.length];\n\tlong[] arr37 =",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\tlong[] e = new long[l.length];\n\tlong[] f = new long[l.length];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\ta[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[i] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tc[i] = b[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\td[i] = b[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\te[i] = d[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf[i] = d[i];\n\t\t}\n\t}\n\t\n\treturn f;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor (long i = l2.length; i < l3.length; i++)\n\t{\n\t\tl3[i] = l1[i - l2.length];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tfirst[i] = l[i];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < l.length - n) \n\t{\n\t\tsecond[i] = l[i + n];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < l.length - n) \n\t{\n\t\tresult[i] = second[i];\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < n) \n\t{\n\t\tresult[i + l.length - n] = first[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\ta[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[i] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tc[i] = b[i + n];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[i] = a[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tres[i] = second[i];\n\t}\n\t\n\tfor(long i = second.length; i < res.length; i++)\n\t{\n\t\tres[i] = first[i-second.length];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] ret;\n\tlong i;\n\tret = new long[l.length];\n\tfor (i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t\tret[i] = l[i];\n\t\telse\n\t\t\tret[i] = l[i - n];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\tlong[] l6 = new long[l.length];\n\tlong[] l7 = new long[l.length];\n\tlong[] l8 = new long[l.length];\n\tlong[] l9 = new long[l.length];\n\tlong[] l10 = new long[l.length];\n\tlong[] l11 = new long[l.length];\n\tlong[] l12 = new long[l.length];\n\tlong[] l13 = new long[l.length];\n\tlong[] l14 = new long[l.length];\n\tlong[] l15 = new long[l.length];\n\tlong[] l16 = new long[l.length];\n\tlong[] l17 = new long[l.length];\n\tlong[] l18 = new long[l.length];\n\tlong[] l19 = new long[l.length];\n\tlong[] l20 = new long[l.length];\n\tlong[] l21 = new long[l.length];\n\tlong[] l22 = new long[l.length];\n\tlong[] l23 = new long[l.length];\n\tlong[] l24 = new long[l.length];\n\tlong[] l25 = new long[l.length];\n\tlong[] l26 = new long[l.length];\n\tlong[] l27 = new long[l.length];\n\tlong[] l28 = new long[l.length];\n\tlong[] l29 = new long[l.length];\n\tlong[] l30 = new long[l.length];\n\tlong[] l31 = new long[l.length];\n\tlong[] l32 = new long[l.length];\n\tlong[] l33 = new long[l.length];\n\tlong[] l34 = new long[l.length];\n\tlong[] l35 = new long[l.length];\n\tlong[] l36 = new long[l.length];\n\tlong[] l37",
    "{\n\tlong[] l2 = new long[l.length];\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tl2[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl2[i] = l[i-n];\n\t\t}\n\t}\n\treturn l2;\n}",
    "{\n\tlong[] result;\n\tresult = new long[l.length];\n\tlong i;\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\tfor (i = n; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] firstPart = new long[n];\n\tlong[] secondPart = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirstPart[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecondPart[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnewArr[i] = secondPart[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewArr[i] = firstPart[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tsecond[i] = l[i + n];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] arr = new long[l.length];\n\tlong[] arr1 = new long[l.length];\n\tlong[] arr2 = new long[l.length];\n\tlong[] arr3 = new long[l.length];\n\tlong[] arr4 = new long[l.length];\n\tlong[] arr5 = new long[l.length];\n\tlong[] arr6 = new long[l.length];\n\tlong[] arr7 = new long[l.length];\n\tlong[] arr8 = new long[l.length];\n\tlong[] arr9 = new long[l.length];\n\tlong[] arr10 = new long[l.length];\n\tlong[] arr11 = new long[l.length];\n\tlong[] arr12 = new long[l.length];\n\tlong[] arr13 = new long[l.length];\n\tlong[] arr14 = new long[l.length];\n\tlong[] arr15 = new long[l.length];\n\tlong[] arr16 = new long[l.length];\n\tlong[] arr17 = new long[l.length];\n\tlong[] arr18 = new long[l.length];\n\tlong[] arr19 = new long[l.length];\n\tlong[] arr20 = new long[l.length];\n\tlong[] arr21 = new long[l.length];\n\tlong[] arr22 = new long[l.length];\n\tlong[] arr23 = new long[l.length];\n\tlong[] arr24 = new long[l.length];\n\tlong[] arr25 = new long[l.length];\n\tlong[] arr26 = new long[l.length];\n\tlong[] arr27 = new long[l.length];\n\tlong[] arr28 = new long[l.length];\n\tlong[] arr29 = new long[l.length];\n\tlong[] arr30 = new long[l.length];\n\tlong[] arr31 = new long[l.length];\n\tlong[] arr32 = new long[l.length];\n\tlong[] arr33 = new long[l.length];\n\tlong[] arr34 = new long[l.length];\n\tlong[] arr35 = new long[l.length];\n\tlong[] arr36 =",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong m = 0;\n\t\n\tfor(i = 0; i < n; i++)\n\t{\n\t\ta[i] = l[i];\n\t}\n\t\n\tfor(j = n; j < l.length; j++)\n\t{\n\t\tb[j] = l[j];\n\t}\n\t\n\tfor(k = 0; k < n; k++)\n\t{\n\t\tc[k] = b[k];\n\t}\n\t\n\tfor(m = n; m < l.length; m++)\n\t{\n\t\td[m] = a[m];\n\t}\n\t\n\treturn d;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[l.length];\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\n\tfor (i = n; i < l.length; i++)\n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tresult[l.length - n + i] = l[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] firstArr = new long[n];\n\tlong[] secondArr = new long[l.length-n];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tfirstArr[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsecondArr[i-n] = l[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tnewArr[i] = secondArr[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewArr[i] = firstArr[i-(l.length-n)];\n\t\t}\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tret[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tret[i] = l[i];\n\t\ti++;\n\t}\n\tlong j = 0;\n\twhile (i < l.length) \n\t{\n\t\tret[i] = l[n + j];\n\t\ti++;\n\t\tj++;\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i-l.length+n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++) \n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++) \n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++) \n\t{\n\t\tresult[i + second.length] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\t\n\tif (n > l.length)\n\t\treturn l;\n\t\n\tresult = new long[l.length];\n\t\n\tfor (i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t\tresult[i + l.length - n] = l[i];\n\t\telse\n\t\t\tresult[i - n] = l[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] r = new long[l.length];\n\tlong[] f = new long[n];\n\tlong[] s = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tf[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\ts[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tr[i] = s[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr[i] = f[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn r;\n}",
    "{\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[l.length - n];\n\tlong[] temp3 = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile (i < n) \n\t{\n\t\ttemp[i] = l[i];\n\t\ti++;\n\t}\n\twhile (j < l.length - n) \n\t{\n\t\ttemp2[j] = l[n + j];\n\t\tj++;\n\t}\n\twhile (k < l.length) \n\t{\n\t\ttemp3[k] = temp2[k];\n\t\tk++;\n\t}\n\twhile (k < l.length) \n\t{\n\t\ttemp3[k] = temp[k - l.length + n];\n\t\tk++;\n\t}\n\treturn temp3;\n}",
    "{\n\tlong[] result;\n\tresult = new long[l.length];\n\tlong i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tresult[i] = l[i];\n\t}\n\tfor(i=n;i<l.length;i++)\n\t{\n\t\tresult[i] = l[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tresult[i+l.length-n] = l[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tfirst[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsecond[i - n] = l[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnewArr[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewArr[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\tlong[] e = new long[l.length];\n\tlong[] f = new long[l.length];\n\tlong[] g = new long[l.length];\n\tlong[] h = new long[l.length];\n\tlong[] i = new long[l.length];\n\tlong[] j = new long[l.length];\n\tlong[] k = new long[l.length];\n\tlong[] m = new long[l.length];\n\tlong[] o = new long[l.length];\n\tlong[] p = new long[l.length];\n\tlong[] q = new long[l.length];\n\tlong[] r = new long[l.length];\n\tlong[] s = new long[l.length];\n\tlong[] t = new long[l.length];\n\tlong[] u = new long[l.length];\n\tlong[] v = new long[l.length];\n\tlong[] w = new long[l.length];\n\tlong[] x = new long[l.length];\n\tlong[] y = new long[l.length];\n\tlong[] z = new long[l.length];\n\tlong[] aa = new long[l.length];\n\tlong[] ab = new long[l.length];\n\tlong[] ac = new long[l.length];\n\tlong[] ad = new long[l.length];\n\tlong[] ae = new long[l.length];\n\tlong[] af = new long[l.length];\n\tlong[] ag = new long[l.length];\n\tlong[] ah = new long[l.length];\n\tlong[] ai = new long[l.length];\n\tlong[] aj = new long[l.length];\n\tlong[] ak = new long[l.length];\n\tlong[] al = new long[l.length];\n\tlong[] am = new long[l.length];\n\tlong[] an = new long[l.length];\n\tlong[] ao = new long[l.",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2~l1;\n}",
    "{\n\tlong[] arr = new long[l.length];\n\tlong[] arr2 = new long[l.length];\n\tlong[] arr3 = new long[l.length];\n\tlong[] arr4 = new long[l.length];\n\tlong[] arr5 = new long[l.length];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr2[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr3[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr4[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr5[i] = l[i];\n\t}\n\t\n\tlong[] arr6 = new long[l.length];\n\tlong[] arr7 = new long[l.length];\n\tlong[] arr8 = new long[l.length];\n\tlong[] arr9 = new long[l.length];\n\tlong[] arr10 = new long[l.length];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr6[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr7[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr8[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr9[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tarr10[",
    "{\n\tlong[] ret;\n\tlong i;\n\tlong j;\n\t\n\tret = new long[l.length];\n\t\n\tfor (i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tret[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj = i - n;\n\t\t\tret[j] = l[i];\n\t\t}\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor (long i = 0; i < l1.length; i++)\n\t{\n\t\tl3[i + l2.length] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] arr = new long[l.length];\n\tlong[] arr1 = new long[l.length];\n\tlong[] arr2 = new long[l.length];\n\tlong[] arr3 = new long[l.length];\n\tlong[] arr4 = new long[l.length];\n\tlong[] arr5 = new long[l.length];\n\tlong[] arr6 = new long[l.length];\n\tlong[] arr7 = new long[l.length];\n\tlong[] arr8 = new long[l.length];\n\tlong[] arr9 = new long[l.length];\n\tlong[] arr10 = new long[l.length];\n\tlong[] arr11 = new long[l.length];\n\tlong[] arr12 = new long[l.length];\n\tlong[] arr13 = new long[l.length];\n\tlong[] arr14 = new long[l.length];\n\tlong[] arr15 = new long[l.length];\n\tlong[] arr16 = new long[l.length];\n\tlong[] arr17 = new long[l.length];\n\tlong[] arr18 = new long[l.length];\n\tlong[] arr19 = new long[l.length];\n\tlong[] arr20 = new long[l.length];\n\tlong[] arr21 = new long[l.length];\n\tlong[] arr22 = new long[l.length];\n\tlong[] arr23 = new long[l.length];\n\tlong[] arr24 = new long[l.length];\n\tlong[] arr25 = new long[l.length];\n\tlong[] arr26 = new long[l.length];\n\tlong[] arr27 = new long[l.length];\n\tlong[] arr28 = new long[l.length];\n\tlong[] arr29 = new long[l.length];\n\tlong[] arr30 = new long[l.length];\n\tlong[] arr31 = new long[l.length];\n\tlong[] arr32 = new long[l.length];\n\tlong[] arr33 = new long[l.length];\n\tlong[] arr34 = new long[l.length];\n\tlong[] arr35 = new long[l.length];\n\tlong[] arr36 =",
    "{\n\tlong[] arr = new long[l.length];\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tarr[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[i] = l[i - n];\n\t\t}\n\t}\n\treturn arr;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = l[i - n];\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] new_arr = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst_part[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tsecond_part[i] = l[i + n];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++) \n\t{\n\t\tnew_arr[i] = second_part[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tnew_arr[i + l.length - n] = first_part[i];\n\t}\n\t\n\treturn new_arr;\n}",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < n) \n\t\t{\n\t\t\tret[i] = l[i];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tret[i] = l[i - n];\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tl1[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl1[i] = l[i - n];\n\t\t}\n\t}\n\treturn l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor(long i = 0; i < first.length; i++)\n\t{\n\t\tresult[i + second.length] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] temp = new long[l.length];\n\tlong[] temp2 = new long[l.length];\n\tlong[] temp3 = new long[l.length];\n\tlong[] temp4 = new long[l.length];\n\tlong[] temp5 = new long[l.length];\n\tlong[] temp6 = new long[l.length];\n\tlong[] temp7 = new long[l.length];\n\tlong[] temp8 = new long[l.length];\n\tlong[] temp9 = new long[l.length];\n\tlong[] temp10 = new long[l.length];\n\tlong[] temp11 = new long[l.length];\n\tlong[] temp12 = new long[l.length];\n\tlong[] temp13 = new long[l.length];\n\tlong[] temp14 = new long[l.length];\n\tlong[] temp15 = new long[l.length];\n\tlong[] temp16 = new long[l.length];\n\tlong[] temp17 = new long[l.length];\n\tlong[] temp18 = new long[l.length];\n\tlong[] temp19 = new long[l.length];\n\tlong[] temp20 = new long[l.length];\n\tlong[] temp21 = new long[l.length];\n\tlong[] temp22 = new long[l.length];\n\tlong[] temp23 = new long[l.length];\n\tlong[] temp24 = new long[l.length];\n\tlong[] temp25 = new long[l.length];\n\tlong[] temp26 = new long[l.length];\n\tlong[] temp27 = new long[l.length];\n\tlong[] temp28 = new long[l.length];\n\tlong[] temp29 = new long[l.length];\n\tlong[] temp30 = new long[l.length];\n\tlong[] temp31 = new long[l.length];\n\tlong[] temp32 = new long[l.length];\n\tlong[] temp33 = new long[l.length];\n\tlong[] temp34 = new long[l.length];\n\tlong[] temp35 = new long[l.length];\n\tlong[] temp36 = new long[l.length];\n\tlong[] temp37 =",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++) \n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < l.length - n) \n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] tmp = new long[n];\n\tlong[] tmp2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\ttmp[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\ttmp2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tres[i] = tmp2[i];\n\t}\n\t\n\tfor (long i = l.length - n; i < l.length; i++)\n\t{\n\t\tres[i] = tmp[i - (l.length - n)];\n\t}\n\t\n\treturn res;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor(long i = 0; i < l1.length; i++)\n\t{\n\t\tl3[l2.length + i] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\tlong j;\n\t\n\tresult = new long[l.length];\n\t\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\n\tfor(j = 0; j < l.length - n; j++)\n\t{\n\t\tresult[j + n] = l[j];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\t\n\twhile (i < l.length)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\ta[i] = l[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[j] = l[i];\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\twhile (k < l.length)\n\t{\n\t\tif (k < j)\n\t\t{\n\t\t\tc[k] = b[k];\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[k] = a[k-j];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn c;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tsecond[i] = l[n + i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tresult[l.length - n + i] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] res = new long[l.length];\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\tres = second ~ first;\n\treturn res;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\t\n\tl1 = l[0..n];\n\tl2 = l[n..$];\n\tl3 = l2 ~ l1;\n\t\n\treturn l3;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++)\n\t{\n\t\tret[i + second.length] = first[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor (long i = second.length; i < ret.length; i++)\n\t{\n\t\tret[i] = first[i - second.length];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length-n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i-l.length+n];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\tlong[] l6 = new long[l.length];\n\tlong[] l7 = new long[l.length];\n\tlong[] l8 = new long[l.length];\n\tlong[] l9 = new long[l.length];\n\tlong[] l10 = new long[l.length];\n\tlong[] l11 = new long[l.length];\n\tlong[] l12 = new long[l.length];\n\tlong[] l13 = new long[l.length];\n\tlong[] l14 = new long[l.length];\n\tlong[] l15 = new long[l.length];\n\tlong[] l16 = new long[l.length];\n\tlong[] l17 = new long[l.length];\n\tlong[] l18 = new long[l.length];\n\tlong[] l19 = new long[l.length];\n\tlong[] l20 = new long[l.length];\n\tlong[] l21 = new long[l.length];\n\tlong[] l22 = new long[l.length];\n\tlong[] l23 = new long[l.length];\n\tlong[] l24 = new long[l.length];\n\tlong[] l25 = new long[l.length];\n\tlong[] l26 = new long[l.length];\n\tlong[] l27 = new long[l.length];\n\tlong[] l28 = new long[l.length];\n\tlong[] l29 = new long[l.length];\n\tlong[] l30 = new long[l.length];\n\tlong[] l31 = new long[l.length];\n\tlong[] l32 = new long[l.length];\n\tlong[] l33 = new long[l.length];\n\tlong[] l34 = new long[l.length];\n\tlong[] l35 = new long[l.length];\n\tlong[] l36 = new long[l.length];\n\tlong[] l37",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tl1[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl2[i - n] = l[i];\n\t\t}\n\t}\n\t\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] firstPart = new long[n];\n\tlong[] secondPart = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tfirstPart[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tsecondPart[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tnewArr[i] = secondPart[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewArr[i] = firstPart[i - l.length + n];\n\t\t}\n\t}\n\treturn newArr;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] r = new long[l.length];\n\tlong[] f = new long[l.length];\n\tlong[] s = new long[l.length];\n\tlong[] t = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tf[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\ts[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tt[i] = s[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tr[i] = t[i];\n\t}\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tr[i] = f[i];\n\t}\n\t\n\treturn r;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong i = 0;\n\twhile(i < n)\n\t{\n\t\tresult[i] = l[i];\n\t\ti++;\n\t}\n\twhile(i < l.length)\n\t{\n\t\tresult[i] = l[i+1];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t\tret[i + l.length - n] = l[i];\n\t\telse\n\t\t\tret[i - n] = l[i];\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] r = new long[l.length];\n\tlong[] s = new long[l.length];\n\tlong[] t = new long[l.length];\n\tlong[] u = new long[l.length];\n\tlong[] v = new long[l.length];\n\tlong[] w = new long[l.length];\n\tlong[] x = new long[l.length];\n\tlong[] y = new long[l.length];\n\tlong[] z = new long[l.length];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tr[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts[i] = l[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tt[i] = s[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tu[i] = s[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tv[i] = u[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tw[i] = u[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tx[i] = w[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty[i] = w[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tz[i] = y[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tz[i] = y[i];",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l2.length)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - l2.length];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l2.length)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - l2.length];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < n)\n\t{\n\t\tfirst[i] = l[i];\n\t\ti++;\n\t}\n\twhile(j < l.length - n)\n\t{\n\t\tsecond[j] = l[i];\n\t\ti++;\n\t\tj++;\n\t}\n\twhile(k < l.length)\n\t{\n\t\tret[k] = second[k];\n\t\tk++;\n\t}\n\twhile(k < l.length)\n\t{\n\t\tret[k] = first[k - l.length - n];\n\t\tk++;\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\tlong[] d = new long[l.length];\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\ta[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[i] = l[i];\n\t\t}\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tc[i] = b[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\td[i] = a[i];\n\t\t}\n\t}\n\t\n\treturn d;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] temp = new long[l.length];\n\tlong[] temp2 = new long[l.length];\n\tlong[] temp3 = new long[l.length];\n\tlong[] temp4 = new long[l.length];\n\tlong[] temp5 = new long[l.length];\n\tlong[] temp6 = new long[l.length];\n\tlong[] temp7 = new long[l.length];\n\tlong[] temp8 = new long[l.length];\n\tlong[] temp9 = new long[l.length];\n\tlong[] temp10 = new long[l.length];\n\tlong[] temp11 = new long[l.length];\n\tlong[] temp12 = new long[l.length];\n\tlong[] temp13 = new long[l.length];\n\tlong[] temp14 = new long[l.length];\n\tlong[] temp15 = new long[l.length];\n\tlong[] temp16 = new long[l.length];\n\tlong[] temp17 = new long[l.length];\n\tlong[] temp18 = new long[l.length];\n\tlong[] temp19 = new long[l.length];\n\tlong[] temp20 = new long[l.length];\n\tlong[] temp21 = new long[l.length];\n\tlong[] temp22 = new long[l.length];\n\tlong[] temp23 = new long[l.length];\n\tlong[] temp24 = new long[l.length];\n\tlong[] temp25 = new long[l.length];\n\tlong[] temp26 = new long[l.length];\n\tlong[] temp27 = new long[l.length];\n\tlong[] temp28 = new long[l.length];\n\tlong[] temp29 = new long[l.length];\n\tlong[] temp30 = new long[l.length];\n\tlong[] temp31 = new long[l.length];\n\tlong[] temp32 = new long[l.length];\n\tlong[] temp33 = new long[l.length];\n\tlong[] temp34 = new long[l.length];\n\tlong[] temp35 = new long[l.length];\n\tlong[] temp36 = new long[l.length];\n\tlong[] temp37 =",
    "{\n\tlong[] ret = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\twhile(i < l.length)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tret[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t\tl1[i] = l[i];\n\t\n\tfor (long i = n; i < l.length; i++)\n\t\tl2[i - n] = l[i];\n\t\n\treturn l1 ~ l2;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = second.length; i < result.length; i++)\n\t{\n\t\tresult[i] = first[i - second.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] first = l[0..n];\n\tlong[] second = l[n..$];\n\treturn second ~ first;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t\tl1[i] = l[i];\n\t\t\n\tfor (long i = n; i < l.length; i++)\n\t\tl2[i - n] = l[i];\n\t\t\n\treturn l1 ~ l2;\n}",
    "{\n\tlong[] a = l[0..n];\n\tlong[] b = l[n..$];\n\treturn b ~ a;\n}",
    "{\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong m = 0;\n\t\n\twhile(i < n)\n\t{\n\t\tl2[i] = l[i];\n\t\ti++;\n\t}\n\t\n\twhile(i < l.length)\n\t{\n\t\tl3[j] = l[i];\n\t\ti++;\n\t\tj++;\n\t}\n\t\n\twhile(k < l.length)\n\t{\n\t\tl4[k] = l2[k];\n\t\tk++;\n\t}\n\t\n\twhile(m < l.length)\n\t{\n\t\tl5[m] = l3[m];\n\t\tm++;\n\t}\n\t\n\treturn l5;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tsecond[i] = l[n + i];\n\t}\n\t\n\tfor (long i = 0; i < l.length - n; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tresult[l.length - n + i] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] new_l = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst_part[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond_part[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnew_l[i] = second_part[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_l[i] = first_part[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn new_l;\n}",
    "{\n\tlong[] a = new long[l.length];\n\tlong[] b = new long[l.length];\n\tlong[] c = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\ta[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tb[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tc[i] = b[i];\n\t\tc[i+n] = a[i];\n\t}\n\t\n\treturn c;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[l.length-n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\ttemp[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\ttemp2[i-n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length-n)\n\t\t{\n\t\t\tresult[i] = temp2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = temp[i-(l.length-n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t\tl3[i+n] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2~l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] arr = new long[l.length];\n\tlong[] arr1 = new long[n];\n\tlong[] arr2 = new long[l.length-n];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < l.length)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tarr1[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr2[k] = l[i];\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < arr2.length)\n\t{\n\t\tarr[i] = arr2[i];\n\t\ti++;\n\t}\n\tj = 0;\n\twhile(j < arr1.length)\n\t{\n\t\tarr[i] = arr1[j];\n\t\ti++;\n\t\tj++;\n\t}\n\treturn arr;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] new_l = new long[l.length];\n\tlong[] first_half = new long[n];\n\tlong[] second_half = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst_half[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++) \n\t{\n\t\tsecond_half[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++) \n\t{\n\t\tif (i < l.length - n) \n\t\t{\n\t\t\tnew_l[i] = second_half[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnew_l[i] = first_half[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn new_l;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (int i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tl3[i] = l2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl3[i] = l1[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong[] l4 = new long[l.length];\n\tlong[] l5 = new long[l.length];\n\tlong[] l6 = new long[l.length];\n\tlong[] l7 = new long[l.length];\n\tlong[] l8 = new long[l.length];\n\tlong[] l9 = new long[l.length];\n\tlong[] l10 = new long[l.length];\n\tlong[] l11 = new long[l.length];\n\tlong[] l12 = new long[l.length];\n\tlong[] l13 = new long[l.length];\n\tlong[] l14 = new long[l.length];\n\tlong[] l15 = new long[l.length];\n\tlong[] l16 = new long[l.length];\n\tlong[] l17 = new long[l.length];\n\tlong[] l18 = new long[l.length];\n\tlong[] l19 = new long[l.length];\n\tlong[] l20 = new long[l.length];\n\tlong[] l21 = new long[l.length];\n\tlong[] l22 = new long[l.length];\n\tlong[] l23 = new long[l.length];\n\tlong[] l24 = new long[l.length];\n\tlong[] l25 = new long[l.length];\n\tlong[] l26 = new long[l.length];\n\tlong[] l27 = new long[l.length];\n\tlong[] l28 = new long[l.length];\n\tlong[] l29 = new long[l.length];\n\tlong[] l30 = new long[l.length];\n\tlong[] l31 = new long[l.length];\n\tlong[] l32 = new long[l.length];\n\tlong[] l33 = new long[l.length];\n\tlong[] l34 = new long[l.length];\n\tlong[] l35 = new long[l.length];\n\tlong[] l36 = new long[l.length];\n\tlong[] l37 = new long[l.length];\n\tlong[] l38",
    "{\n\tlong[] l1 = new long[l.length];\n\tlong[] l2 = new long[l.length];\n\tlong[] l3 = new long[l.length];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < l.length)\n\t{\n\t\tif(i < n)\n\t\t{\n\t\t\tl1[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl2[j] = l[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < l1.length)\n\t{\n\t\tl3[k] = l1[i];\n\t\tk++;\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < l2.length)\n\t{\n\t\tl3[k] = l2[i];\n\t\tk++;\n\t\ti++;\n\t}\n\treturn l3;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++) \n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++) \n\t{\n\t\tret[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++) \n\t{\n\t\tret[second.length + i] = first[i];\n\t}\n\t\n\treturn ret;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t\tl1[i] = l[i];\n\tfor (long i = n; i < l.length; i++)\n\t\tl2[i - n] = l[i];\n\t\n\treturn l1 ~ l2;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] new_arr = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length - n];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tfirst_part[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsecond_part[i - n] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnew_arr[i] = second_part[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_arr[i] = first_part[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn new_arr;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\treturn l1 ~ l2;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] temp = new long[n];\n\tlong[] temp2 = new long[l.length - n];\n\t\n\tfor(long i = 0; i < n; i++)\n\t{\n\t\ttemp[i] = l[i];\n\t}\n\t\n\tfor(long i = n; i < l.length; i++)\n\t{\n\t\ttemp2[i - n] = l[i];\n\t}\n\t\n\tfor(long i = 0; i < l.length; i++)\n\t{\n\t\tif(i < l.length - n)\n\t\t{\n\t\t\tresult[i] = temp2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = temp[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[l.length];\n\t\n\tfor (i = 0; i < l.length; i++) {\n\t\tif (i < n) {\n\t\t\tresult[i] = l[i];\n\t\t} else {\n\t\t\tresult[i] = l[i - n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] temp = new long[l.length];\n\tlong[] temp2 = new long[l.length];\n\tlong[] temp3 = new long[l.length];\n\tlong[] temp4 = new long[l.length];\n\tlong[] temp5 = new long[l.length];\n\tlong[] temp6 = new long[l.length];\n\tlong[] temp7 = new long[l.length];\n\tlong[] temp8 = new long[l.length];\n\tlong[] temp9 = new long[l.length];\n\tlong[] temp10 = new long[l.length];\n\tlong[] temp11 = new long[l.length];\n\tlong[] temp12 = new long[l.length];\n\tlong[] temp13 = new long[l.length];\n\tlong[] temp14 = new long[l.length];\n\tlong[] temp15 = new long[l.length];\n\tlong[] temp16 = new long[l.length];\n\tlong[] temp17 = new long[l.length];\n\tlong[] temp18 = new long[l.length];\n\tlong[] temp19 = new long[l.length];\n\tlong[] temp20 = new long[l.length];\n\tlong[] temp21 = new long[l.length];\n\tlong[] temp22 = new long[l.length];\n\tlong[] temp23 = new long[l.length];\n\tlong[] temp24 = new long[l.length];\n\tlong[] temp25 = new long[l.length];\n\tlong[] temp26 = new long[l.length];\n\tlong[] temp27 = new long[l.length];\n\tlong[] temp28 = new long[l.length];\n\tlong[] temp29 = new long[l.length];\n\tlong[] temp30 = new long[l.length];\n\tlong[] temp31 = new long[l.length];\n\tlong[] temp32 = new long[l.length];\n\tlong[] temp33 = new long[l.length];\n\tlong[] temp34 = new long[l.length];\n\tlong[] temp35 = new long[l.length];\n\tlong[] temp36 = new long[l.length];\n\tlong[] temp37 =",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < l.length - n; i++)\n\t{\n\t\tsecond[i] = l[i + n];\n\t}\n\t\n\tfor (int i = 0; i < l.length - n; i++)\n\t{\n\t\tresult[i] = second[i];\n\t}\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tresult[i + l.length - n] = first[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tresult[i] = second[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = first[i - l.length + n];\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] l1 = l[0..n];\n\tlong[] l2 = l[n..$];\n\treturn l2 ~ l1;\n}",
    "{\n\tlong[] newArr = new long[l.length];\n\tlong[] first = new long[n];\n\tlong[] second = new long[l.length - n];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tfirst[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tsecond[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < second.length; i++)\n\t{\n\t\tnewArr[i] = second[i];\n\t}\n\t\n\tfor (long i = 0; i < first.length; i++)\n\t{\n\t\tnewArr[i + second.length] = first[i];\n\t}\n\t\n\treturn newArr;\n}",
    "{\n\tlong[] new_l = new long[l.length];\n\tlong[] first_part = new long[n];\n\tlong[] second_part = new long[l.length - n];\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < n)\n\t\t{\n\t\t\tfirst_part[i] = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsecond_part[i - n] = l[i];\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < l.length; i++)\n\t{\n\t\tif (i < l.length - n)\n\t\t{\n\t\t\tnew_l[i] = second_part[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_l[i] = first_part[i - (l.length - n)];\n\t\t}\n\t}\n\t\n\treturn new_l;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (long i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (long i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor (long i = 0; i < l1.length; i++)\n\t{\n\t\tl3[i + l2.length] = l1[i];\n\t}\n\t\n\treturn l3;\n}",
    "{\n\tlong[] l1 = new long[n];\n\tlong[] l2 = new long[l.length - n];\n\tlong[] l3 = new long[l.length];\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tl1[i] = l[i];\n\t}\n\t\n\tfor (int i = n; i < l.length; i++)\n\t{\n\t\tl2[i - n] = l[i];\n\t}\n\t\n\tfor (int i = 0; i < l2.length; i++)\n\t{\n\t\tl3[i] = l2[i];\n\t}\n\t\n\tfor (int i = 0; i < l1.length; i++)\n\t{\n\t\tl3[l2.length + i] = l1[i];\n\t}\n\t\n\treturn l3;\n}"
  ]
}
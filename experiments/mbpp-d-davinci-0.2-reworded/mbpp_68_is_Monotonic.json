{
  "name": "mbpp_68_is_Monotonic",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given array is monotonic or not.\n\t\n*/\nbool is_Monotonic(long[] A) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_Monotonic;\n\n    assert(candidate([6L, 5L, 4L, 4L]) == true);\n    assert(candidate([1L, 2L, 2L, 3L]) == true);\n    assert(candidate([1L, 3L, 2L]) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tlong[] B = A.dup;\n\tB.sort;\n\treturn A == B;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool isNonDecreasing = true;\n\tbool isNonIncreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tisNonDecreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tisNonIncreasing = false;\n\t\t}\n\t}\n\treturn isNonDecreasing || isNonIncreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tis_increasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tis_decreasing = false;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tis_increasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(A[i] < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(A[i] > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn (is_increasing || is_decreasing);\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif(A.length <= 2)\n\t\treturn true;\n\t\n\tbool is_increasing = A[0] < A[1];\n\t\n\tforeach(i; 1..A.length-1)\n\t{\n\t\tif(is_increasing)\n\t\t{\n\t\t\tif(A[i] < A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(A[i] > A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tlong[] B = A.dup;\n\tB.sort;\n\treturn A == B;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i+1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\t\n\t\tif(v < A[i-1])\n\t\t\tis_increasing = false;\n\t\t\n\t\tif(v > A[i-1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tis_increasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\telse if(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_Increasing = true;\n\tbool is_Decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tis_Increasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tis_Decreasing = false;\n\t\t}\n\t}\n\treturn is_Increasing || is_Decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool inc = true;\n\tbool dec = true;\n\t\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tinc = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdec = false;\n\t\t}\n\t}\n\treturn inc || dec;\n}",
    "{\n\tbool isIncreasing = true;\n\tbool isDecreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tisIncreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tisDecreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,j; zip(A,A[1..$]))\n\t{\n\t\tif(i > j)\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif(i < j)\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool isIncreasing = true;\n\tbool isDecreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tisIncreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tisDecreasing = false;\n\t\t}\n\t}\n\t\n\treturn isIncreasing || isDecreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < n - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] > A[i-1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tlong[] B = A.dup;\n\tB.sort;\n\treturn A == B;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i+1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < n - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < n - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint i = 0;\n\tint j = A.length - 1;\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\twhile (i < j) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif (A[j] < A[j - 1]) \n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(v < A[i-1])\n\t\t\tis_increasing = false;\n\t\tif(v > A[i-1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2) \n\t{\n\t\treturn true;\n\t}\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(A[i] < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(A[i] > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2) return true;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 1; i < A.length; i++) \n\t{\n\t\tif (A[i] < A[i - 1]) increasing = false;\n\t\tif (A[i] > A[i - 1]) decreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_monotonic = true;\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\tif(is_increasing == false && is_decreasing == false)\n\t{\n\t\tis_monotonic = false;\n\t}\n\t\n\treturn is_monotonic;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_non_decreasing = true;\n\tbool is_non_increasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif (A[i] < A[i + 1])\n\t\t{\n\t\t\tis_non_decreasing = false;\n\t\t}\n\t\t\n\t\tif (A[i] > A[i + 1])\n\t\t{\n\t\t\tis_non_increasing = false;\n\t\t}\n\t}\n\t\n\treturn is_non_decreasing || is_non_increasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif (A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\tbool is_increasing = A[1] > A[0];\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif (is_increasing != (A[i] > A[i-1]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tlong[] B = A.dup;\n\tB.sort;\n\treturn A == B;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] > A[i-1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor(size_t i = 0; i < A.length - 1; i++) \n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tis_increasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tis_decreasing = false;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif(A.length < 2)\n\t\treturn true;\n\t\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length < 2)\n\t\treturn true;\n\t\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool isIncreasing = true;\n\tbool isDecreasing = true;\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t\tisIncreasing = false;\n\t\tif(A[i] > A[i-1])\n\t\t\tisDecreasing = false;\n\t}\n\treturn isIncreasing || isDecreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, j; zip(A[0..$-1], A[1..$]))\n\t{\n\t\tif(i > j)\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(i < j)\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_monotonic = true;\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(!is_increasing && !is_decreasing)\n\t{\n\t\tis_monotonic = false;\n\t}\n\t\n\treturn is_monotonic;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t\treturn true;\n\t\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach (i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i+1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i+1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,v;A)\n\t{\n\t\tif(i+1 < A.length)\n\t\t{\n\t\t\tif(A[i] > A[i+1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(A[i] < A[i+1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tis_increasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tis_decreasing = false;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t\treturn true;\n\t\n\tbool increasing = A[0] <= A[1];\n\t\n\tfor (int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif (increasing)\n\t\t{\n\t\t\tif (A[i] > A[i + 1])\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (A[i] < A[i + 1])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\t\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool isIncreasing = true;\n\tbool isDecreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tisIncreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tisDecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn isIncreasing || isDecreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\t\n\t\tif(v < A[i-1])\n\t\t\tis_increasing = false;\n\t\t\t\n\t\tif(v > A[i-1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif (A.length <= 2) \n\t{\n\t\treturn true;\n\t}\n\t\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\t\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2) \n\t{\n\t\treturn true;\n\t}\n\t\n\tbool increasing = A[1] > A[0];\n\t\n\tfor (int i = 2; i < A.length; i++) \n\t{\n\t\tif (increasing && A[i] < A[i - 1]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (!increasing && A[i] > A[i - 1]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tif(A.length < 2)\n\t\treturn true;\n\t\n\tbool is_increasing = A[0] < A[1];\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\t\n\t\tif(is_increasing)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(v > A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tis_increasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, val; A) \n\t{\n\t\tif(i > 0) \n\t\t{\n\t\t\tif(val < A[i - 1]) \n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(val > A[i - 1]) \n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif(A.length <= 2)\n\t\treturn true;\n\t\n\tbool is_increasing = A[0] < A[1];\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(is_increasing)\n\t\t{\n\t\t\tif(A[i] > A[i+1])\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(A[i] < A[i+1])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t\tincreasing = false;\n\t\tif(A[i] > A[i-1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t\tincreasing = false;\n\t\tif(A[i] > A[i-1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tis_increasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(v < A[i-1])\n\t\t\tincreasing = false;\n\t\tif(v > A[i-1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i - 1])\n\t\t\t\tis_increasing = false;\n\t\t\tif (v > A[i - 1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A) \n\t{\n\t\tif(i > 0) \n\t\t{\n\t\t\tif(v < A[i - 1]) \n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1]) \n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(A[i-1] > A[i])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(A[i-1] < A[i])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] > A[i-1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) {\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n    if (A.length <= 2)\n        return true;\n    bool increasing = A[1] > A[0];\n    for (int i = 1; i < A.length; ++i)\n    {\n        if (increasing)\n        {\n            if (A[i] < A[i - 1])\n                return false;\n        }\n        else\n        {\n            if (A[i] > A[i - 1])\n                return false;\n        }\n    }\n    return true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A) \n\t{\n\t\tif(i > 0) \n\t\t{\n\t\t\tif(v < A[i - 1]) \n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(v > A[i - 1]) \n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tif (v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif (v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t\tincreasing = false;\n\t\tif(A[i] > A[i-1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint flag = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu = 0;\n\tint bv = 0;\n\tint bw = 0;\n\tint bx = 0;\n\tint by =",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t\treturn true;\n\t\n\tbool increasing = false;\n\tbool decreasing = false;\n\t\n\tfor (int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif (A[i] < A[i + 1])\n\t\t\tincreasing = true;\n\t\tif (A[i] > A[i + 1])\n\t\t\tdecreasing = true;\n\t\tif (increasing && decreasing)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor(int i = 0; i < A.length - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\t\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\treturn A.isSorted!((a,b) => a <= b) || A.isSorted!((a,b) => a >= b);\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tis_increasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tis_increasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A) \n\t{\n\t\tif (i > 0) \n\t\t{\n\t\t\tif (v < A[i - 1]) \n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif (v > A[i - 1]) \n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_non_decreasing = true;\n\tbool is_non_increasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_non_decreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_non_increasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_non_decreasing || is_non_increasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif(A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tif (n == 1) \n\t\treturn true;\n\t\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t\tis_increasing = false;\n\t\tif (A[i] < A[i + 1]) \n\t\t\tis_decreasing = false;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor(int i = 0; i < n - 1; i++)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, val; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(val < A[i-1])\n\t\t\t\tincreasing = false;\n\t\t\tif(val > A[i-1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tis_increasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tis_decreasing = false;\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif (A.length < 2) return true;\n\tbool is_increasing = A[0] < A[1];\n\tfor (int i = 2; i < A.length; i++) \n\t{\n\t\tif (is_increasing) \n\t\t{\n\t\t\tif (A[i - 1] > A[i]) return false;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (A[i - 1] < A[i]) return false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,j; zip(A[0..$-1], A[1..$]))\n\t{\n\t\tif(i > j)\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif(i < j)\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t\tincreasing = false;\n\t\t\tif(v > A[i - 1])\n\t\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t\treturn true;\n\t\n\tbool increasing = A[1] > A[0];\n\t\n\tforeach(i; 1..A.length)\n\t{\n\t\tif (increasing)\n\t\t{\n\t\t\tif (A[i] < A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (A[i] > A[i-1])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i+1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\telse if(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tif (A.length <= 2)\n\t\treturn true;\n\t\n\tbool is_increasing = A[0] < A[1];\n\t\n\tforeach(i; 1..A.length-1)\n\t{\n\t\tif (is_increasing && A[i] < A[i-1])\n\t\t\treturn false;\n\t\telse if (!is_increasing && A[i] > A[i-1])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0..A.length-1)\n\t{\n\t\tif(A[i] > A[i+1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i+1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t\tis_increasing = false;\n\t\t\tif(v > A[i-1])\n\t\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tforeach(i; 1..A.length)\n\t{\n\t\tif(A[i] < A[i-1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] > A[i-1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1]) \n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\tif (A[i] < A[i + 1]) \n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i+1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i - 1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i - 1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i; 0 .. A.length - 1)\n\t{\n\t\tif(A[i] > A[i + 1])\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif(A[i] < A[i + 1])\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\t\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_monotonic = true;\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tfor (int i = 0; i < A.length-1; i++)\n\t{\n\t\tif (A[i] > A[i+1])\n\t\t{\n\t\t\tis_increasing = false;\n\t\t}\n\t\telse if (A[i] < A[i+1])\n\t\t{\n\t\t\tis_decreasing = false;\n\t\t}\n\t}\n\t\n\tif (is_increasing == false && is_decreasing == false)\n\t{\n\t\tis_monotonic = false;\n\t}\n\t\n\treturn is_monotonic;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, val; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(A[i] > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t\telse if(A[i] < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; ++i) \n\t{\n\t\tif (A[i] > A[i+1]) \n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\tif (A[i] < A[i+1]) \n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < A.length - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool increasing = true;\n\tbool decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tincreasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tdecreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n    if (A.length <= 2)\n        return true;\n    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < A.length - 1; ++i) \n    {\n        if (A[i] > A[i+1])\n            increasing = false;\n        if (A[i] < A[i+1])\n            decreasing = false;\n    }\n    return increasing || decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool inc = true;\n\tbool dec = true;\n\tfor (int i = 1; i < n; i++) \n\t{\n\t\tif (A[i] < A[i - 1])\n\t\t\tinc = false;\n\t\tif (A[i] > A[i - 1])\n\t\t\tdec = false;\n\t}\n\treturn inc || dec;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i > 0)\n\t\t{\n\t\t\tif(A[i] < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\telse if(A[i] > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i,v; A)\n\t{\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\t\n\t\tif(v < A[i-1])\n\t\t\tis_increasing = false;\n\t\t\n\t\tif(v > A[i-1])\n\t\t\tis_decreasing = false;\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tint n = A.length;\n\tbool increasing = true;\n\tbool decreasing = true;\n\tfor (int i = 0; i < n - 1; i++) \n\t{\n\t\tif (A[i] > A[i + 1])\n\t\t\tincreasing = false;\n\t\tif (A[i] < A[i + 1])\n\t\t\tdecreasing = false;\n\t}\n\treturn increasing || decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\t\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn is_increasing || is_decreasing;\n}",
    "{\n\tbool is_increasing = true;\n\tbool is_decreasing = true;\n\tforeach(i, v; A)\n\t{\n\t\tif(i != 0)\n\t\t{\n\t\t\tif(v < A[i-1])\n\t\t\t{\n\t\t\t\tis_increasing = false;\n\t\t\t}\n\t\t\tif(v > A[i-1])\n\t\t\t{\n\t\t\t\tis_decreasing = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn is_increasing || is_decreasing;\n}"
  ]
}
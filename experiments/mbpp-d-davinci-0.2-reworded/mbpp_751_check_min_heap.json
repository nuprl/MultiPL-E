{
  "name": "mbpp_751_check_min_heap",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n\t\n*/\nbool check_min_heap(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = check_min_heap;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L]) == true);\n    assert(candidate([2L, 3L, 4L, 5L, 10L, 15L]) == true);\n    assert(candidate([2L, 10L, 4L, 5L, 3L, 15L]) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong len = arr.length;\n\tlong i = 0;\n\twhile(i < len)\n\t{\n\t\tlong left = 2*i + 1;\n\t\tlong right = 2*i + 2;\n\t\tif(left < len && arr[i] > arr[left])\n\t\t\treturn false;\n\t\tif(right < len && arr[i] > arr[right])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tauto n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint i = 0;\n\twhile(i < arr.length)\n\t{\n\t\tif(2*i + 1 < arr.length && arr[i] > arr[2*i + 1])\n\t\t\treturn false;\n\t\tif(2*i + 2 < arr.length && arr[i] > arr[2*i + 2])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tint i = (n - 2) / 2;\n\twhile (i >= 0) \n\t{\n\t\tif (2 * i + 1 < n && arr[i] > arr[2 * i + 1]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[i] > arr[2 * i + 2]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti--;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{ \n    long n = arr.length; \n    for (long i = 0; i <= (n - 2) / 2; i++) { \n        if (arr[2 * i + 1] < arr[i]) { \n            return false; \n        } \n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{ \n\tlong n = arr.length; \n\tfor (long i = 0; i <= (n - 2) / 2; i++) { \n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false; \n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false; \n\t} \n\treturn true; \n} ",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong len = arr.length;\n\tfor (long i = 0; i <= (len - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < len && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong[] heap = arr.dup;\n\tforeach(i; 1 .. heap.length)\n\t{\n\t\tlong left = 2*i;\n\t\tlong right = 2*i + 1;\n\t\tif(left < heap.length)\n\t\t{\n\t\t\tif(heap[i] > heap[left])\n\t\t\t\treturn false;\n\t\t}\n\t\tif(right < heap.length)\n\t\t{\n\t\t\tif(heap[i] > heap[right])\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor(int i = 0; i < n; i++) \n\t{\n\t\tif(2*i + 1 < n && arr[i] > arr[2*i + 1])\n\t\t\treturn false;\n\t\tif(2*i + 2 < n && arr[i] > arr[2*i + 2])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif(arr.length == 0)\n\t\treturn true;\n\t\n\tlong left_child_index = 0;\n\tlong right_child_index = 0;\n\t\n\tfor(long i = 0; i < arr.length; i++)\n\t{\n\t\tleft_child_index = 2*i + 1;\n\t\tright_child_index = 2*i + 2;\n\t\t\n\t\tif(left_child_index < arr.length && arr[i] > arr[left_child_index])\n\t\t\treturn false;\n\t\t\n\t\tif(right_child_index < arr.length && arr[i] > arr[right_child_index])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tbool result = true;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tif(2*i + 1 < arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 1])\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(2*i + 2 < arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 2])\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{ \n    long n = arr.length; \n    for (long i = 0; i <= (n - 2) / 2; i++) { \n        if (arr[2 * i + 1] < arr[i]) { \n            return false; \n        } \n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{ \n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{ \n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false; \n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false; \n\t} \n\treturn true; \n} ",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile(i < n)\n\t{\n\t\tif(2*i+1 < n)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i+1])\n\t\t\t\treturn false;\n\t\t}\n\t\tif(2*i+2 < n)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i+2])\n\t\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tif(arr.length == 0)\n\t\treturn true;\n\t\n\tlong left, right;\n\tforeach(i; 1..arr.length)\n\t{\n\t\tleft = 2*i;\n\t\tright = 2*i + 1;\n\t\t\n\t\tif(left < arr.length && arr[left] < arr[i])\n\t\t\treturn false;\n\t\tif(right < arr.length && arr[right] < arr[i])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(2*i + 1 < n && arr[i] > arr[2*i + 1])\n\t\t\treturn false;\n\t\tif(2*i + 2 < n && arr[i] > arr[2*i + 2])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tlong last_parent = (arr.length - 2) / 2;\n\tfor (long i = 0; i <= last_parent; i++) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\t\n\t\tif (left < arr.length && arr[i] > arr[left])\n\t\t\treturn false;\n\t\t\n\t\tif (right < arr.length && arr[i] > arr[right])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) return true;\n\t\n\tlong left = 0;\n\tlong right = 0;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tleft = 2 * i + 1;\n\t\tright = 2 * i + 2;\n\t\t\n\t\tif (left < arr.length && arr[i] > arr[left]) return false;\n\t\tif (right < arr.length && arr[i] > arr[right]) return false;\n\t}\n\t\n\treturn true;\n}",
    "{ \n    long n = arr.length; \n    for (long i = 0; i <= (n - 2) / 2; i++) { \n        if (arr[2 * i + 1] < arr[i]) { \n            return false; \n        } \n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tint i = 0;\n\twhile (i <= (n - 2) / 2) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{ \n\tlong n = arr.length; \n\tfor (long i = 0; i <= (n - 2) / 2; i++) { \n\t\tif (arr[2 * i + 1] < arr[i]) { \n\t\t\treturn false; \n\t\t} \n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n\t\t\treturn false; \n\t\t} \n\t} \n\treturn true; \n} ",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif (left < n && arr[left] < arr[i])\n\t\t\treturn false;\n\t\tif (right < n && arr[right] < arr[i])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\t// Check if the array is empty\n\tif (arr.length == 0)\n\t\treturn true;\n\t\t\n\t// Check if the array is a min heap\n\tfor (size_t i = 0; i < arr.length; i++)\n\t{\n\t\t// Check if the left child is greater than the parent\n\t\tif (2 * i + 1 < arr.length && arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\t// Check if the right child is greater than the parent\n\t\tif (2 * i + 2 < arr.length && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i <= (n - 2) / 2) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tbool result = true;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(2*i + 1 < arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 1])\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(2*i + 2 < arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 2])\n\t\t\t{\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif (left < n && arr[i] > arr[left]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (right < n && arr[i] > arr[right]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor(long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif(arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{ \n    // Start from root and go till the last internal \n    // node \n    for (int i = 0; i <= (arr.length - 2) / 2; i++) { \n        // If left child is greater, return false \n        if (arr[2 * i + 1] > arr[i]) { \n            return false; \n        } \n  \n        // If right child is greater, return false \n        if (2 * i + 2 < arr.length && arr[2 * i + 2] > arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif (left < n && arr[left] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (right < n && arr[right] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tlong left_child_index = 0;\n\tlong right_child_index = 0;\n\tlong parent_index = 0;\n\t\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tleft_child_index = 2 * i + 1;\n\t\tright_child_index = 2 * i + 2;\n\t\tparent_index = (i - 1) / 2;\n\t\t\n\t\tif (left_child_index < arr.length && arr[left_child_index] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\tif (right_child_index < arr.length && arr[right_child_index] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\tif (parent_index >= 0 && arr[parent_index] > arr[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif (left < n && arr[left] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (right < n && arr[right] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t++i;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\t\n\tfor(int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif(arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tlong last_parent = (arr.length - 2) / 2;\n\t\n\tfor (long i = 0; i <= last_parent; i++) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\t\n\t\tif (arr[i] > arr[left] || (right < arr.length && arr[i] > arr[right]))\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tfor (long i = 0; i < arr.length / 2; i++) \n\t{\n\t\tif (2 * i + 1 < arr.length && arr[i] > arr[2 * i + 1])\n\t\t\treturn false;\n\t\tif (2 * i + 2 < arr.length && arr[i] > arr[2 * i + 2])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) return true;\n\t\n\tlong left_child_index = 0;\n\tlong right_child_index = 0;\n\t\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tleft_child_index = 2 * i + 1;\n\t\tright_child_index = 2 * i + 2;\n\t\t\n\t\tif (left_child_index < arr.length && arr[left_child_index] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\tif (right_child_index < arr.length && arr[right_child_index] < arr[i])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tlong last_parent_index = arr.length / 2 - 1;\n\t\n\tfor (long i = 0; i <= last_parent_index; i++)\n\t{\n\t\tlong left_child_index = 2 * i + 1;\n\t\tlong right_child_index = 2 * i + 2;\n\t\t\n\t\tif (left_child_index < arr.length && arr[i] > arr[left_child_index])\n\t\t\treturn false;\n\t\t\n\t\tif (right_child_index < arr.length && arr[i] > arr[right_child_index])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) return true;\n\t\n\tlong[] left_child = new long[arr.length];\n\tlong[] right_child = new long[arr.length];\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tleft_child[i] = 2*i + 1;\n\t\tright_child[i] = 2*i + 2;\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif (left_child[i] < arr.length && arr[i] > arr[left_child[i]])\n\t\t\treturn false;\n\t\tif (right_child[i] < arr.length && arr[i] > arr[right_child[i]])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{ \n\tlong n = arr.length; \n\tfor (long i = 0; i <= (n - 2) / 2; i++) { \n\t\tif (arr[2 * i + 1] < arr[i]) { \n\t\t\treturn false; \n\t\t} \n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n\t\t\treturn false; \n\t\t} \n\t} \n\treturn true; \n} ",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong last_parent = arr.length / 2 - 1;\n\t\n\tfor (long i = 0; i <= last_parent; i++) \n\t{\n\t\tlong left_child = 2 * i + 1;\n\t\tlong right_child = 2 * i + 2;\n\t\t\n\t\tif (left_child < arr.length && arr[i] > arr[left_child]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (right_child < arr.length && arr[i] > arr[right_child]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) return true;\n\t\n\tforeach (i; 1 .. arr.length) \n\t{\n\t\tif (i * 2 < arr.length && arr[i] > arr[i * 2]) return false;\n\t\tif (i * 2 + 1 < arr.length && arr[i] > arr[i * 2 + 1]) return false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) return true;\n\t\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tif (2*i + 1 < arr.length && arr[i] > arr[2*i + 1]) return false;\n\t\tif (2*i + 2 < arr.length && arr[i] > arr[2*i + 2]) return false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tauto n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tif(arr.length == 0)\n\t\treturn true;\n\t\n\tlong[] left_child = arr[0 .. arr.length/2];\n\tlong[] right_child = arr[arr.length/2 .. arr.length];\n\t\n\tif(left_child.length > 0)\n\t{\n\t\tif(left_child[0] < arr[0])\n\t\t\treturn false;\n\t\tif(!check_min_heap(left_child))\n\t\t\treturn false;\n\t}\n\t\n\tif(right_child.length > 0)\n\t{\n\t\tif(right_child[0] < arr[0])\n\t\t\treturn false;\n\t\tif(!check_min_heap(right_child))\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong len = arr.length;\n\tlong i = 0;\n\twhile(i < len)\n\t{\n\t\tif(2*i + 1 < len)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 1])\n\t\t\t\treturn false;\n\t\t}\n\t\tif(2*i + 2 < len)\n\t\t{\n\t\t\tif(arr[i] > arr[2*i + 2])\n\t\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{ \n    long n = arr.length; \n    for (long i = 0; i <= (n - 2) / 2; i++) { \n        if (arr[2 * i + 1] < arr[i]) { \n            return false; \n        } \n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tfor (long i = 0; i < arr.length / 2; i++)\n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\t\n\t\tif (left < arr.length && arr[left] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\tif (right < arr.length && arr[right] < arr[i])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong[] heap = arr.dup;\n\theap.sort;\n\treturn heap == arr;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\t\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{ \n    long n = arr.length; \n    for (long i = 0; i <= (n - 2) / 2; i++) { \n        if (arr[2 * i + 1] < arr[i]) { \n            return false; \n        } \n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) { \n            return false; \n        } \n    } \n    return true; \n} ",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (2 * i + 1 < arr.length && arr[i] > arr[2 * i + 1])\n\t\t\treturn false;\n\t\t\n\t\tif (2 * i + 2 < arr.length && arr[i] > arr[2 * i + 2])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor(long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif(arr[2 * i + 1] < arr[i])\n\t\t\treturn false;\n\t\t\n\t\tif(2 * i + 2 < n && arr[2 * i + 2] < arr[i])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(2*i + 1 < n && arr[i] > arr[2*i + 1])\n\t\t\treturn false;\n\t\tif(2*i + 2 < n && arr[i] > arr[2*i + 2])\n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tlong i = 0;\n\twhile(i < n) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif(left < n && arr[left] < arr[i])\n\t\t\treturn false;\n\t\tif(right < n && arr[right] < arr[i])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong last_parent = (arr.length - 2) / 2;\n\t\n\tfor (long i = 0; i <= last_parent; i++) \n\t{\n\t\tlong left_child = 2 * i + 1;\n\t\tlong right_child = 2 * i + 2;\n\t\t\n\t\tif (arr[i] > arr[left_child] || (right_child < arr.length && arr[i] > arr[right_child])) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong left, right;\n\tforeach(i; 1..arr.length) \n\t{\n\t\tleft = 2 * i;\n\t\tright = 2 * i + 1;\n\t\tif(left < arr.length && arr[i] > arr[left]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif(right < arr.length && arr[i] > arr[right]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong last_index = arr.length - 1;\n\tlong last_parent_index = (last_index - 1) / 2;\n\t\n\tfor (long i = 0; i <= last_parent_index; i++) \n\t{\n\t\tlong left_child_index = 2 * i + 1;\n\t\tlong right_child_index = 2 * i + 2;\n\t\t\n\t\tif (left_child_index <= last_index && arr[i] > arr[left_child_index]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (right_child_index <= last_index && arr[i] > arr[right_child_index]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong last_parent = arr.length / 2 - 1;\n\t\n\tfor (long i = 0; i <= last_parent; i++) \n\t{\n\t\tlong left_child = 2 * i + 1;\n\t\tlong right_child = 2 * i + 2;\n\t\t\n\t\tif (left_child < arr.length && arr[i] > arr[left_child]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (right_child < arr.length && arr[i] > arr[right_child]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}",
    "{\n\tlong len = arr.length;\n\tlong i = 0;\n\twhile (i < len) \n\t{\n\t\tlong left = 2 * i + 1;\n\t\tlong right = 2 * i + 2;\n\t\tif (left < len && arr[left] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (right < len && arr[right] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tauto n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif(arr.length == 0)\n\t\treturn true;\n\t\n\tlong last_parent = arr.length / 2 - 1;\n\t\n\tfor(long i = 0; i <= last_parent; i++)\n\t{\n\t\tlong left_child = 2 * i + 1;\n\t\tlong right_child = 2 * i + 2;\n\t\t\n\t\tif(arr[i] > arr[left_child])\n\t\t\treturn false;\n\t\t\n\t\tif(right_child < arr.length && arr[i] > arr[right_child])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tif (arr.length == 0)\n\t\treturn true;\n\t\n\tlong left_child_index = 0;\n\tlong right_child_index = 0;\n\t\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tleft_child_index = 2 * i + 1;\n\t\tright_child_index = 2 * i + 2;\n\t\t\n\t\tif (left_child_index < arr.length && arr[i] > arr[left_child_index])\n\t\t\treturn false;\n\t\t\n\t\tif (right_child_index < arr.length && arr[i] > arr[right_child_index])\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}"
  ]
}
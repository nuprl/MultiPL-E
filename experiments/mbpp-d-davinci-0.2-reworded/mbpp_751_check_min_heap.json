{
  "name": "mbpp_751_check_min_heap",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n\t\n*/\nbool check_min_heap(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = check_min_heap;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L]) == true);\n    assert(candidate([2L, 3L, 4L, 5L, 10L, 15L]) == true);\n    assert(candidate([2L, 10L, 4L, 5L, 3L, 15L]) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong len = arr.length;\n\tlong i = 0;\n\twhile(i < len)\n\t{\n\t\tlong left = 2*i + 1;\n\t\tlong right = 2*i + 2;\n\t\tif(left < len && arr[i] > arr[left])\n\t\t\treturn false;\n\t\tif(right < len && arr[i] > arr[right])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tauto n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint i = 0;\n\twhile(i < arr.length)\n\t{\n\t\tif(2*i + 1 < arr.length && arr[i] > arr[2*i + 1])\n\t\t\treturn false;\n\t\tif(2*i + 2 < arr.length && arr[i] > arr[2*i + 2])\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tlong n = arr.length;\n\tfor (long i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tfor (int i = 0; i <= (n - 2) / 2; i++) \n\t{\n\t\tif (arr[2 * i + 1] < arr[i]) \n\t\t\treturn false;\n\t\tif (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}",
    "{\n\tint n = arr.length;\n\tint i = (n - 2) / 2;\n\twhile (i >= 0) \n\t{\n\t\tif (2 * i + 1 < n && arr[i] > arr[2 * i + 1]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * i + 2 < n && arr[i] > arr[2 * i + 2]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti--;\n\t}\n\treturn true;\n}"
  ]
}
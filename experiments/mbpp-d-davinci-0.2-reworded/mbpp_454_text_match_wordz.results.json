{
  "name": "mbpp_454_text_match_wordz",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpgehxg6_v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgehxg6_v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"/\\w*z\\w*/\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmp54ux63dz.d(10): Error: undefined escape sequence \\w\n/tmp/tmp54ux63dz.d(10): Error: undefined escape sequence \\w\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp54ux63dz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpgehxg6_v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgehxg6_v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\tauto m = match(text, \"\\\\w*z\\\\w*\");\n\treturn m.hit;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmpilva1txx.d(10): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpilva1txx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") ? true : false;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmpdrfcshjf.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdrfcshjf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\n/*\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmp9u2has_p.d(12): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9u2has_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\n/*\n\tWrite a function that matches a word containing 'z' or that ends with 'x'.\n\t\n*/\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmpp7wdyo90.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7wdyo90.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmp1jbxqzbr.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1jbxqzbr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"/\\\\w*z\\\\w*/\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "/tmp/tmpbky1kg39.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbky1kg39.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpacn65cz4.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacn65cz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpx567vo2v.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx567vo2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpcsi49tsj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsi49tsj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}\nunittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517670,
      "stdout": "",
      "stderr": "/tmp/tmpypsg_lgk.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypsg_lgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_135_hexagonal_num",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2*n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn (n * (2 * n - 1));\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2*n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n*(2*n-1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth hexagonal number.\n\t\n*/\nlong hexagonal_num(long n) \n{\n\treturn n * (2 * n - 1);\n}\nunittest\n{\n    alias candidate = hexagonal_num;\n\n    assert(candidate(10L) == 190L);\n    assert(candidate(5L) == 45L);\n    assert(candidate(7L) == 91L);\n}\nvoid main(){}",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
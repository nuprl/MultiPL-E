{
  "name": "mbpp_799_left_rotate",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\n\t\n*/\nlong left_rotate(long n, long d) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_799_left_rotate.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = left_rotate;\n\n    assert(candidate(16L, 2L) == 64L);\n    assert(candidate(10L, 2L) == 40L);\n    assert(candidate(99L, 3L) == 792L);\n    assert(candidate(99L, 3L) == 792L);\n    assert(candidate(1L, 3L) == 8L);\n    assert(candidate(5L, 3L) == 40L);\n    assert(candidate(29L, 3L) == 232L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}",
    "{\n\treturn (n << d) | (n >> (32 - d));\n}"
  ]
}
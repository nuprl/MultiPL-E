{
  "name": "mbpp_83_get_Char",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n\t\n*/\nstring get_Char(string strr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = get_Char;\n\n    assert(candidate(\"abc\") == \"f\");\n    assert(candidate(\"gfg\") == \"t\");\n    assert(candidate(\"ab\") == \"c\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{ \n    int sum = 0; \n    foreach(c; strr) \n        sum += c; \n    return to!string(sum % 26 + 'A'); \n} ",
    "{\n\tint sum = 0;\n\tforeach(c; strr) \n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{ \n    int sum = 0; \n    foreach(c; strr) \n    { \n        sum += c; \n    } \n  \n    return to!string(sum % 26 + 'a'); \n} ",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n    int sum = 0;\n    foreach (c; strr) \n    {\n        sum += c;\n    }\n    return chr(sum % 26 + 'a');\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{ \n    int sum = 0; \n    foreach(c; strr) \n        sum += c; \n    return to!string(sum % 26 + 'A'); \n} ",
    "{\n\tint sum = 0;\n\tforeach(c; strr) \n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(char c; strr) {\n\t\tsum += c;\n\t}\n\tint mod = sum % 26;\n\treturn cast(char) mod;\n}",
    "{\n\tint sum = 0;\n\tforeach(char c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn to!string(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(char c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn cast(char)(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(char c; strr)\n\t{\n\t\tsum += c;\n\t}\n\t\n\treturn cast(char)(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn cast(char)(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(ch; strr)\n\t{\n\t\tsum += ch;\n\t}\n\tsum = sum % 26;\n\treturn chr(sum + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(immutable char; strr)\n\t{\n\t\tsum += char;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr) \n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26);\n}",
    "{ \n    int sum = 0; \n    foreach(c; strr) \n    { \n        sum += c; \n    } \n    return chr(sum % 26 + 'A'); \n} ",
    "{ \n    int sum = 0; \n    foreach (c; strr) \n        sum += c; \n    return chr(sum % 26 + 'A'); \n} "
  ]
}
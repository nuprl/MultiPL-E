{
  "name": "mbpp_628_replace_spaces",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tforeach(c; string)\n\t\tif(c == ' ')\n\t\t\tspace_count++;\n\t\n\tstring new_string = new string[string.length + space_count * 2];\n\tint new_string_index = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tnew_string[new_string_index++] = '%';\n\t\t\tnew_string[new_string_index++] = '2';\n\t\t\tnew_string[new_string_index++] = '0';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_string[new_string_index++] = c;\n\t\t}\n\t}\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpsri2gguc.d(14): Error: `string` is used as a type\n/tmp/tmpsri2gguc.d(14): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsri2gguc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(i, c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpxy82hw2i.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxy82hw2i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint length = string.length;\n\tint space_count = 0;\n\t\n\tforeach(c; string)\n\t\tif(c == ' ')\n\t\t\tspace_count++;\n\t\n\tint new_length = length + space_count * 2;\n\tstring[new_length] = '\\0';\n\t\n\tfor(int i = length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length--;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp5z8l02d7.d(9): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmp5z8l02d7.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmp5z8l02d7.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmp5z8l02d7.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmp5z8l02d7.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmp5z8l02d7.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5z8l02d7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++) {\n\t\tif (string[i] == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpwppcytog.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwppcytog.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpe6kjbhow.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe6kjbhow.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length;\n\tint old_length = string.length;\n\tint i;\n\t\n\tfor (i = 0; i < old_length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = old_length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor (i = old_length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpc3mg4086.d(11): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpc3mg4086.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpc3mg4086.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpc3mg4086.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpc3mg4086.d(32): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpc3mg4086.d(37): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3mg4086.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint length = string.length;\n\t\n\tfor(int i = 0; i < length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tint new_length = length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor(int i = length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpz8b9p7t2.d(10): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpz8b9p7t2.d(22): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpz8b9p7t2.d(28): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpz8b9p7t2.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpz8b9p7t2.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpz8b9p7t2.d(35): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8b9p7t2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpduiwq9a1.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduiwq9a1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpklj9heex.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklj9heex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpcofs6ez2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcofs6ez2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length;\n\tint i;\n\t\n\tfor (i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = string.length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor (i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpbctm6ls8.d(21): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpbctm6ls8.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpbctm6ls8.d(25): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpbctm6ls8.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpbctm6ls8.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpbctm6ls8.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpbctm6ls8.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbctm6ls8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpklj9heex.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklj9heex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) {\n\t\tif (c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp695u1i6f.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp695u1i6f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length = 0;\n\t\n\tfor(int i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = string.length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor(int i = string.length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpzlghhrga.d(20): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpzlghhrga.d(22): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpzlghhrga.d(24): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpzlghhrga.d(28): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpzlghhrga.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpzlghhrga.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpzlghhrga.d(35): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlghhrga.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult += \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpk2bqp2jo.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk2bqp2jo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpcofs6ez2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcofs6ez2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpduiwq9a1.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduiwq9a1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbnuxa4qn.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnuxa4qn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tresult += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmppocs3krn.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppocs3krn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring new_string = \"\";\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tnew_string += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_string += string[i];\n\t\t}\n\t}\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp53pejubd.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp53pejubd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length = 0;\n\tint i = 0;\n\t\n\tfor(i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = string.length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor(i = string.length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpe4gu3qe2.d(21): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpe4gu3qe2.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpe4gu3qe2.d(25): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpe4gu3qe2.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpe4gu3qe2.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpe4gu3qe2.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpe4gu3qe2.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe4gu3qe2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpuq3xsbq8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuq3xsbq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpcofs6ez2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcofs6ez2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length--;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpztrjah41.d(17): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpztrjah41.d(18): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpztrjah41.d(19): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpztrjah41.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpztrjah41.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpztrjah41.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpztrjah41.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpztrjah41.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp3uab56_e.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3uab56_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\t\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length--;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpid4sx341.d(18): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpid4sx341.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpid4sx341.d(21): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpid4sx341.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpid4sx341.d(26): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpid4sx341.d(27): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpid4sx341.d(32): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpid4sx341.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(ch; string) {\n\t\tif(ch == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp9i08lh0y.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i08lh0y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpgdihwpm2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgdihwpm2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpva2t8ozd.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpva2t8ozd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp3uab56_e.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3uab56_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpdxjigkl0.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxjigkl0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t\tspace_count++;\n\t}\n\t\n\tint new_length = string.length + space_count * 2;\n\tstring new_string = new char[new_length];\n\t\n\tint j = 0;\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tnew_string[j] = '%';\n\t\t\tnew_string[j + 1] = '2';\n\t\t\tnew_string[j + 2] = '0';\n\t\t\tj += 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_string[j] = string[i];\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp6runufub.d(16): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmp6runufub.d(17): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6runufub.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(ch; string)\n\t{\n\t\tif(ch == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpq_oiihk4.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_oiihk4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length = 0;\n\tint i = 0;\n\t\n\tfor (i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = string.length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor (i = string.length - 1; i >= 0; i--)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmph2i19hbl.d(21): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmph2i19hbl.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmph2i19hbl.d(25): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmph2i19hbl.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmph2i19hbl.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmph2i19hbl.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmph2i19hbl.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2i19hbl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp5fny2s1w.d(17): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmp5fny2s1w.d(18): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmp5fny2s1w.d(19): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmp5fny2s1w.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmp5fny2s1w.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmp5fny2s1w.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmp5fny2s1w.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5fny2s1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpe6kjbhow.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe6kjbhow.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpu6fax1kk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6fax1kk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmprzavpmf4.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprzavpmf4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint spaces = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tspaces++;\n\t\t}\n\t}\n\t\n\tstring new_string = new string[string.length + spaces * 2];\n\tint index = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tnew_string[index++] = '%';\n\t\t\tnew_string[index++] = '2';\n\t\t\tnew_string[index++] = '0';\n\t\t}\n\t\telse \n\t\t{\n\t\t\tnew_string[index++] = c;\n\t\t}\n\t}\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpcqtedu1k.d(18): Error: `string` is used as a type\n/tmp/tmpcqtedu1k.d(18): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqtedu1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring new_string = \"\";\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tnew_string += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_string += string[i];\n\t\t}\n\t}\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp53pejubd.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp53pejubd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(ch; string)\n\t{\n\t\tif (ch == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= ch;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbrgz760k.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbrgz760k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t\tresult += \"%20\";\n\t\telse\n\t\t\tresult += string[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmppy71wjp1.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppy71wjp1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint spaces = 0;\n\tint length = string.length;\n\t\n\tforeach(c; string)\n\t\tif(c == ' ')\n\t\t\tspaces++;\n\t\n\tstring new_string = new char[length + spaces * 2];\n\t\n\tint i = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tnew_string[i++] = '%';\n\t\t\tnew_string[i++] = '2';\n\t\t\tnew_string[i++] = '0';\n\t\t}\n\t\telse\n\t\t\tnew_string[i++] = c;\n\t}\n\t\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpl7ixd8n3.d(10): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpl7ixd8n3.d(16): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7ixd8n3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmptcanzprj.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptcanzprj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp5fny2s1w.d(17): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmp5fny2s1w.d(18): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmp5fny2s1w.d(19): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmp5fny2s1w.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmp5fny2s1w.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmp5fny2s1w.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmp5fny2s1w.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5fny2s1w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpajckavti.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajckavti.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpuq3xsbq8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuq3xsbq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpf_5637m9.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_5637m9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult += \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpfaejang7.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaejang7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\tfor (int i = string.length - 1; i >= 0; i--)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length--;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp538aqqpb.d(17): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmp538aqqpb.d(18): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmp538aqqpb.d(19): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmp538aqqpb.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmp538aqqpb.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmp538aqqpb.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmp538aqqpb.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp538aqqpb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpajckavti.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajckavti.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(ch; string) \n\t{\n\t\tif(ch == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpo08we1pi.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo08we1pi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp3txepucw.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3txepucw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpuq3xsbq8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuq3xsbq8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplal2e7f3.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplal2e7f3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpklj9heex.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpklj9heex.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpgdihwpm2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgdihwpm2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tresult += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpzh5t4fx4.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh5t4fx4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint length = string.length;\n\t\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tint new_length = length + space_count * 2;\n\tstring[new_length] = '\\0';\n\t\n\tfor(int i = length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpsomhbmj_.d(10): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpsomhbmj_.d(21): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpsomhbmj_.d(27): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpsomhbmj_.d(28): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpsomhbmj_.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpsomhbmj_.d(34): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsomhbmj_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult += \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpfaejang7.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaejang7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint length = string.length;\n\t\n\t// Count the number of spaces in the string\n\tfor (int i = 0; i < length; i++) {\n\t\tif (string[i] == ' ') {\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\t// Calculate the new length of the string\n\tint new_length = length + space_count * 2;\n\t\n\t// Create a new string with the new length\n\tstring new_string = new char[new_length];\n\t\n\t// Copy the characters from the old string to the new string\n\tfor (int i = 0, j = 0; i < length; i++, j++) {\n\t\tif (string[i] == ' ') {\n\t\t\tnew_string[j] = '%';\n\t\t\tnew_string[j + 1] = '2';\n\t\t\tnew_string[j + 2] = '0';\n\t\t\tj += 2;\n\t\t} else {\n\t\t\tnew_string[j] = string[i];\n\t\t}\n\t}\n\t\n\treturn new_string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpty24zt1h.d(10): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpty24zt1h.d(23): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpty24zt1h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint spaces = 0;\n\tint length = string.length;\n\t\n\tfor (int i = 0; i < length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tspaces++;\n\t\t}\n\t}\n\t\n\tint new_length = length + spaces * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor (int i = length - 1; i >= 0; i--)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length--;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpnk05eipy.d(10): Error: cannot implicitly convert expression `string.length` of type `ulong` to `int`\n/tmp/tmpnk05eipy.d(22): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpnk05eipy.d(28): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpnk05eipy.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpnk05eipy.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpnk05eipy.d(35): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnk05eipy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length;\n\tint i = 0;\n\t\n\twhile (string[i] != '\\0') \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tnew_length = i + space_count * 2;\n\tstring[new_length] = '\\0';\n\t\n\tfor (int j = i - 1; j >= 0; j--) \n\t{\n\t\tif (string[j] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[j];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpvz23u1tu.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpvz23u1tu.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpvz23u1tu.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpvz23u1tu.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpvz23u1tu.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvz23u1tu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpss60w3ol.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss60w3ol.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t\tresult += \"%20\";\n\t\telse\n\t\t\tresult += string[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpqq05xvo0.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqq05xvo0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tresult += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp918_vjvp.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp918_vjvp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach (c; string) \n\t{\n\t\tif (c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpwdz4j0eg.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwdz4j0eg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpyhkj3h42.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhkj3h42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp_k4xmueg.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_k4xmueg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbnuxa4qn.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbnuxa4qn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\tif (string[i] == ' ')\n\t\t{\n\t\t\tresult += \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpzh5t4fx4.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzh5t4fx4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif (c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpva2t8ozd.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpva2t8ozd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tint new_length;\n\tint i;\n\t\n\tfor(i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tnew_length = string.length + space_count * 2;\n\t\n\tstring[new_length] = '\\0';\n\t\n\tfor(i = string.length - 1; i >= 0; i--)\n\t{\n\t\tif(string[i] == ' ')\n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpcjr_8_uo.d(21): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpcjr_8_uo.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpcjr_8_uo.d(25): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpcjr_8_uo.d(29): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpcjr_8_uo.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpcjr_8_uo.d(31): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpcjr_8_uo.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcjr_8_uo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpajckavti.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajckavti.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\t\n\tforeach(char c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp8_byfjrj.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8_byfjrj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp78jgat8b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78jgat8b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmprzavpmf4.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprzavpmf4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint spaces = count(string.begin(), string.end(), ' ');\n\tstring.resize(string.size() + spaces * 2);\n\tint i = string.size() - 1;\n\tint j = i - spaces * 2;\n\twhile (i >= 0) {\n\t\tif (string[j] == ' ') {\n\t\t\tstring[i--] = '0';\n\t\t\tstring[i--] = '2';\n\t\t\tstring[i--] = '%';\n\t\t} else {\n\t\t\tstring[i--] = string[j];\n\t\t}\n\t\tj--;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpjid2sq6k.d(9): Error: undefined identifier `count`\n/tmp/tmpjid2sq6k.d(10): Error: no property `resize` for type `string`\n/tmp/tmpjid2sq6k.d(11): Error: no property `size` for type `string`\n/tmp/tmpjid2sq6k.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i--]`\n/tmp/tmpjid2sq6k.d(16): Error: cannot modify `immutable` expression `string[cast(ulong)i--]`\n/tmp/tmpjid2sq6k.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i--]`\n/tmp/tmpjid2sq6k.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i--]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjid2sq6k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmp43o8_8_8.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43o8_8_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmplqhqwkkk.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplqhqwkkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpdxjigkl0.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxjigkl0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpajckavti.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpajckavti.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= string[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpgdihwpm2.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgdihwpm2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif (c == ' ')\n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpm4bne6zs.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm4bne6zs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length = new_length - 3;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length = new_length - 1;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpfvt5cps7.d(17): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmpfvt5cps7.d(18): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmpfvt5cps7.d(19): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmpfvt5cps7.d(23): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmpfvt5cps7.d(24): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmpfvt5cps7.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmpfvt5cps7.d(30): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvt5cps7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c == ' ')\n\t\t\tresult ~= \"%20\";\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1665517249,
      "stdout": "",
      "stderr": "/tmp/tmpiu73utig.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu73utig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c == ' ') \n\t\t{\n\t\t\tresult ~= \"%20\";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpbmq5g68b.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmq5g68b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tstring result = \"\";\n\tforeach(char c; string) {\n\t\tif(c == ' ') {\n\t\t\tresult ~= \"%20\";\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmpdxjigkl0.d(9): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxjigkl0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to replace all spaces in the given string with '%20'.\n\t\n*/\nstring replace_spaces(string string) \n{\n\tint space_count = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tspace_count++;\n\t\t}\n\t}\n\t\n\tint new_length = string.length + space_count * 2;\n\tstring[new_length] = '\\0';\n\t\n\tfor (int i = string.length - 1; i >= 0; i--) \n\t{\n\t\tif (string[i] == ' ') \n\t\t{\n\t\t\tstring[new_length - 1] = '0';\n\t\t\tstring[new_length - 2] = '2';\n\t\t\tstring[new_length - 3] = '%';\n\t\t\tnew_length -= 3;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstring[new_length - 1] = string[i];\n\t\t\tnew_length -= 1;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = replace_spaces;\n\n    assert(candidate(\"My Name is Dawood\") == \"My%20Name%20is%20Dawood\");\n    assert(candidate(\"I am a Programmer\") == \"I%20am%20a%20Programmer\");\n    assert(candidate(\"I love Coding\") == \"I%20love%20Coding\");\n}\nvoid main(){}",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "/tmp/tmp0vb5hb9v.d(18): Error: cannot implicitly convert expression `string.length + cast(ulong)(space_count * 2)` of type `ulong` to `int`\n/tmp/tmp0vb5hb9v.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)new_length]`\n/tmp/tmp0vb5hb9v.d(21): Error: cannot implicitly convert expression `string.length - 1LU` of type `ulong` to `int`\n/tmp/tmp0vb5hb9v.d(25): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\n/tmp/tmp0vb5hb9v.d(26): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 2)]`\n/tmp/tmp0vb5hb9v.d(27): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 3)]`\n/tmp/tmp0vb5hb9v.d(32): Error: cannot modify `immutable` expression `string[cast(ulong)(new_length - 1)]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vb5hb9v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
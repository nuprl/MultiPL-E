{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max + a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzzm5lbe9.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpzzm5lbe9.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzzm5lbe9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = 0; \n    long max_ending_here = 0; \n  \n    for (long i = 0; i < size; i++) \n    { \n        max_ending_here = max_ending_here + a[i]; \n        if (max_ending_here < 0) \n            max_ending_here = 0; \n        if (max_so_far < max_ending_here) \n            max_so_far = max_ending_here; \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\tlong i; \n\tfor (i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max + a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "/tmp/tmp75yj8jce.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp75yj8jce.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp75yj8jce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\tlong i; \n\tfor (i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = 0; \n    long max_ending_here = 0; \n    long i; \n    for (i = 0; i < size; i++) \n    { \n        max_ending_here = max_ending_here + a[i]; \n        if (max_ending_here < 0) \n            max_ending_here = 0; \n        if (max_so_far < max_ending_here) \n            max_so_far = max_ending_here; \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\tlong i; \n\tfor (i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\t\n\tfor (long i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max + a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "/tmp/tmp75yj8jce.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp75yj8jce.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp75yj8jce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0, max_ending_here = 0; \n\tfor (long i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = long.min; \n    long curr_max = 0; \n      \n    foreach (i; 0 .. size) \n    { \n        curr_max = max(a[i], curr_max + a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "/tmp/tmp9f72j5ad.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp9f72j5ad.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f72j5ad.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max + a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "/tmp/tmp75yj8jce.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp75yj8jce.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp75yj8jce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max + a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpzzm5lbe9.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpzzm5lbe9.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzzm5lbe9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\tlong start = 0; \n\tlong end = 0; \n\tlong s = 0; \n\t\n\tfor (long i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\t\n\t\tif (max_so_far < max_ending_here) \n\t\t{ \n\t\t\tmax_so_far = max_ending_here; \n\t\t\tstart = s; \n\t\t\tend = i; \n\t\t} \n\t\t\n\t\tif (max_ending_here < 0) \n\t\t{ \n\t\t\tmax_ending_here = 0; \n\t\t\ts = i + 1; \n\t\t} \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\t\n\tfor (long i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = 0; \n\tlong max_ending_here = 0; \n\t\n\tfor (long i = 0; i < size; i++) \n\t{ \n\t\tmax_ending_here = max_ending_here + a[i]; \n\t\tif (max_ending_here < 0) \n\t\t\tmax_ending_here = 0; \n\t\tif (max_so_far < max_ending_here) \n\t\t\tmax_so_far = max_ending_here; \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpb55_ua9o.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb55_ua9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max + a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1666123177,
      "stdout": "",
      "stderr": "/tmp/tmp75yj8jce.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp75yj8jce.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp75yj8jce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n\tlong max_so_far = a[0]; \n\tlong curr_max = a[0]; \n\t\n\tfor (long i = 1; i < size; i++) \n\t{ \n\t\tcurr_max = max(a[i], curr_max+a[i]); \n\t\tmax_so_far = max(max_so_far, curr_max); \n\t} \n\treturn max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp7avys1_e.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7avys1_e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7avys1_e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of the largest contiguous subarray in the given array.\n\t\n*/\nlong max_sub_array_sum(long[] a, long size) \n{ \n    long max_so_far = a[0]; \n    long curr_max = a[0]; \n  \n    for (long i = 1; i < size; i++) \n    { \n        curr_max = max(a[i], curr_max+a[i]); \n        max_so_far = max(max_so_far, curr_max); \n    } \n    return max_so_far; \n} \nunittest\n{\n    alias candidate = max_sub_array_sum;\n\n    assert(candidate([-2L, -3L, 4L, -1L, -2L, 1L, 5L, -3L], 8L) == 7L);\n    assert(candidate([-3L, -4L, 5L, -2L, -3L, 2L, 6L, -4L], 8L) == 8L);\n    assert(candidate([-4L, -5L, 6L, -3L, -4L, 3L, 7L, -5L], 8L) == 10L);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp0a0nr89s.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp0a0nr89s.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0a0nr89s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
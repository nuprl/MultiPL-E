{
  "name": "mbpp_230_replace_blank",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n\t\n*/\nstring replace_blank(string str1, string char) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_230_replace_blank.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = replace_blank;\n\n    assert(candidate(\"hello people\", \"@\") == \"hello@people\");\n    assert(candidate(\"python program language\", \"$\") == \"python$program$language\");\n    assert(candidate(\"blank space\", \"-\") == \"blank-space\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) \n\t{\n\t\tif (str1[i] == ' ') \n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tstr2 ~= char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] == ' ') \n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr1[i] = char;\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;\n}",
    "{\n\tstring str2 = \"\";\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tstr2 ~= char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr1[i] = char;\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tstr2 ~= char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tstr2 ~= char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length) \n\t{\n\t\tif(str1[i] == ' ') \n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] == ' ')\n\t\t{\n\t\t\tstr2 += char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c == ' ')\n\t\t{\n\t\t\tstr2 ~= char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] == ' ') \n\t\t{\n\t\t\tstr1[i] = char[0];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;\n}"
  ]
}
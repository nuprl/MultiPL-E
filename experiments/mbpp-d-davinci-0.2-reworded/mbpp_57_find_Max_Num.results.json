{
  "name": "mbpp_57_find_Max_Num",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmpxkajtt84.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxkajtt84.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr1 = arr.dup;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tauto len = arr.length;\n\tauto num = 0L;\n\tauto i = 0L;\n\tauto j = 0L;\n\tauto temp = 0L;\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tfor(j = i + 1; j < len; j++)\n\t\t{\n\t\t\tif(arr[i] < arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tnum = num * 10 + arr[i];\n\t}\n\t\n\treturn num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\t\n\tforeach(elem; arr)\n\t{\n\t\tmaxNum = max(maxNum, elem);\n\t}\n\t\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmp7kk5_25y.d(14): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7kk5_25y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t\ttemp[i] = arr[i];\n\t\n\tsort(temp);\n\t\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax_num += temp[i] * pow(10, temp.length - i - 1);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmpysj2lbtf.d(15): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpysj2lbtf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpycho1j60.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmpycho1j60.__unittest_L17_C1() [0x427daa]\n??:? void tmpycho1j60.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\t// sort the array in descending order\n\tarr_copy.sort!((a, b) => b - a);\n\t\n\tforeach(i, val; arr_copy)\n\t{\n\t\tmax_num += val * pow(10, i);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpvlrr28d5.d(14): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlrr28d5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n    long maxNum = 0;\n    foreach(i; arr)\n    {\n        maxNum = max(maxNum, i);\n    }\n    return maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpnr6zlddy.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnr6zlddy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpg_x0vdev.d(14): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg_x0vdev.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr2 = arr.dup;\n\t\n\tarr2.sort;\n\t\n\tforeach(i; arr2)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\t\n\treturn temp;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpnpfs8ov6.d(14): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnpfs8ov6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tarr_copy.sort;\n\t\n\tforeach(i; arr_copy)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\t\n\tmax = temp;\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp0spuwiux.d(14): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0spuwiux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] digits = new long[10];\n\tforeach(i; arr)\n\t{\n\t\tdigits[i]++;\n\t}\n\tforeach(i; 0 .. 10)\n\t{\n\t\tif(digits[i] != 0)\n\t\t{\n\t\t\tmax_num = max_num * 10 + i;\n\t\t\tdigits[i]--;\n\t\t}\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprcl7jx1h.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x4281ad]\n??:? void tmprcl7jx1h.__unittest_L26_C1() [0x427e6a]\n??:? void tmprcl7jx1h.__modtest() [0x427f2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c267]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430385]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430834]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430311]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0d1]\n??:? runModuleUnitTests [0x42c03d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428670]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmaxNum = maxNum * 10 + arr[i];\n\t}\n\t\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmaxNum = max(maxNum, i);\n\t}\n\t\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp9tqukfuo.d(14): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9tqukfuo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tarr_copy.reverse;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmppwaz03sz.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmppwaz03sz.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwaz03sz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tnum = i;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf1yht_ur.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmpf1yht_ur.__unittest_L21_C1() [0x427dae]\n??:? void tmpf1yht_ur.__modtest() [0x427e70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong len = arr.length;\n\t\n\tforeach(i; 0 .. len)\n\t{\n\t\tmax_num += arr[i] * pow(10, len - i - 1);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx9np12o5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42820d]\n??:? void tmpx9np12o5.__unittest_L20_C1() [0x427e12]\n??:? void tmpx9np12o5.__modtest() [0x427f8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c26b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430291]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430740]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43021d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0d5]\n??:? runModuleUnitTests [0x42c041]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\tforeach(i; arr)\n\t{\n\t\tmaxNum = max(maxNum, i);\n\t}\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp1pps0fxm.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pps0fxm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num += arr[i] * pow(10, i);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpginin3uo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281d5]\n??:? void tmpginin3uo.__unittest_L19_C1() [0x427e53]\n??:? void tmpginin3uo.__modtest() [0x427f54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c233]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430259]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430708]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b09d]\n??:? runModuleUnitTests [0x42c009]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428698]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnu8f79pq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpnu8f79pq.__unittest_L17_C1() [0x427db6]\n??:? void tmpnu8f79pq.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] digits = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tdigits[i] = arr[i];\n\t}\n\tdigits.sort!((a, b) => b - a);\n\tforeach(i; 0 .. digits.length)\n\t{\n\t\tmax = max * 10 + digits[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp2eu3o5ot.d(16): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2eu3o5ot.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax_num += arr[i] * pow(10, arr.length - i - 1);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp94v95uit.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x4281dd]\n??:? void tmp94v95uit.__unittest_L19_C1() [0x427e06]\n??:? void tmp94v95uit.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c23b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430261]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0a5]\n??:? runModuleUnitTests [0x42c011]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max_num * 10 + arr[i];\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i,v;arr)\n\t{\n\t\ttemp[i] = v;\n\t}\n\tsort(temp);\n\tforeach(i,v;temp)\n\t{\n\t\tmax = max * 10 + v;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpgb68srji.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgb68srji.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpjrf2io44.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrf2io44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{ \n\tlong max = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n} \nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi641348d.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280f5]\n??:? void tmpi641348d.__unittest_L17_C1() [0x427db6]\n??:? void tmpi641348d.__modtest() [0x427e78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c153]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430179]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430628]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430105]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afbd]\n??:? runModuleUnitTests [0x42bf29]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpjrf2io44.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrf2io44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmphatz091l.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphatz091l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0..arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\t\n\tsort(temp);\n\t\n\tforeach(i; 0..temp.length)\n\t{\n\t\tmaxNum = maxNum * 10 + temp[i];\n\t}\n\t\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp6il8vduf.d(17): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6il8vduf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe431ilub.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmpe431ilub.__unittest_L19_C1() [0x427daa]\n??:? void tmpe431ilub.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpnbmgqrxk.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnbmgqrxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] temp = arr;\n\ttemp.sort();\n\ttemp.reverse();\n\tforeach(i; temp)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpjm89bu82.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpjm89bu82.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjm89bu82.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmpxkajtt84.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxkajtt84.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp9i7982ry.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i7982ry.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong maxNum = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(i; temp)\n\t{\n\t\tmaxNum = maxNum*10 + i;\n\t}\n\treturn maxNum;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp_s6xi4hu.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_s6xi4hu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tint n = arr.length;\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = i + 1; j < n; j++)\n\t\t{\n\t\t\tif (arr[i] < arr[j])\n\t\t\t{\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpu8ntypka.d(11): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu8ntypka.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tstring str = \"\";\n\tforeach(i; arr_copy)\n\t{\n\t\tstr ~= i.to!string;\n\t}\n\treturn to!long(str);\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp2f4b46p_.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmp2f4b46p_.d(15): Error: no property `to` for type `long`\n/tmp/tmp2f4b46p_.d(17): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2f4b46p_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort();\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpaf2v9q6m.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaf2v9q6m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tfor(int i = 0; i < temp.length; i++)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp6_5fvili.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_5fvili.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max * 10 + arr[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4lx4uka1.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp4lx4uka1.__unittest_L17_C1() [0x427dae]\n??:? void tmp4lx4uka1.__modtest() [0x427e70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afde]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430171]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430620]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb5]\n??:? runModuleUnitTests [0x42bf21]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] digits = arr.dup;\n\tdigits.sort;\n\tdigits.reverse;\n\tforeach(digit; digits)\n\t{\n\t\tmax_num = max_num * 10 + digit;\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmprfqnep83.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmprfqnep83.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprfqnep83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] temp_arr = arr.dup;\n\ttemp_arr.sort;\n\ttemp_arr.reverse;\n\tforeach(long num; temp_arr)\n\t{\n\t\tmax_num = max_num * 10 + num;\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmp_c5exms0.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmp_c5exms0.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_c5exms0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tarr_copy.sort;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr_copy[i] * pow(10, arr.length - i - 1);\n\t\tmax += temp;\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmp7c4m1hf_.d(14): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7c4m1hf_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\t\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7ra31eju.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp7ra31eju.__unittest_L19_C1() [0x427daa]\n??:? void tmp7ra31eju.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] arr2 = arr.dup;\n\tarr2.sort;\n\tforeach(i; arr2)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpbr094c2m.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbr094c2m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr2 = arr.dup;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr[i];\n\t\tforeach(j; i + 1 .. arr.length)\n\t\t{\n\t\t\tif(arr[j] > temp)\n\t\t\t{\n\t\t\t\ttemp = arr[j];\n\t\t\t\tarr2[j] = arr[i];\n\t\t\t\tarr2[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tforeach(i; 0 .. arr2.length)\n\t{\n\t\tmax = max * 10 + arr2[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi3e_5dc4.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x4293d9]\n??:? void tmpi3e_5dc4.__unittest_L32_C1() [0x428116]\n??:? void tmpi3e_5dc4.__modtest() [0x42834c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x429062]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x429039]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4298f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\t// sort the array in descending order\n\tsort(arr, (a, b) => b - a);\n\t\n\t// convert array to string\n\tstring str = arr.join(\"\");\n\t\n\t// convert string to long\n\treturn to!long(str);\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmp89g3yvye.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmp89g3yvye.d(14): Error: no property `join` for type `long[]`\n/tmp/tmp89g3yvye.d(17): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89g3yvye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\tsort(arr_copy);\n\tforeach(i; arr_copy)\n\t{\n\t\ttemp = temp * 10 + i;\n\t}\n\tmax_num = temp;\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpj9opmz6d.d(13): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9opmz6d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr) \n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1aqjek1i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmp1aqjek1i.__unittest_L17_C1() [0x427daa]\n??:? void tmp1aqjek1i.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpjrf2io44.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrf2io44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\ttemp.reverse;\n\tforeach(i; temp)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmp4srvn8oe.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmp4srvn8oe.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4srvn8oe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\ttemp.reverse;\n\tlong max = 0;\n\tforeach(i; 0..temp.length)\n\t{\n\t\tmax += temp[i] * pow(10, i);\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpmh1ouv6a.d(11): Error: no property `sort` for type `long[]`\n/tmp/tmpmh1ouv6a.d(12): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmh1ouv6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max*10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpycho1j60.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmpycho1j60.__unittest_L17_C1() [0x427daa]\n??:? void tmpycho1j60.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tfor (int i = 0; i < temp.length; i++)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpkkgkpzth.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkgkpzth.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0..arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\t\n\tsort(temp);\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpb_04y5ed.d(17): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_04y5ed.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tint n = arr.length;\n\tif (n == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tsort(arr);\n\t\n\tlong[] res = new long[n];\n\t\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\tres[i] = arr[i] * pow(10, n - i - 1);\n\t}\n\t\n\treturn sum(res);\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpopowq5o3.d(10): Error: cannot implicitly convert expression `arr.length` of type `ulong` to `int`\n/tmp/tmpopowq5o3.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmpopowq5o3.d(25): Error: undefined identifier `sum`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopowq5o3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] digits = new long[arr.length];\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tdigits[i] = arr[i];\n\t}\n\t\n\tdigits.sort!((a,b) => b - a);\n\t\n\tforeach(i; 0 .. digits.length)\n\t{\n\t\tmax_num = max_num * 10 + digits[i];\n\t}\n\t\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpolq80ps1.d(18): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpolq80ps1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong temp = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tforeach(j; i .. arr.length)\n\t\t{\n\t\t\tif(arr[i] < arr[j])\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max_num * 10 + arr[i];\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp[i] = arr[i];\n\t}\n\tsort(temp);\n\tforeach(i; 0 .. temp.length)\n\t{\n\t\tmax = max * 10 + temp[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpjrf2io44.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrf2io44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmpxkajtt84.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxkajtt84.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax_num = max(max_num, i);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "/tmp/tmpxkajtt84.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxkajtt84.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] digits = arr;\n\tdigits.sort();\n\tdigits.reverse();\n\tforeach(digit; digits)\n\t{\n\t\tmax_num = max_num * 10 + digit;\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpr1urz68w.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpr1urz68w.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr1urz68w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] temp = new long[arr.length];\n\tforeach(i, a; arr)\n\t{\n\t\ttemp[i] = a;\n\t}\n\tsort(temp);\n\tforeach(i, a; temp)\n\t{\n\t\tmax = max * 10 + a;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpzilok__m.d(16): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzilok__m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tauto arr_len = arr.length;\n\tauto arr_copy = arr.dup;\n\tauto max_num = 0L;\n\t\n\tfor (int i = 0; i < arr_len; i++) \n\t{\n\t\tauto max_index = 0;\n\t\tfor (int j = 0; j < arr_copy.length; j++) \n\t\t{\n\t\t\tif (arr_copy[j] > arr_copy[max_index]) \n\t\t\t{\n\t\t\t\tmax_index = j;\n\t\t\t}\n\t\t}\n\t\tmax_num = max_num * 10 + arr_copy[max_index];\n\t\tarr_copy.remove(max_index);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpy5qnzjwu.d(25): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5qnzjwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] arr_copy = arr.dup;\n\tarr_copy.sort;\n\tforeach(i; arr_copy)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpnbmgqrxk.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnbmgqrxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong n = arr.length;\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tfor (long j = i + 1; j < n; j++) {\n\t\t\tif (arr[i] < arr[j]) {\n\t\t\t\tlong temp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < n; i++) {\n\t\tmax = max * 10 + arr[i];\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax_num = max(max_num, arr[i]);\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122481,
      "stdout": "",
      "stderr": "/tmp/tmpl1h1849d.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1h1849d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps3exrd4n.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmps3exrd4n.__unittest_L18_C1() [0x427daa]\n??:? void tmps3exrd4n.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong[] digits = arr.dup;\n\tdigits.sort;\n\tdigits.reverse;\n\tforeach(long i; digits)\n\t{\n\t\tmax_num = max_num * 10 + i;\n\t}\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpuygcjtm8.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpuygcjtm8.d(13): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long[])`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuygcjtm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong[] nums = arr.dup;\n\tnums.sort;\n\tforeach(num; nums)\n\t{\n\t\tmax = max * 10 + num;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmp3ad1zfhj.d(12): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ad1zfhj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tlong temp = 0;\n\tlong[] arr_copy = arr.dup;\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\ttemp = arr_copy[i];\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(temp < arr_copy[j])\n\t\t\t{\n\t\t\t\ttemp = arr_copy[j];\n\t\t\t\tarr_copy[j] = arr_copy[i];\n\t\t\t\tarr_copy[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max * 10 + arr_copy[i];\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg6aesjy6.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x4293c9]\n??:? void tmpg6aesjy6.__unittest_L35_C1() [0x428106]\n??:? void tmpg6aesjy6.__modtest() [0x42833c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x429052]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ada0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ac9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x429029]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4298e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max_num = 0;\n\tlong num = 0;\n\tlong[] temp = arr.dup;\n\ttemp.sort;\n\tforeach(long i; temp)\n\t{\n\t\tnum = num * 10 + i;\n\t}\n\tmax_num = num;\n\treturn max_num;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1666122482,
      "stdout": "",
      "stderr": "/tmp/tmpcfcdhzrc.d(13): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfcdhzrc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the largest number that can be formed with the given array of digits.\n\t\n*/\nlong find_Max_Num(long[] arr) \n{\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max * 10 + i;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = find_Max_Num;\n\n    assert(candidate([1L, 2L, 3L]) == 321L);\n    assert(candidate([4L, 5L, 6L, 1L]) == 6541L);\n    assert(candidate([1L, 2L, 3L, 9L]) == 9321L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplhddhuca.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4280ed]\n??:? void tmplhddhuca.__unittest_L17_C1() [0x427daa]\n??:? void tmplhddhuca.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c0d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42af6a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4300fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4305ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430089]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af41]\n??:? runModuleUnitTests [0x42bead]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42853c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_279_is_num_decagonal",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the nth decagonal number.\n\t\n*/\nlong is_num_decagonal(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_num_decagonal;\n\n    assert(candidate(3L) == 27L);\n    assert(candidate(7L) == 175L);\n    assert(candidate(10L) == 370L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = sqrt(2*n);\n\treturn x*(x+1) == 2*n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x);\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n = 0\n\t// n^2 - n = 0\n\t// n(n-1) = 0\n\t// n = 0 or n = 1\n\t// n = 0 is not a decagonal number\n\t// n = 1 is a decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is the only decagonal number\n\t// so, n = 1 is the only solution\n\t// n = 1 is",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n^2 - n) / 2\n\t// 2 * n = 3 * n^2 - n\n\t// 2 * n + n = 3 * n^2\n\t// n^2 + 2 * n + 1 = 3 * n^2\n\t// n^2 - n^2 + 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2 * n + 1 = 3 * n^2\n\t// 2",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong num = n;\n\tlong x = (sqrt(1 + 4 * 2 * num) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == num;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = sqrt(n*2);\n\treturn x*(x+1) == n*2;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n    return (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\t\n\tnth_decagonal = (long) (n * (3 * n - 2)) / 2;\n\tnth_decagonal_test = (long) (sqrt(1 + 4 * 3 * 2 * nth_decagonal) + 1) / 6;\n\t\n\tif (nth_decagonal_test == n)\n\t{\n\t\treturn nth_decagonal;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tauto d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d == long(d);\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_triangular = 0;\n\tlong nth_pentagonal = 0;\n\tlong nth_hexagonal = 0;\n\tlong nth_heptagonal = 0;\n\tlong nth_octagonal = 0;\n\tlong nth_nonagonal = 0;\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tnth_decagonal = i * (3 * i - 2);\n\t\tnth_triangular = i * (i + 1) / 2;\n\t\tnth_pentagonal = i * (3 * i - 1) / 2;\n\t\tnth_hexagonal = i * (2 * i - 1);\n\t\tnth_heptagonal = i * (5 * i - 3) / 2;\n\t\tnth_octagonal = i * (3 * i - 2);\n\t\tnth_nonagonal = i * (2 * i - 1);\n\t\t\n\t\tif (nth_decagonal == nth_triangular || nth_decagonal == nth_pentagonal || nth_decagonal == nth_hexagonal || nth_decagonal == nth_heptagonal || nth_decagonal == nth_octagonal || nth_decagonal == nth_nonagonal)\n\t\t{\n\t\t\treturn nth_decagonal;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tauto a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == long(a);\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_triangular = 0;\n\tlong nth_pentagonal = 0;\n\tlong nth_hexagonal = 0;\n\t\n\tfor (long i = 1; i < n; i++)\n\t{\n\t\tnth_decagonal = i * (3 * i - 2);\n\t\t\n\t\tfor (long j = 1; j < n; j++)\n\t\t{\n\t\t\tnth_triangular = j * (j + 1) / 2;\n\t\t\t\n\t\t\tfor (long k = 1; k < n; k++)\n\t\t\t{\n\t\t\t\tnth_pentagonal = k * (3 * k - 1) / 2;\n\t\t\t\t\n\t\t\t\tfor (long l = 1; l < n; l++)\n\t\t\t\t{\n\t\t\t\t\tnth_hexagonal = l * (2 * l - 1);\n\t\t\t\t\t\n\t\t\t\t\tif (nth_decagonal == nth_triangular && nth_decagonal == nth_pentagonal && nth_decagonal == nth_hexagonal)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn nth_decagonal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n = 0\n\t// n^2 - n = 0\n\t// n(n-1) = 0\n\t// n = 0 or n = 1\n\t// n = 1 is not decagonal\n\t// n = 0 is decagonal\n\t// n = 0 is the 0th decagonal number\n\t// n = 1 is the 1st decagonal number\n\t// n = 2 is the 2nd decagonal number\n\t// n = 3 is the 3rd decagonal number\n\t// n = 4 is the 4th decagonal number\n\t// n = 5 is the 5th decagonal number\n\t// n = 6 is the 6th decagonal number\n\t// n = 7 is the 7th decagonal number\n\t// n = 8 is the 8th decagonal number\n\t// n = 9 is the 9th decagonal number\n\t// n = 10 is the 10th decagonal number\n\t// n = 11 is the 11th decagonal number\n\t// n = 12 is the 12th decagonal number\n\t// n = 13 is the 13th decagonal number\n\t// n = 14 is the 14th decagonal number\n\t// n = 15 is the 15th decagonal number\n\t// n = 16 is the 16th decagonal number\n\t// n = 17 is the 17th decagonal number\n\t// n = 18 is the 18th decagonal number\n\t// n = 19 is the 19th decagonal number\n\t// n = 20 is the 20th decagonal number\n\t// n = 21 is the 21st decagonal number\n\t// n = 22 is the 22nd decagonal number\n\t// n = 23 is the 23rd decagonal number\n\t// n = 24 is the 24th decagonal number\n\t// n = 25 is the 25th decagonal number\n\t// n = 26 is the 26th decagonal number\n\t// n = 27 is the 27th decagonal number\n\t// n = 28 is the 28th decagonal number\n\t// n = 29 is the 29th decagonal number\n\t// n = 30 is the 30th decagonal number\n\t// n = 31 is the 31st decagonal number\n\t// n = 32 is the 32nd decagonal number\n\t",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tif (n > 0) \n\t{\n\t\tnth_decagonal = (n * (3 * n - 2)) / 2;\n\t}\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3*n*n - n;\n\tlong b = 2*n;\n\treturn (a % b == 0);\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\tlong i = 1;\n\t\n\twhile (nth_decagonal_test <= n)\n\t{\n\t\tnth_decagonal = i * (3 * i - 1) / 2;\n\t\tnth_decagonal_test = nth_decagonal * 10;\n\t\ti++;\n\t}\n\t\n\tif (nth_decagonal_test == n)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong num = n;\n\tlong nth = 0;\n\t\n\twhile (num > 0) {\n\t\tnum -= nth;\n\t\tnth++;\n\t}\n\t\n\tif (num == 0) {\n\t\treturn nth;\n\t}\n\t\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = sqrt(2*n);\n\treturn (x*(x+1) == 2*n);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong r = sqrt(n);\n\treturn r * r == n && (r + 1) % 3 == 0;\n}",
    "{\n\tlong a = sqrt(1 + 4 * 2 * n);\n\treturn a * a == 1 + 4 * 2 * n && (a - 1) % 4 == 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tfloat a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong d = sqrt(n);\n\treturn d * d == n && (d + 1) % 3 == 0;\n}",
    "{\n\tlong nth_decagonal = n * (3 * n - 2);\n\t\n\tlong nth_decagonal_sqrt = sqrt(nth_decagonal);\n\t\n\tif(nth_decagonal_sqrt * nth_decagonal_sqrt == nth_decagonal)\n\t{\n\t\treturn 1;\n\t}\n\t\n\treturn 0;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr_div_2_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr_div_2_plus_nth_decagonal_num_sqr = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr_div_2_plus_nth_decagonal_num_sqr_div_2 = 0;\n\tlong nth_decagonal_num_sqr_plus_nth_decagonal_num_div_2_sqr_minus_nth_decagonal_num_sqr_div_2_plus_nth_decagonal_num_sqr_div_2_plus_nth_decagonal_num = 0;\n\tlong nth_decagonal_num_sqr_plus_nth",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n) / 2\n\t// n = (3 * n * n - n)",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong x = sqrt(n);\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3 * n * n - n;\n\tlong b = 2 * n;\n\treturn (a % b == 0);\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (a * (3 * a - 1)) / 2 == n;\n}",
    "{\n\tlong i = 1;\n\tlong decagonal = 0;\n\twhile (decagonal < n) {\n\t\tdecagonal = i * (3 * i - 1) / 2;\n\t\ti++;\n\t}\n\treturn decagonal == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong d = sqrt(1 + 4 * 2 * n);\n\treturn d * d == 1 + 4 * 2 * n && (d - 1) % 4 == 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong num = n;\n\tlong decagonal_num = 0;\n\tlong i = 1;\n\twhile (decagonal_num < num)\n\t{\n\t\tdecagonal_num = i * (3 * i - 1) / 2;\n\t\ti++;\n\t}\n\tif (decagonal_num == num)\n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 == 0);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num * (3 * num - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 != 0);\n}",
    "{\n\tlong num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num * (3 * num - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 == 1);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tauto a = sqrt(1 + 4 * 2 * n);\n\treturn (a * a == 1 + 4 * 2 * n) && (a % 4 == 1);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4*2*n) - 1) / 2;\n\treturn a * (3*a - 1) / 2 == n;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (a == (long)a);\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_test = 0;\n\tlong nth_decagonal_test_2 = 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\t\n\tnth_decagonal_test = (sqrt(1 + 4 * 3 * 2 * nth_decagonal) - 1) / (2 * 3);\n\tnth_decagonal_test_2 = (sqrt(1 + 4 * 3 * 2 * nth_decagonal) + 1) / (2 * 3);\n\t\n\tif(nth_decagonal_test == n || nth_decagonal_test_2 == n)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tauto a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == long(a) && a % 2 == 0;\n}",
    "{\n\tlong num = n;\n\tlong x = (sqrt((4 * num) + 1) - 1) / 2;\n\treturn (x * (3 * x - 1)) / 2 == num;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal_number = 0;\n\t\n\tnth_decagonal_number = (n * (3 * n - 1)) / 2;\n\t\n\treturn nth_decagonal_number;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n = 0\n\t// n^2 - n = 0\n\t// n(n - 1) = 0\n\t// n = 0 or n = 1\n\t// n = 0 is not a decagonal number\n\t// n = 1 is a decagonal number\n\t// n = 1 is the first decagonal number\n\t// n = 1 is the 1st decagonal number\n\t// n = 2 is the 2nd decagonal number\n\t// n = 3 is the 3rd decagonal number\n\t// n = 4 is the 4th decagonal number\n\t// n = 5 is the 5th decagonal number\n\t// n = 6 is the 6th decagonal number\n\t// n = 7 is the 7th decagonal number\n\t// n = 8 is the 8th decagonal number\n\t// n = 9 is the 9th decagonal number\n\t// n = 10 is the 10th decagonal number\n\t// n = 11 is the 11th decagonal number\n\t// n = 12 is the 12th decagonal number\n\t// n = 13 is the 13th decagonal number\n\t// n = 14 is the 14th decagonal number\n\t// n = 15 is the 15th decagonal number\n\t// n = 16 is the 16th decagonal number\n\t// n = 17 is the 17th decagonal number\n\t// n = 18 is the 18th decagonal number\n\t// n = 19 is the 19th decagonal number\n\t// n = 20 is the 20th decagonal number\n\t// n = 21 is the 21st decagonal number\n\t// n = 22 is the 22nd decagonal number\n\t// n = 23 is the 23rd decagonal number\n\t// n = 24 is the 24th decagonal number\n\t// n = 25 is the 25th decagonal number\n\t// n = 26 is the 26th decagonal number\n\t// n = 27 is the 27th decagonal number\n\t// n = 28 is the 28th decagonal number\n\t// n = 29 is the 29th decagonal number\n\t// n = 30 is the 30th decagonal number\n\t// n = 31 is the 31st decagonal number\n\t// n = 32 is the 32nd decagonal",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3;\n\tlong b = -1;\n\tlong c = -2 * n;\n\tlong d = sqrt(b * b - 4 * a * c);\n\tif (d * d != b * b - 4 * a * c)\n\t\treturn 0;\n\tlong x1 = (-b + d) / (2 * a);\n\tlong x2 = (-b - d) / (2 * a);\n\tif (x1 > 0 && x1 == (long)x1)\n\t\treturn x1;\n\tif (x2 > 0 && x2 == (long)x2)\n\t\treturn x2;\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 - 3n + 2n - 2 = 0\n\t// n^2 - n - 2 = 0\n\t// n = (1 + sqrt(1 + 4*1*2))/2\n\t// n = (1 + sqrt(9))/2\n\t// n = (1 + 3)/2\n\t// n = 2\n\t// n = (1 - sqrt(9))/2\n\t// n = (1 - 3)/2\n\t// n = -2\n\t// n = (1 + sqrt(1 + 4*3*2))/2\n\t// n = (1 + sqrt(25))/2\n\t// n = (1 + 5)/2\n\t// n = 3\n\t// n = (1 - sqrt(25))/2\n\t// n = (1 - 5)/2\n\t// n = -4\n\t// n = (1 + sqrt(1 + 4*5*2))/2\n\t// n = (1 + sqrt(41))/2\n\t// n = (1 + 6)/2\n\t// n = 3\n\t// n = (1 - sqrt(41))/2\n\t// n = (1 - 6)/2\n\t// n = -5\n\t// n = (1 + sqrt(1 + 4*7*2))/2\n\t// n = (1 + sqrt(61))/2\n\t// n = (1 + 7)/2\n\t// n = 4\n\t// n = (1 - sqrt(61))/2\n\t// n = (1 - 7)/2\n\t// n = -6\n\t// n = (1 + sqrt(1 + 4*9*2))/2\n\t// n = (1 + sqrt(81))/2\n\t// n = (1 + 9)/2\n\t// n = 5\n\t// n = (1 - sqrt(81))/2\n\t// n = (1 - 9)/2\n\t// n = -8\n\t// n = (1 + sqrt(1 + 4*11*2))/2\n\t// n = (1 + sqrt(101))/2\n",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num == (long)num;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tauto a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == cast(int)a;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1+4*2*n)+1)/2;\n\treturn (a*(3*a-1))/2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tdouble x = (sqrt(1+4*2*n) - 1) / 2;\n\treturn x == (long)x && x % 2 == 1;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num == (long)num;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x * (3 * x - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 4*2*n) - 1) / 2;\n\treturn x * (3*x - 1) / 2 == n;\n}",
    "{\n\tlong a = 3 * n * n - n;\n\tlong b = 2 * n;\n\treturn (a % b == 0);\n}",
    "{\n\tlong num = n;\n\tlong nth = 0;\n\tlong nth_num = 0;\n\t\n\twhile(nth_num < num)\n\t{\n\t\tnth++;\n\t\tnth_num = nth * (3 * nth - 1) / 2;\n\t}\n\t\n\tif(nth_num == num)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_sqr = 0;\n\tlong nth_decagonal_sqr_plus_1 = 0;\n\tlong nth_decagonal_sqr_minus_1 = 0;\n\t\n\tnth_decagonal_sqr = n * n;\n\tnth_decagonal_sqr_plus_1 = nth_decagonal_sqr + 1;\n\tnth_decagonal_sqr_minus_1 = nth_decagonal_sqr - 1;\n\t\n\tif(nth_decagonal_sqr_plus_1 % 3 == 0)\n\t{\n\t\tnth_decagonal = (nth_decagonal_sqr_plus_1 / 3) * 10;\n\t\treturn nth_decagonal;\n\t}\n\telse if(nth_decagonal_sqr_minus_1 % 3 == 0)\n\t{\n\t\tnth_decagonal = (nth_decagonal_sqr_minus_1 / 3) * 10;\n\t\treturn nth_decagonal;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_check = 0;\n\t\n\tnth_decagonal = (n * ((3 * n) - 1)) / 2;\n\tnth_decagonal_check = (sqrt((4 * nth_decagonal) + 1) + 1) / 3;\n\t\n\tif (nth_decagonal_check == n)\n\t{\n\t\treturn nth_decagonal;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 != 0);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 4 * 2 * n) - 1) % 4 == 0;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tlong nth_decagonal = 0;\n\tlong nth_decagonal_sqr = 0;\n\tlong nth_decagonal_sqr_plus_1 = 0;\n\tlong nth_decagonal_sqr_minus_1 = 0;\n\tlong nth_decagonal_sqr_plus_1_div_4 = 0;\n\tlong nth_decagonal_sqr_minus_1_div_4 = 0;\n\t\n\tnth_decagonal_sqr = n * n;\n\tnth_decagonal_sqr_plus_1 = nth_decagonal_sqr + 1;\n\tnth_decagonal_sqr_minus_1 = nth_decagonal_sqr - 1;\n\tnth_decagonal_sqr_plus_1_div_4 = nth_decagonal_sqr_plus_1 / 4;\n\tnth_decagonal_sqr_minus_1_div_4 = nth_decagonal_sqr_minus_1 / 4;\n\t\n\tif (nth_decagonal_sqr_plus_1_div_4 == nth_decagonal_sqr_minus_1_div_4) \n\t{\n\t\tnth_decagonal = nth_decagonal_sqr_plus_1_div_4;\n\t\treturn nth_decagonal;\n\t}\n\telse \n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\t// n = (3x^2 - x) / 2\n\t// n = (3x^2 - x - 2n) / 2\n\t// 3x^2 - x - 2n = 0\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 + 24n)) / 6\n\t// x = (1 + sqrt(1 + 24n)) / 6\n\t// x = (1 - sqrt(1 +",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tauto nth_decagonal = n * (3 * n - 1) / 2;\n\treturn nth_decagonal;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x == (long)x && x % 2 == 1);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (x - (long)x == 0);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong nth_decagonal = 0;\n\t\n\tnth_decagonal = n * (3 * n - 2);\n\t\n\treturn nth_decagonal;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong d = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn d * (3 * d - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = 3 * n * n - n;\n\tlong b = 2 * n;\n\treturn (a % b == 0);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == (long)a;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n\treturn (x == floor(x) && x > 0);\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble p = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn p == (long)p;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tauto a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a == int(a);\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a, b, c;\n\ta = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tb = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n\tc = (a * a + a) / 2;\n\treturn (c == n || b * b + b == 2 * n);\n}",
    "{\n\tlong num = n;\n\tlong nth_num = 0;\n\tlong nth_num_sqrt = 0;\n\t\n\tnth_num = (3 * num * num) - (num) - 2;\n\tnth_num_sqrt = sqrt(nth_num);\n\t\n\tif (nth_num_sqrt * nth_num_sqrt == nth_num)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}",
    "{\n\tdouble a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn (a - (long)a == 0);\n}",
    "{\n\tlong num = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num * (3 * num - 1) / 2 == n;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tdouble x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong a = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn a * (3 * a - 1) / 2 == n;\n}"
  ]
}
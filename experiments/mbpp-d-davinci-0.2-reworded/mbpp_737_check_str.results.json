{
  "name": "mbpp_737_check_str",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpyyokbag8.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyyokbag8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU].*\";\n\treturn regexMatch(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpaqtrlhg8.d(10): Error: `string` is used as a type\n/tmp/tmpaqtrlhg8.d(11): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqtrlhg8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").matchLength > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp0gskxef2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0gskxef2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmplk9uplzq.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplk9uplzq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regexMatch(string, \"^[aeiou].*\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp2v8o8s5i.d(10): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8o8s5i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(\"^[aeiouAEIOU]\");\n\treturn regex.matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpz3k_lxqn.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz3k_lxqn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp74dukh4d.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74dukh4d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpy4pv5xyg.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy4pv5xyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpv212o__m.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv212o__m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn (string.match(\"^[aeiouAEIOU]\"));\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpb4j0nwnj.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4j0nwnj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn string.match(\"^[aeiouAEIOU]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpdjkbs5og.d(10): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdjkbs5og.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpz6vycrye.d(10): Error: `string` is used as a type\n/tmp/tmpz6vycrye.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6vycrye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto reg = regex(\"^[aeiouAEIOU]\");\n\treturn regex_match(string, reg);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmppc7i72xo.d(10): Error: undefined identifier `regex`\n/tmp/tmppc7i72xo.d(11): Error: undefined identifier `regex_match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppc7i72xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpz6vycrye.d(10): Error: `string` is used as a type\n/tmp/tmpz6vycrye.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6vycrye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").matchLength;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6fc1s428.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fc1s428.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(r\"^[aeiouAEIOU]\");\n\treturn regex.matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpej6vw195.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpej6vw195.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiou]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpvn3p5jiu.d(10): Error: `string` is used as a type\n/tmp/tmpvn3p5jiu.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvn3p5jiu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*$\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpbxhjxfty.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxhjxfty.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp9vt8wipi.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9vt8wipi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(r\"^[aeiou]\", \"i\");\n\treturn regex.match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkziitsbl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkziitsbl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpv212o__m.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv212o__m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6fs1gc_1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fs1gc_1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpye35_mce.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpye35_mce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn std.regex.matchFirst(string, \"^[aeiou]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpk6x4l26x.d(10): Error: undefined identifier `regex` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk6x4l26x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").matchLength > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmppmuq43zb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppmuq43zb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpye35_mce.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpye35_mce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regexMatch(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6y9r2acl.d(10): Error: `string` is used as a type\n/tmp/tmp6y9r2acl.d(11): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6y9r2acl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n\treturn regex(string, \"^[aeiouAEIOU].*\").match; \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpwujn3lat.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwujn3lat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(r\"^[aeiou]\", regex.icase);\n\treturn regex.matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpi_yigru3.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_yigru3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpllhs83nx.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpllhs83nx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, `^[aeiouAEIOU]`);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp2vs7xij1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vs7xij1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpz6vycrye.d(10): Error: `string` is used as a type\n/tmp/tmpz6vycrye.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6vycrye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpye35_mce.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpye35_mce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn match(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp5o_ilodr.d(10): Error: `string` is used as a type\n/tmp/tmp5o_ilodr.d(11): Error: undefined identifier `match`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5o_ilodr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpye35_mce.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpye35_mce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring regex = \"^[aeiou]\";\n\treturn regex.match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpq6sv9ax7.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq6sv9ax7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring regex = \"^[aeiouAEIOU]\";\n\treturn regex.match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpjghhg_9q.d(10): Error: `string` is used as a type\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjghhg_9q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpa1214_q1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa1214_q1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpz6vycrye.d(10): Error: `string` is used as a type\n/tmp/tmpz6vycrye.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6vycrye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpm8stwwug.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8stwwug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp9vt8wipi.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9vt8wipi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regexMatch(string, \"^[aeiouAEIOU]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpvwpm8410.d(10): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvwpm8410.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp9vt8wipi.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9vt8wipi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp5ls71hjy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ls71hjy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(\"^[aeiouAEIOU]\");\n\treturn regex.match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpsc1psa5x.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc1psa5x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpye35_mce.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpye35_mce.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn matchFirst(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmps9qrqnni.d(10): Error: `string` is used as a type\n/tmp/tmps9qrqnni.d(11): Error: undefined identifier `matchFirst`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps9qrqnni.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmppi8fjlge.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi8fjlge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpy4pv5xyg.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy4pv5xyg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpmzyxkqis.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmzyxkqis.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpv3louata.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3louata.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmppi8fjlge.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi8fjlge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string).matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpyu8afic1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyu8afic1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n\treturn regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp2jbooa3s.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2jbooa3s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*$\", string, \"i\").matchLength;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmppkj2n1lw.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppkj2n1lw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpww20f8jv.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpww20f8jv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmph2efqoss.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2efqoss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmp5ls71hjy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ls71hjy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regexMatch(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6y9r2acl.d(10): Error: `string` is used as a type\n/tmp/tmp6y9r2acl.d(11): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6y9r2acl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpz6vycrye.d(10): Error: `string` is used as a type\n/tmp/tmpz6vycrye.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz6vycrye.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp1pm_zz5f.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pm_zz5f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_gn3q2fj.d(10): Error: `string` is used as a type\n/tmp/tmp_gn3q2fj.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_gn3q2fj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpb6frm621.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb6frm621.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6fs1gc_1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fs1gc_1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpal8roejh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpal8roejh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpq4xjsdcy.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4xjsdcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp4q2nhu6a.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4q2nhu6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpo6ofo355.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6ofo355.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").matchLength;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp6fc1s428.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fc1s428.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpm7t6e_l5.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm7t6e_l5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp7mp61r1e.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mp61r1e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpxn3nv2iz.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn3nv2iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n\treturn regex(string, \"^[aeiouAEIOU].*\").match; \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpwujn3lat.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwujn3lat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
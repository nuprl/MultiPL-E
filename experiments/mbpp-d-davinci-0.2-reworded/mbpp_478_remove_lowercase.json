{
  "name": "mbpp_478_remove_lowercase",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to remove lowercase substrings from a given string.\n\t\n*/\nstring remove_lowercase(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_lowercase;\n\n    assert(candidate(\"PYTHon\") == \"PYTH\");\n    assert(candidate(\"FInD\") == \"FID\");\n    assert(candidate(\"STRinG\") == \"STRG\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c >= 'A' && c <= 'Z') \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach (c; str1) \n\t{\n\t\tif (c.isUpper) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(char c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c.isUpper) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}"
  ]
}
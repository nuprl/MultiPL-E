{
  "name": "mbpp_67_bell_number",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_67_bell_number.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmphc0hjpl7.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmphc0hjpl7.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphc0hjpl7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[n+1];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++)\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp_kped8x4.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_kped8x4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxwp6av_k.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpxwp6av_k.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwp6av_k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[n+1];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++)\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp_kped8x4.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_kped8x4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n + 1]];\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpu0c16bgv.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpu0c16bgv.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu0c16bgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][];\n\tbell[0] = new long[1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = new long[i + 1];\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpjycruprc.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjycruprc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n+1);\n\tbell[0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxq258b8m.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpxq258b8m.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxq258b8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n    long bell[n+1][n+1]; \n    bell[0][0] = 1; \n    for (long i=1; i<=n; i++) \n    { \n        // Explicitly fill for j = 0 \n        bell[i][0] = bell[i-1][i-1]; \n  \n        // Fill for remaining values of j \n        for (long j=1; j<=i; j++) \n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]; \n    } \n    return bell[n][0]; \n} \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp_x9f7aa8.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmp_x9f7aa8.d(29): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_x9f7aa8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmphc0hjpl7.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmphc0hjpl7.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphc0hjpl7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach(i; 2 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpukbqg1ju.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukbqg1ju.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1) \n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp48e_6izp.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp48e_6izp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1 .. n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpnuop2wtt.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnuop2wtt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n    long bell[n+1][n+1]; \n    bell[0][0] = 1; \n    for (long i=1; i<=n; i++) \n    { \n        // Explicitly fill for j = 0 \n        bell[i][0] = bell[i-1][i-1]; \n  \n        // Fill for remaining values of j \n        for (long j=1; j<=i; j++) \n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]; \n    } \n    return bell[n][0]; \n} \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp_x9f7aa8.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmp_x9f7aa8.d(29): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_x9f7aa8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpuv21gstu.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv21gstu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tif (n == 0) return 1;\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++)\n\t\tsum += bell_number(i) * bell_number(n - i - 1);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpaadfl4mp.d(22): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaadfl4mp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpt_luemgz.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_luemgz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach(i; 2..n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp85gcgvcf.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp85gcgvcf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvyxg6dir.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxg6dir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1..n+1) {\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) {\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpro8c1we3.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpro8c1we3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3utpaiab.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3utpaiab.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp1vm_xqoj.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vm_xqoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpukjs8xzo.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukjs8xzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp1vm_xqoj.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vm_xqoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell;\n\tbell[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp9xahspmo.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xahspmo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvyxg6dir.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxg6dir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmplfdvqgi2.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfdvqgi2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_d07kc9m.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d07kc9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpzcb0gt2k.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzcb0gt2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpwk18j57i.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk18j57i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpgv_y_8ef.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpgv_y_8ef.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgv_y_8ef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long][long] bell;\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1) {\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1) {\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpl617joqp.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl617joqp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkr1q_7jd.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkr1q_7jd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1) {\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1) {\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpcbittzeo.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbittzeo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0 : 1];\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpq5xeeq0t.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5xeeq0t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n\tlong bell[n+1][n+1]; \n\tbell[0][0] = 1; \n\tfor (long i=1; i<=n; i++) \n\t{ \n\t\t// Explicitly fill for j = 0 \n\t\tbell[i][0] = bell[i-1][i-1]; \n\t\t// Fill for remaining values of j \n\t\tfor (long j=1; j<=i; j++) \n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1]; \n\t} \n\treturn bell[n][0]; \n} \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp08ica2dt.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmp08ica2dt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08ica2dt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpjbi1rbtf.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjbi1rbtf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpuv21gstu.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv21gstu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = bell[$-1] * i;\n\t\tforeach(j; 1..i) \n\t\t{\n\t\t\tbell[i] += bell[i-j] * bell[j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmppd6qs_nf.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppd6qs_nf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp06j2k2dr.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp06j2k2dr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpv4m04eel.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpv4m04eel.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4m04eel.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpc7dtejf3.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpc7dtejf3.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7dtejf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[n+1];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpmhasw546.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmhasw546.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmplfdvqgi2.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfdvqgi2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmphc0hjpl7.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmphc0hjpl7.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphc0hjpl7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmplfdvqgi2.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfdvqgi2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkitjqh16.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpkitjqh16.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkitjqh16.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4d8t6elo.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4d8t6elo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n + 1);\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpl3raildz.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpl3raildz.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl3raildz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp1vm_xqoj.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vm_xqoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpc7dtejf3.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpc7dtejf3.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7dtejf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_d07kc9m.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d07kc9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach (j; 1..i+1) \n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp1hcl18cq.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1hcl18cq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpukjs8xzo.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukjs8xzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpsssb1xhm.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsssb1xhm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpr8mftkt9.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr8mftkt9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0 : 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (k; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[k] * bell[i - 1 - k];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpi5g77iw1.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi5g77iw1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach (i; 2 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpj8hw7738.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj8hw7738.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n + 1);\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long k = 0; k < i; k++) \n\t\t{\n\t\t\tbell[i] += bell[k] * bell[i - 1 - k];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3of0pqj9.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmp3of0pqj9.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3of0pqj9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpuv21gstu.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv21gstu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp2w2shjzy.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2w2shjzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpfkzlriiv.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkzlriiv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long][long] bell = new long[n+1][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpnpcl83i5.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnpcl83i5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkox350hc.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkox350hc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpgv_y_8ef.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpgv_y_8ef.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgv_y_8ef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n + 1);\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpgspteq35.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpgspteq35.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgspteq35.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpqkzwm1wa.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqkzwm1wa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long][long] bell = new long[n+1][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpuggp5xfz.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuggp5xfz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpv4m04eel.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpv4m04eel.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4m04eel.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpy5dzodfc.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy5dzodfc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_d07kc9m.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d07kc9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpzcb0gt2k.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzcb0gt2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpxn55e2zx.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxn55e2zx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpmz3do1f5.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmz3do1f5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp0mc8yrvr.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0mc8yrvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach(i; 2..n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp9k7h9ozj.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k7h9ozj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpyo_nf5kz.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyo_nf5kz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpc7dtejf3.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpc7dtejf3.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7dtejf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n+1) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach (j; 1 .. i+1) \n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpfnrojw_2.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfnrojw_2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpe38eb82f.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe38eb82f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxwp6av_k.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpxwp6av_k.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwp6av_k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvunfab5d.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvunfab5d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpczxtk0f0.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpczxtk0f0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = bell[$-1] * i;\n\t\tforeach(j; 1..i) \n\t\t{\n\t\t\tbell[i] += bell[j-1] * bell[i-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_6nf6ri0.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6nf6ri0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n    long bell[n+1][n+1]; \n    bell[0][0] = 1; \n    for (long i=1; i<=n; i++) \n    { \n        // Explicitly fill for j = 0 \n        bell[i][0] = bell[i-1][i-1]; \n  \n        // Fill for remaining values of j \n        for (long j=1; j<=i; j++) \n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]; \n    } \n    return bell[n][0]; \n} \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp_x9f7aa8.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmp_x9f7aa8.d(29): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_x9f7aa8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp43gag1z1.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43gag1z1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp1vm_xqoj.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vm_xqoj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach(i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpe38eb82f.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe38eb82f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; ++i) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; ++j) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3amzb91b.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmp3amzb91b.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3amzb91b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; ++i) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; ++j) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmph06m_9us.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph06m_9us.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpuv21gstu.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv21gstu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3utpaiab.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3utpaiab.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n+1);\n\tbell[0] = 1;\n\tfor(long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor(long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpfx3q5vrh.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpfx3q5vrh.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfx3q5vrh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpbs4c_fo5.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpbs4c_fo5.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbs4c_fo5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpnvpq7rr6.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvpq7rr6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++)\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmphnkptz99.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmphnkptz99.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphnkptz99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp2w2shjzy.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2w2shjzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpukjs8xzo.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpukjs8xzo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) {\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tfor (long j = 1; j <= i; j++) {\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp2sirkhvl.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2sirkhvl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++)\n\t\tsum += bell_number(i) * bell_number(n - i - 1);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp84hefoxz.d(23): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp84hefoxz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[n+1];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4rnfro2n.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rnfro2n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3utpaiab.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3utpaiab.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][];\n\tbell[0] = new long[1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = new long[i + 1];\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpjycruprc.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjycruprc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong sum = 0;\n\tfor (long k = 0; k <= n; k++) \n\t{\n\t\tsum += binomial(n, k) * pow(k, n);\n\t}\n\treturn sum / factorial(n);\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmps8sz5syy.d(23): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps8sz5syy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpm2_ihz61.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpm2_ihz61.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm2_ihz61.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvyxg6dir.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxg6dir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpekeub_lp.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpekeub_lp.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpekeub_lp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = bell[$ - 1];\n\t\tforeach (j; 1 .. i) \n\t\t{\n\t\t\tbell[i] += bell[i - j] * bell[j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpeysf2qio.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeysf2qio.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = bell[i-1];\n\t\tforeach(j; 1..i) \n\t\t{\n\t\t\tbell[i] += bell[i-j] * bell[j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpjggjtdvw.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjggjtdvw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach (i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmphjbze9fd.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphjbze9fd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpr8mftkt9.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr8mftkt9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp3utpaiab.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3utpaiab.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpmmhzre0x.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmmhzre0x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpa1ph1ksv.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa1ph1ksv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpnvpq7rr6.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvpq7rr6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n + 1]];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++)\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpyx2g6ydx.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpyx2g6ydx.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyx2g6ydx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1];\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpkkyqqt5q.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkyqqt5q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpm_6h053b.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpm_6h053b.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm_6h053b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach(i; 1 .. n + 1) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach(j; 1 .. i + 1) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpogzlqd91.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpogzlqd91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpy2__aag_.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2__aag_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_d07kc9m.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_d07kc9m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpa82zkwig.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpa82zkwig.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa82zkwig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n\tlong bell[n+1][n+1]; \n\tbell[0][0] = 1; \n\tfor (long i=1; i<=n; i++) \n\t{ \n\t\t// Explicitly fill for j = 0 \n\t\tbell[i][0] = bell[i-1][i-1]; \n\t\t// Fill for remaining values of j \n\t\tfor (long j=1; j<=i; j++) \n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1]; \n\t} \n\treturn bell[n][0]; \n} \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp08ica2dt.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmp08ica2dt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08ica2dt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i] = 0;\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - j - 1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpc7dtejf3.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpc7dtejf3.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7dtejf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpt_luemgz.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_luemgz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{ \n\tlong bell[n+1][n+1]; \n\tbell[0][0] = 1; \n\tfor (long i=1; i<=n; i++) \n\t{ \n\t\t// Explicitly fill for j = 0 \n\t\tbell[i][0] = bell[i-1][i-1]; \nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpfn8clyvf.d(10): Deprecation: instead of C-style syntax, use D-style syntax `long[n + 1][n + 1] bell`\n/tmp/tmpfn8clyvf.d(16): Error: found `unittest` instead of statement\n/tmp/tmpfn8clyvf.d(22): Error: integer overflow\n/tmp/tmpfn8clyvf.d(24): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfn8clyvf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) {\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) {\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpl09q1956.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl09q1956.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long[n+1]];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpgv_y_8ef.d(10): Error: need size of rightmost array, not type `long[n + 1]`\n/tmp/tmpgv_y_8ef.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgv_y_8ef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpghmb30q5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghmb30q5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1 .. n + 1) \n\t{\n\t\tbell[i] = sum(bell[j] * bell[i - j] for j in 0 .. i);\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpzuu14cyq.d(13): Error: found `for` when expecting `,`\n/tmp/tmpzuu14cyq.d(13): Error: found `..` when expecting `,`\n/tmp/tmpzuu14cyq.d(23): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzuu14cyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxit0qg44.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxit0qg44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long](n + 1);\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpl3raildz.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpl3raildz.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl3raildz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long];\n\tbell[0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0 .. i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpxwp6av_k.d(10): Error: need size of rightmost array, not type `long`\n/tmp/tmpxwp6av_k.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwp6av_k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpy2__aag_.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2__aag_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 1..i)\n\t\t{\n\t\t\tbell[i] += bell[j-1] * bell[i-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpcqu4rp27.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqu4rp27.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpuv21gstu.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv21gstu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1 .. n)\n\t{\n\t\tbell[i] = bell[i - 1];\n\t\tforeach(j; 1 .. i)\n\t\t\tbell[i] += bell[i - j] * bell[j - 1];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpnetfh60x.d(25): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnetfh60x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1)\n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1)\n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpi7wcqjlp.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi7wcqjlp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach (i; 2..n + 1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpa3gh7s27.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa3gh7s27.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvyxg6dir.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxg6dir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long][long] bell = new long[n+1][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpuggp5xfz.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuggp5xfz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [1:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp8u5osdkr.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8u5osdkr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tforeach (i; 1 .. n + 1) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tforeach (j; 1 .. i + 1) \n\t\t{\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpy2__aag_.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2__aag_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1) \n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1) \n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmp48e_6izp.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp48e_6izp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n + 1];\n\tbell[0][0] = 1;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tbell[i][0] = bell[i - 1][i - 1];\n\t\tfor (long j = 1; j <= i; j++)\n\t\t\tbell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1];\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpvyxg6dir.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvyxg6dir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[n+1];\n\tbell[0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpd9rcu7vv.d(26): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9rcu7vv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach(i; 1..n)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmplfdvqgi2.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplfdvqgi2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp0mc8yrvr.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0mc8yrvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n    long[long] bell = [0:1, 1:1];\n    foreach (i; 2..n+1) \n    {\n        bell[i] = 0;\n        foreach (j; 0..i) \n        {\n            bell[i] += bell[j] * bell[i-1-j];\n        }\n    }\n    return bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp0lp7an9o.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0lp7an9o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp4cbhllq_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4cbhllq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1, 1:1];\n\tforeach(i; 2..n+1)\n\t{\n\t\tbell[i] = 0;\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-j-1];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmplt5qvbla.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplt5qvbla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0:1];\n\tforeach (i; 1..n) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i-1-j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmpwbwbdkha.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbwbdkha.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n    long[long] bell = [0: 1, 1: 1];\n    foreach (i; 2 .. n + 1) \n    {\n        bell[i] = 0;\n        foreach (j; 0 .. i) \n        {\n            bell[i] += bell[j] * bell[i - 1 - j];\n        }\n    }\n    return bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp2vjejah_.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vjejah_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = [0: 1, 1: 1];\n\tforeach (i; 2..n+1) \n\t{\n\t\tbell[i] = 0;\n\t\tforeach (j; 0..i) \n\t\t{\n\t\t\tbell[i] += bell[j] * bell[i - 1 - j];\n\t\t}\n\t}\n\treturn bell[n];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1666122775,
      "stdout": "",
      "stderr": "/tmp/tmp_l0ig9d5.d(27): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_l0ig9d5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the number of ways to partition a set of Bell numbers.\n\t\n*/\nlong bell_number(long n) \n{\n\tlong[long] bell = new long[long][n+1];\n\tbell[0][0] = 1;\n\tforeach(i; 1..n+1)\n\t{\n\t\tbell[i][0] = bell[i-1][i-1];\n\t\tforeach(j; 1..i+1)\n\t\t{\n\t\t\tbell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n\t\t}\n\t}\n\treturn bell[n][0];\n}\nunittest\n{\n    alias candidate = bell_number;\n\n    assert(candidate(2L) == 2L);\n    assert(candidate(10L) == 115975L);\n    assert(candidate(56L) == 6775685320645824322581483068371419745979053216268760300L);\n}\nvoid main(){}",
      "timestamp": 1665517343,
      "stdout": "",
      "stderr": "/tmp/tmpi4drcujt.d(28): Error: integer overflow\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4drcujt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
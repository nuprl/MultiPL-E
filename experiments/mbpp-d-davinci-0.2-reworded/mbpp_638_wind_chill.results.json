{
  "name": "mbpp_638_wind_chill",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmptyfc9xu9.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmptyfc9xu9.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyfc9xu9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrqtge.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpcfhrqtge.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrqtge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp2i8lrwmg.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp2i8lrwmg.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2i8lrwmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn cast(long)w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpimayftt0.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimayftt0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w;\n\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp3yhbml0_.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yhbml0_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t\treturn cast(long)w;\n\t}\n\telse\n\t{\n\t\treturn t;\n\t}\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpxv4up_72.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxv4up_72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpbhl_94hw.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhl_94hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10)\n\t\treturn t;\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsyw1wgi6.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x428985]\n??:? void tmpsyw1wgi6.__unittest_L14_C1() [0x427d89]\n??:? void tmpsyw1wgi6.__modtest() [0x428708]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c753]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b5e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430779]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430705]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5bd]\n??:? runModuleUnitTests [0x42c529]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428dd4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmptyfc9xu9.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmptyfc9xu9.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyfc9xu9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10) return t;\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpupt0jfa0.d(11): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpupt0jfa0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp2i8lrwmg.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp2i8lrwmg.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2i8lrwmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)(w + 0.5);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpfks83av0.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfks83av0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci;\n\twci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpelcztr7o.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpelcztr7o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci;\n\twci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpelcztr7o.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpelcztr7o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnoov2x0m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpnoov2x0m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoov2x0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnoov2x0m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpnoov2x0m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoov2x0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif(v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpfq5w5egf.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfq5w5egf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp2i8lrwmg.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp2i8lrwmg.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2i8lrwmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\treturn cast(long)round(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp3pc44tu3.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3pc44tu3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpbhl_94hw.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhl_94hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnoov2x0m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpnoov2x0m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoov2x0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * v * 0.16 + 0.3965 * t * v * 0.16);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp807bf4ct.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp807bf4ct.__unittest_L12_C1() [0x427b45]\n??:? void tmp807bf4ct.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnoov2x0m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpnoov2x0m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoov2x0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp02i9f2bk.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp02i9f2bk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long) round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpbhl_94hw.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhl_94hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w;\n\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp8m0pz3wg.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8m0pz3wg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn result;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp6yf06b1k.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6yf06b1k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w;\n\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpvg3mjy42.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpvg3mjy42.d(12): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvg3mjy42.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10)\n\t\treturn t;\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpudvkwtx8.d(12): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpudvkwtx8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci;\n\t\n\twci = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\t\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp949wa8fp.d(12): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp949wa8fp.d(14): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp949wa8fp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wind_chill = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(wind_chill);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmptjebzo1m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmptjebzo1m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptjebzo1m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wc = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(wc);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpw3rj4xeq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpw3rj4xeq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw3rj4xeq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8)\n\t\treturn t;\n\t\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpetk9_o_j.d(13): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpetk9_o_j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpr915dgbp.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr915dgbp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result;\n\tresult = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpc0sittx3.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0sittx3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpbhl_94hw.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhl_94hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpqanyfoba.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpqanyfoba.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqanyfoba.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result;\n\tresult = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\treturn result;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp8gpjdkai.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8gpjdkai.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpsu85sq_8.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpsu85sq_8.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu85sq_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpa__8_4yl.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa__8_4yl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 0;\n\t\n\tif(v < 4.8 || t > 10)\n\t\treturn result;\n\t\n\tresult = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t\n\treturn cast(long)ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp709nhyjk.d(15): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp709nhyjk.d(17): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp709nhyjk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10)\n\t\treturn t;\n\t\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpkt3bgheg.d(13): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkt3bgheg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w;\n\tif (v < 4.8 || t > 10) \n\t{\n\t\tw = t;\n\t}\n\telse \n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn cast(long)w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpseh5y03p.d(17): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpseh5y03p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 0;\n\tresult = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\treturn result;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpess5smkq.d(11): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpess5smkq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpa9lq2zcq.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpa9lq2zcq.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa9lq2zcq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8) \n\t{\n\t\tw = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\t}\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmp3aei3r3y.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3aei3r3y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t\treturn cast(long)round(w);\n\t}\n\telse\n\t\treturn 0;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpr18pkq88.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr18pkq88.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpqanyfoba.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpqanyfoba.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqanyfoba.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnoov2x0m.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpnoov2x0m.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoov2x0m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16)));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpbhl_94hw.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhl_94hw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * v.pow(0.16) + 0.3965 * t * v.pow(0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t\treturn cast(long)w;\n\t}\n\treturn 0;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpoj59psrj.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoj59psrj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10) \n\t\treturn t;\n\t\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpnfr5k9za.d(13): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnfr5k9za.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmpnsnahlss.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnsnahlss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp2i8lrwmg.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmp2i8lrwmg.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2i8lrwmg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tif (v < 4.8 || t > 10) \n\t{\n\t\treturn t;\n\t}\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpoo2e8ryy.d(14): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoo2e8ryy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wci;\n\tif (v < 4.8 || t > 10) \n\t{\n\t\twci = t;\n\t}\n\telse \n\t{\n\t\twci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn cast(long) ceil(wci);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpgbhdnkcy.d(17): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpgbhdnkcy.d(19): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgbhdnkcy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrqtge.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpcfhrqtge.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrqtge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn cast(long)round(w);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmp_ayjdesr.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ayjdesr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong w = 0;\n\tif (v > 4.8 && t < 10)\n\t{\n\t\tw = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\t}\n\treturn w;\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124121,
      "stdout": "",
      "stderr": "/tmp/tmp02i9f2bk.d(13): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp02i9f2bk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong wind_chill = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n\treturn cast(long) ceil(wind_chill);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1666124122,
      "stdout": "",
      "stderr": "/tmp/tmpo33qrh8c.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpo33qrh8c.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo33qrh8c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmp1rciksz5.d(10): Error: cannot implicitly convert expression `round(cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1rciksz5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\treturn cast(long)(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517130,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n\t\n*/\nlong wind_chill(long v, long t) \n{\n\tlong result = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n\treturn cast(long)ceil(result);\n}\nunittest\n{\n    alias candidate = wind_chill;\n\n    assert(candidate(120L, 35L) == 40L);\n    assert(candidate(40L, 20L) == 19L);\n    assert(candidate(10L, 8L) == 6L);\n}\nvoid main(){}",
      "timestamp": 1665517129,
      "stdout": "",
      "stderr": "/tmp/tmpcfhrqtge.d(10): Error: cannot implicitly convert expression `cast(real)(13.12 + 0.6215 * cast(double)t) - 11.37L * pow(v, 0.16) + cast(real)(0.3965 * cast(double)t) * pow(v, 0.16)` of type `real` to `long`\n/tmp/tmpcfhrqtge.d(11): Error: `std.math.ceil` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4266):     `std.math.ceil(real x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(4363):     `std.math.ceil(float x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfhrqtge.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_796_return_sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn sum;\n\t}\n\t\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(string key; dict.keys)\n\t{\n\t\tsum += dict[key];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict.isNull)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\t\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tif(dict is null)\n\t\treturn 0;\n\t\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tif(dict is null)\n\t\treturn 0;\n\t\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null) \n\t{\n\t\treturn 0;\n\t}\n\tforeach (key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(k, v; dict)\n\t{\n\t\tsum += v;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\t\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach (k, v; dict)\n\t{\n\t\tsum += v;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tif(value is null)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122520,
      "stdout": "",
      "stderr": "/tmp/tmppunya1zs.d(13): Error: incompatible types for `(value) is (null)`: `long` and `typeof(null)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppunya1zs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict !is null)\n\t{\n\t\tforeach(key, value; dict)\n\t\t{\n\t\t\tsum += value;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(string key; dict.keys)\n\t{\n\t\tsum += dict[key];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict.isNull)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null) return sum;\n\tforeach (key, value; dict) {\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(k, v; dict)\n\t{\n\t\tsum += v;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict.isNull)\n\t{\n\t\treturn sum;\n\t}\n\telse\n\t{\n\t\tforeach(key, value; dict)\n\t\t{\n\t\t\tsum += value;\n\t\t}\n\t\treturn sum;\n\t}\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn sum;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(k, v; dict)\n\t{\n\t\tsum += v;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tif(dict is null)\n\t\treturn 0;\n\t\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach (key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(string key; dict.keys)\n\t{\n\t\tsum += dict[key];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict.isNull)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tif(value is null)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122520,
      "stdout": "",
      "stderr": "/tmp/tmppunya1zs.d(13): Error: incompatible types for `(value) is (null)`: `long` and `typeof(null)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppunya1zs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t\treturn 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tif (dict is null) return 0;\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif (dict is null)\n\t{\n\t\treturn sum;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517284,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tif(dict is null)\n\t{\n\t\treturn 0;\n\t}\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\t\n\tif (dict is null)\n\t\treturn 0;\n\t\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict) \n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite function to find the sum of all items in the given associative array.\n\t\n*/\nlong return_sum(Nullable!(long[string]) dict) \n{\n\tlong sum = 0;\n\tforeach(key, value; dict)\n\t{\n\t\tsum += value;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = return_sum;\n\n    assert(candidate([\"a\": 100L, \"b\": 200L, \"c\": 300L].nullable) == 600L);\n    assert(candidate([\"a\": 25L, \"b\": 18L, \"c\": 45L].nullable) == 88L);\n    assert(candidate([\"a\": 36L, \"b\": 39L, \"c\": 49L].nullable) == 124L);\n}\nvoid main(){}",
      "timestamp": 1665517285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
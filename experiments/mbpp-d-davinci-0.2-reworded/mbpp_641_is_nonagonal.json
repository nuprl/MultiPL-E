{
  "name": "mbpp_641_is_nonagonal",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the nth nonagonal number.\n\t\n*/\nlong is_nonagonal(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_nonagonal;\n\n    assert(candidate(10L) == 325L);\n    assert(candidate(15L) == 750L);\n    assert(candidate(18L) == 1089L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn a*a == n;\n}",
    "{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}",
    "{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong x = (long)sqrt(1 + 8 * n);\n\treturn x * x == 1 + 8 * n && (x - 1) % 2 == 0;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2 == (long)(sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_term = 0;\n\tlong nth_term_count = 0;\n\tlong nth_term_count_prev = 0;\n\tlong nth_term_count_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_term_count_prev_prev",
    "{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}",
    "{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\tlong n10 = n * 10;\n\tlong n11 = n * 11;\n\tlong n12 = n * 12;\n\tlong n13 = n * 13;\n\tlong n14 = n * 14;\n\tlong n15 = n * 15;\n\tlong n16 = n * 16;\n\tlong n17 = n * 17;\n\tlong n18 = n * 18;\n\tlong n19 = n * 19;\n\tlong n20 = n * 20;\n\tlong n21 = n * 21;\n\tlong n22 = n * 22;\n\tlong n23 = n * 23;\n\tlong n24 = n * 24;\n\tlong n25 = n * 25;\n\tlong n26 = n * 26;\n\tlong n27 = n * 27;\n\tlong n28 = n * 28;\n\tlong n29 = n * 29;\n\tlong n30 = n * 30;\n\tlong n31 = n * 31;\n\tlong n32 = n * 32;\n\tlong n33 = n * 33;\n\tlong n34 = n * 34;\n\tlong n35 = n * 35;\n\tlong n36 = n * 36;\n\tlong n37 = n * 37;\n\tlong n38 = n * 38;\n\tlong n39 = n * 39;\n\tlong n40 = n * 40;\n\tlong n41 = n * 41;\n\tlong n42 = n * 42;\n\tlong n43 = n * 43;\n\tlong n44 = n * 44;\n\tlong n45 = n * 45;\n\tlong n46 = n * 46;\n\tlong n47 = n * 47;\n\tlong n48 = n * 48;\n\tlong n49 = n * 49;\n\tlong n50 = n * 50;\n\tlong n51 = n * 51;\n\tlong n52 = n * 52;",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong nth_prev_prev = 0;\n\tlong nth_prev_prev_prev = 0;\n\tlong nth_prev_prev_prev_prev = 0;\n\t\n\tif (n == 1) return 1;\n\t\n\tnth_prev = is_nonagonal(n - 1);\n\t\n\tif (n == 2) return nth_prev + 1;\n\t\n\tnth_prev_prev = is_nonagonal(n - 2);\n\t\n\tif (n == 3) return nth_prev + nth_prev_prev + 1;\n\t\n\tnth_prev_prev_prev = is_nonagonal(n - 3);\n\t\n\tif (n == 4) return nth_prev + nth_prev_prev + nth_prev_prev_prev + 1;\n\t\n\tnth_prev_prev_prev_prev = is_nonagonal(n - 4);\n\t\n\treturn nth_prev + nth_prev_prev + nth_prev_prev_prev + nth_prev_prev_prev_prev + 1;\n}",
    "{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\treturn (n_sqrt * n_sqrt == 1 + 8 * n) && (n_sqrt % 2 == 1);\n}",
    "{\n\tlong a = (long)sqrt(1 + 8*n);\n\treturn a*a == 1 + 8*n;\n}",
    "{\n\tlong x = (sqrt(8*n+1)-1)/2;\n\treturn x*(x+1)/2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\t\n\tif (n == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tnth_nonagonal = is_nonagonal(n - 1);\n\tnth_nonagonal_plus_1 = nth_nonagonal + 1;\n\tnth_nonagonal_plus_2 = nth_nonagonal_plus_1 + 1;\n\tnth_nonagonal_plus_3 = nth_nonagonal_plus_2 + 1;\n\tnth_nonagonal_plus_4 = nth_nonagonal_plus_3 + 1;\n\tnth_nonagonal_plus_5 = nth_nonagonal_plus_4 + 1;\n\tnth_nonagonal_plus_6 = nth_nonagonal_plus_5 + 1;\n\tnth_nonagonal_plus_7 = nth_nonagonal_plus_6 + 1;\n\tnth_nonagonal_plus_8 = nth_nonagonal_plus_7 + 1;\n\tnth_nonagonal_plus_9 = nth_nonagonal_plus_8 + 1;\n\t\n\treturn nth_nonagonal_plus_9;\n}",
    "{\n\treturn (1 + sqrt(1 + 8 * n)) / 2;\n}",
    "{\n\tlong nth = (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_plus_fourteen = 0;\n\tlong nth_nonagonal_sqr_plus_fifteen = 0;\n\tlong nth_nonagonal_sqr_plus_sixteen = 0;\n\tlong nth_nonagonal_sqr_plus_seventeen = 0;\n\tlong nth_nonagonal_sqr_plus_eighteen = 0;\n\tlong nth_nonagonal_sqr_plus_nineteen = 0;\n\tlong nth_nonagonal_sqr_plus_twenty = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_one = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_two = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_three = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_four = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_five = 0;\n\tlong nth_nonagonal_",
    "{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn (nth*(nth+1))/2 == n;\n}",
    "{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile(nth < n)\n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\tif(nth == n)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\tif(nth*(nth+1)/2 == n) return nth;\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}",
    "{\n\tlong nth = 0;\n\tlong i = 1;\n\twhile (nth < n) {\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8*n) - 1) / 2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\t\n\tnth_sqr = n * n;\n\tnth = nth_sqr + n;\n\t\n\treturn nth;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_prev = 0;\n\tlong i = 0;\n\twhile (nth < n) {\n\t\tnth_prev = nth;\n\t\tnth = (i * (3 * i - 1)) / 2;\n\t\ti++;\n\t}\n\tif (nth == n) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn (a * (a + 1)) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong n_sq = n * n;\n\tlong n_sq_plus_n = n_sq + n;\n\tlong n_sq_plus_n_div_2 = n_sq_plus_n / 2;\n\treturn n_sq_plus_n_div_2 * (n_sq_plus_n_div_2 + 1) == n_sq_plus_n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong n2 = n * 2;\n\tlong n3 = n2 + 1;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 + 1;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 + 1;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 + 1;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 + 1;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 + 1;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 + 1;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 + 1;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 + 1;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 + 1;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 + 1;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 + 1;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 + 1;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 + 1;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 + 1;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 + 1;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 + 1;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 + 1;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 + 1;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 + 1;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 + 1;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 + 1;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 + 1;\n\tlong n48",
    "{\n\tlong i = 0;\n\twhile (n > 0)\n\t{\n\t\tn -= i;\n\t\ti++;\n\t}\n\treturn n == 0;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1)/2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\tlong nth_nonagonal_plus_10 = 0;\n\tlong nth_nonagonal_plus_11 = 0;\n\tlong nth_nonagonal_plus_12 = 0;\n\tlong nth_nonagonal_plus_13 = 0;\n\tlong nth_nonagonal_plus_14 = 0;\n\tlong nth_nonagonal_plus_15 = 0;\n\tlong nth_nonagonal_plus_16 = 0;\n\tlong nth_nonagonal_plus_17 = 0;\n\tlong nth_nonagonal_plus_18 = 0;\n\tlong nth_nonagonal_plus_19 = 0;\n\tlong nth_nonagonal_plus_20 = 0;\n\tlong nth_nonagonal_plus_21 = 0;\n\tlong nth_nonagonal_plus_22 = 0;\n\tlong nth_nonagonal_plus_23 = 0;\n\tlong nth_nonagonal_plus_24 = 0;\n\tlong nth_nonagonal_plus_25 = 0;\n\tlong nth_nonagonal_plus_26 = 0;\n\tlong nth_nonagonal_plus_27 = 0;\n\tlong nth_nonagonal_plus_28 = 0;\n\tlong nth_nonagonal_plus_29 = 0;\n\tlong nth_nonagonal_plus_30 = 0;\n\tlong nth_nonagonal_plus_31 = 0;\n\tlong nth_nonagonal_plus_32 = 0;\n\tlong nth_nonagonal_plus_33 = 0;\n\tlong n",
    "{\n\tlong x = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn x*(x+1)/2 == n;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}",
    "{\n\tlong n_sq = n * n;\n\tlong n_sq_plus_n = n_sq + n;\n\tlong n_sq_plus_n_div_2 = n_sq_plus_n / 2;\n\tlong n_sq_plus_n_div_2_plus_1 = n_sq_plus_n_div_2 + 1;\n\tlong n_sq_plus_n_div_2_plus_1_sq = n_sq_plus_n_div_2_plus_1 * n_sq_plus_n_div_2_plus_1;\n\treturn n_sq_plus_n_div_2_plus_1_sq == n;\n}",
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\tlong i = 0;\n\twhile(n > 0) \n\t{\n\t\tn -= i;\n\t\ti++;\n\t}\n\treturn n == 0;\n}",
    "{\n\tlong nth = (long)sqrt(8 * n + 1);\n\treturn nth * (nth + 1) / 2 == n;\n}",
    "{\n\tauto a = cast(long) (sqrt(8*n + 1) - 1) / 2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth = (sqrt(8*n+1)-1)/2;\n\treturn nth;\n}",
    "{\n\tlong nth = (long)sqrt(2*n + 0.25) - 0.5;\n\treturn nth*(nth+1)/2 == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}",
    "{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\tlong n10 = n * 10;\n\tlong n11 = n * 11;\n\tlong n12 = n * 12;\n\tlong n13 = n * 13;\n\tlong n14 = n * 14;\n\tlong n15 = n * 15;\n\tlong n16 = n * 16;\n\tlong n17 = n * 17;\n\tlong n18 = n * 18;\n\tlong n19 = n * 19;\n\tlong n20 = n * 20;\n\tlong n21 = n * 21;\n\tlong n22 = n * 22;\n\tlong n23 = n * 23;\n\tlong n24 = n * 24;\n\tlong n25 = n * 25;\n\tlong n26 = n * 26;\n\tlong n27 = n * 27;\n\tlong n28 = n * 28;\n\tlong n29 = n * 29;\n\tlong n30 = n * 30;\n\tlong n31 = n * 31;\n\tlong n32 = n * 32;\n\tlong n33 = n * 33;\n\tlong n34 = n * 34;\n\tlong n35 = n * 35;\n\tlong n36 = n * 36;\n\tlong n37 = n * 37;\n\tlong n38 = n * 38;\n\tlong n39 = n * 39;\n\tlong n40 = n * 40;\n\tlong n41 = n * 41;\n\tlong n42 = n * 42;\n\tlong n43 = n * 43;\n\tlong n44 = n * 44;\n\tlong n45 = n * 45;\n\tlong n46 = n * 46;\n\tlong n47 = n * 47;\n\tlong n48 = n * 48;\n\tlong n49 = n * 49;\n\tlong n50 = n * 50;\n\tlong n51 = n * 51;\n\tlong n52 = n * 52;",
    "{\n\tlong a = (long) (sqrt(8.0 * n + 1.0) - 1.0) / 2.0;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong nth = (long)sqrt(1.0 + 8.0 * n);\n\treturn nth * (nth + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = (n * (n - 1)) / 2;\n\treturn nth_nonagonal;\n}",
    "{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth == floor(nth);\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}",
    "{\n\tlong m = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn m * (m + 1) == 2 * n;\n}",
    "{\n\tlong nth = 0;\n\tlong i = 0;\n\twhile (nth < n) \n\t{\n\t\tnth += i;\n\t\ti++;\n\t}\n\treturn nth == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong n2 = n * 2;\n\tlong n3 = n2 + 1;\n\tlong n4 = n3 * 2;\n\tlong n5 = n4 + 1;\n\tlong n6 = n5 * 2;\n\tlong n7 = n6 + 1;\n\tlong n8 = n7 * 2;\n\tlong n9 = n8 + 1;\n\tlong n10 = n9 * 2;\n\tlong n11 = n10 + 1;\n\tlong n12 = n11 * 2;\n\tlong n13 = n12 + 1;\n\tlong n14 = n13 * 2;\n\tlong n15 = n14 + 1;\n\tlong n16 = n15 * 2;\n\tlong n17 = n16 + 1;\n\tlong n18 = n17 * 2;\n\tlong n19 = n18 + 1;\n\tlong n20 = n19 * 2;\n\tlong n21 = n20 + 1;\n\tlong n22 = n21 * 2;\n\tlong n23 = n22 + 1;\n\tlong n24 = n23 * 2;\n\tlong n25 = n24 + 1;\n\tlong n26 = n25 * 2;\n\tlong n27 = n26 + 1;\n\tlong n28 = n27 * 2;\n\tlong n29 = n28 + 1;\n\tlong n30 = n29 * 2;\n\tlong n31 = n30 + 1;\n\tlong n32 = n31 * 2;\n\tlong n33 = n32 + 1;\n\tlong n34 = n33 * 2;\n\tlong n35 = n34 + 1;\n\tlong n36 = n35 * 2;\n\tlong n37 = n36 + 1;\n\tlong n38 = n37 * 2;\n\tlong n39 = n38 + 1;\n\tlong n40 = n39 * 2;\n\tlong n41 = n40 + 1;\n\tlong n42 = n41 * 2;\n\tlong n43 = n42 + 1;\n\tlong n44 = n43 * 2;\n\tlong n45 = n44 + 1;\n\tlong n46 = n45 * 2;\n\tlong n47 = n46 + 1;\n\tlong n48",
    "{\n\tlong d = sqrt(1 + 8 * n);\n\tif (d * d == 1 + 8 * n) \n\t{\n\t\treturn d;\n\t}\n\treturn 0;\n}",
    "{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth;\n}",
    "{\n\tlong a = (long)sqrt(n);\n\treturn (a*a == n && a % 2 == 1);\n}",
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\tlong a = (long)sqrt(8*n + 1);\n\treturn (a*a == 8*n + 1);\n}",
    "{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\tif (n_sqrt * n_sqrt == 1 + 8 * n)\n\t{\n\t\treturn (n_sqrt - 1) / 2;\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_plus_fourteen = 0;\n\tlong nth_nonagonal_sqr_plus_fifteen = 0;\n\tlong nth_nonagonal_sqr_plus_sixteen = 0;\n\tlong nth_nonagonal_sqr_plus_seventeen = 0;\n\tlong nth_nonagonal_sqr_plus_eighteen = 0;\n\tlong nth_nonagonal_sqr_plus_nineteen = 0;\n\tlong nth_nonagonal_sqr_plus_twenty = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_one = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_two = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_three = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_four = 0;\n\tlong nth_nonagonal_sqr_plus_twenty_five = 0;\n\tlong nth_nonagonal_",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1)/2 == n;\n}",
    "{\n\tlong x = (sqrt(8*n + 1) - 1) / 2;\n\treturn x*(x+1)/2 == n;\n}",
    "{\n\tlong n_ = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n_ * (n_ + 1) / 2 == n;\n}",
    "{\n\tlong n2 = n*2;\n\tlong n3 = n2*3;\n\tlong n4 = n3*4;\n\tlong n5 = n4*5;\n\tlong n6 = n5*6;\n\tlong n7 = n6*7;\n\tlong n8 = n7*8;\n\tlong n9 = n8*9;\n\tlong n10 = n9*10;\n\t\n\tlong n11 = n10*11;\n\tlong n12 = n11*12;\n\tlong n13 = n12*13;\n\tlong n14 = n13*14;\n\tlong n15 = n14*15;\n\tlong n16 = n15*16;\n\tlong n17 = n16*17;\n\tlong n18 = n17*18;\n\tlong n19 = n18*19;\n\tlong n20 = n19*20;\n\t\n\tlong n21 = n20*21;\n\tlong n22 = n21*22;\n\tlong n23 = n22*23;\n\tlong n24 = n23*24;\n\tlong n25 = n24*25;\n\tlong n26 = n25*26;\n\tlong n27 = n26*27;\n\tlong n28 = n27*28;\n\tlong n29 = n28*29;\n\tlong n30 = n29*30;\n\t\n\tlong n31 = n30*31;\n\tlong n32 = n31*32;\n\tlong n33 = n32*33;\n\tlong n34 = n33*34;\n\tlong n35 = n34*35;\n\tlong n36 = n35*36;\n\tlong n37 = n36*37;\n\tlong n38 = n37*38;\n\tlong n39 = n38*39;\n\tlong n40 = n39*40;\n\t\n\tlong n41 = n40*41;\n\tlong n42 = n41*42;\n\tlong n43 = n42*43;\n\tlong n44 = n43*44;\n\tlong n45 = n44*45;\n\tlong n46 = n45*46;\n\tlong n47 = n46",
    "{\n\treturn (n == (sqrt(8*n + 1) - 1)/2);\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (nth + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqrt = 0;\n\t\n\tnth_nonagonal_sqrt = (sqrt(1 + 8 * n) - 1) / 2;\n\t\n\tif(nth_nonagonal_sqrt * (nth_nonagonal_sqrt + 1) / 2 == n)\n\t\treturn nth_nonagonal_sqrt;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong nn = (long)sqrt(n);\n\treturn nn*(3*nn-1)/2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nn = (long)sqrt(2*n);\n\treturn nn*(nn+1) == 2*n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(8*n + 1) - 1) / 2;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_1 = 0;\n\tlong nth_nonagonal_sqr_plus_2 = 0;\n\tlong nth_nonagonal_sqr_plus_3 = 0;\n\tlong nth_nonagonal_sqr_plus_4 = 0;\n\tlong nth_nonagonal_sqr_plus_5 = 0;\n\tlong nth_nonagonal_sqr_plus_6 = 0;\n\tlong nth_nonagonal_sqr_plus_7 = 0;\n\tlong nth_nonagonal_sqr_plus_8 = 0;\n\tlong nth_nonagonal_sqr_plus_9 = 0;\n\tlong nth_nonagonal_sqr_plus_10 = 0;\n\tlong nth_nonagonal_sqr_plus_11 = 0;\n\tlong nth_nonagonal_sqr_plus_12 = 0;\n\tlong nth_nonagonal_sqr_plus_13 = 0;\n\tlong nth_nonagonal_sqr_plus_14 = 0;\n\tlong nth_nonagonal_sqr_plus_15 = 0;\n\tlong nth_nonagonal_sqr_plus_16 = 0;\n\tlong nth_nonagonal_sqr_plus_17 = 0;\n\tlong nth_nonagonal_sqr_plus_18 = 0;\n\tlong nth_nonagonal_sqr_plus_19 = 0;\n\tlong nth_nonagonal_sqr_plus_20 = 0;\n\tlong nth_nonagonal_sqr_plus_21 = 0;\n\tlong nth_nonagonal_sqr_plus_22 = 0;\n\tlong nth_nonagonal_sqr_plus_23 = 0;\n\tlong nth_nonagonal_sqr_plus_24 = 0;\n\tlong nth_nonagonal_sqr_plus_25 = 0;\n\tlong nth_nonagonal_sqr_plus_26 = 0;\n\tlong nth_nonagonal_sqr_plus_27 = 0",
    "{\n\tlong t = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn t * (t + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\tlong nth_nonagonal_sqr_minus_one = 0;\n\tlong nth_nonagonal_sqr_plus_two = 0;\n\tlong nth_nonagonal_sqr_minus_two = 0;\n\tlong nth_nonagonal_sqr_plus_three = 0;\n\tlong nth_nonagonal_sqr_minus_three = 0;\n\tlong nth_nonagonal_sqr_plus_four = 0;\n\tlong nth_nonagonal_sqr_minus_four = 0;\n\tlong nth_nonagonal_sqr_plus_five = 0;\n\tlong nth_nonagonal_sqr_minus_five = 0;\n\tlong nth_nonagonal_sqr_plus_six = 0;\n\tlong nth_nonagonal_sqr_minus_six = 0;\n\tlong nth_nonagonal_sqr_plus_seven = 0;\n\tlong nth_nonagonal_sqr_minus_seven = 0;\n\tlong nth_nonagonal_sqr_plus_eight = 0;\n\tlong nth_nonagonal_sqr_minus_eight = 0;\n\tlong nth_nonagonal_sqr_plus_nine = 0;\n\tlong nth_nonagonal_sqr_minus_nine = 0;\n\tlong nth_nonagonal_sqr_plus_ten = 0;\n\tlong nth_nonagonal_sqr_minus_ten = 0;\n\tlong nth_nonagonal_sqr_plus_eleven = 0;\n\tlong nth_nonagonal_sqr_minus_eleven = 0;\n\tlong nth_nonagonal_sqr_plus_twelve = 0;\n\tlong nth_nonagonal_sqr_minus_twelve = 0;\n\tlong nth_nonagonal_sqr_plus_thirteen = 0;\n\tlong nth_nonagonal_sqr_minus_thirteen = 0;\n\tlong nth_nonagonal_sqr",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong n_sqrt = sqrt(n);\n\treturn (n_sqrt * n_sqrt == n) && (n_sqrt % 2 == 1);\n}",
    "{\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tlong e = 1;\n\tlong f = 1;\n\tlong g = 1;\n\tlong h = 1;\n\tlong i = 1;\n\tlong j = 1;\n\tlong k = 1;\n\tlong l = 1;\n\tlong m = 1;\n\tlong o = 1;\n\tlong p = 1;\n\tlong q = 1;\n\tlong r = 1;\n\tlong s = 1;\n\tlong t = 1;\n\tlong u = 1;\n\tlong v = 1;\n\tlong w = 1;\n\tlong x = 1;\n\tlong y = 1;\n\tlong z = 1;\n\t\n\tlong aa = 1;\n\tlong bb = 1;\n\tlong cc = 1;\n\tlong dd = 1;\n\tlong ee = 1;\n\tlong ff = 1;\n\tlong gg = 1;\n\tlong hh = 1;\n\tlong ii = 1;\n\tlong jj = 1;\n\tlong kk = 1;\n\tlong ll = 1;\n\tlong mm = 1;\n\tlong oo = 1;\n\tlong pp = 1;\n\tlong qq = 1;\n\tlong rr = 1;\n\tlong ss = 1;\n\tlong tt = 1;\n\tlong uu = 1;\n\tlong vv = 1;\n\tlong ww = 1;\n\tlong xx = 1;\n\tlong yy = 1;\n\tlong zz = 1;\n\t\n\tlong aaa = 1;\n\tlong bbb = 1;\n\tlong ccc = 1;\n\tlong ddd = 1;\n\tlong eee = 1;\n\tlong fff = 1;\n\tlong ggg = 1;\n\tlong hhh = 1;\n\tlong iii = 1;\n\tlong jjj = 1;\n\tlong kkk = 1;\n\tlong lll = 1;\n\tlong mmm = 1;\n\tlong ooo = 1;\n\tlong ppp = 1;\n\tlong qqq = 1;\n\tlong rrr = 1;\n\tlong sss",
    "{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == long(nth);\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\tlong nth_sq_plus_nth = 0;\n\t\n\tnth_sq = n * n;\n\tnth_sq_plus_nth = nth_sq + n;\n\t\n\tif (nth_sq_plus_nth % 2 == 0) {\n\t\tnth = nth_sq_plus_nth / 2;\n\t} else {\n\t\tnth = -1;\n\t}\n\t\n\treturn nth;\n}",
    "{\n\tlong nn = (long)sqrt(2*n);\n\treturn (nn*(nn+1))/2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth == int(nth);\n}",
    "{\n\tlong nth = (sqrt(1 + 8*n) - 1) / 2;\n\treturn nth == floor(nth);\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sum = 0;\n\tlong nth_nonagonal_sum_sqrt = 0;\n\t\n\tnth_nonagonal_sum = (n * 2) - 1;\n\tnth_nonagonal_sum_sqrt = sqrt(nth_nonagonal_sum);\n\t\n\tif (nth_nonagonal_sum_sqrt * nth_nonagonal_sum_sqrt == nth_nonagonal_sum)\n\t{\n\t\tnth_nonagonal = nth_nonagonal_sum_sqrt;\n\t}\n\t\n\treturn nth_nonagonal;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == floor(nth);\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\tif (nth*(nth+1)/2 == n)\n\t\treturn nth;\n\treturn 0;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong x = (long)sqrt(1 + 8 * n);\n\treturn x * x == 1 + 8 * n;\n}",
    "{\n\tlong a = (long) sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}",
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\tlong nth = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}",
    "{\n\tlong a = (long)sqrt(8*n+1);\n\treturn a*a == 8*n+1;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}",
    "{\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\t\n\tif (n < 0)\n\t\treturn 0;\n\t\n\ta = (long)sqrt(n);\n\tb = a * (a + 1);\n\tc = n - b;\n\td = a + 1 - c;\n\t\n\tif (c == 0)\n\t\treturn a;\n\t\n\treturn d;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong nn = n;\n\tlong i = 1;\n\twhile(nn > 0) {\n\t\tnn -= i;\n\t\ti++;\n\t}\n\treturn nn == 0;\n}",
    "{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\treturn n_sqrt * n_sqrt == 1 + 8 * n;\n}",
    "{\n\tlong n_sqrt = sqrt(n);\n\treturn n_sqrt * (n_sqrt + 1) == 2 * n;\n}",
    "{\n\treturn (n == (sqrt(1+8*n)-1)/2);\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_plus_1 = 0;\n\tlong nth_nonagonal_plus_2 = 0;\n\tlong nth_nonagonal_plus_3 = 0;\n\tlong nth_nonagonal_plus_4 = 0;\n\tlong nth_nonagonal_plus_5 = 0;\n\tlong nth_nonagonal_plus_6 = 0;\n\tlong nth_nonagonal_plus_7 = 0;\n\tlong nth_nonagonal_plus_8 = 0;\n\tlong nth_nonagonal_plus_9 = 0;\n\tlong nth_nonagonal_plus_10 = 0;\n\tlong nth_nonagonal_plus_11 = 0;\n\tlong nth_nonagonal_plus_12 = 0;\n\tlong nth_nonagonal_plus_13 = 0;\n\tlong nth_nonagonal_plus_14 = 0;\n\tlong nth_nonagonal_plus_15 = 0;\n\tlong nth_nonagonal_plus_16 = 0;\n\tlong nth_nonagonal_plus_17 = 0;\n\tlong nth_nonagonal_plus_18 = 0;\n\tlong nth_nonagonal_plus_19 = 0;\n\tlong nth_nonagonal_plus_20 = 0;\n\tlong nth_nonagonal_plus_21 = 0;\n\tlong nth_nonagonal_plus_22 = 0;\n\tlong nth_nonagonal_plus_23 = 0;\n\tlong nth_nonagonal_plus_24 = 0;\n\tlong nth_nonagonal_plus_25 = 0;\n\tlong nth_nonagonal_plus_26 = 0;\n\tlong nth_nonagonal_plus_27 = 0;\n\tlong nth_nonagonal_plus_28 = 0;\n\tlong nth_nonagonal_plus_29 = 0;\n\tlong nth_nonagonal_plus_30 = 0;\n\tlong nth_nonagonal_plus_31 = 0;\n\tlong nth_nonagonal_plus_32 = 0;\n\tlong nth_nonagonal_plus_33 = 0;\n\tlong n",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong n_sqrt = cast(long) sqrt(n);\n\tif (n_sqrt * n_sqrt == n) {\n\t\treturn n_sqrt;\n\t}\n\treturn 0;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}",
    "{\n\tlong a = (long)floor(sqrt(8 * n + 1));\n\treturn a * a == 8 * n + 1;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = (long)sqrt(2*n);\n\treturn nth*(nth+1) == 2*n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong i = 0;\n\twhile(nth_nonagonal < n) \n\t{\n\t\ti++;\n\t\tnth_nonagonal += i;\n\t}\n\tif(nth_nonagonal == n) \n\t{\n\t\treturn i;\n\t}\n\treturn 0;\n}",
    "{\n\tlong nth = (long)sqrt(8*n + 1);\n\treturn nth*(nth+1)/2 == n;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\t\n\tnth = (long) ((sqrt(8*n + 1) - 1)/2);\n\tnth_sq = (nth * (nth + 1))/2;\n\t\n\tif (nth_sq == n)\n\t\treturn nth;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong nth_nonagonal = n * (3 * n - 2);\n\treturn nth_nonagonal;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 + n - 2*n = 0\n\t// n = (-1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (1 + sqrt(1 + 8*n))/2\n\t// n = (",
    "{\n\tlong a = (long) sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}",
    "{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_prev = 0;\n\tlong nth_nonagonal_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_nonagonal_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n\tlong nth_",
    "{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}",
    "{\n\t// n = (3*n^2 - n)/2\n\t// n^2 + n - 2*n = 0\n\t// n = (-1 + sqrt(1 + 8*n))/2\n\treturn (n == (long)((-1 + sqrt(1 + 8*n))/2));\n}",
    "{\n\treturn (sqrt(8*n+1) == floor(sqrt(8*n+1)));\n}",
    "{\n\tlong nth = (sqrt(8*n + 1) - 1) / 2;\n\treturn nth;\n}",
    "{\n\tlong nth = (long) sqrt(2 * n + 0.25) - 0.5;\n\treturn (nth * (nth + 1)) / 2 == n;\n}",
    "{\n\tlong n_sqrt = cast(long)sqrt(n);\n\treturn n_sqrt * n_sqrt == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}",
    "{\n\tlong x = (long)sqrt(1 + 8*n);\n\treturn (x*x == 1 + 8*n);\n}",
    "{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\tnth_sqr = nth * nth;\n\tnth_sqr_plus_nth = nth_sqr + nth;\n\t\n\tif (n == nth_sqr_plus_nth)\n\t\treturn nth;\n\telse\n\t\treturn -1;\n}",
    "{\n\tlong nth = (long)sqrt(1 + 8*n);\n\treturn nth*nth == 1 + 8*n;\n}",
    "{\n\tlong m = (long)floor(sqrt(2*n));\n\treturn m*(m+1) == 2*n;\n}",
    "{\n\tlong nn = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nn * (nn + 1) / 2 == n;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sq = 0;\n\t\n\tnth_sq = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\t\n\tif (nth_sq * (nth_sq + 1) / 2 == n)\n\t\treturn nth_sq;\n\telse\n\t\treturn -1;\n}",
    "{\n\tlong n_sqrt = sqrt(n);\n\treturn n_sqrt * (n_sqrt + 1) / 2;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong i = 0;\n\twhile (nth_nonagonal < n) \n\t{\n\t\tnth_nonagonal = (i * (i + 1)) / 2;\n\t\ti++;\n\t}\n\treturn nth_nonagonal == n;\n}",
    "{\n\tlong nth = (long) sqrt(2 * n + 0.25) - 0.5;\n\treturn nth * (nth + 1) / 2 == n;\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong nth = (long) (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth * (3 * nth - 1) / 2 == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == (long)nth;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(1+8*n)-1)/2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong a = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong n_ = (long)sqrt(2*n);\n\treturn (n_*(n_+1))/2 == n;\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth_nonagonal = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nth_nonagonal;\n}",
    "{\n\tlong x = (long) sqrt(2*n);\n\treturn (x*(x+1) == 2*n);\n}",
    "{\n\tlong x = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn x * (x + 1) / 2 == n;\n}",
    "{\n\tlong a = (sqrt(8*n+1)-1)/2;\n\treturn a*(a+1)/2 == n;\n}",
    "{\n\tlong x = (1 + sqrt(1 + 8 * n)) / 2;\n\treturn x == (long)x;\n}",
    "{\n\tlong root = (long) sqrt(1 + 8 * n);\n\treturn (root * root == 1 + 8 * n) && (root % 2 == 1);\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nn = n;\n\tlong i = 1;\n\twhile (nn > 0) {\n\t\tnn -= i;\n\t\ti++;\n\t}\n\treturn nn == 0;\n}",
    "{\n\tlong nth_nonagonal = (n * (3 * n - 1)) / 2;\n\treturn nth_nonagonal;\n}",
    "{\n\tlong a = (1 + sqrt(1 + 8 * n)) / 2;\n\treturn a == trunc(a);\n}",
    "{\n\treturn (n * (3 * n - 1)) / 2;\n}",
    "{\n\tlong nth = (long) floor(sqrt(8*n + 1));\n\treturn (nth*(nth+1))/2 == n;\n}",
    "{\n\tlong n_sqrt = (long)sqrt(n);\n\treturn n_sqrt * n_sqrt == n;\n}",
    "{\n\tlong a = (long)sqrt(1 + 8 * n);\n\treturn a * a == 1 + 8 * n && a % 2 == 1;\n}",
    "{\n\tlong m = (long)sqrt(2*n);\n\treturn (m*(m+1) == 2*n);\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}",
    "{\n\tlong a = (long)sqrt(8*n + 1);\n\treturn a*a == 8*n + 1;\n}",
    "{\n\tlong nn = (long) (sqrt(8 * n + 1) - 1) / 2;\n\treturn nn * (3 * nn - 1) / 2 == n;\n}",
    "{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}",
    "{\n\tlong n_sqrt = sqrt(1 + 8 * n);\n\tif (n_sqrt * n_sqrt == 1 + 8 * n)\n\t{\n\t\treturn (n_sqrt - 1) / 2;\n\t}\n\treturn -1;\n}",
    "{\n\tlong x = (sqrt(1 + 8*n) - 1) / 2;\n\treturn x*(x+1)/2 == n;\n}",
    "{\n\tlong a = (sqrt(8*n + 1) - 1) / 2;\n\treturn a * (a + 1) / 2 == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth == int(nth);\n}",
    "{\n\tlong a = (long)sqrt(2*n);\n\treturn (a*(a+1))/2 == n;\n}",
    "{\n\tlong nth = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth;\n}",
    "{\n\tlong n_sqrt = cast(long) sqrt(n);\n\treturn (n_sqrt * n_sqrt == n) && (n_sqrt % 2 == 1);\n}",
    "{\n\treturn (sqrt(1 + 8 * n) - 1) / 2;\n}",
    "{\n\tlong nth = 0;\n\tlong nth_sqr = 0;\n\tlong nth_sqr_plus_nth = 0;\n\t\n\tnth = (long)((sqrt(1 + 8 * n) - 1) / 2);\n\tnth_sqr = nth * nth;\n\tnth_sqr_plus_nth = nth_sqr + nth;\n\t\n\tif (nth_sqr_plus_nth == n)\n\t\treturn nth;\n\telse\n\t\treturn 0;\n}",
    "{\n\tlong nth_nonagonal = 0;\n\tlong nth_nonagonal_sqr = 0;\n\tlong nth_nonagonal_sqr_plus_one = 0;\n\t\n\tnth_nonagonal_sqr = n * n;\n\tnth_nonagonal_sqr_plus_one = nth_nonagonal_sqr + 1;\n\t\n\tnth_nonagonal = nth_nonagonal_sqr_plus_one * (nth_nonagonal_sqr_plus_one + 1) / 2;\n\t\n\treturn nth_nonagonal;\n}",
    "{\n\tlong n1 = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn n1 * (n1 + 1) / 2 == n;\n}",
    "{\n\tlong nth_nonagonal = (sqrt(1 + 8 * n) - 1) / 2;\n\treturn nth_nonagonal == cast(long)nth_nonagonal;\n}",
    "{\n\tlong n2 = n * 2;\n\tlong n3 = n * 3;\n\tlong n4 = n * 4;\n\tlong n5 = n * 5;\n\tlong n6 = n * 6;\n\tlong n7 = n * 7;\n\tlong n8 = n * 8;\n\tlong n9 = n * 9;\n\t\n\tlong n2_1 = n2 + 1;\n\tlong n2_2 = n2 + 2;\n\tlong n2_3 = n2 + 3;\n\tlong n2_4 = n2 + 4;\n\tlong n2_5 = n2 + 5;\n\tlong n2_6 = n2 + 6;\n\tlong n2_7 = n2 + 7;\n\tlong n2_8 = n2 + 8;\n\tlong n2_9 = n2 + 9;\n\t\n\tlong n3_1 = n3 + 1;\n\tlong n3_2 = n3 + 2;\n\tlong n3_3 = n3 + 3;\n\tlong n3_4 = n3 + 4;\n\tlong n3_5 = n3 + 5;\n\tlong n3_6 = n3 + 6;\n\tlong n3_7 = n3 + 7;\n\tlong n3_8 = n3 + 8;\n\tlong n3_9 = n3 + 9;\n\t\n\tlong n4_1 = n4 + 1;\n\tlong n4_2 = n4 + 2;\n\tlong n4_3 = n4 + 3;\n\tlong n4_4 = n4 + 4;\n\tlong n4_5 = n4 + 5;\n\tlong n4_6 = n4 + 6;\n\tlong n4_7 = n4 + 7;\n\tlong n4_8 = n4 + 8;\n\tlong n4_9 = n4 + 9;\n\t\n\tlong n5_1 = n5 + 1;\n\tlong n5_2 = n5 + 2;\n\tlong n5_3 = n5 + 3;\n\tlong n5_4 = n5 + 4;\n\tlong n5_5 = n5 + 5;\n\tlong n5_",
    "{\n\tlong x = (long)sqrt(1 + 8*n);\n\treturn x*x == 1 + 8*n;\n}"
  ]
}
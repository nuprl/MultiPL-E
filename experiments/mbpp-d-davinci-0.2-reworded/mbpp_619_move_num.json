{
  "name": "mbpp_619_move_num",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to move all the numbers to the end of the given string.\n\t\n*/\nstring move_num(string test_str) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = move_num;\n\n    assert(candidate(\"I1love143you55three3000thousand\") == \"Iloveyouthreethousand1143553000\");\n    assert(candidate(\"Avengers124Assemble\") == \"AvengersAssemble124\");\n    assert(candidate(\"Its11our12path13to14see15things16do17things\") == \"Itsourpathtoseethingsdothings11121314151617\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring[] str_arr = test_str.split(\"\");\n\tstring[] num_arr = [];\n\tstring[] result_arr = [];\n\tforeach(string str; str_arr)\n\t{\n\t\tif(str.length == 1 && str[0] >= '0' && str[0] <= '9')\n\t\t{\n\t\t\tnum_arr ~= str;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult_arr ~= str;\n\t\t}\n\t}\n\treturn result_arr.join(\"\") ~ num_arr.join(\"\");\n}",
    "{\n\tstring num_str;\n\tstring alpha_str;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tnum_str ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\talpha_str ~= c;\n\t\t}\n\t}\n\treturn alpha_str ~ num_str;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(char c; test_str)\n\t{\n\t\tif(isdigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!isdigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\n/*\n\tWrite a function to check if the given string is a palindrome.\n*/",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tnums ~= c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isdigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isdigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t\telse\n\t\t\tresult = c ~ result;\n\t}\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = test_str.length - 1;\n\tstring result = test_str;\n\twhile (i < j) \n\t{\n\t\tif (result[i] >= '0' && result[i] <= '9') \n\t\t{\n\t\t\tif (result[j] >= '0' && result[j] <= '9') \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tswap(result[i], result[j]);\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring res = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{ \n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n} ",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring res;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(ch; test_str)\n\t{\n\t\tif(ch.isDigit)\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\tforeach(ch; test_str)\n\t{\n\t\tif(!ch.isDigit)\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tint[] nums = test_str.filter!(a => a.isDigit).map!(a => a.to!int).array;\n\tstring[] strs = test_str.filter!(a => !a.isDigit).array;\n\treturn strs.join(\"\") ~ nums.join(\"\");\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint len = test_str.length;\n\tstring result_str = \"\";\n\t\n\twhile(i < len)\n\t{\n\t\tif(test_str[i] >= '0' && test_str[i] <= '9')\n\t\t{\n\t\t\tresult_str ~= test_str[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_str[j] = test_str[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn test_str[0..j] ~ result_str;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tstring nums;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] str_arr = test_str.split(\"\");\n\tstring[] num_arr;\n\tstring[] char_arr;\n\tforeach(i, str; str_arr)\n\t{\n\t\tif(str.length > 0)\n\t\t{\n\t\t\tif(str[0] >= '0' && str[0] <= '9')\n\t\t\t{\n\t\t\t\tnum_arr ~= str;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchar_arr ~= str;\n\t\t\t}\n\t\t}\n\t}\n\treturn char_arr.join(\"\") ~ num_arr.join(\"\");\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(c < '0' || c > '9')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isdigit(c))\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str) {\n\t\tif(c >= '0' && c <= '9') {\n\t\t\tnums ~= c;\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring res = \"\";\n\tstring num = \"\";\n\tforeach(ch; test_str)\n\t{\n\t\tif(ch.isDigit)\n\t\t\tnum ~= ch;\n\t\telse\n\t\t\tres ~= ch;\n\t}\n\treturn res ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\tresult ~= nums;\n\treturn result;\n}",
    "{\n\tstring str_num = \"\";\n\tstring str_char = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tstr_num ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr_char ~= c;\n\t\t}\n\t}\n\treturn str_char ~ str_num;\n}",
    "{\n\tstring num_str = \"\";\n\tstring char_str = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif (c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_str ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tchar_str ~= c;\n\t\t}\n\t}\n\treturn char_str ~ num_str;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tresult ~= c;\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(c < '0' || c > '9')\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num_str = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_str ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tresult ~= num_str;\n\treturn result;\n}",
    "{\n\tstring nums = \"\";\n\tstring chars = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tchars ~= c;\n\t}\n\treturn chars ~ nums;\n}",
    "{\n\tstring result;\n\tstring nums;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isdigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isdigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring res;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str) {\n\t\tif(c >= '0' && c <= '9') {\n\t\t\tnum ~= c;\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tnum ~= c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring nums = \"0123456789\";\n\tstring result = \"\";\n\tstring num_result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(nums.canFind(c))\n\t\t{\n\t\t\tnum_result ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num_result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring res;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint len = test_str.length;\n\tstring result = \"\";\n\twhile (i < len)\n\t{\n\t\tif (test_str[i] >= '0' && test_str[i] <= '9')\n\t\t{\n\t\t\tresult ~= test_str[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttest_str[j] = test_str[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\treturn test_str[0..j] ~ result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num_str = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_str ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tresult ~= num_str;\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(ch; test_str)\n\t{\n\t\tif(isdigit(ch))\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\tforeach(ch; test_str)\n\t{\n\t\tif(!isdigit(ch))\n\t\t{\n\t\t\tresult ~= ch;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring nums = \"0123456789\";\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str) {\n\t\tif(c.isDigit) {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str) {\n\t\tif(!c.isDigit) {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tstring num_str;\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum_str ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\t\n\treturn result ~ num_str;\n}",
    "{\n\tstring ret_str;\n\tint i = 0;\n\tint j = 0;\n\tint len = test_str.length;\n\t\n\twhile(i < len)\n\t{\n\t\tif(test_str[i] >= '0' && test_str[i] <= '9')\n\t\t{\n\t\t\tret_str ~= test_str[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret_str = ret_str[0..$-1] ~ test_str[i] ~ ret_str[$-1..$];\n\t\t}\n\t\ti++;\n\t}\n\treturn ret_str;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring num_str = \"\";\n\tstring char_str = \"\";\n\tforeach(ch; test_str) \n\t{\n\t\tif(ch.isDigit) \n\t\t{\n\t\t\tnum_str ~= ch;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tchar_str ~= ch;\n\t\t}\n\t}\n\treturn char_str ~ num_str;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(char c; test_str) {\n\t\tif(c >= '0' && c <= '9') {\n\t\t\tnums ~= c;\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring str_result = \"\";\n\tstring num_result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnum_result ~= c;\n\t\telse\n\t\t\tstr_result ~= c;\n\t}\n\treturn str_result ~ num_result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring[] str_arr;\n\tstring[] num_arr;\n\tstring result;\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum_arr ~= c;\n\t\telse\n\t\t\tstr_arr ~= c;\n\t}\n\t\n\tresult = str_arr.join ~ num_arr.join;\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t\telse\n\t\t\tresult = c ~ result;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring str_num = \"\";\n\tstring str_char = \"\";\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tstr_num ~= c;\n\t\telse\n\t\t\tstr_char ~= c;\n\t}\n\treturn str_char ~ str_num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isAlpha)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring nums = \"0123456789\";\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring res = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnums ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tint i = 0;\n\twhile (i < test_str.length) \n\t{\n\t\tif (test_str[i] >= '0' && test_str[i] <= '9') \n\t\t{\n\t\t\tresult = result ~ test_str[i];\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile (i < test_str.length) \n\t{\n\t\tif (test_str[i] < '0' || test_str[i] > '9') \n\t\t{\n\t\t\tresult = result ~ test_str[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring res;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tint i = 0;\n\tint j = 0;\n\tint len = test_str.length;\n\tchar[] result = new char[len];\n\t\n\twhile(i < len) {\n\t\tif(test_str[i] >= '0' && test_str[i] <= '9') {\n\t\t\tresult[j] = test_str[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\ti = 0;\n\twhile(i < len) {\n\t\tif(test_str[i] < '0' || test_str[i] > '9') {\n\t\t\tresult[j] = test_str[i];\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn result.toString;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str) \n\t{\n\t\tif(!c.isDigit) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring res = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tres ~= c;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t\tnums ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t\telse\n\t\t\tresult = c ~ result;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tnum ~= c;\n\t\telse\n\t\t\tresult ~= c;\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str) \n\t{\n\t\tif(c >= '0' && c <= '9') \n\t\t{\n\t\t\tnum ~= c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"0123456789\";\n\tforeach(c; test_str)\n\t{\n\t\tif(nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!nums.canFind(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\t\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\t\n\treturn result ~ num;\n}",
    "{\n\tstring num_str = \"\";\n\tstring str_str = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_str ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr_str ~= c;\n\t\t}\n\t}\n\treturn str_str ~ num_str;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(char c; test_str)\n\t{\n\t\tif(isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\tforeach(char c; test_str)\n\t{\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\tforeach(c; test_str)\n\t{\n\t\tif(!c.isDigit)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tstring nums = \"\";\n\tforeach(c; test_str) {\n\t\tif(c.isDigit) {\n\t\t\tnums ~= c;\n\t\t} else {\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ nums;\n}",
    "{\n\tstring result = \"\";\n\tstring num = \"\";\n\tforeach(c; test_str)\n\t{\n\t\tif(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum ~= c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result ~ num;\n}"
  ]
}
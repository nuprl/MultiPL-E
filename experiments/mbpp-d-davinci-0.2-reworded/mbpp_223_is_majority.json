{
  "name": "mbpp_223_is_majority",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n\t\n*/\nbool is_majority(long[] arr, long n, long x) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_majority;\n\n    assert(candidate([1L, 2L, 3L, 3L, 3L, 3L, 10L], 7L, 3L) == true);\n    assert(candidate([1L, 1L, 2L, 4L, 4L, 4L, 6L, 6L], 8L, 4L) == false);\n    assert(candidate([1L, 1L, 1L, 2L, 2L], 5L, 1L) == true);\n    assert(candidate([1L, 1L, 2L, 2L], 5L, 1L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i < j) \n    { \n        if (arr[mid] == x && arr[mid + n/2] == x) \n            return true; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n  \n        mid = (i + j) / 2; \n    } \n    return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x != arr[mid - 1])) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x > arr[mid - 1])) \n            break; \n        else if (x > arr[mid]) \n            i = mid + 1; \n        else\n            j = mid - 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2 <= (n - 1)) && arr[mid + n / 2] == x) \n        return true; \n    else if (mid - n / 2 >= 0 && arr[mid - n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > (n / 2);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(elem == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0, j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x != arr[mid - 1])) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn (count > n/2);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x > arr[mid - 1])) \n        { \n            break; \n        } \n        else if (x > arr[mid]) \n        { \n            i = mid + 1; \n        } \n        else\n        { \n            j = mid - 1; \n        } \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n    { \n        return false; \n    } \n    if (mid + n / 2 <= n - 1 && arr[mid + n / 2] == x) \n    { \n        return true; \n    } \n    else\n    { \n        return false; \n    } \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x != arr[mid - 1])) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong i = 0;\n\tlong count = 0;\n\t\n\twhile (i < n)\n\t{\n\t\tif (arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x > arr[mid - 1])) \n        { \n            break; \n        } \n        else if (x > arr[mid]) \n        { \n            i = mid + 1; \n        } \n        else\n        { \n            j = mid - 1; \n        } \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n    { \n        return false; \n    } \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n    { \n        return true; \n    } \n    else\n    { \n        return false; \n    } \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0, j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) { \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || x > arr[mid - 1])) \n            break; \n        else if (x > arr[mid]) \n            i = mid + 1; \n        else\n            j = mid - 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{ \n    long i = 0, j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    return (mid + n / 2 < n && arr[mid + n / 2] == x); \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong mid = n / 2;\n\tlong start = 0;\n\tlong end = n - 1;\n\tlong index = -1;\n\twhile (start <= end) \n\t{\n\t\tlong mid = (start + end) / 2;\n\t\tif (arr[mid] == x) \n\t\t{\n\t\t\tindex = mid;\n\t\t\tbreak;\n\t\t}\n\t\telse if (arr[mid] < x) \n\t\t{\n\t\t\tstart = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tend = mid - 1;\n\t\t}\n\t}\n\tif (index == -1) \n\t{\n\t\treturn false;\n\t}\n\tif (index + mid > n - 1) \n\t{\n\t\treturn true;\n\t}\n\treturn arr[index + mid] == x;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn (count > n/2);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n) \n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong[] res = arr.filter!(a => a == x);\n\treturn res.length > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif (arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(elem; arr)\n\t{\n\t\tif(elem == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) \n            break; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{ \n    long i = 0, j = n - 1; \n    while (i <= j) \n    { \n        long mid = (i + j) / 2; \n        if (arr[mid] == x) \n        { \n            long count = 0; \n            for (long k = mid; k < n; k++) \n            { \n                if (arr[k] == x) \n                    count++; \n                else\n                    break; \n            } \n            if (count > n / 2) \n                return true; \n            else\n                return false; \n        } \n        else if (arr[mid] > x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n    } \n    return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\t\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong i = 0;\n\tlong count = 0;\n\twhile (i < n) \n\t{\n\t\tif (arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\tif (count > n / 2) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn (count > n/2);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong i = 0;\n\tlong j = n - 1;\n\tlong mid = (i + j) / 2;\n\t\n\twhile (i <= j)\n\t{\n\t\tif (arr[mid] == x)\n\t\t{\n\t\t\tif (mid + n/2 < n && arr[mid + n/2] == x)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (arr[mid] > x)\n\t\t\tj = mid - 1;\n\t\telse\n\t\t\ti = mid + 1;\n\t\t\n\t\tmid = (i + j) / 2;\n\t}\n\t\n\treturn false;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) { \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) \n            break; \n        if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    if (i > j) \n        return false; \n    return (mid + n / 2 < n && arr[mid + n / 2] == x); \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0, j = n - 1; \n    while (i <= j) { \n        long mid = (i + j) / 2; \n        if (arr[mid] == x && (mid == n / 2 || arr[mid + 1] != x)) \n            return true; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n    } \n    return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong[] result = arr.filter!(a => a == x);\n\tif(result.length > n / 2)\n\t\treturn true;\n\treturn false;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        if (arr[mid] > x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n    } \n  \n    // If element is not present \n    if (i > j) \n        return false; \n  \n    // check if x is present more than n/2 times \n    if ((mid + n / 2 <= j) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong c = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tc++;\n\t}\n\treturn c > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2 <= (n - 1)) && arr[mid + n / 2] == x) \n        return true; \n    else if (mid - n / 2 >= 0 && arr[mid - n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong[] result = arr.filter!(a => a == x);\n\treturn result.length > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong[] result = arr.filter!(a => a == x);\n\treturn result.length > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n    if (i > j) \n        return false; \n    if ((mid + n / 2 <= n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else if (mid - n / 2 >= 0 && arr[mid - n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n / 2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{ \n    long i = 0; \n    long count = 0; \n    for (i = 0; i < n; i++) \n    { \n        if (arr[i] == x) \n            count++; \n    } \n    if (count > n / 2) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n  \n    while (i <= j) { \n        mid = (i + j) / 2; \n  \n        if (arr[mid] == x && (mid == n / 2 || arr[mid + 1] != x)) \n            return true; \n  \n        else if (arr[mid] >= x) \n            j = mid - 1; \n  \n        else\n            i = mid + 1; \n    } \n  \n    return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i <= j) { \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) \n            return true; \n        if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n        mid = (i + j) / 2; \n    } \n    return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif (arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\treturn false;\n}",
    "{\n\tlong[] res = arr.filter!(a => a == x);\n\treturn res.length > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long count = 0; \n    for (i = 0; i < n; i++) \n    { \n        if (arr[i] == x) \n            count++; \n    } \n    if (count > n / 2) \n        return true; \n    else\n        return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = (i + j) / 2; \n    while (i < j) \n    { \n        if (arr[mid] == x && arr[mid + n/2] == x) \n            return true; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n        mid = (i + j) / 2; \n    } \n    if (arr[mid] == x && arr[mid + n/2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\t\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0, j = n - 1; \n    while (i <= j) { \n        long mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n  \n    // If x is present in arr[], then i is not changed, \n    // else i is changed \n    if (i <= j) { \n        // find the index of first occurrence of x \n        long first = i; \n        while (first < n && arr[first] == x) \n            first++; \n  \n        // If x is present more than n/2 times, then  \n        // first occurrence must be at-least at index  \n        // n/2 \n        if (first <= n / 2) \n            return true; \n    } \n  \n    return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n  \n    if (i > j) \n        return false; \n  \n    if ((mid + n / 2 <= (n - 1)) && arr[mid + n / 2] == x) \n        return true; \n    else if (mid - n / 2 >= 0 && arr[mid - n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{ \n    long i = 0; \n    while (i < n) \n    { \n        if (arr[i] == x) \n            break; \n        i++; \n    } \n  \n    // If element is not present \n    if (i == n) \n        return false; \n  \n    // check if the element is present more than n/2 times \n    if (((i + n / 2) <= (n - 1)) && arr[i + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif (arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong i = 0;\n\tlong j = n - 1;\n\tlong mid = (i + j) / 2;\n\t\n\twhile(i <= j)\n\t{\n\t\tif(arr[mid] == x)\n\t\t{\n\t\t\tif(mid + n / 2 < n && arr[mid + n / 2] == x)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(arr[mid] > x)\n\t\t\tj = mid - 1;\n\t\telse\n\t\t\ti = mid + 1;\n\t\t\n\t\tmid = (i + j) / 2;\n\t}\n\t\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr) \n\t{\n\t\tif(i == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n  \n    // Find the index of the first occurrence of the element \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x && (mid == 0 || arr[mid - 1] < x)) \n            break; \n        else if (arr[mid] < x) \n            i = mid + 1; \n        else\n            j = mid - 1; \n    } \n  \n    // If element is not present \n    if (i > j) \n        return false; \n  \n    // If element is present, check if it is majority element \n    if ((mid + n / 2) <= (n - 1) && arr[mid + n / 2] == x) \n        return true; \n    else\n        return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{ \n    long i = 0, j = n - 1; \n    while (i <= j) { \n        long mid = (i + j) / 2; \n        if (arr[mid] == x) { \n            if ((mid == n / 2) || (arr[mid - 1] != x && mid == n / 2 - 1) || (arr[mid + 1] != x && mid == n / 2 + 1)) \n                return true; \n            else if (arr[mid - 1] == x) \n                j = mid - 2; \n            else\n                i = mid + 2; \n        } \n        else if (arr[mid] > x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n    } \n    return false; \n} ",
    "{ \n    long i = 0; \n    long j = n - 1; \n    long mid = 0; \n    while (i <= j) \n    { \n        mid = (i + j) / 2; \n        if (arr[mid] == x && (mid == n / 2 || arr[mid - 1] != x)) \n            return true; \n        else if (arr[mid] >= x) \n            j = mid - 1; \n        else\n            i = mid + 1; \n    } \n    return false; \n} ",
    "{ \n    long i = 0; \n    long count = 0; \n    for (i = 0; i < n; i++) \n    { \n        if (arr[i] == x) \n            count++; \n    } \n    if (count > n / 2) \n        return true; \n  \n    return false; \n} ",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn (count > n/2);\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n / 2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n/2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n) \n\t{\n\t\tif(arr[i] == x) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n / 2) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\t\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(arr[i] == x)\n\t\t\tcount++;\n\t}\n\treturn count > n/2;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count > n / 2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}",
    "{\n\tlong count = 0;\n\tforeach(long i; arr)\n\t{\n\t\tif(i == x)\n\t\t\tcount++;\n\t}\n\tif(count > n/2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}"
  ]
}
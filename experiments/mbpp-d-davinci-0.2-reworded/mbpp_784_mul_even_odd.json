{
  "name": "mbpp_784_mul_even_odd",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given array.\n\t\n*/\nlong mul_even_odd(long[] list1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile(j < list1.length)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tj++;\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1) \n\t{\n\t\tif (i % 2 != 0) \n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tint j = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\twhile(j < list1.length)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd = list1[j];\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(even == 0)\n\t\t\t{\n\t\t\t\teven = num;\n\t\t\t}\n\t\t\telse if(odd == 0)\n\t\t\t{\n\t\t\t\todd = num;\n\t\t\t}\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tlong product = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven_num = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(j; list1)\n\t{\n\t\tif(j % 2 != 0)\n\t\t{\n\t\t\todd_num = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tproduct = even_num * odd_num;\n\t\n\treturn product;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\t\n\tforeach(l; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = l;\n\t\t\ti++;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = l;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong product = 0;\n\tint i = 0;\n\tforeach(element; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = element;\n\t\t\ti = 1;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = element;\n\t\t\ti = 0;\n\t\t}\n\t}\n\tproduct = even * odd;\n\treturn product;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long item; list1)\n\t{\n\t\tif(i == 0)\n\t\t\teven = item;\n\t\telse if(i == 1)\n\t\t\todd = item;\n\t\ti++;\n\t}\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\twhile(i < list1.length)\n\t{\n\t\tif(list1[i] % 2 == 1)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tfor(; i < list1.length; i++)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(; i < list1.length; i++)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint even_count = 0;\n\tint odd_count = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\teven_count++;\n\t\t\tif(even_count == 1)\n\t\t\t{\n\t\t\t\teven_num = num;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t\tif(odd_count == 1)\n\t\t\t{\n\t\t\t\todd_num = num;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn even_num * odd_num;\n}",
    "{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint i = 0;\n\tforeach(long num; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven_num = num;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd_num = num;\n\t\t}\n\t\ti++;\n\t}\n\treturn even_num * odd_num;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong product = 0;\n\t\n\tforeach(long num; list1)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\teven = num;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = num;\n\t\t\tj++;\n\t\t}\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tproduct = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn product;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}"
  ]
}
{
  "name": "mbpp_589_perfect_squares",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tlong sq = i * i;\n\t\tif(sq >= a && sq <= b)\n\t\t\tresult ~= sq;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp1cnbxkqd.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1cnbxkqd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk7c8ont.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tlong sq;\n\tlong i;\n\tforeach(i; a .. b)\n\t{\n\t\tsq = cast(long)sqrt(i);\n\t\tif(sq*sq == i)\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmppf_aqp50.d(13): Error: variable `i` is shadowing variable `tmppf_aqp50.perfect_squares.i`\n/tmp/tmppf_aqp50.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppf_aqp50.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpy93l8r41.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy93l8r41.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i.isPerfectSquare)\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpablvavya.d(13): Error: no property `isPerfectSquare` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpablvavya.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. a.sqrt)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpt3u2fqbn.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3u2fqbn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret = new long[];\n\t\n\tlong i = cast(long)sqrt(a);\n\tlong j = cast(long)sqrt(b);\n\t\n\twhile(i <= j)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tret ~= i*i;\n\t\ti++;\n\t}\n\t\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpxq87d84x.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpxq87d84x.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpxq87d84x.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxq87d84x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. a)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2etr1ok7.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428345]\n??:? void tmp2etr1ok7.__unittest_L20_C1() [0x427f29]\n??:? void tmp2etr1ok7.__modtest() [0x4280c8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430601]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43058d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb85]\n??:? runModuleUnitTests [0x42caf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428794]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp0rf3wc6w.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rf3wc6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpt6o0qtgj.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpt6o0qtgj.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6o0qtgj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpvetq1psh.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvetq1psh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp7e4n843d.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7e4n843d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. (b - a + 1))\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t\tresult ~= a + i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpnyp2_i7c.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnyp2_i7c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tlong i = a;\n\twhile(i <= b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t\ti++;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp1veuhl05.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1veuhl05.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5a_uckwz.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428345]\n??:? void tmp5a_uckwz.__unittest_L20_C1() [0x427f97]\n??:? void tmp5a_uckwz.__modtest() [0x4280c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430601]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43058d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb85]\n??:? runModuleUnitTests [0x42caf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428794]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong sqrt_a = cast(long)sqrt(a);\n\tlong sqrt_b = cast(long)sqrt(b);\n\t\n\tresult = new long[sqrt_b - sqrt_a + 1];\n\t\n\tfor (i = sqrt_a; i <= sqrt_b; i++)\n\t{\n\t\tresult[j] = i * i;\n\t\tj++;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpug80ow__.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpug80ow__.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpug80ow__.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\t\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\t\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp9atrdfx_.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp9atrdfx_.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9atrdfx_.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i <= a)\n\t{\n\t\ti = j * j;\n\t\tif (i >= a && i <= b)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t\tj++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpd4t5tboy.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4t5tboy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qs8c2vw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif (i*i >= a && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp0_cq08ie.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_cq08ie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (is_perfect_square(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpyxqxrek2.d(17): Error: undefined identifier `is_perfect_square`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyxqxrek2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpun3ub7jm.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpun3ub7jm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk7c8ont.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp5wco9mqu.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp5wco9mqu.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp5wco9mqu.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(a <= i*i && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp4lpk_ve_.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lpk_ve_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif (i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp4gjdrhcj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4gjdrhcj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; iota(a, b + 1))\n\t{\n\t\tif(i * i >= a && i * i <= b)\n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp980wv_2r.d(11): Error: undefined identifier `iota`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp980wv_2r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpch62pzlo.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpch62pzlo.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpch62pzlo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(a <= i*i && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpspn03bv5.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpspn03bv5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp3nv_4clt.d(13): Error: variable `i` is shadowing variable `tmp3nv_4clt.perfect_squares.i`\n/tmp/tmp3nv_4clt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp3nv_4clt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpqbvj0mng.d(13): Error: variable `i` is shadowing variable `tmpqbvj0mng.perfect_squares.i`\n/tmp/tmpqbvj0mng.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpqbvj0mng.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp91ftsabo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp91ftsabo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp91ftsabo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\tforeach(i; a..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpkvqxo9x7.d(12): Error: variable `i` is shadowing variable `tmpkvqxo9x7.perfect_squares.i`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvqxo9x7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp6p3de21b.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp6p3de21b.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp6p3de21b.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpbfj_8d0x.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpbfj_8d0x.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpbfj_8d0x.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(a <= i*i && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpvw97xamq.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw97xamq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a..b)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpmoumaodo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpmoumaodo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmoumaodo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmptsl2i1e2.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptsl2i1e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp7sdd038f.d(14): Error: variable `i` is shadowing variable `tmp7sdd038f.perfect_squares.i`\n/tmp/tmp7sdd038f.d(16): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7sdd038f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tassert(a <= b);\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpihw46i_9.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpihw46i_9.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihw46i_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpqbvj0mng.d(13): Error: variable `i` is shadowing variable `tmpqbvj0mng.perfect_squares.i`\n/tmp/tmpqbvj0mng.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpqbvj0mng.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b)) \n\t{\n\t\tif(i*i >= a && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp09irggta.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp09irggta.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tlong j = 0;\n\t\n\tforeach(long x; a..b)\n\t{\n\t\tif(x == i*i)\n\t\t{\n\t\t\tresult ~= x;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkyiyxlx8.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428335]\n??:? void tmpkyiyxlx8.__unittest_L25_C1() [0x427f19]\n??:? void tmpkyiyxlx8.__modtest() [0x4280b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bb9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4305f1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430aa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43057d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb75]\n??:? runModuleUnitTests [0x42cae1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428784]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tif (a > b)\n\t\treturn result;\n\t\n\tforeach (i; a .. b)\n\t{\n\t\tif (i == sqrt(i) * sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpx4y90a1c.d(16): Error: variable `i` is shadowing variable `tmpx4y90a1c.perfect_squares.i`\n/tmp/tmpx4y90a1c.d(18): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpx4y90a1c.d(18): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpy93l8r41.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy93l8r41.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a .. b) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp6glymksl.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp6glymksl.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6glymksl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpw1ankne6.d(13): Error: variable `i` is shadowing variable `tmpw1ankne6.perfect_squares.i`\n/tmp/tmpw1ankne6.d(15): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw1ankne6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i*i>=a && i*i<=b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp81k4xs8m.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428345]\n??:? void tmp81k4xs8m.__unittest_L20_C1() [0x427f97]\n??:? void tmp81k4xs8m.__modtest() [0x4280c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430601]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43058d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb85]\n??:? runModuleUnitTests [0x42caf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428794]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(long i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp34xk50od.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp34xk50od.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp34xk50od.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tforeach(long n; a..b)\n\t{\n\t\tif(isPerfectSquare(n))\n\t\t{\n\t\t\tresult ~= n;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpx3ckyrcw.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3ckyrcw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tret ~= i;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp7doiz4r1.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7doiz4r1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp0rf3wc6w.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rf3wc6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long) sqrt(i) * cast(long) sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpco9raov3.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpco9raov3.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpco9raov3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)(sqrt(i) * sqrt(i)))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpav2ktasg.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpav2ktasg.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpav2ktasg.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qs8c2vw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpf2tdv6zh.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpf2tdv6zh.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2tdv6zh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tlong square = i * i;\n\t\tif (square >= a && square <= b) \n\t\t{\n\t\t\tresult ~= square;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpt4iqqcw2.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4iqqcw2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b)) \n\t{\n\t\tif(a <= i * i && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp08lb0o2v.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp08lb0o2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] squares;\n\tlong i;\n\t\n\tsquares = [];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(is(typeof(sqrt(i)) == double))\n\t\t{\n\t\t\tsquares ~= i;\n\t\t}\n\t}\n\t\n\treturn squares;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd4xfsblj.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x428315]\n??:? void tmpd4xfsblj.__unittest_L25_C1() [0x427ef9]\n??:? void tmpd4xfsblj.__modtest() [0x428098]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b192]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430325]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4302b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b169]\n??:? runModuleUnitTests [0x42c0d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428764]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(a <= i*i && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpspn03bv5.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpspn03bv5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8ybbrc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(immutable i; 0 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpdivp0p3o.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdivp0p3o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpbb27_24n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpbb27_24n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbb27_24n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor(long i = a; i <= b; i++) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpk3wb3nip.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpk3wb3nip.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpk3wb3nip.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\t// Find the square root of the first number.\n\tlong sqrt_a = cast(long)sqrt(a);\n\t// Find the square root of the second number.\n\tlong sqrt_b = cast(long)sqrt(b);\n\t// Create an array to store the perfect squares.\n\tlong[] perfect_squares;\n\t// Loop through the square roots and add the perfect squares to the array.\n\tfor (long i = sqrt_a; i <= sqrt_b; i++) \n\t{\n\t\tperfect_squares ~= i * i;\n\t}\n\treturn perfect_squares;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp84c1by34.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp84c1by34.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp84c1by34.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tlong j = 0;\n\tlong sq = 0;\n\t\n\tif (a > b)\n\t\treturn result;\n\t\n\tforeach (sq; iota(a, b + 1))\n\t{\n\t\tif (isPerfectSquare(sq))\n\t\t{\n\t\t\tresult ~= sq;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp1mxk_sdh.d(18): Error: undefined identifier `iota`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1mxk_sdh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tint i = 0;\n\tfor (long j = a; j <= b; j++)\n\t{\n\t\tif (isPerfectSquare(j))\n\t\t{\n\t\t\tresult ~= j;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpnzymf976.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnzymf976.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpvo_iw31l.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvo_iw31l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpbucvlp85.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpbucvlp85.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpbucvlp85.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a .. b) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpahmv7m8l.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpahmv7m8l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b)) \n\t{\n\t\tif(a <= i*i && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpsxjozvq1.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsxjozvq1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpg2pqfiq_.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpg2pqfiq_.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2pqfiq_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpvo_iw31l.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvo_iw31l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i < b; i++) \n\t{\n\t\tif(i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpychqdhbf.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpychqdhbf.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpychqdhbf.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] squares;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tsquares ~= i*i;\n\t\t}\n\t}\n\treturn squares;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpd0mwelkw.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0mwelkw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong sqrt_a = cast(long)sqrt(a);\n\tlong sqrt_b = cast(long)sqrt(b);\n\tfor(long i = sqrt_a; i <= sqrt_b; i++)\n\t{\n\t\tif(i * i >= a && i * i <= b)\n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmphbt2y73d.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmphbt2y73d.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmphbt2y73d.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp0rf3wc6w.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0rf3wc6w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i*i >= a && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpodl81v4c.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodl81v4c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong sqrt_a = cast(long) sqrt(a);\n\tlong sqrt_b = cast(long) sqrt(b);\n\tforeach(i; sqrt_a..sqrt_b)\n\t{\n\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp_odvi4eb.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp_odvi4eb.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_odvi4eb.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1..sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpppl4hfa_.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpppl4hfa_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == sqrt(i)*sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmphdbwladk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmphdbwladk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphdbwladk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tres ~= i*i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp_cnei5gv.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_cnei5gv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpzpmc27dr.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpzpmc27dr.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzpmc27dr.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i, j;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tfor (j = 1; j <= sqrt(i); j++)\n\t\t{\n\t\t\tif (j * j == i)\n\t\t\t{\n\t\t\t\tresult ~= i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpvwhrae05.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpvwhrae05.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvwhrae05.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp3nv_4clt.d(13): Error: variable `i` is shadowing variable `tmp3nv_4clt.perfect_squares.i`\n/tmp/tmp3nv_4clt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp3nv_4clt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8ybbrc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i, j;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpxivcct31.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpxivcct31.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpxivcct31.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp0qs8c2vw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0qs8c2vw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpis03pe8_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis03pe8_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. a)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp4sc8p9vl.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4sc8p9vl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmptmv2uhjt.d(13): Error: variable `i` is shadowing variable `tmptmv2uhjt.perfect_squares.i`\n/tmp/tmptmv2uhjt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmptmv2uhjt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == i*i)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp644iavbg.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428325]\n??:? void tmp644iavbg.__unittest_L20_C1() [0x427f09]\n??:? void tmp644iavbg.__modtest() [0x4280a8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ccfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bb8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4305e1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430a90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43056d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb65]\n??:? runModuleUnitTests [0x42cad1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428774]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpbucvlp85.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpbucvlp85.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpbucvlp85.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp1gtz7cgb.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp1gtz7cgb.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1gtz7cgb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpuhphxjty.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpuhphxjty.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpuhphxjty.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp7e4n843d.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7e4n843d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpm8ybbrc4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm8ybbrc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor (long i = a; i <= b; i++)\n\t{\n\t\tif (i == sqrt(i) * sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp4r52kobk.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp4r52kobk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp4r52kobk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong sqrt_a = cast(long)sqrt(a);\n\tlong sqrt_b = cast(long)sqrt(b);\n\t\n\tif(sqrt_a == sqrt_b)\n\t{\n\t\tif(a == b)\n\t\t{\n\t\t\tresult = new long[1];\n\t\t\tresult[0] = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = new long[0];\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new long[sqrt_b - sqrt_a + 1];\n\t\tforeach(i; 0..result.length)\n\t\t{\n\t\t\tresult[i] = (sqrt_a + i) * (sqrt_a + i);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp2uajly6m.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2uajly6m.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2uajly6m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpuhphxjty.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpuhphxjty.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpuhphxjty.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpd_jjk2i4.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpd_jjk2i4.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd_jjk2i4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpluob129i.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpluob129i.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluob129i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tforeach(long x; a .. b)\n\t{\n\t\tif(x == x.sqrt.sqr)\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp82dzae90.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82dzae90.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i <= b; i++) \n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpc4jnph0m.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpc4jnph0m.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpc4jnph0m.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpqw4g7vh5.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqw4g7vh5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpcpucy6s7.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpcpucy6s7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpcpucy6s7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. a) \n\t{\n\t\tif(isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpp0llrc48.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0llrc48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmptmv2uhjt.d(13): Error: variable `i` is shadowing variable `tmptmv2uhjt.perfect_squares.i`\n/tmp/tmptmv2uhjt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmptmv2uhjt.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong sqrt_a = cast(long)sqrt(a);\n\tlong sqrt_b = cast(long)sqrt(b);\n\t\n\tif (sqrt_a * sqrt_a == a) \n\t{\n\t\tresult ~= a;\n\t\tsqrt_a++;\n\t}\n\t\n\tif (sqrt_b * sqrt_b == b) \n\t{\n\t\tresult ~= b;\n\t\tsqrt_b--;\n\t}\n\t\n\tforeach (i; sqrt_a .. sqrt_b) \n\t{\n\t\tresult ~= i * i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp4aay8o8z.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp4aay8o8z.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4aay8o8z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpwk7c8ont.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwk7c8ont.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tforeach(long x; a .. b)\n\t{\n\t\tif(x == cast(long)sqrt(x) * cast(long)sqrt(x))\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpzy7ve0ir.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzy7ve0ir.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzy7ve0ir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpli_gj_tf.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpli_gj_tf.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpli_gj_tf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmptsl2i1e2.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptsl2i1e2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmps4pjaqse.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmps4pjaqse.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps4pjaqse.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i = 0;\n\tforeach(long x; a..b)\n\t{\n\t\tif(x == cast(long)sqrt(x) * cast(long)sqrt(x))\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpwuxc2h8w.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpwuxc2h8w.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwuxc2h8w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tres ~= i*i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpi4b8tp5b.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi4b8tp5b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tif (a > b)\n\t\treturn result;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpqr82rvlu.d(16): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpqr82rvlu.d(20): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr82rvlu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; iota(a, b + 1))\n\t{\n\t\tif(i * i >= a && i * i <= b)\n\t\t\tresult ~= i * i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp_t73bx7v.d(11): Error: undefined identifier `iota`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_t73bx7v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp5mdznj1z.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp5mdznj1z.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp5mdznj1z.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzalze48n.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzalze48n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(a <= i*i && i*i <= b) \n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmp4lpk_ve_.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lpk_ve_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong i = (long)sqrt(a);\n\twhile (i * i <= b) \n\t{\n\t\tresult ~= i * i;\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpc41ysm54.d(11): Error: C style cast illegal, use `cast(long)sqrt(a)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc41ysm54.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == cast(long) sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpgey516c5.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpgey516c5.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpgey516c5.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpom301ns6.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpom301ns6.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpom301ns6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp3t2licjr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3t2licjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret = new long[];\n\t\n\tfor (long i = a; i <= b; i++)\n\t{\n\t\tif (is_perfect_square(i))\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\t\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmphtawg1uw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmphtawg1uw.d(14): Error: undefined identifier `is_perfect_square`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphtawg1uw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tres ~= i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmp77d_wdp7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp77d_wdp7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp77d_wdp7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpd_jjk2i4.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpd_jjk2i4.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd_jjk2i4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b))\n\t{\n\t\tif(a <= i*i && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "/tmp/tmpspn03bv5.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpspn03bv5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(a <= i * i && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpdivqn2e0.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdivqn2e0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmppm3jvo4b.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmppm3jvo4b.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppm3jvo4b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7zoxjcu1.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7zoxjcu1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpskh91ra1.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpskh91ra1.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpskh91ra1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517610,
      "stdout": "",
      "stderr": "/tmp/tmpjqm289n1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjqm289n1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tauto result = [];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i)*sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "/tmp/tmpu5xoqvl6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpu5xoqvl6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpu5xoqvl6.d(15): Error: cannot append type `long` to type `void[]`\n/tmp/tmpu5xoqvl6.d(18): ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
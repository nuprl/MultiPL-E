{
  "name": "mbpp_251_insert_element",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that takes in an array and an element and inserts the element before each element in the array, and returns the resulting array.\n\t\n*/\nstring[] insert_element(string[] list, string element) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_251_insert_element.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = insert_element;\n\n    assert(candidate([\"Red\", \"Green\", \"Black\"], \"c\") == [\"c\", \"Red\", \"c\", \"Green\", \"c\", \"Black\"]);\n    assert(candidate([\"python\", \"java\"], \"program\") == [\"program\", \"python\", \"program\", \"java\"]);\n    assert(candidate([\"happy\", \"sad\"], \"laugh\") == [\"laugh\", \"happy\", \"laugh\", \"sad\"]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tauto result = new string[];\n\tforeach(item; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, item; list) \n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint j = 0;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult[j] = element;\n\t\tresult[j+1] = list[i];\n\t\tj += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(string s; list)\n\t{\n\t\tresult ~= element ~ s;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length];\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tresult[i] = element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i, e; list)\n\t{\n\t\tnew_list ~= element ~ e;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[0];\n\tforeach(string s; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= s;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list) \n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(string item; list)\n\t{\n\t\tnew_list ~= element ~ item;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result[0..i];\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tnew_list[i] = element;\n\t\tnew_list[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i++] = element;\n\t\tresult[i++] = s;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(string item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i, e; list)\n\t{\n\t\tnew_list ~= element ~ e;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(string str; list)\n\t{\n\t\tnew_list ~= element ~ str;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i, item; list) \n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tnew_list ~= element;\n\t\tnew_list ~= list[i];\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(string s; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= s;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(index, value; list) \n\t{\n\t\tresult ~= element ~ value;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint index = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[index] = element;\n\t\tresult[index + 1] = s;\n\t\tindex += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(string item; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tint length = list.length;\n\tstring[] result = new string[length * 2];\n\tint i = 0;\n\tforeach(string s; list) \n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, item; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string item; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = item;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(string s; list)\n\t{\n\t\tresult ~= element ~ s;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result[0 .. i];\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string item; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = item;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(string item; list)\n\t{\n\t\tnew_list ~= element ~ item;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, item; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint j = 0;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult[j] = element;\n\t\tresult[j + 1] = list[i];\n\t\tj += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i, e; list)\n\t{\n\t\tnew_list ~= element ~ e;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i+1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list) \n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint j = 0;\n\tforeach(i, e; list) {\n\t\tresult[j] = element;\n\t\tresult[j + 1] = e;\n\t\tj += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i, e; list)\n\t{\n\t\tnew_list ~= element;\n\t\tnew_list ~= e;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\t\n\tforeach(index, item; list)\n\t{\n\t\tresult[index * 2] = element;\n\t\tresult[index * 2 + 1] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(index, value; list)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= value;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i; 0 .. list.length) \n\t{\n\t\tnew_list ~= element;\n\t\tnew_list ~= list[i];\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i, e; list)\n\t{\n\t\tresult ~= element ~ e;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tnew_list ~= element;\n\t\tnew_list ~= list[i];\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0..list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element ~ list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(string item; list)\n\t{\n\t\tresult ~= element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] new_list;\n\tforeach(string item; list)\n\t{\n\t\tnew_list ~= element;\n\t\tnew_list ~= item;\n\t}\n\treturn new_list;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint i = 0;\n\tforeach(string s; list)\n\t{\n\t\tresult[i] = element;\n\t\tresult[i + 1] = s;\n\t\ti += 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length];\n\tforeach(i, item; list)\n\t{\n\t\tresult[i] = element ~ item;\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result;\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tresult ~= element;\n\t\tresult ~= list[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring[] result = new string[list.length * 2];\n\tint index = 0;\n\tforeach(string s; list) \n\t{\n\t\tresult[index] = element;\n\t\tresult[index + 1] = s;\n\t\tindex += 2;\n\t}\n\treturn result;\n}"
  ]
}
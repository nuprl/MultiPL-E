{
  "name": "mbpp_166_find_even_pair",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that counts the number of pairs of integers in an array that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif(A[i] ^ A[j] % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; 0 .. A.length)\n\t\t{\n\t\t\tif(i != j && (A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif( (A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}"
  ]
}
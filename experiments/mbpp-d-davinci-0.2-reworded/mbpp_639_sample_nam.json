{
  "name": "mbpp_639_sample_nam",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\n\t\n*/\nlong sample_nam(string[] sample_names) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = sample_nam;\n\n    assert(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16L);\n    assert(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10L);\n    assert(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name.length > 0 && name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t{\n\t\t\tsum += sample_name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] < 'a')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t\tsum += name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(sample_name; sample_names)\n\t{\n\t\tif(sample_name[0] >= 'A' && sample_name[0] <= 'Z')\n\t\t\tsum += sample_name.length;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(string name; sample_names)\n\t{\n\t\tif(name[0] >= 'A' && name[0] <= 'Z')\n\t\t{\n\t\t\tsum += name.length;\n\t\t}\n\t}\n\treturn sum;\n}"
  ]
}
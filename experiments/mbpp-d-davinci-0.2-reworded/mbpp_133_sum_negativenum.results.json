{
  "name": "mbpp_133_sum_negativenum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_133_sum_negativenum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the sum of the positive numbers of a given array of numbers.\n*/\nlong sum_positivenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the sum of the even numbers of a given array of numbers.\n*/\nlong sum_evennum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num % 2 == 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the sum of the odd numbers of a given array of numbers.\n*/\nlong sum_oddnum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num % 2 != 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the sum of the prime numbers of a given array of numbers.\n*/\nlong sum_primenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 1)\n\t\t{\n\t\t\tbool isPrime = true;\n\t\t\tfor(long i = 2; i <= num / 2; i++)\n\t\t\t{\n\t\t\t\tif(num % i == 0)\n\t\t\t\t{\n\t\t\t\t\tisPrime = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isPrime)\n\t\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517189,
      "stdout": "",
      "stderr": "/tmp/tmpp9ji8y2f.d(86): Error: found `unittest` instead of statement\n/tmp/tmpp9ji8y2f.d(94): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpp9ji8y2f.d(94): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp9ji8y2f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tif(nums[i] < 0)\n\t\t{\n\t\t\tsum += nums[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to find the maximum element in array of numbers. Filter out all non-number elements.\n*/\nlong max_num(long[] nums)\n{\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}\n/*\n\tWrite a function to find the maximum and minimum elements. Use function overloading.\n*/\nlong max_num(long[] nums, long[] nums2)\n{\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\tforeach(num2; nums2)\n\t{\n\t\tif(num2 > max)\n\t\t{\n\t\t\tmax = num2;\n\t\t}\n\t}\n\treturn max;\n}\nlong min_num(long[] nums, long[] nums2)\n{\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\tforeach(num2; nums2)\n\t{\n\t\tif(num2 < min)\n\t\t{\n\t\t\tmin = num2;\n\t\t}\n\t}\n\treturn min;\n}\n/*\n\tWrite a function to find the average of N elements. Make the function flexible to receive dynamic number or parameters.\n*/\nlong average(long[] nums)\n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tsum += num;\n\t}\n\treturn sum/nums.length;\n}\n/*\n\tThe body mass index (B\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmpbrikffyu.d(88): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbrikffyu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tif(nums[i] < 0)\n\t\t{\n\t\t\tsum += nums[i];\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the average value of an array of numbers.\n*/\ndouble average(long[] nums)\n{\n\tdouble sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum / nums.length;\n}\n/*\n\tWrite a function to find the maximum value of an array of numbers.\n*/\nlong max(long[] nums)\n{\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max;\n}\n/*\n\tWrite a function to find the minimum value of an array of numbers.\n*/\nlong min(long[] nums)\n{\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn min;\n}\n/*\n\tWrite a function to find the median value of an array of numbers.\n*/\ndouble median(long[] nums)\n{\n\tdouble median = 0;\n\tif(nums.length % 2 == 0)\n\t{\n\t\tmedian = (nums[nums.length / 2] + nums[nums.length / 2 - 1]) / 2;\n\t}\n\telse\n\t{\n\t\tmedian = nums[nums.length / 2];\n\t}\n\treturn median;\n}\n/*\n\tWrite a function to find the mode value(s) of an array of numbers.\n*/\nlong[] mode(long[] nums)\n{\n\tlong[] mode = [];\n\tlong[] temp = nums;\n\ttemp.sort;\n\tlong max = 0;\n\tlong count = 0;\n\tforeach(i; temp)\n\t{\n\t\tif(i == temp[i + 1])\n\t\t{\n\t\t\tcount++;\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmp196q1_dm.d(87): Error: found `unittest` instead of statement\n/tmp/tmp196q1_dm.d(95): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmp196q1_dm.d(95): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp196q1_dm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums) \n\t{\n\t\tif(i < 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\n/*\n\tWrite a function to calculate the average value of an array of numbers.\n*/\ndouble average(long[] nums)\n{\n\tdouble sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum / nums.length;\n}\n/*\n\tWrite a function to find the maximum value of an array of numbers.\n*/\nlong max(long[] nums)\n{\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max;\n}\n/*\n\tWrite a function to find the minimum value of an array of numbers.\n*/\nlong min(long[] nums)\n{\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn min;\n}\n/*\n\tWrite a function to find the median value of an array of numbers.\n*/\ndouble median(long[] nums)\n{\n\tnums.sort();\n\treturn nums[nums.length / 2];\n}\n/*\n\tWrite a function to find the mode value(s) of an array of numbers.\n*/\nlong[] mode(long[] nums)\n{\n\tlong[] mode = new long[];\n\tlong[] count = new long[];\n\tlong max = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i in mode)\n\t\t{\n\t\t\tcount[mode.indexOf(i)]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmode ~= i;\n\t\t\tcount ~= 1;\n\t\t}\n\t}\n\tforeach(i; count)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn mode\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmpq0h1nczy.d(90): Error: found `unittest` when expecting `;` following `return` statement\n/tmp/tmpq0h1nczy.d(98): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq0h1nczy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\n/*\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmp_wtssxbg.d(18): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_wtssxbg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach (n; nums)\n\t{\n\t\tif (n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) {\n\t\tif(num < 0) {\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach (num; nums) \n\t{\n\t\tif (num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n    long sum = 0;\n    foreach(n; nums)\n    {\n        if(n < 0)\n        {\n            sum += n;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given array of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_72_dif_Square",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\twhile (n % 2 == 0) \n\t\tn /= 2;\n\t\n\tif (n % 2 == 1) \n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpts4iy6co.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpts4iy6co.__unittest_L21_C1() [0x427a78]\n??:? void tmpts4iy6co.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i * i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp2pze9_q7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2pze9_q7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\tif(root * root == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp7fgqr1c_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7fgqr1c_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tif (n / i == i)\n\t\t\t\treturn true;\n\t\t\telse if (isPerfectSquare(n / i - i))\n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpudtdbmm_.d(19): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpudtdbmm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tif(n == 0)\n\t\treturn true;\n\t\n\tif(n % 4 == 1)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8tt9iziw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp8tt9iziw.__unittest_L21_C1() [0x427a9a]\n??:? void tmp8tt9iziw.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmph7qmitfx.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph7qmitfx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpthaxg5oo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpthaxg5oo.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthaxg5oo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return true; \n    for (long i = 2; i <= n / 2; i++) { \n        if (n % i == 0) { \n            long count = 0; \n            while (n % i == 0) { \n                n = n / i; \n                count++; \n            } \n            if (i % 4 == 3 && count % 2 != 0) \n                return false; \n        } \n    } \n    return n % 4 != 3; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl3qtg6in.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpl3qtg6in.__unittest_L29_C1() [0x427b1f]\n??:? void tmpl3qtg6in.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = cast(long) sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmplm8d_f1s.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplm8d_f1s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = (long)sqrt(n);\n\treturn x * x == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmppe61h_po.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppe61h_po.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is a perfect square \n    if (sqrt(n) * sqrt(n) == n) \n        return true; \n  \n    // If n is odd \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even \n    return dif_Square(n / 4); \n} \n  \n// Driver program \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpm3_vx_d2.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpm3_vx_d2.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3_vx_d2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, it cannot be represented as the difference of two squares \n    if (n % 2 != 0) \n        return false; \n  \n    // If n is even, then n = 2 * x * y where x and y are integers. \n    // If x and y are both odd, then n cannot be represented as the difference of two squares. \n    if (n % 4 == 0) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5i2ekf00.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp5i2ekf00.__unittest_L21_C1() [0x427a58]\n??:? void tmp5i2ekf00.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpronivrra.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpronivrra.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmps5qmfxhb.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmps5qmfxhb.d(15): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps5qmfxhb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tif (n == 0)\n\t\treturn true;\n\t\n\tif (n == 1)\n\t\treturn true;\n\t\n\tif (n == 2)\n\t\treturn false;\n\t\n\tif (n == 3)\n\t\treturn false;\n\t\n\tif (n == 4)\n\t\treturn true;\n\t\n\tif (n == 5)\n\t\treturn false;\n\t\n\tif (n == 6)\n\t\treturn false;\n\t\n\tif (n == 7)\n\t\treturn false;\n\t\n\tif (n == 8)\n\t\treturn true;\n\t\n\tif (n == 9)\n\t\treturn true;\n\t\n\tif (n == 10)\n\t\treturn false;\n\t\n\tif (n == 11)\n\t\treturn false;\n\t\n\tif (n == 12)\n\t\treturn false;\n\t\n\tif (n == 13)\n\t\treturn false;\n\t\n\tif (n == 14)\n\t\treturn false;\n\t\n\tif (n == 15)\n\t\treturn false;\n\t\n\tif (n == 16)\n\t\treturn true;\n\t\n\tif (n == 17)\n\t\treturn false;\n\t\n\tif (n == 18)\n\t\treturn false;\n\t\n\tif (n == 19)\n\t\treturn false;\n\t\n\tif (n == 20)\n\t\treturn false;\n\t\n\tif (n == 21)\n\t\treturn false;\n\t\n\tif (n == 22)\n\t\treturn false;\n\t\n\tif (n == 23)\n\t\treturn false;\n\t\n\tif (n == 24)\n\t\treturn false;\n\t\n\tif (n == 25)\n\t\treturn true;\n\t\n\tif (n == 26)\n\t\treturn false;\n\t\n\tif (n == 27)\n\t\treturn true;\n\t\n\tif (n == 28)\n\t\treturn false;\n\t\n\tif (n == 29)\n\t\treturn false;\n\t\n\tif (n == 30)\n\t\treturn false;\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpuuoyolt3.d(105): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuuoyolt3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n    long sqrt_n = cast(long) sqrt(n);\n    return (sqrt_n * sqrt_n == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpsra9p2dk.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsra9p2dk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) \n\t\treturn false;\n\t\n\tif(n == 0) \n\t\treturn true;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif(root * root == n) \n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpmjg98egv.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjg98egv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\telse\n\t{\n\t\tlong a = (long)sqrt(n);\n\t\treturn (a * a == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp8k5fffwv.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8k5fffwv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = cast(long) sqrt(n);\n\tif (sqrt_n * sqrt_n == n)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp8_rtvm7e.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8_rtvm7e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\tif(n==0)\n\t\treturn true;\n\tif(n%2==0)\n\t\treturn dif_Square(n/2);\n\telse\n\t\treturn dif_Square(n-1);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxu0fe84h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpxu0fe84h.__unittest_L19_C1() [0x427a93]\n??:? void tmpxu0fe84h.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i * i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpzrmya78x.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzrmya78x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0) return false;\n\tif(n==0) return true;\n\tif(n%4!=0) return false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy7qk1mle.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpy7qk1mle.__unittest_L15_C1() [0x427a5c]\n??:? void tmpy7qk1mle.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long) sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpeyp4hy86.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeyp4hy86.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sq = cast(long)sqrt(n);\n\t\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpmdcfxkuw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdcfxkuw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp4mqitlrt.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp4mqitlrt.d(19): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4mqitlrt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tif (n == 0) \n\t\treturn true;\n\twhile (n % 4 == 0) \n\t\tn /= 4;\n\tif (n % 8 == 7) \n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_uxsawj9.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp_uxsawj9.__unittest_L20_C1() [0x427a90]\n??:? void tmp_uxsawj9.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\twhile (n % 2 == 0) \n\t\tn /= 2;\n\t\n\tif (n % 2 == 1) \n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoaf9kgpv.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpoaf9kgpv.__unittest_L21_C1() [0x427a74]\n??:? void tmpoaf9kgpv.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpkm632fsr.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkm632fsr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is a perfect square \n    if (sqrt(n) * sqrt(n) == n) \n        return true; \n  \n    // If n is odd \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even \n    return dif_Square(n / 4); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp1x0f4d44.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp1x0f4d44.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1x0f4d44.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tif (n == 0 || n == 1)\n\t\treturn true;\n\t\n\tlong i = 2;\n\twhile (i <= n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 4 == 3 && n / i % 4 == 3)\n\t\t\t\treturn false;\n\t\t\tn /= i;\n\t\t}\n\t\telse\n\t\t\ti++;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3lp_e7md.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp3lp_e7md.__unittest_L30_C1() [0x427af3]\n??:? void tmp3lp_e7md.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpta8b5lkp.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpta8b5lkp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tif (n == 0)\n\t\treturn true;\n\t\n\tif (n % 2 == 0)\n\t\treturn dif_Square(n / 2);\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2)\n\t{\n\t\tif (n % i == 0)\n\t\t\treturn dif_Square(n / i);\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpaic0nsh9.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaic0nsh9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tint root = (int)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpoacrrqov.d(13): Error: C style cast illegal, use `cast(int)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoacrrqov.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tif(n == 0)\n\t\treturn true;\n\t\n\tint i = 1;\n\twhile(n > 0)\n\t{\n\t\tn -= i;\n\t\ti += 2;\n\t}\n\t\n\treturn n == 0;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjybdb0mt.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpjybdb0mt.__unittest_L25_C1() [0x427a5c]\n??:? void tmpjybdb0mt.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpsojtrbx2.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsojtrbx2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sq = cast(long)sqrt(n);\n\t\n\tif(sq * sq == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpxd0_gzjh.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd0_gzjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == cast(long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpe7d_ro68.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpe7d_ro68.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpe7d_ro68.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tfor (long i = 0; i <= n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp50i1tuu9.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp50i1tuu9.__unittest_L24_C1() [0x427a5c]\n??:? void tmp50i1tuu9.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n == 0)\n\t\treturn true;\n\telse if(n < 0)\n\t\treturn dif_Square(-n);\n\telse\n\t{\n\t\tlong root = cast(long)sqrt(n);\n\t\tlong i = root;\n\t\twhile(i > 0)\n\t\t{\n\t\t\tif(i * i == n)\n\t\t\t\treturn true;\n\t\t\ti--;\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp1931u_7o.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1931u_7o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t\treturn true;\n\tif (n < 0) \n\t\tn = -n;\n\tlong root = cast(long)sqrt(n);\n\tfor (long i = 1; i <= root; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpfj3cvyqy.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfj3cvyqy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\t\n\tfor (long i = 2; i <= n / 2; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tlong count = 0;\n\t\t\twhile (n % i == 0) \n\t\t\t{\n\t\t\t\tn = n / i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (i % 4 == 3 && count % 2 != 0) \n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7zsfxhqq.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp7zsfxhqq.__unittest_L32_C1() [0x427aff]\n??:? void tmp7zsfxhqq.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong j = (long)sqrt(n - i * i);\n\t\tif (i * i + j * j == n) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp94qikgbt.d(15): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp94qikgbt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpkm632fsr.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkm632fsr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp9ho7bjjx.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ho7bjjx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n    if (n < 0) \n        n = -n;\n    long root = (long)sqrt(n);\n    return (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpz_v_sarb.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz_v_sarb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, then it cannot be represented as the difference of two squares. \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, then it can be represented as the difference of two squares if and only if it is of the form 4^k(8m + 7) for some non-negative integers k and m. \n    while (n % 2 == 0) \n        n = n / 2; \n    if (n % 8 == 7) \n        return true; \n  \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuaywzuxr.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpuaywzuxr.__unittest_L22_C1() [0x427a90]\n??:? void tmpuaywzuxr.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (n / i == i) \n\t\t\t\treturn true;\n\t\t\telse \n\t\t\t{\n\t\t\t\tif (isPerfectSquare(n / i - i)) \n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp4ixu5eg4.d(21): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ixu5eg4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    return (n & (n - 1)) == 0; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp176lk30c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427cfd]\n??:? void tmp176lk30c.__unittest_L12_C1() [0x427a28]\n??:? void tmp176lk30c.__modtest() [0x427a7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fef8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a88d]\n??:? runModuleUnitTests [0x42b7f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42814c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpronivrra.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpronivrra.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i % 2 == 0) \n\t\t\t{ \n\t\t\t\tif ((n / i) % 2 == 0) \n\t\t\t\t\treturn true; \n\t\t\t} \n\t\t\telse if (n / i % 2 == 0) \n\t\t\t\treturn true; \n\t\t} \n\t} \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi7gvcecr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpi7gvcecr.__unittest_L28_C1() [0x427abc]\n??:? void tmpi7gvcecr.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpfz9n7v0h.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpfz9n7v0h.d(15): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfz9n7v0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long sqrt_n = (long)sqrt(n); \n    for (long i = 0; i <= sqrt_n; i++) \n        for (long j = i; j <= sqrt_n; j++) \n            if ((i * i - j * j) == n) \n                return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpgppkbfn3.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgppkbfn3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpih2012np.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpih2012np.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpaetdt6qf.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaetdt6qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpkwmw6mnf.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwmw6mnf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp2ayfje1l.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2ayfje1l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\telse if (n < 0)\n\t\treturn dif_Square(-n);\n\telse\n\t{\n\t\tlong root = cast(long)sqrt(n);\n\t\treturn root * root == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpgjxgq8ux.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjxgq8ux.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\twhile (n % 4 == 0) \n\t\tn /= 4;\n\t\n\tif (n % 8 == 7) \n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbc5fyksf.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpbc5fyksf.__unittest_L24_C1() [0x427aab]\n??:? void tmpbc5fyksf.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{ \n\t\tdouble val = sqrt(n - i * i); \n\t\tif ((val - floor(val)) == 0) \n\t\t\treturn true; \n\t} \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmptldt2jh_.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptldt2jh_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\twhile (n % 2 == 0) \n\t{\n\t\tn /= 2;\n\t}\n\t\n\tif (n % 2 == 1) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7qroqh_1.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7qroqh_1.__unittest_L27_C1() [0x427a78]\n??:? void tmp7qroqh_1.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmph6fmb55h.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph6fmb55h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong s = cast(long)sqrt(n);\n\t\n\treturn (s * s == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpn4y6jn6v.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4y6jn6v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong root = (long)sqrt(n);\n\t\treturn (root * root == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp1iccyjjo.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1iccyjjo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    while (n % 2 == 0) \n        n = n / 2; \n    if (n % 2 == 1) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphlm4v3_o.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmphlm4v3_o.__unittest_L18_C1() [0x427a97]\n??:? void tmphlm4v3_o.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(sqrt(n - i*i) == (long)sqrt(n - i*i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmphu_9hj0g.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmphu_9hj0g.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphu_9hj0g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpx_p_bu6h.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_p_bu6h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, it can't be represented as the difference of two squares. \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, then it can be represented as the difference of two squares if and only if it is of the form 2^i * (2^j)*k where k is odd. \n    long i = 0; \n    while (n % 2 == 0) { \n        n = n / 2; \n        i++; \n    } \n  \n    // n must be odd at this point. So we can write n = 2^i * k \n    if (i % 2 == 1) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphd1cf6m6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmphd1cf6m6.__unittest_L26_C1() [0x427a94]\n??:? void tmphd1cf6m6.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpthaxg5oo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpthaxg5oo.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthaxg5oo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n == 0)\n\t\treturn true;\n\t\n\tif(n < 0)\n\t\tn = -n;\n\t\n\tlong i = 1;\n\twhile(i * i < n)\n\t\ti++;\n\t\n\tif(i * i == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpngvb77sm.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpngvb77sm.__unittest_L25_C1() [0x427a80]\n??:? void tmpngvb77sm.__modtest() [0x427ad4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long sqrt_n = (long)sqrt(n); \n    for (long i = 0; i <= sqrt_n; i++) \n        if (i * i == n) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp0kgxk6jc.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0kgxk6jc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (n / i == i) \n\t\t\t\treturn true; \n\t\t\telse\n\t\t\t\treturn true; \n\t\t} \n\t} \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex656g7a.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpex656g7a.__unittest_L25_C1() [0x427a93]\n??:? void tmpex656g7a.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tint sqrt_n = (int)sqrt(n);\n\t\n\tfor (int i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (int)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpkbkea0ie.d(13): Error: C style cast illegal, use `cast(int)sqrt(n)`\n/tmp/tmpkbkea0ie.d(17): Error: C style cast illegal, use `cast(int)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkbkea0ie.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\telse\n\t{\n\t\tif(n==0)\n\t\t\treturn true;\n\t\telse\n\t\t{\n\t\t\tlong x = (long)sqrt(n);\n\t\t\tif(x*x == n)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=x-1;i>=1;i--)\n\t\t\t\t{\n\t\t\t\t\tlong y = (long)sqrt(n-i*i);\n\t\t\t\t\tif(y*y == n-i*i)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpbkun3cdz.d(18): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpbkun3cdz.d(25): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbkun3cdz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmpx_p_bu6h.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_p_bu6h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i * i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp2pze9_q7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2pze9_q7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    // If n is a perfect square, then  \n    // root(n) is an integer. \n    long root = (long)sqrt(n); \n  \n    // Check if square root is an integer \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplsy8h54o.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsy8h54o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t\treturn true;\n\tif (n < 0) \n\t\tn = -n;\n\t\n\twhile (n % 4 == 0) \n\t\tn /= 4;\n\t\n\tif (n % 8 == 7) \n\t\treturn true;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong t = sqrt(n - i * i);\n\t\tif (t * t == n - i * i) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpfa85olx1.d(23): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfa85olx1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\treturn (sq * sq == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpz8wzjrzp.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz8wzjrzp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = cast(long)sqrt(n);\n\tlong i = 1;\n\twhile (i <= sqrt_n) \n\t{\n\t\tif (sqrt_n * sqrt_n == n)\n\t\t\treturn true;\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpvzlxzt40.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvzlxzt40.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif(root * root == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpivnx1y9v.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpivnx1y9v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (n / i == i) \n\t\t\t\treturn true;\n\t\t\telse \n\t\t\t{\n\t\t\t\tlong j = n / i;\n\t\t\t\tif (isPerfectSquare(i + j) && isPerfectSquare(j - i)) \n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpvtugb8bu.d(22): Error: undefined identifier `isPerfectSquare`\n/tmp/tmpvtugb8bu.d(22): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvtugb8bu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tif(n==0)\n\t\treturn true;\n\t\n\tif(n%4==3)\n\t\treturn false;\n\t\n\tif(n%8==7)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpajxffhj1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpajxffhj1.__unittest_L24_C1() [0x427a9b]\n??:? void tmpajxffhj1.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\tfor (int i = 2; i <= n / 2; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tint count = 0;\n\t\t\twhile (n % i == 0) \n\t\t\t{\n\t\t\t\tn = n / i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (i % 4 == 3 && count % 2 != 0) \n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd1x_nv6k.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpd1x_nv6k.__unittest_L30_C1() [0x427b07]\n??:? void tmpd1x_nv6k.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\twhile (n % 4 == 0) \n\t{\n\t\tn = n / 4;\n\t}\n\t\n\tif (n % 8 == 7) \n\t{\n\t\treturn true;\n\t}\n\t\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong t = n - i * i;\n\t\tif (t % 8 == 0) \n\t\t{\n\t\t\tlong r = sqrt(t);\n\t\t\tif (r * r == t) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpup5emefl.d(35): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpup5emefl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, it cannot be represented as the difference of two squares \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, then it can be represented as the difference of two squares if and only if it can be represented as the sum of two even numbers. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it is of the form 2^i * (2^j - 1) where i >= 1 and j >= 1. \n    // The number n can be represented as the sum of two even numbers if and only if it\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpu_f1sxy5.d(25): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_f1sxy5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tif (n % 2 == 0) \n\t\treturn dif_Square(n / 2);\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (dif_Square(n / i)) \n\t\t\t\treturn true;\n\t\t\telse \n\t\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpvr0peiou.d(19): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvr0peiou.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long) sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp1zj803f7.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1zj803f7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplatkcomx.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmplatkcomx.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplatkcomx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tif (n % 2 == 0)\n\t\treturn true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2)\n\t{\n\t\tif (n % i == 0)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpn40xlvuc.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn40xlvuc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tif(n==0)\n\t\treturn true;\n\t\n\tlong s=cast(long)sqrt(n);\n\t\n\tif(s*s==n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp5xif5g7d.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5xif5g7d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, then it cannot be represented as the difference of two squares. \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, then it can be represented as the difference of two squares if and only if it can be represented as the sum of two even numbers. \n    return isEven(n / 2); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpe9nsnxut.d(15): Error: undefined identifier `isEven`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe9nsnxut.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\tif (root * root == n) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpn92cn2je.d(20): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn92cn2je.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tlong m = (long)sqrt(n);\n\t\n\treturn n == m * m;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplbs7syla.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplbs7syla.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp9xuub4xb.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xuub4xb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp4x4ku17o.d(19): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4x4ku17o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpthaxg5oo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpthaxg5oo.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthaxg5oo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = (long)sqrt(n);\n\treturn (x*x == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpe3m3rq8e.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe3m3rq8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp6_hny1af.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_hny1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long x = (long)sqrt(n); \n    return (x * x == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpscscpgup.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpscscpgup.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse if (n == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\tlong sqrt_n = cast(long)sqrt(n);\n\t\tfor (long i = 1; i <= sqrt_n; i++) \n\t\t{\n\t\t\tif (sqrt(n - i * i) == cast(long)sqrt(n - i * i)) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpko3a1mqo.d(20): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpko3a1mqo.d(23): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpko3a1mqo.d(23): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7v9s5u1a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7v9s5u1a.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7v9s5u1a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124002,
      "stdout": "",
      "stderr": "/tmp/tmp4mqitlrt.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp4mqitlrt.d(19): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4mqitlrt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpthvivmty.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthvivmty.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn n == root * root;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplymwzx2i.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplymwzx2i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    for (long i = 1; i * i <= n; i++) { \n        for (long j = i + 1; j * j <= n; j++) { \n            if (i * i + j * j == n) { \n                return true; \n            } \n        } \n    } \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa4p05ml2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpa4p05ml2.__unittest_L21_C1() [0x427ab3]\n??:? void tmpa4p05ml2.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpt7_8zcli.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpt7_8zcli.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt7_8zcli.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\tif (n < 0)\n\t\tn = -n;\n\tlong root = (long) sqrt(n);\n\tfor (long i = 1; i <= root; i++)\n\t{\n\t\tif (i * i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp5_6okdm_.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_6okdm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpzx5y1ods.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzx5y1ods.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmph7qmitfx.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph7qmitfx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tif(n == 0)\n\t\treturn true;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 1; i <= sqrt_n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tif(n / i % 2 == 0)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(i % 2 == 0)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpszgy7qkk.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszgy7qkk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = cast(long)sqrt(n);\n\tfor (long i = 1; i <= sqrt_n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpdc1sv8n_.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdc1sv8n_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\tfor (long i = 1; i <= root; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpw24nef8v.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw24nef8v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpcbud8kdr.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbud8kdr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = cast(long) sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp4v94kx_d.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4v94kx_d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong x = (long)sqrt(n);\n\treturn x * x == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmppe61h_po.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppe61h_po.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    switch (n & 3) \n    { \n    case 0: \n        return true; \n    case 1: \n        return false; \n    case 2: \n        return true; \n    } \n  \n    long r = (long)sqrt(n); \n    return (r * r == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpgaysutcd.d(23): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgaysutcd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return dif_Square(-n); \n  \n    for (long i = 1; i * i <= n; i++) \n        if (i * i == n) \n            return true; \n  \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwyxzbn80.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpwyxzbn80.__unittest_L19_C1() [0x427a64]\n??:? void tmpwyxzbn80.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i * i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp2pze9_q7.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2pze9_q7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7v9s5u1a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7v9s5u1a.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7v9s5u1a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n == 0)\n\t\treturn true;\n\t\n\tif(n < 0)\n\t\tn = -n;\n\t\n\twhile(n % 2 == 0)\n\t\tn /= 2;\n\t\n\tif(n % 2 == 1)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy19vfpmu.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpy19vfpmu.__unittest_L24_C1() [0x427a88]\n??:? void tmpy19vfpmu.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\tn=-n;\n\t\n\tif(n==0)\n\t\treturn true;\n\t\n\twhile(n%2==0)\n\t\tn/=2;\n\t\n\tif(n%2==1)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1r04bf23.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp1r04bf23.__unittest_L24_C1() [0x427a84]\n??:? void tmp1r04bf23.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp9xuub4xb.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xuub4xb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    for (long i = 1; i * i <= n; i++) { \n        if ((n % i == 0) && ((n / i) % 2 == 0)) \n            return true; \n    } \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd3rc81ci.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpd3rc81ci.__unittest_L19_C1() [0x427a7c]\n??:? void tmpd3rc81ci.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp6_hny1af.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_hny1af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, it cannot be a difference of two squares \n    if (n % 2 == 1) \n        return false; \n  \n    // If n is even, check if it can be written as n = x^2 - y^2 \n    // where x and y are natural numbers. \n    long x = (long)sqrt(n / 2); \n    long y = (long)sqrt(n - x * x); \n    return (x * x - y * y == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplgbscpx6.d(16): Error: C style cast illegal, use `cast(long)sqrt(n / 2)`\n/tmp/tmplgbscpx6.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - x * x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgbscpx6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tint root = cast(int)sqrt(n);\n\t\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpqrk3cexk.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqrk3cexk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\tif(root * root == n)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp9dbb52ug.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9dbb52ug.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    // If n is a perfect square, then  \n    // difference between two squares is 0. \n    if (isPerfectSquare(n)) \n        return true; \n  \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp9b0ygei8.d(15): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9b0ygei8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tif(n == 0)\n\t\treturn true;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor(long i = 1; i <= sqrt_n; i++)\n\t{\n\t\tif(i*i == n)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp2mbngr72.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2mbngr72.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tif (sqrt_n * sqrt_n == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpzogf_289.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzogf_289.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = cast(long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpnouym0ci.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnouym0ci.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n    if (n < 0) \n        n = -n;\n    long root = cast(long)sqrt(n);\n    return root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp86ilwd4a.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp86ilwd4a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    return (floor(sqrt(n)) - ceil(sqrt(n)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpzn5ayot7.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzn5ayot7.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzn5ayot7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    return (floor(sqrt(n)) - ceil(sqrt(n)) == 0); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpzn5ayot7.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpzn5ayot7.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzn5ayot7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0) \n\t\treturn true;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\tfor (long i = 1; i <= root; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpw24nef8v.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw24nef8v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\treturn root * root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmppfrvacky.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppfrvacky.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp9xuub4xb.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xuub4xb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\t// If n is odd, then it cannot be represented as the difference of two squares. \n\tif (n % 2 == 1) \n\t\treturn false; \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpw3u_0cdv.d(13): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw3u_0cdv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n==0) return true;\n\tif(n<0) n = -n;\n\t\n\tlong sq = (long)sqrt(n);\n\t\n\tif(sq*sq==n) return true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpaihez9nq.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaihez9nq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpthaxg5oo.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpthaxg5oo.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthaxg5oo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpsygtbw5d.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpsygtbw5d.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsygtbw5d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7v9s5u1a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7v9s5u1a.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7v9s5u1a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) { \n\t\tfor (long j = i + 1; j * j <= n; j++) { \n\t\t\tif (i * i + j * j == n) \n\t\t\t\treturn true; \n\t\t} \n\t} \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3xy0j7my.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp3xy0j7my.__unittest_L20_C1() [0x427ab3]\n??:? void tmp3xy0j7my.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\telse\n\t{\n\t\tlong a = cast(long)sqrt(n);\n\t\treturn a*a == n;\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpk6qdn2th.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk6qdn2th.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    // If n is odd, then it cannot be represented as sum of two squares \n    if (n % 2) \n        return false; \n  \n    // If n % 4 == 3, then n cannot be represented as sum of two squares \n    if (n % 4 == 3) \n        return false; \n  \n    // Find a number k such that n = (2^k)*d \n    long d = n / 2; \n    while (d % 2 == 0) \n        d /= 2; \n  \n    // If 2^k * d = n, then n can be represented as sum of two squares \n    return true; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl1s6xui0.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpl1s6xui0.__unittest_L26_C1() [0x427a98]\n??:? void tmpl1s6xui0.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (int i = 1; i <= n; i++) \n\t{ \n\t\tif (i * i == n) \n\t\t\treturn true; \n\t} \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmx7yk8qq.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpmx7yk8qq.__unittest_L19_C1() [0x427a58]\n??:? void tmpmx7yk8qq.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tint root = cast(int) sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpp3pbj776.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3pbj776.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmpozo4_0cg.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozo4_0cg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\tlong aa;\n\tlong ab;\n\tlong ac;\n\tlong ad;\n\tlong ae;\n\tlong af;\n\tlong ag;\n\tlong ah;\n\tlong ai;\n\tlong aj;\n\tlong ak;\n\tlong al;\n\tlong am;\n\tlong an;\n\tlong ao;\n\tlong ap;\n\tlong aq;\n\tlong ar;\n\tlong as;\n\tlong at;\n\tlong au;\n\tlong av;\n\tlong aw;\n\tlong ax;\n\tlong ay;\n\tlong az;\n\tlong ba;\n\tlong bb;\n\tlong bc;\n\tlong bd;\n\tlong be;\n\tlong bf;\n\tlong bg;\n\tlong bh;\n\tlong bi;\n\tlong bj;\n\tlong bk;\n\tlong bl;\n\tlong bm;\n\tlong bn;\n\tlong bo;\n\tlong bp;\n\tlong bq;\n\tlong br;\n\tlong bs;\n\tlong bt;\n\tlong bu;\n\tlong bv;\n\tlong bw;\n\tlong bx;\n\tlong by;\n\tlong bz;\n\tlong ca;\n\tlong cb;\n\tlong cc;\n\tlong cd;\n\tlong ce;\n\tlong cf;\n\tlong cg;\n\tlong ch;\n\tlong ci;\n\tlong cj;\n\tlong ck;\n\tlong cl;\n\tlong cm;\n\tlong cn;\n\tlong co;\n\tlong cp;\n\tlong cq;\n\tlong cr;\n\tlong cs;\n\tlong ct;\n\tlong cu;\n\tlong cv;\n\tlong cw;\n\tlong cx;\n\tlong cy;\n\tlong cz;\n\t\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpvcaji_mk.d(106): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvcaji_mk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i=1; i<=sqrt_n; i++)\n\t{\n\t\tif(n==i*i)\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpb4qsu5sm.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4qsu5sm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tfor (long j = i; j <= sqrt_n; j++) \n\t\t{\n\t\t\tif ((i * i) - (j * j) == n) \n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpmk3fxli0.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmk3fxli0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\tlong sqrt_n = cast(long) sqrt(n);\n\t\treturn (sqrt_n * sqrt_n == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpn_f2u6xp.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_f2u6xp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong sqrt_n = (long)sqrt(n);\n\tlong i = 1;\n\twhile (i <= sqrt_n) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i))\n\t\t\treturn true;\n\t\ti++;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpap1i7mg7.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmpap1i7mg7.d(14): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpap1i7mg7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n == i * i - (i - 1) * (i - 1)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tint root = (int)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpd8oimu2i.d(15): Error: C style cast illegal, use `cast(int)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd8oimu2i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tint root = (int)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpyxq_x6ft.d(13): Error: C style cast illegal, use `cast(int)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyxq_x6ft.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn root*root == n;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpb_4y635k.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_4y635k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\t\n\tfor (long i = 2; i <= n / 2; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpet2lzz0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpet2lzz0j.__unittest_L23_C1() [0x427a78]\n??:? void tmpet2lzz0j.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\tif (n < 0)\n\t\tn = -n;\n\tlong m = (long)sqrt(n);\n\treturn (m * m == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpvlbxygiv.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvlbxygiv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\tlong root = (long)sqrt(n);\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpl_nnd8aa.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_nnd8aa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0)\n\t\treturn true;\n\tif (n < 0)\n\t\tn = -n;\n\twhile (n % 4 == 0)\n\t\tn /= 4;\n\tif (n % 8 == 7)\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx8_fte51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpx8_fte51.__unittest_L20_C1() [0x427a94]\n??:? void tmpx8_fte51.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tif (n % 2 == 0) \n\t\treturn true;\n\t\n\tfor (long i = 3; i <= sqrt(n); i += 2) \n\t{\n\t\tif (n % i == 0) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp1y0zekjc.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1y0zekjc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpliiez9kf.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpliiez9kf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\telse \n\t{\n\t\tlong sq = cast(long)sqrt(n);\n\t\treturn (sq * sq == n);\n\t}\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpy9y8u65b.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy9y8u65b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    long root = (long)sqrt(n); \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmp56o3v28a.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp56o3v28a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\t\n\tlong root = cast(long) sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517653,
      "stdout": "",
      "stderr": "/tmp/tmplm8d_f1s.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplm8d_f1s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n<0)\n\t\treturn false;\n\t\n\tif(n==0)\n\t\treturn true;\n\t\n\tlong sqrt_n = cast(long)sqrt(n);\n\t\n\tfor(long i=1; i<=sqrt_n; i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(i%2==0)\n\t\t\t{\n\t\t\t\tif((n/i)%2==0)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpag_u2ssc.d(16): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpag_u2ssc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    // If n is a perfect square, then  \n    // root(n) is an integer. \n    long root = (long)sqrt(n); \n  \n    // Check if root*root = n. \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpyvnaq3ld.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyvnaq3ld.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n == 0) \n\t{\n\t\treturn true;\n\t}\n\tif (n < 0) \n\t{\n\t\tn = -n;\n\t}\n\twhile (n % 4 == 0) \n\t{\n\t\tn /= 4;\n\t}\n\tif (n % 8 == 7) \n\t{\n\t\treturn false;\n\t}\n\tfor (long i = 1; i * i <= n; i++) \n\t{\n\t\tlong t = sqrt(n - i * i);\n\t\tif (t * t == n - i * i) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpkxy5k7n0.d(28): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkxy5k7n0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i*i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmppdxegy_9.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppdxegy_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    return (floor(sqrt(n)) * floor(sqrt(n)) == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpy1_r02b3.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpy1_r02b3.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy1_r02b3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    long a = (long)sqrt(n); \n  \n    if (a * a == n) \n        return true; \n  \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpf2qjebxx.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2qjebxx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong root = cast(long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp_6wa63y_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6wa63y_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\tn = -n;\n\t\n\tlong root = (long)sqrt(n);\n\t\n\treturn (root * root == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpliiez9kf.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpliiez9kf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0) return false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 0; i <= sqrt_n; i++)\n\t{\n\t\tif(i*i == n) return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpfd_npc2v.d(12): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfd_npc2v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n == 0 || n == 1 || n == 2) \n        return false; \n  \n    for (long i = 1; i <= n; i++) { \n        if (i * i > n) \n            return false; \n  \n        long temp = n - (i * i); \n        if (temp % 2 == 0) { \n            long t = (long)sqrt(temp / 2); \n            if (t * t == temp / 2) \n                return true; \n        } \n    } \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmppo9jeeu2.d(19): Error: C style cast illegal, use `cast(long)sqrt(temp / 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppo9jeeu2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\treturn (floor(sqrt(n)) == sqrt(n));\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp9fk9k8be.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9fk9k8be.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9fk9k8be.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong s = (long)sqrt(n);\n\t\n\treturn (s * s == n);\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpxtt64xdk.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtt64xdk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tlong a = (long)sqrt(n);\n\tif (a*a == n)\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmpjheucvdd.d(10): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjheucvdd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tlong sqrt_n = cast(long) sqrt(n);\n\t\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmp9d9mrtuw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9d9mrtuw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong root = sqrt(n);\n\t\n\tif(root * root == n)\n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "/tmp/tmpa11xwl8m.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa11xwl8m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7v9s5u1a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7v9s5u1a.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7v9s5u1a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\tfor (long i = 1; i * i <= n; i++) \n\t\tif ((n % i == 0) && ((n / i) % 2 == 0)) \n\t\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7v9s5u1a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp7v9s5u1a.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7v9s5u1a.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n    if (n == 0 || n == 1) \n        return true; \n    for (long i = 2; i <= n / 2; i++) \n        if (i * i == n) \n            return true; \n    return false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg3a1kflh.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpg3a1kflh.__unittest_L19_C1() [0x427a78]\n??:? void tmpg3a1kflh.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t{\n\t\treturn false;\n\t}\n\tlong sqrt_n = (long)sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) \n\t{\n\t\tif (sqrt(n - i * i) == (long)sqrt(n - i * i)) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmp64qu5zdj.d(14): Error: C style cast illegal, use `cast(long)sqrt(n)`\n/tmp/tmp64qu5zdj.d(17): Error: C style cast illegal, use `cast(long)sqrt(n - i * i)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64qu5zdj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    // If n is a perfect square, then  \n    // root(n) is an integer. \n    long root = (long)sqrt(n); \n  \n    // Check if square root is an integer \n    return (root * root == n); \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmplsy8h54o.d(15): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsy8h54o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{ \n\tif (n < 0) \n\t\tn = -n; \n\t\n\twhile (n % 2 == 0) \n\t\tn = n / 2; \n\t\n\tif (n % 2 == 1) \n\t\treturn true; \n\treturn false; \n} \nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg62gosix.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpg62gosix.__unittest_L20_C1() [0x427a97]\n??:? void tmpg62gosix.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tlong sqrt_n = (long)sqrt(n);\n\t\n\tfor(long i = 1; i <= sqrt_n; i++)\n\t{\n\t\tif(i * i == n)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124003,
      "stdout": "",
      "stderr": "/tmp/tmptu58_mxj.d(13): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptu58_mxj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to check whether the given number can be represented as the difference of two squares or not.\n\t\n*/\nbool dif_Square(long n) \n{\n\tif (n < 0) \n\t\treturn dif_Square(-n);\n\tforeach(i; 0 .. n) \n\t{\n\t\tif (i * i == n) \n\t\t\treturn false;\n\t\tif ((n - i * i) % 2 == 0) \n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = dif_Square;\n\n    assert(candidate(5L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(15L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqkl8ohdv.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpqkl8ohdv.__unittest_L21_C1() [0x427aab]\n??:? void tmpqkl8ohdv.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_428_shell_sort",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to sort the given array by using shell sort.\n\t\n*/\nlong[] shell_sort(long[] my_list) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = shell_sort;\n\n    assert(candidate([12L, 23L, 4L, 5L, 3L, 2L, 12L, 81L, 56L, 95L]) == [2L, 3L, 4L, 5L, 12L, 12L, 23L, 56L, 81L, 95L]);\n    assert(candidate([24L, 22L, 39L, 34L, 87L, 73L, 68L]) == [22L, 24L, 34L, 39L, 68L, 73L, 87L]);\n    assert(candidate([32L, 30L, 16L, 96L, 82L, 83L, 74L]) == [16L, 30L, 32L, 74L, 82L, 83L, 96L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tforeach(i; gap..my_list.length) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j;\n\t\t\tfor(j = i; j >= gap && my_list[j - gap] > temp; j -= gap)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tforeach(i; 1..my_list.length)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j;\n\t\t\tfor(j = i; j >= gap && my_list[j - gap] > temp; j -= gap)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n    long[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n    foreach (gap; gaps) \n    {\n        for (long i = gap; i < my_list.length; i++) \n        {\n            long temp = my_list[i];\n            long j = i;\n            while (j >= gap && my_list[j - gap] > temp) \n            {\n                my_list[j] = my_list[j - gap];\n                j -= gap;\n            }\n            my_list[j] = temp;\n        }\n    }\n    return my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tforeach(i; 1 .. my_list.length) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tint gap = my_list.length / 2;\n\twhile (gap > 0) \n\t{\n\t\tfor (int i = gap; i < my_list.length; i++) \n\t\t{\n\t\t\tint j = i;\n\t\t\twhile (j >= gap && my_list[j - gap] > my_list[j]) \n\t\t\t{\n\t\t\t\tlong temp = my_list[j];\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tmy_list[j - gap] = temp;\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t}\n\t\tgap /= 2;\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tfor(long i = gap; i < my_list.length; i++) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tint size = my_list.length;\n\tint gap = size / 2;\n\twhile (gap > 0) \n\t{\n\t\tfor (int i = gap; i < size; i++) \n\t\t{\n\t\t\tint temp = my_list[i];\n\t\t\tint j = i;\n\t\t\twhile (j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t\tgap /= 2;\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tforeach(i; 1 .. my_list.length) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tfor(long i = gap; i < my_list.length; i++)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tint gap = my_list.length / 2;\n\twhile (gap > 0) \n\t{\n\t\tfor (int i = gap; i < my_list.length; i++) \n\t\t{\n\t\t\tint j = i;\n\t\t\twhile (j >= gap && my_list[j - gap] > my_list[j]) \n\t\t\t{\n\t\t\t\tlong temp = my_list[j];\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tmy_list[j - gap] = temp;\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t}\n\t\tgap /= 2;\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps)\n\t{\n\t\tforeach(i; 1 .. my_list.length)\n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tfor(long i = gap; i < my_list.length; i++) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tlong[] gaps = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(gap; gaps) \n\t{\n\t\tforeach(i; 1 .. my_list.length) \n\t\t{\n\t\t\tlong temp = my_list[i];\n\t\t\tlong j = i;\n\t\t\twhile(j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tint i, j, k, h, m;\n\tlong temp;\n\tint[] seq = [701, 301, 132, 57, 23, 10, 4, 1];\n\tforeach(k; seq)\n\t{\n\t\th = seq[k];\n\t\tfor (i = h; i < my_list.length; i++)\n\t\t{\n\t\t\ttemp = my_list[i];\n\t\t\tfor (j = i; (j >= h) && (my_list[j - h] > temp); j = j - h)\n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - h];\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t}\n\treturn my_list;\n}",
    "{\n\tint len = my_list.length;\n\tint gap = len / 2;\n\twhile (gap > 0) \n\t{\n\t\tfor (int i = gap; i < len; i++) \n\t\t{\n\t\t\tint temp = my_list[i];\n\t\t\tint j = i;\n\t\t\twhile (j >= gap && my_list[j - gap] > temp) \n\t\t\t{\n\t\t\t\tmy_list[j] = my_list[j - gap];\n\t\t\t\tj -= gap;\n\t\t\t}\n\t\t\tmy_list[j] = temp;\n\t\t}\n\t\tgap /= 2;\n\t}\n\treturn my_list;\n}"
  ]
}
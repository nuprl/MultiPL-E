{
  "name": "mbpp_588_big_diff",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong largest = nums[0];\n\tlong smallest = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > largest)\n\t\t\tlargest = i;\n\t\tif(i < smallest)\n\t\t\tsmallest = i;\n\t}\n\treturn largest - smallest;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tmax = max(max, n);\n\t\tmin = min(min, n);\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpkhm2mq5t.d(14): Error: function expected before `()`, not `max` of type `long`\n/tmp/tmpkhm2mq5t.d(15): Error: function expected before `()`, not `min` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhm2mq5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tauto min = nums[0];\n\tauto max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long max = nums[0];\n    long min = nums[0];\n    foreach(num; nums)\n    {\n        if(num > max)\n        {\n            max = num;\n        }\n        if(num < min)\n        {\n            min = num;\n        }\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tmax = max(max, i);\n\t\tmin = min(min, i);\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123121,
      "stdout": "",
      "stderr": "/tmp/tmpwasrpnat.d(14): Error: function expected before `()`, not `max` of type `long`\n/tmp/tmpwasrpnat.d(15): Error: function expected before `()`, not `min` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwasrpnat.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(long num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(long num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max) max = n;\n\t\tif(n < min) min = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach (num; nums)\n\t{\n\t\tif (num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif (num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long min = nums[0];\n    long max = nums[0];\n    foreach(num; nums)\n    {\n        min = min(min, num);\n        max = max(max, num);\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123121,
      "stdout": "",
      "stderr": "/tmp/tmp1lg__yhm.d(14): Error: function expected before `()`, not `min` of type `long`\n/tmp/tmp1lg__yhm.d(15): Error: function expected before `()`, not `max` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1lg__yhm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long min = nums[0];\n    long max = nums[0];\n    foreach(num; nums)\n    {\n        if(num < min)\n            min = num;\n        if(num > max)\n            max = num;\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tmax = max(max, n);\n\t\tmin = min(min, n);\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517465,
      "stdout": "",
      "stderr": "/tmp/tmpkhm2mq5t.d(14): Error: function expected before `()`, not `max` of type `long`\n/tmp/tmpkhm2mq5t.d(15): Error: function expected before `()`, not `min` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhm2mq5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long max = nums[0];\n    long min = nums[0];\n    foreach(num; nums)\n    {\n        if(num > max)\n        {\n            max = num;\n        }\n        if(num < min)\n        {\n            min = num;\n        }\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\t\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach (num; nums)\n\t{\n\t\tif (num > max)\n\t\t\tmax = num;\n\t\tif (num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\telse if(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(long i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long max = nums[0];\n    long min = nums[0];\n    foreach(num; nums)\n    {\n        max = max(max, num);\n        min = min(min, num);\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123121,
      "stdout": "",
      "stderr": "/tmp/tmp30w6clvh.d(14): Error: function expected before `()`, not `max` of type `long`\n/tmp/tmp30w6clvh.d(15): Error: function expected before `()`, not `min` of type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp30w6clvh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t{\n\t\t\tmax = n;\n\t\t}\n\t\tif(n < min)\n\t\t{\n\t\t\tmin = n;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num < min)\n\t\t\tmin = num;\n\t\tif(num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n    long max = nums[0];\n    long min = nums[0];\n    foreach(num; nums)\n    {\n        if(num > max)\n        {\n            max = num;\n        }\n        if(num < min)\n        {\n            min = num;\n        }\n    }\n    return max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif (num < min)\n\t\t\tmin = num;\n\t\tif (num > max)\n\t\t\tmax = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t\tif(i < min)\n\t\t\tmin = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(long num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n < min)\n\t\t\tmin = n;\n\t\tif(n > max)\n\t\t\tmax = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(n; nums)\n\t{\n\t\tif(n > max)\n\t\t\tmax = n;\n\t\tif(n < min)\n\t\t\tmin = n;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong min = nums[0];\n\tlong max = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i < min)\n\t\t\tmin = i;\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123122,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t}\n\t\tif(num < min)\n\t\t{\n\t\t\tmin = num;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(i; nums)\n\t{\n\t\tif(i > max)\n\t\t{\n\t\t\tmax = i;\n\t\t}\n\t\tif(i < min)\n\t\t{\n\t\t\tmin = i;\n\t\t}\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the difference between largest and smallest value in a given array.\n\t\n*/\nlong big_diff(long[] nums) \n{\n\tlong max = nums[0];\n\tlong min = nums[0];\n\tforeach(num; nums)\n\t{\n\t\tif(num > max)\n\t\t\tmax = num;\n\t\tif(num < min)\n\t\t\tmin = num;\n\t}\n\treturn max - min;\n}\nunittest\n{\n    alias candidate = big_diff;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == 3L);\n    assert(candidate([4L, 5L, 12L]) == 8L);\n    assert(candidate([9L, 2L, 3L]) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
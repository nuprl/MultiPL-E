{
  "name": "mbpp_170_sum_range_list",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfkz9boe8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpfkz9boe8.__unittest_L17_C1() [0x427e00]\n??:? void tmpfkz9boe8.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpo53wyfzy.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo53wyfzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo681bgz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpuo681bgz.__unittest_L17_C1() [0x427e00]\n??:? void tmpuo681bgz.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpa_9xsopx.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_9xsopx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m .. n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp956xffq3.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmp956xffq3.__unittest_L17_C1() [0x427e08]\n??:? void tmp956xffq3.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfkz9boe8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpfkz9boe8.__unittest_L17_C1() [0x427e00]\n??:? void tmpfkz9boe8.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; list1) \n\t{\n\t\tif(i >= m && i <= n) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfg27uqwx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4281cd]\n??:? void tmpfg27uqwx.__unittest_L20_C1() [0x427e14]\n??:? void tmpfg27uqwx.__modtest() [0x427f4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b04a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43068c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b021]\n??:? runModuleUnitTests [0x42bf8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42861c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t\tsum += list1[i];\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdhei0nca.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpdhei0nca.__unittest_L15_C1() [0x427e08]\n??:? void tmpdhei0nca.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpa_9xsopx.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_9xsopx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; list1[m..n])\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuoulh7vz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281dd]\n??:? void tmpuoulh7vz.__unittest_L17_C1() [0x427e24]\n??:? void tmpuoulh7vz.__modtest() [0x427f5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c23b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430261]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430710]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b0a5]\n??:? runModuleUnitTests [0x42c011]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4286a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpo53wyfzy.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo53wyfzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach (i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp40anx6tx.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmp40anx6tx.__unittest_L17_C1() [0x427e08]\n??:? void tmp40anx6tx.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpa_9xsopx.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_9xsopx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t\tsum += list1[i];\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo681bgz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpuo681bgz.__unittest_L17_C1() [0x427e00]\n??:? void tmpuo681bgz.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpo53wyfzy.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo53wyfzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach (i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp40anx6tx.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmp40anx6tx.__unittest_L17_C1() [0x427e08]\n??:? void tmp40anx6tx.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (int i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "/tmp/tmpa_9xsopx.d(11): Error: cannot implicitly convert expression `m` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa_9xsopx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo681bgz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpuo681bgz.__unittest_L17_C1() [0x427e00]\n??:? void tmpuo681bgz.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i <= n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tforeach(i; m..n)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyrn2kyhg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281bd]\n??:? void tmpyrn2kyhg.__unittest_L17_C1() [0x427e08]\n??:? void tmpyrn2kyhg.__modtest() [0x427f40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c21b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430241]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b085]\n??:? runModuleUnitTests [0x42bff1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428680]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i <= n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor(long i = m; i < n; i++) \n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfpk_yst.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpkfpk_yst.__unittest_L17_C1() [0x427e00]\n??:? void tmpkfpk_yst.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to find the sum of numbers in an array within a range specified by two indices.\n\t\n*/\nlong sum_range_list(long[] list1, long m, long n) \n{\n\tlong sum = 0;\n\tfor (long i = m; i < n; i++)\n\t{\n\t\tsum += list1[i];\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_range_list;\n\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 8L, 10L) == 29L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 5L, 7L) == 16L);\n    assert(candidate([2L, 1L, 5L, 6L, 8L, 3L, 4L, 9L, 10L, 11L, 8L, 12L], 7L, 10L) == 38L);\n}\nvoid main(){}",
      "timestamp": 1665517345,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lzx4nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x4281b5]\n??:? void tmpo7lzx4nj.__unittest_L17_C1() [0x427e00]\n??:? void tmpo7lzx4nj.__modtest() [0x427f38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c213]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430239]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b07d]\n??:? runModuleUnitTests [0x42bfe9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428678]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
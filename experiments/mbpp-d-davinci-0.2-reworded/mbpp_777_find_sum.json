{
  "name": "mbpp_777_find_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a dthon function to find the sum of non-repeated elements in a given array.\n\t\n*/\nlong find_sum(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = find_sum;\n\n    assert(candidate([1L, 2L, 3L, 1L, 1L, 4L, 5L, 6L]) == 21L);\n    assert(candidate([1L, 10L, 9L, 4L, 2L, 10L, 10L, 45L, 4L]) == 71L);\n    assert(candidate([12L, 10L, 9L, 45L, 2L, 10L, 10L, 45L, 10L]) == 78L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong sum = 0;\n\tlong[] unique_arr = [];\n\tforeach(long i; arr)\n\t{\n\t\tif(!unique_arr.contains(i))\n\t\t{\n\t\t\tunique_arr ~= i;\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\ttemp[i] = 0;\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tfor (int j = i + 1; j < arr.length; j++)\n\t\t\t{\n\t\t\t\tif (arr[i] == arr[j])\n\t\t\t\t{\n\t\t\t\t\ttemp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (temp[i] == 0)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(elem; arr)\n\t{\n\t\tsum += elem;\n\t}\n\treturn sum;\n}",
    "{\n    long sum = 0;\n    foreach(item; arr)\n    {\n        if(count(arr, item) == 1)\n        {\n            sum += item;\n        }\n    }\n    return sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tif(arr[i] != arr[i+1])\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(element; arr)\n\t{\n\t\tif(element != 0)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong[] temp = new long[arr.length];\n\tint count = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (temp.indexOf(arr[i]) == -1) \n\t\t{\n\t\t\ttemp[count] = arr[i];\n\t\t\tcount++;\n\t\t}\n\t}\n\tfor (int i = 0; i < count; i++) \n\t{\n\t\tsum += temp[i];\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tbool found = false;\n\t\tforeach(j; 0 .. arr.length)\n\t\t{\n\t\t\tif(i != j && arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < arr.length; j++)\n\t\t{\n\t\t\tif (arr[i] == arr[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == 1)\n\t\t{\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tforeach(a; arr)\n\t{\n\t\tif(a == arr[0])\n\t\t\tcontinue;\n\t\telse\n\t\t{\n\t\t\tif(a == arr[1])\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(a == arr[2])\n\t\t\t\t\tcontinue;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(a == arr[3])\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a == arr[4])\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(a == arr[5])\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(a == arr[6])\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(a == arr[7])\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif(a == arr[8])\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(a == arr[9])\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif(a == arr[10])\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t",
    "{\n\tlong sum = 0;\n\tforeach(i; arr)\n\t{\n\t\tif(count(arr, i) == 1)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}"
  ]
}
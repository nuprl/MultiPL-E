{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkgm9twyg.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpkgm9twyg.__unittest_L16_C1() [0x427dea]\n??:? void tmpkgm9twyg.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        ans += (arr[i] * (n - i - 1) * (i + 1)); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp32odgkrb.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x4280e5]\n??:? void tmp32odgkrb.__unittest_L15_C1() [0x427dbe]\n??:? void tmp32odgkrb.__modtest() [0x427e68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c143]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afd6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430169]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430618]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afad]\n??:? runModuleUnitTests [0x42bf19]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285a8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Iterate over all possible pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_64zit5f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp_64zit5f.__unittest_L17_C1() [0x427dea]\n??:? void tmp_64zit5f.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            ans += (arr[i] ^ arr[j]); \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tans += (arr[i] ^ arr[j]); \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with all other elements \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            ans += (arr[i] ^ arr[j]); \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_64zit5f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp_64zit5f.__unittest_L17_C1() [0x427dea]\n??:? void tmp_64zit5f.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            ans += arr[i] ^ arr[j]; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Iterate through all pairs \n    for (size_t i = 0; i < n; i++) \n        for (size_t j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong sum = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tsum += (arr[i] ^ arr[j]); \n\treturn sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tans += arr[i] ^ arr[j]; \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmzn8u6lb.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpmzn8u6lb.__unittest_L17_C1() [0x427dea]\n??:? void tmpmzn8u6lb.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong sum = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tsum += (arr[i] ^ arr[j]); \n\treturn sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_64zit5f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp_64zit5f.__unittest_L17_C1() [0x427dea]\n??:? void tmp_64zit5f.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            sum += (arr[i] ^ arr[j]); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tans += (arr[i] ^ arr[j]); \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkgm9twyg.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpkgm9twyg.__unittest_L16_C1() [0x427dea]\n??:? void tmpkgm9twyg.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_64zit5f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp_64zit5f.__unittest_L17_C1() [0x427dea]\n??:? void tmp_64zit5f.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkgm9twyg.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpkgm9twyg.__unittest_L16_C1() [0x427dea]\n??:? void tmpkgm9twyg.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n  \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n  \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkgm9twyg.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpkgm9twyg.__unittest_L16_C1() [0x427dea]\n??:? void tmpkgm9twyg.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppcx19591.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmppcx19591.__unittest_L16_C1() [0x427dea]\n??:? void tmppcx19591.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of xor of all pairs of numbers in the given array.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tans += (arr[i] ^ arr[j]); \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\n*/\nstring reverse_vowels(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = reverse_vowels;\n\n    assert(candidate(\"Python\") == \"Python\");\n    assert(candidate(\"USA\") == \"ASU\");\n    assert(candidate(\"ab\") == \"ab\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = str1;\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tresult[i] = str1[j];\n\t\t\tresult[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tint start = 0;\n\tint end = str1.length - 1;\n\tstring result = str1;\n\twhile (start < end) \n\t{\n\t\tif (vowels.find(str1[start]) == -1) \n\t\t{\n\t\t\tstart++;\n\t\t}\n\t\telse if (vowels.find(str1[end]) == -1) \n\t\t{\n\t\t\tend--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[start] = str1[end];\n\t\t\tresult[end] = str1[start];\n\t\t\tstart++;\n\t\t\tend--;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= str1[j];\n\t\tresult ~= str1[i];\n\t\ti++;\n\t\tj--;\n\t}\n\tif (i == j) \n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) == -1) {\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t} else if (vowels.find(str1[j]) == -1) {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t} else {\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tresult ~= str1[i];\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring new_str = \"\";\n\tint len = str1.length;\n\tint i = 0;\n\tint j = len - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tnew_str ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tnew_str ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnew_str ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tnew_str ~= str1[i];\n\t}\n\treturn new_str;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tif(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tj--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str1[i], str1[j]);\n\t\ti++;\n\t\tj--;\n\t}\n\treturn str1;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr2 = str1[i];\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str2;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile(i < j)\n\t{\n\t\tif(vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif(i == j)\n\t{\n\t\tresult ~= str1[i];\n\t}\n\treturn result;\n}",
    "{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring vowels = \"aeiouAEIOU\";\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) != -1 && vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\tstr1[i] = str1[j];\n\t\t\tstr1[j] = str1[i];\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != -1) \n\t\t{\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[j]) != -1) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\treturn str1;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tint left = 0;\n\tint right = str1.length - 1;\n\tstring str2 = str1.dup;\n\twhile (left < right) \n\t{\n\t\tif (vowels.find(str2[left]) == -1) \n\t\t{\n\t\t\tleft++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (vowels.find(str2[right]) == -1) \n\t\t{\n\t\t\tright--;\n\t\t\tcontinue;\n\t\t}\n\t\tswap(str2[left], str2[right]);\n\t\tleft++;\n\t\tright--;\n\t}\n\treturn str2;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j)\n\t{\n\t\tif (vowels.find(str1[i]) == -1)\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1)\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j)\n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\tstr2 = str2.dup.reverse;\n\tint j = 0;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(vowels.canFind(c))\n\t\t{\n\t\t\tstr1[j] = str2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn str1;\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring str2 = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tstr2 += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\tif (i == j) \n\t{\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}",
    "{\n\tint i = 0;\n\tint j = str1.length - 1;\n\tstring str2 = str1;\n\twhile(i < j) \n\t{\n\t\tif(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') \n\t\t{\n\t\t\tif(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') \n\t\t\t{\n\t\t\t\tstr2[i] = str1[j];\n\t\t\t\tstr2[j] = str1[i];\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\t// create a list of vowels\n\tstring vowels = \"aeiouAEIOU\";\n\t// create a list of the vowels in the string\n\tstring[] vowels_in_str1 = str1.filter!(a => vowels.canFind(a));\n\t// create a list of the vowels in the string in reverse order\n\tstring[] vowels_in_str1_reversed = vowels_in_str1.reverse();\n\t// create a list of the characters in the string\n\tstring[] chars_in_str1 = str1.split(\"\");\n\t// create a list of the characters in the string with the vowels replaced by the reversed vowels\n\tstring[] chars_in_str1_reversed = chars_in_str1.map!(a => (vowels.canFind(a)) ? vowels_in_str1_reversed.popFront() : a);\n\t// return the string with the reversed vowels\n\treturn chars_in_str1_reversed.join(\"\");\n}",
    "{\n\tstring vowels = \"aeiouAEIOU\";\n\tstring result = \"\";\n\tint i = 0;\n\tint j = str1.length - 1;\n\twhile (i < j) \n\t{\n\t\tif (vowels.find(str1[i]) == -1) \n\t\t{\n\t\t\tresult += str1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (vowels.find(str1[j]) == -1) \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult += str1[j];\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}"
  ]
}